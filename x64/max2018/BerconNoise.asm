; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24231.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA	; BerconNoise::texoutDlg
PUBLIC	WinbaseIsolationAwarePrivateT_UnPgpgk
PUBLIC	IsolationAwarePrivateT_SqbjaYRiRY
PUBLIC	IsolationAwarePrivateT_SAbnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA DQ 01H DUP (?) ; BerconNoise::texoutDlg
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SqbjaYRiRY
_BSS	SEGMENT
IsolationAwarePrivateT_SqbjaYRiRY DD 01H DUP (?)
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SAbnPgpgk
_BSS	SEGMENT
IsolationAwarePrivateT_SAbnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_UnPgpgk
_DATA	SEGMENT
WinbaseIsolationAwarePrivateT_UnPgpgk DQ ffffffffffffffffH
_DATA	ENDS
CONST	SEGMENT
$SG212221 DB	00H, 00H
	ORG $+6
$SG211770 DB	'o', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG211771 DB	'U', 00H, 'V', 00H, 'W', 00H, 'd', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 00H, 00H
	ORG $+4
$SG211772 DB	'u', 00H, 's', 00H, 'e', 00H, 'D', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 00H, 00H
	ORG $+4
$SG211773 DB	'd', 00H, 'i', 00H, 's', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 't', 00H, 'r'
	DB	00H, 00H, 00H
	ORG $+4
$SG211774 DB	'm', 00H, 'a', 00H, 'p', 00H, '4', 00H, 00H, 00H
	ORG $+6
$SG211775 DB	'm', 00H, 'a', 00H, 'p', 00H, '3', 00H, 00H, 00H
	ORG $+6
$SG211776 DB	'f', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'a', 00H
	DB	'l', 00H, 'L', 00H, 'a', 00H, 'c', 00H, 'u', 00H, 'n', 00H, 'a'
	DB	00H, 'r', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H
	ORG $+4
$SG211777 DB	'f', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'a', 00H
	DB	'l', 00H, 'H', 00H, 00H, 00H
	ORG $+6
$SG211778 DB	'f', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'a', 00H
	DB	'l', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, 00H, 00H
	ORG $+4
$SG211779 DB	'f', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'a', 00H
	DB	'l', 00H, 'G', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 00H, 00H
$SG211780 DB	'l', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG211781 DB	'f', 00H, 'r', 00H, 'a', 00H, 'c', 00H, 't', 00H, 'a', 00H
	DB	'l', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H, 00H
$SG211782 DB	'w', 00H, 'o', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'y', 00H
	DB	'S', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211783 DB	'w', 00H, 'F', 00H, '4', 00H, 00H, 00H
$SG211784 DB	'w', 00H, 'F', 00H, '3', 00H, 00H, 00H
$SG211785 DB	'w', 00H, 'F', 00H, '2', 00H, 00H, 00H
$SG211786 DB	'w', 00H, 'F', 00H, '1', 00H, 00H, 00H
$SG211787 DB	'w', 00H, 'o', 00H, 'r', 00H, 'l', 00H, 'e', 00H, 'y', 00H
	DB	'D', 00H, 'i', 00H, 's', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'c'
	DB	00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG211788 DB	'n', 00H, 'o', 00H, 'i', 00H, 's', 00H, 'e', 00H, '_', 00H
	DB	'f', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG211789 DB	'p', 00H, 'h', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG211790 DB	't', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'h', 00H
	DB	'o', 00H, 'l', 00H, 'd', 00H, 'H', 00H, 'i', 00H, 'g', 00H, 'h'
	DB	00H, 00H, 00H
	ORG $+4
$SG211791 DB	't', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 's', 00H, 'h', 00H
	DB	'o', 00H, 'l', 00H, 'd', 00H, 'L', 00H, 'o', 00H, 'w', 00H, 00H
	DB	00H
	ORG $+6
$SG211792 DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG211793 DB	'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG211794 DB	'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG211795 DB	'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG211796 DB	'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 00H, 00H
	ORG $+6
$SG211797 DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG211798 DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, '1', 00H
	DB	00H, 00H
	ORG $+2
$SG211799 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG211812 DB	'c', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+6
$SG211813 DB	'e', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	'C', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG211814 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG211850 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '4', 00H
	DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+4
$SG211851 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '4', 00H
	DB	00H, 00H
	ORG $+2
$SG211852 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '3', 00H
	DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+4
$SG211853 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '3', 00H
	DB	00H, 00H
	ORG $+2
$SG211854 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '2', 00H
	DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+4
$SG211855 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG211856 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '1', 00H
	DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+4
$SG211857 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '1', 00H
	DB	00H, 00H
	ORG $+2
$SG211858 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '0', 00H
	DB	'E', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+4
$SG211859 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, '0', 00H
	DB	00H, 00H
	ORG $+2
$SG211860 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '9', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211861 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '9', 00H, 00H, 00H
	ORG $+4
$SG211862 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '8', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211863 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '8', 00H, 00H, 00H
	ORG $+4
$SG211864 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '7', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211865 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '7', 00H, 00H, 00H
	ORG $+4
$SG211866 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '6', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211867 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '6', 00H, 00H, 00H
	ORG $+4
$SG211868 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '5', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211869 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '5', 00H, 00H, 00H
	ORG $+4
$SG211870 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '4', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211871 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '4', 00H, 00H, 00H
	ORG $+4
$SG211872 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '3', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211873 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '3', 00H, 00H, 00H
	ORG $+4
$SG211874 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211875 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG211876 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG211877 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 00H, 00H
	ORG $+4
$SG211878 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??0Class_ID@@QEAA@XZ				; Class_ID::Class_ID
PUBLIC	??0Class_ID@@QEAA@KK@Z				; Class_ID::Class_ID
PUBLIC	??8Class_ID@@QEBA_NAEBV0@@Z			; Class_ID::operator==
PUBLIC	??0Interface_ID@@QEAA@AEBV0@@Z			; Interface_ID::Interface_ID
PUBLIC	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
PUBLIC	?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ ; MaxSDK::Util::TabOutOfRangeException::What
PUBLIC	??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException
PUBLIC	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
PUBLIC	??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor'
PUBLIC	??D@YA?AVPoint3@@MAEBV0@@Z			; operator*
PUBLIC	??D@YA?AVPoint3@@AEBV0@M@Z			; operator*
PUBLIC	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ	; MaxSDK::AssetManagement::AssetId::AssetId
PUBLIC	?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ		; Tab<FPInterface * __ptr64>::Count
PUBLIC	?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ	; Tab<FPInterface * __ptr64>::ZeroCount
PUBLIC	??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ; Tab<FPInterface * __ptr64>::operator[]
PUBLIC	?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::BeginCreate
PUBLIC	?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::EndCreate
PUBLIC	?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::OkToCreate
PUBLIC	?HasClassParams@ClassDesc@@UEAAHXZ		; ClassDesc::HasClassParams
PUBLIC	?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z	; ClassDesc::EditClassParams
PUBLIC	?NumActionTables@ClassDesc@@UEAAHXZ		; ClassDesc::NumActionTables
PUBLIC	?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z ; ClassDesc::GetActionTable
PUBLIC	?IsManipulator@ClassDesc@@UEAAHXZ		; ClassDesc::IsManipulator
PUBLIC	?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z ; ClassDesc::CanManipulate
PUBLIC	?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z ; ClassDesc::CanManipulateNode
PUBLIC	?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z ; ClassDesc::CreateManipulator
PUBLIC	?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z ; ClassDesc::CreateManipulator
PUBLIC	?NeedsToSave@ClassDesc@@UEAAHXZ			; ClassDesc::NeedsToSave
PUBLIC	?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z ; ClassDesc::Save
PUBLIC	?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z ; ClassDesc::Load
PUBLIC	?InitialRollupPageState@ClassDesc@@UEAAKXZ	; ClassDesc::InitialRollupPageState
PUBLIC	?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure
PUBLIC	?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z ; ClassDesc::GetParamMap
PUBLIC	?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z ; ClassDesc::GetUserDlgProc
PUBLIC	?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z ; ClassDesc::DrawRepresentation
PUBLIC	?NumInterfaces@ClassDesc@@UEAAHXZ		; ClassDesc::NumInterfaces
PUBLIC	?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z ; ClassDesc::GetInterfaceAt
PUBLIC	?ClearInterfaces@ClassDesc@@UEAAXXZ		; ClassDesc::ClearInterfaces
PUBLIC	?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ	; ClassDesc::SubClassID
PUBLIC	?Execute@ClassDesc@@UEAA_JH_K00@Z		; ClassDesc::Execute
PUBLIC	??0Matrix3@@QEAA@XZ				; Matrix3::Matrix3
PUBLIC	?Set@BitArray@@QEAAXH@Z				; BitArray::Set
PUBLIC	?UseLocalBits@BitArray@@AEBA_NXZ		; BitArray::UseLocalBits
PUBLIC	?BitMask@BitArray@@AEBA_KH@Z			; BitArray::BitMask
PUBLIC	??0Color@@QEAA@XZ				; Color::Color
PUBLIC	??0Color@@QEAA@MMM@Z				; Color::Color
PUBLIC	??0Color@@QEAA@NNN@Z				; Color::Color
PUBLIC	??0Color@@QEAA@HHH@Z				; Color::Color
PUBLIC	??0AColor@@QEAA@XZ				; AColor::AColor
PUBLIC	??0AColor@@QEAA@MMMM@Z				; AColor::AColor
PUBLIC	??0AColor@@QEAA@HHHH@Z				; AColor::AColor
PUBLIC	??0AColor@@QEAA@AEBV0@@Z			; AColor::AColor
PUBLIC	??0AColor@@QEAA@AEBVColor@@M@Z			; AColor::AColor
PUBLIC	??HAColor@@QEBA?AV0@AEBV0@@Z			; AColor::operator+
PUBLIC	??D@YA?AVAColor@@MAEBV0@@Z			; operator*
PUBLIC	??0Interval@@QEAA@XZ				; Interval::Interval
PUBLIC	?SetEmpty@Interval@@QEAAXXZ			; Interval::SetEmpty
PUBLIC	?SetInfinite@Interval@@QEAAXXZ			; Interval::SetInfinite
PUBLIC	??_4Interval@@QEAAAEAV0@V0@@Z			; Interval::operator&=
PUBLIC	?FreeCaches@Animatable@@UEAAXXZ			; Animatable::FreeCaches
PUBLIC	?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ; Animatable::BeginEditParams
PUBLIC	?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ; Animatable::EndEditParams
PUBLIC	?BypassTreeView@Animatable@@UEAAHXZ		; Animatable::BypassTreeView
PUBLIC	?BypassTrackBar@Animatable@@UEAAHXZ		; Animatable::BypassTrackBar
PUBLIC	?BypassPropertyLevel@Animatable@@UEAAHXZ	; Animatable::BypassPropertyLevel
PUBLIC	?InvisibleProperty@Animatable@@UEAAHXZ		; Animatable::InvisibleProperty
PUBLIC	?AssignController@Animatable@@UEAAHPEAV1@H@Z	; Animatable::AssignController
PUBLIC	?CanAssignController@Animatable@@UEAAHH@Z	; Animatable::CanAssignController
PUBLIC	?CanDeleteSubAnim@Animatable@@UEAAHH@Z		; Animatable::CanDeleteSubAnim
PUBLIC	?DeleteSubAnim@Animatable@@UEAAXH@Z		; Animatable::DeleteSubAnim
PUBLIC	?GetSubAnimCurveColor@Animatable@@UEAAKH@Z	; Animatable::GetSubAnimCurveColor
PUBLIC	?CanCopyAnim@Animatable@@UEAAHXZ		; Animatable::CanCopyAnim
PUBLIC	?CanMakeUnique@Animatable@@UEAAHXZ		; Animatable::CanMakeUnique
PUBLIC	?NumChildren@Animatable@@UEAAHXZ		; Animatable::NumChildren
PUBLIC	?ChildAnim@Animatable@@UEAAPEAV1@H@Z		; Animatable::ChildAnim
PUBLIC	?RenderBegin@Animatable@@UEAAHHK@Z		; Animatable::RenderBegin
PUBLIC	?RenderEnd@Animatable@@UEAAHH@Z			; Animatable::RenderEnd
PUBLIC	?EditTrack@Animatable@@UEAAXXZ			; Animatable::EditTrack
PUBLIC	?NumKeys@Animatable@@UEAAHXZ			; Animatable::NumKeys
PUBLIC	?GetKeyTime@Animatable@@UEAAHH@Z		; Animatable::GetKeyTime
PUBLIC	?GetKeyIndex@Animatable@@UEAAHH@Z		; Animatable::GetKeyIndex
PUBLIC	?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z	; Animatable::GetNextKeyTime
PUBLIC	?CopyKeysFromTime@Animatable@@UEAAXHHK@Z	; Animatable::CopyKeysFromTime
PUBLIC	?DeleteKeyAtTime@Animatable@@UEAAXH@Z		; Animatable::DeleteKeyAtTime
PUBLIC	?IsKeyAtTime@Animatable@@UEAAHHK@Z		; Animatable::IsKeyAtTime
PUBLIC	?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z ; Animatable::GetKeyTimes
PUBLIC	?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z ; Animatable::GetKeySelState
PUBLIC	?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z	; Animatable::EditTimeRange
PUBLIC	?DeleteTime@Animatable@@UEAAXVInterval@@K@Z	; Animatable::DeleteTime
PUBLIC	?ReverseTime@Animatable@@UEAAXVInterval@@K@Z	; Animatable::ReverseTime
PUBLIC	?ScaleTime@Animatable@@UEAAXVInterval@@M@Z	; Animatable::ScaleTime
PUBLIC	?InsertTime@Animatable@@UEAAXHH@Z		; Animatable::InsertTime
PUBLIC	?SupportTimeOperations@Animatable@@UEAAHXZ	; Animatable::SupportTimeOperations
PUBLIC	?DeleteKeys@Animatable@@UEAAXK@Z		; Animatable::DeleteKeys
PUBLIC	?DeleteKeyByIndex@Animatable@@UEAAXH@Z		; Animatable::DeleteKeyByIndex
PUBLIC	?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z ; Animatable::SelectKeys
PUBLIC	?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z ; Animatable::SelectSubKeys
PUBLIC	?SelectSubCurve@Animatable@@UEAAXHH@Z		; Animatable::SelectSubCurve
PUBLIC	?SelectKeyByIndex@Animatable@@UEAAXHH@Z		; Animatable::SelectKeyByIndex
PUBLIC	?IsKeySelected@Animatable@@UEAAHH@Z		; Animatable::IsKeySelected
PUBLIC	?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z	; Animatable::FlagKey
PUBLIC	?GetFlagKeyIndex@Animatable@@UEAAHXZ		; Animatable::GetFlagKeyIndex
PUBLIC	?NumSelKeys@Animatable@@UEAAHXZ			; Animatable::NumSelKeys
PUBLIC	?CloneSelectedKeys@Animatable@@UEAAXH@Z		; Animatable::CloneSelectedKeys
PUBLIC	?AddNewKey@Animatable@@UEAAXHK@Z		; Animatable::AddNewKey
PUBLIC	?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z ; Animatable::MoveKeys
PUBLIC	?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z ; Animatable::ScaleKeyValues
PUBLIC	?SelectCurve@Animatable@@UEAAXH@Z		; Animatable::SelectCurve
PUBLIC	?IsCurveSelected@Animatable@@UEAAHXZ		; Animatable::IsCurveSelected
PUBLIC	?IsSubCurveSelected@Animatable@@UEAAHH@Z	; Animatable::IsSubCurveSelected
PUBLIC	?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z	; Animatable::GetSelKeyCoords
PUBLIC	?SetSelKeyCoords@Animatable@@UEAAXHMK@Z		; Animatable::SetSelKeyCoords
PUBLIC	?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z ; Animatable::SetSelKeyCoordsExpr
PUBLIC	?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z ; Animatable::AdjustTangents
PUBLIC	?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z ; Animatable::AdjustTangents
PUBLIC	?SetKeyBufferPresent@Animatable@@UEAAHXZ	; Animatable::SetKeyBufferPresent
PUBLIC	?CommitSetKeyBuffer@Animatable@@UEAAXH@Z	; Animatable::CommitSetKeyBuffer
PUBLIC	?RevertSetKeyBuffer@Animatable@@UEAAXXZ		; Animatable::RevertSetKeyBuffer
PUBLIC	?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z	; Animatable::CanCopyTrack
PUBLIC	?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CanPasteTrack
PUBLIC	?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CopyTrack
PUBLIC	?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::PasteTrack
PUBLIC	?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z ; Animatable::CanCopySubTrack
PUBLIC	?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CanPasteSubTrack
PUBLIC	?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z ; Animatable::CopySubTrack
PUBLIC	?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::PasteSubTrack
PUBLIC	?GetTrackVSpace@Animatable@@UEAAHH@Z		; Animatable::GetTrackVSpace
PUBLIC	?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z ; Animatable::HitTestTrack
PUBLIC	?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ; Animatable::PaintTrack
PUBLIC	?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ; Animatable::PaintSubTrack
PUBLIC	?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ; Animatable::PaintFCurves
PUBLIC	?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ; Animatable::HitTestFCurves
PUBLIC	?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ; Animatable::PaintSubFCurves
PUBLIC	?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ; Animatable::HitTestSubFCurves
PUBLIC	?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z ; Animatable::EditTrackParams
PUBLIC	?TrackParamsType@Animatable@@UEAAHXZ		; Animatable::TrackParamsType
PUBLIC	?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z ; Animatable::GetFCurveExtents
PUBLIC	?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z ; Animatable::GetSubFCurveExtents
PUBLIC	?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z ; Animatable::GetParamDimension
PUBLIC	?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z ; Animatable::TrackViewWinProc
PUBLIC	?SelectSubAnim@Animatable@@UEAAHH@Z		; Animatable::SelectSubAnim
PUBLIC	?FreeAllBitmaps@Animatable@@UEAAXXZ		; Animatable::FreeAllBitmaps
PUBLIC	?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z ; Animatable::GetSystemNodes
PUBLIC	?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z	; Animatable::IsSubClassOf
PUBLIC	?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z ; Animatable::IsParamBlockDesc2Used
PUBLIC	?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z ; Animatable::GetMacroRecorderName
PUBLIC	?CanTransferReference@ReferenceMaker@@UEAAHH@Z	; ReferenceMaker::CanTransferReference
PUBLIC	?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z	; ReferenceMaker::RemapRefOnLoad
PUBLIC	?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z ; ReferenceMaker::NotifyDependents
PUBLIC	?IsRefMaker@ReferenceMaker@@UEAAHXZ		; ReferenceMaker::IsRefMaker
PUBLIC	?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ; ReferenceMaker::IsRealDependency
PUBLIC	?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ; ReferenceMaker::ShouldPersistWeakRef
PUBLIC	?IsRefTarget@ReferenceTarget@@UEAAHXZ		; ReferenceTarget::IsRefTarget
PUBLIC	?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z ; ReferenceTarget::RefAddedUndoRedo
PUBLIC	?RefDeleted@ReferenceTarget@@UEAAXXZ		; ReferenceTarget::RefDeleted
PUBLIC	?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ	; ReferenceTarget::RefDeletedUndoRedo
PUBLIC	?NotifyForeground@ReferenceTarget@@UEAAXH@Z	; ReferenceTarget::NotifyForeground
PUBLIC	?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z ; ReferenceTarget::NotifyTarget
PUBLIC	?SubTexmapOn@ISubMap@@UEAAHH@Z			; ISubMap::SubTexmapOn
PUBLIC	?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z ; MtlBase::BuildMaps
PUBLIC	?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z ; MtlBase::LocalMappingsRequired
PUBLIC	?IsMultiMtl@MtlBase@@UEAAHXZ			; MtlBase::IsMultiMtl
PUBLIC	?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ	; MtlBase::SupportsMultiMapsInViewport
PUBLIC	?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z ; MtlBase::SetupGfxMultiMaps
PUBLIC	?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z ; MtlBase::GetInterface
PUBLIC	?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ ; MtlBase::GetRefTarget
PUBLIC	?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z ; MtlBase::GetTransparencyHint
PUBLIC	?HandleOwnViewPerturb@Texmap@@UEAAHXZ		; Texmap::HandleOwnViewPerturb
PUBLIC	?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z	; Texmap::GetUVTransform
PUBLIC	?GetTextureTiling@Texmap@@UEAAHXZ		; Texmap::GetTextureTiling
PUBLIC	?GetUVWSource@Texmap@@UEAAHXZ			; Texmap::GetUVWSource
PUBLIC	?GetMapChannel@Texmap@@UEAAHXZ			; Texmap::GetMapChannel
PUBLIC	?InitSlotType@Texmap@@UEAAXH@Z			; Texmap::InitSlotType
PUBLIC	?MapSlotType@Texmap@@UEAAHH@Z			; Texmap::MapSlotType
PUBLIC	?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ		; Texmap::GetTheUVGen
PUBLIC	?SetOutputLevel@Texmap@@UEAAXHM@Z		; Texmap::SetOutputLevel
PUBLIC	?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z ; Texmap::IsLocalOutputMeaningful
PUBLIC	?LoadMapFiles@Texmap@@UEAAHH@Z			; Texmap::LoadMapFiles
PUBLIC	?IsHighDynamicRange@Texmap@@UEBAHXZ		; Texmap::IsHighDynamicRange
PUBLIC	??1Texmap@@UEAA@XZ				; Texmap::~Texmap
PUBLIC	?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z ; ClassDesc2::SetUserDlgProc
PUBLIC	?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z ; ClassDesc2::CreateQtWidget
PUBLIC	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc
PUBLIC	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z	; ParamBlockDesc2::__autoclassinit2
PUBLIC	??1ParamMap2UserDlgProc@@UEAA@XZ		; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
PUBLIC	?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; ParamMap2UserDlgProc::SetThing
PUBLIC	?Update@ParamMap2UserDlgProc@@UEAAXH@Z		; ParamMap2UserDlgProc::Update
PUBLIC	?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z ; ParamMap2UserDlgProc::SetParamBlock
PUBLIC	?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z ; ParamMap2UserDlgProc::Update
PUBLIC	??0ParamMap2UserDlgProc@@QEAA@XZ		; ParamMap2UserDlgProc::ParamMap2UserDlgProc
PUBLIC	??_GParamMap2UserDlgProc@@UEAAPEAXI@Z		; ParamMap2UserDlgProc::`scalar deleting destructor'
PUBLIC	??4CurvePoint@@QEAAAEAV0@AEBV0@@Z		; CurvePoint::operator=
PUBLIC	?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ; ResourceMakerCallback::SetCustomImageList
PUBLIC	?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ; ResourceMakerCallback::GetToolTip
PUBLIC	?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ; ResourceMakerCallback::ResetCallback
PUBLIC	?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ; ResourceMakerCallback::NewCurveCreatedCallback
PUBLIC	?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z ; ResourceMakerCallback::GetInterface
PUBLIC	??0ResourceMakerCallback@@QEAA@XZ		; ResourceMakerCallback::ResourceMakerCallback
PUBLIC	??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z	; XYZ_Desc::XYZ_Desc
PUBLIC	??1XYZ_Desc@@UEAA@XZ				; XYZ_Desc::~XYZ_Desc
PUBLIC	?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z		; XYZ_Desc::__autoclassinit2
PUBLIC	??_GXYZ_Desc@@UEAAPEAXI@Z			; XYZ_Desc::`scalar deleting destructor'
PUBLIC	??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ; BerconXYZDlgProc::BerconXYZDlgProc
PUBLIC	?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconXYZDlgProc::DlgProc
PUBLIC	?DeleteThis@BerconXYZDlgProc@@UEAAXXZ		; BerconXYZDlgProc::DeleteThis
PUBLIC	?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; BerconXYZDlgProc::SetThing
PUBLIC	??1BerconXYZDlgProc@@UEAA@XZ			; BerconXYZDlgProc::~BerconXYZDlgProc
PUBLIC	?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z	; BerconXYZDlgProc::__autoclassinit2
PUBLIC	??_GBerconXYZDlgProc@@UEAAPEAXI@Z		; BerconXYZDlgProc::`scalar deleting destructor'
PUBLIC	??0BerconXYZ@@QEAA@XZ				; BerconXYZ::BerconXYZ
PUBLIC	?req@BerconXYZ@@QEAAKXZ				; BerconXYZ::req
PUBLIC	?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z		; BerconXYZ::map
PUBLIC	?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z ; BerconNoise::EvalParameters
PUBLIC	?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z ; BerconNoise::applyDistortion
PUBLIC	?EnableStuff@BerconNoise@@QEAAXXZ		; BerconNoise::EnableStuff
PUBLIC	?SetCustomImageList@BerconNoise@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ; BerconNoise::SetCustomImageList
PUBLIC	?GetToolTip@BerconNoise@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ; BerconNoise::GetToolTip
PUBLIC	?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z ; BerconNoise::ResetCallback
PUBLIC	?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z ; BerconNoise::NewCurveCreatedCallback
PUBLIC	?DiscardTexHandle@BerconNoise@@QEAAXXZ		; BerconNoise::DiscardTexHandle
PUBLIC	?SupportTexDisplay@BerconNoise@@UEAAHXZ		; BerconNoise::SupportTexDisplay
PUBLIC	?ActivateTexDisplay@BerconNoise@@UEAAXH@Z	; BerconNoise::ActivateTexDisplay
PUBLIC	?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z ; BerconNoise::GetActiveTexHandle
PUBLIC	?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z ; BerconNoise::CreateParamDlg
PUBLIC	?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z	; BerconNoise::SetDlgThing
PUBLIC	?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z	; BerconNoise::Update
PUBLIC	?Reset@BerconNoise@@UEAAXXZ			; BerconNoise::Reset
PUBLIC	?Validity@BerconNoise@@UEAA?AVInterval@@H@Z	; BerconNoise::Validity
PUBLIC	?LocalRequirements@BerconNoise@@UEAAKH@Z	; BerconNoise::LocalRequirements
PUBLIC	?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z ; BerconNoise::MappingsRequired
PUBLIC	?NumSubTexmaps@BerconNoise@@UEAAHXZ		; BerconNoise::NumSubTexmaps
PUBLIC	?GetSubTexmap@BerconNoise@@UEAAPEAVTexmap@@H@Z	; BerconNoise::GetSubTexmap
PUBLIC	?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z	; BerconNoise::SetSubTexmap
PUBLIC	?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z ; BerconNoise::GetSubTexmapSlotName
PUBLIC	?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z ; BerconNoise::EvalColor
PUBLIC	?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z ; BerconNoise::EvalMono
PUBLIC	?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z ; BerconNoise::EvalNormalPerturb
PUBLIC	?GetTheXYZGen@BerconNoise@@UEAAPEAVXYZGen@@XZ	; BerconNoise::GetTheXYZGen
PUBLIC	?SubNumToRefNum@BerconNoise@@UEAAHH@Z		; BerconNoise::SubNumToRefNum
PUBLIC	?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ	; BerconNoise::ClassID
PUBLIC	?SuperClassID@BerconNoise@@UEAAKXZ		; BerconNoise::SuperClassID
PUBLIC	?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z	; BerconNoise::GetClassName
PUBLIC	?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z ; BerconNoise::Clone
PUBLIC	?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z ; BerconNoise::NotifyRefChanged
PUBLIC	?NumSubs@BerconNoise@@UEAAHXZ			; BerconNoise::NumSubs
PUBLIC	?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z	; BerconNoise::SubAnim
PUBLIC	?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z	; BerconNoise::SubAnimName
PUBLIC	?NumRefs@BerconNoise@@UEAAHXZ			; BerconNoise::NumRefs
PUBLIC	?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z ; BerconNoise::GetReference
PUBLIC	?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z ; BerconNoise::SetReference
PUBLIC	?NumParamBlocks@BerconNoise@@UEAAHXZ		; BerconNoise::NumParamBlocks
PUBLIC	?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z ; BerconNoise::GetParamBlock
PUBLIC	?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z ; BerconNoise::GetParamBlockByID
PUBLIC	?DeleteThis@BerconNoise@@UEAAXXZ		; BerconNoise::DeleteThis
PUBLIC	??0BerconNoise@@QEAA@XZ				; BerconNoise::BerconNoise
PUBLIC	??1BerconNoise@@UEAA@XZ				; BerconNoise::~BerconNoise
PUBLIC	?GetInterface@BerconNoise@@UEAAPEAXK@Z		; BerconNoise::GetInterface
PUBLIC	?__autoclassinit2@BerconNoise@@QEAAX_K@Z	; BerconNoise::__autoclassinit2
PUBLIC	??_GBerconNoise@@UEAAPEAXI@Z			; BerconNoise::`scalar deleting destructor'
PUBLIC	??0BerconNoiseClassDesc@@QEAA@XZ		; BerconNoiseClassDesc::BerconNoiseClassDesc
PUBLIC	??1BerconNoiseClassDesc@@UEAA@XZ		; BerconNoiseClassDesc::~BerconNoiseClassDesc
PUBLIC	?IsPublic@BerconNoiseClassDesc@@UEAAHXZ		; BerconNoiseClassDesc::IsPublic
PUBLIC	?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z	; BerconNoiseClassDesc::Create
PUBLIC	?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ	; BerconNoiseClassDesc::ClassName
PUBLIC	?SuperClassID@BerconNoiseClassDesc@@UEAAKXZ	; BerconNoiseClassDesc::SuperClassID
PUBLIC	?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ ; BerconNoiseClassDesc::ClassID
PUBLIC	?Category@BerconNoiseClassDesc@@UEAAPEB_WXZ	; BerconNoiseClassDesc::Category
PUBLIC	?InternalName@BerconNoiseClassDesc@@UEAAPEB_WXZ	; BerconNoiseClassDesc::InternalName
PUBLIC	?HInstance@BerconNoiseClassDesc@@UEAAPEAUHINSTANCE__@@XZ ; BerconNoiseClassDesc::HInstance
PUBLIC	?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z ; BerconNoiseClassDesc::__autoclassinit2
PUBLIC	??_GBerconNoiseClassDesc@@UEAAPEAXI@Z		; BerconNoiseClassDesc::`scalar deleting destructor'
PUBLIC	?GetBerconNoiseDesc@@YAPEAVClassDesc2@@XZ	; GetBerconNoiseDesc
PUBLIC	??1BerconCurveDlgProcNOISE@@UEAA@XZ		; BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE
PUBLIC	??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z ; BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE
PUBLIC	?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconCurveDlgProcNOISE::DlgProc
PUBLIC	?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ	; BerconCurveDlgProcNOISE::DeleteThis
PUBLIC	?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z ; BerconCurveDlgProcNOISE::SetThing
PUBLIC	?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z ; BerconCurveDlgProcNOISE::__autoclassinit2
PUBLIC	??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z	; BerconCurveDlgProcNOISE::`scalar deleting destructor'
PUBLIC	??1BerconNoiseDlgProc@@UEAA@XZ			; BerconNoiseDlgProc::~BerconNoiseDlgProc
PUBLIC	??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z	; BerconNoiseDlgProc::BerconNoiseDlgProc
PUBLIC	?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconNoiseDlgProc::DlgProc
PUBLIC	?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ		; BerconNoiseDlgProc::DeleteThis
PUBLIC	?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; BerconNoiseDlgProc::SetThing
PUBLIC	?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z	; BerconNoiseDlgProc::__autoclassinit2
PUBLIC	??_GBerconNoiseDlgProc@@UEAAPEAXI@Z		; BerconNoiseDlgProc::`scalar deleting destructor'
PUBLIC	??_EBerconNoise@@WEA@EAAPEAXI@Z			; [thunk]:BerconNoise::`vector deleting destructor'
PUBLIC	?GetInterface@BerconNoise@@WJA@EAAPEAXK@Z	; [thunk]:BerconNoise::GetInterface`adjustor{144}'
PUBLIC	??_7TabOutOfRangeException@Util@MaxSDK@@6B@	; MaxSDK::Util::TabOutOfRangeException::`vftable'
PUBLIC	??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@ ; `string'
PUBLIC	??_R0?AVClassDesc2@@@8				; ClassDesc2 `RTTI Type Descriptor'
PUBLIC	??_7ParamMap2UserDlgProc@@6B@			; ParamMap2UserDlgProc::`vftable'
PUBLIC	??_R0?AVMaxHeapOperators@@@8			; MaxHeapOperators `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVMaxHeapOperators@@@818
PUBLIC	??_7ResourceMakerCallback@@6B@			; ResourceMakerCallback::`vftable'
PUBLIC	??_7XYZ_Desc@@6B@				; XYZ_Desc::`vftable'
PUBLIC	??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@	; `string'
PUBLIC	??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_7BerconXYZDlgProc@@6B@			; BerconXYZDlgProc::`vftable'
PUBLIC	??_C@_13PHJMHGG@?$AAL?$AA?$AA@			; `string'
PUBLIC	??_7BerconNoise@@6BReferenceTarget@@@		; BerconNoise::`vftable'
PUBLIC	??_7BerconNoise@@6BISubMap@@@			; BerconNoise::`vftable'
PUBLIC	??_7BerconNoise@@6B@				; BerconNoise::`vftable'
PUBLIC	??_7BerconNoiseClassDesc@@6B@			; BerconNoiseClassDesc::`vftable'
PUBLIC	??_C@_1BI@OFHJLFOO@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAN?$AAo?$AAi?$AAs?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_7BerconCurveDlgProcNOISE@@6B@		; BerconCurveDlgProcNOISE::`vftable'
PUBLIC	??_7BerconNoiseDlgProc@@6B@			; BerconNoiseDlgProc::`vftable'
PUBLIC	_TI4?AVTabOutOfRangeException@Util@MaxSDK@@
PUBLIC	_CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
PUBLIC	??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8	; MaxSDK::Util::TabOutOfRangeException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_R0?AVOutOfRangeException@Util@MaxSDK@@@8	; MaxSDK::Util::OutOfRangeException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_R0?AVException@Util@MaxSDK@@@8		; MaxSDK::Util::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@ ; `string'
PUBLIC	??_R4TabOutOfRangeException@Util@MaxSDK@@6B@	; MaxSDK::Util::TabOutOfRangeException::`RTTI Complete Object Locator'
PUBLIC	??_R3TabOutOfRangeException@Util@MaxSDK@@8	; MaxSDK::Util::TabOutOfRangeException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TabOutOfRangeException@Util@MaxSDK@@8	; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3OutOfRangeException@Util@MaxSDK@@8		; MaxSDK::Util::OutOfRangeException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OutOfRangeException@Util@MaxSDK@@8		; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Util@MaxSDK@@8		; MaxSDK::Util::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3Exception@Util@MaxSDK@@8			; MaxSDK::Util::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Util@MaxSDK@@8			; MaxSDK::Util::Exception::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3MaxHeapOperators@@8			; MaxHeapOperators::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MaxHeapOperators@@8			; MaxHeapOperators::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@InterfaceServer@@8		; InterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVInterfaceServer@@@8			; InterfaceServer `RTTI Type Descriptor'
PUBLIC	??_R3InterfaceServer@@8				; InterfaceServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InterfaceServer@@8				; InterfaceServer::`RTTI Base Class Array'
PUBLIC	??_R0?AVBaseInterfaceServer@@@8			; BaseInterfaceServer `RTTI Type Descriptor'
PUBLIC	??_R3BaseInterfaceServer@@8			; BaseInterfaceServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BaseInterfaceServer@@8			; BaseInterfaceServer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BaseInterfaceServer@@8		; BaseInterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ReferenceTarget@@8		; ReferenceTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReferenceTarget@@@8			; ReferenceTarget `RTTI Type Descriptor'
PUBLIC	??_R3ReferenceTarget@@8				; ReferenceTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferenceTarget@@8				; ReferenceTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReferenceMaker@@8			; ReferenceMaker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReferenceMaker@@@8			; ReferenceMaker `RTTI Type Descriptor'
PUBLIC	??_R3ReferenceMaker@@8				; ReferenceMaker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferenceMaker@@8				; ReferenceMaker::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Animatable@@8			; Animatable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAnimatable@@@8				; Animatable `RTTI Type Descriptor'
PUBLIC	??_R3Animatable@@8				; Animatable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Animatable@@8				; Animatable::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8		; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (9,-1,0,64)'
PUBLIC	??_R0?AVNoncopyable@Util@MaxSDK@@@8		; MaxSDK::Util::Noncopyable `RTTI Type Descriptor'
PUBLIC	??_R3Noncopyable@Util@MaxSDK@@8			; MaxSDK::Util::Noncopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Noncopyable@Util@MaxSDK@@8			; MaxSDK::Util::Noncopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8	; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R18?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (9,-1,0,66)'
PUBLIC	??_R1EI@?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (72,-1,0,66)'
PUBLIC	??_R4ParamMap2UserDlgProc@@6B@			; ParamMap2UserDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParamMap2UserDlgProc@@@8		; ParamMap2UserDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3ParamMap2UserDlgProc@@8			; ParamMap2UserDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParamMap2UserDlgProc@@8			; ParamMap2UserDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParamMap2UserDlgProc@@8		; ParamMap2UserDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVClassDesc@@@8				; ClassDesc `RTTI Type Descriptor'
PUBLIC	??_R3ClassDesc@@8				; ClassDesc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ClassDesc@@8				; ClassDesc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ClassDesc@@8			; ClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVISubMap@@@8				; ISubMap `RTTI Type Descriptor'
PUBLIC	??_R3ISubMap@@8					; ISubMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISubMap@@8					; ISubMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISubMap@@8			; ISubMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceMakerCallback@@6B@			; ResourceMakerCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceMakerCallback@@@8		; ResourceMakerCallback `RTTI Type Descriptor'
PUBLIC	??_R3ResourceMakerCallback@@8			; ResourceMakerCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceMakerCallback@@8			; ResourceMakerCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceMakerCallback@@8		; ResourceMakerCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XYZ_Desc@@6B@				; XYZ_Desc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXYZ_Desc@@@8				; XYZ_Desc `RTTI Type Descriptor'
PUBLIC	??_R3XYZ_Desc@@8				; XYZ_Desc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XYZ_Desc@@8				; XYZ_Desc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XYZ_Desc@@8			; XYZ_Desc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ParamBlockDesc2@@8		; ParamBlockDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVParamBlockDesc2@@@8			; ParamBlockDesc2 `RTTI Type Descriptor'
PUBLIC	??_R3ParamBlockDesc2@@8				; ParamBlockDesc2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParamBlockDesc2@@8				; ParamBlockDesc2::`RTTI Base Class Array'
PUBLIC	??_R4BerconXYZDlgProc@@6B@			; BerconXYZDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconXYZDlgProc@@@8			; BerconXYZDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3BerconXYZDlgProc@@8			; BerconXYZDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconXYZDlgProc@@8			; BerconXYZDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconXYZDlgProc@@8		; BerconXYZDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconNoise@@6BReferenceTarget@@@		; BerconNoise::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconNoise@@@8				; BerconNoise `RTTI Type Descriptor'
PUBLIC	??_R3BerconNoise@@8				; BerconNoise::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconNoise@@8				; BerconNoise::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconNoise@@8			; BerconNoise::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Texmap@@8				; Texmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTexmap@@@8				; Texmap `RTTI Type Descriptor'
PUBLIC	??_R3Texmap@@8					; Texmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Texmap@@8					; Texmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MtlBase@@8			; MtlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVMtlBase@@@8				; MtlBase `RTTI Type Descriptor'
PUBLIC	??_R3MtlBase@@8					; MtlBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MtlBase@@8					; MtlBase::`RTTI Base Class Array'
PUBLIC	??_R1EA@?0A@EA@ISubMap@@8			; ISubMap::`RTTI Base Class Descriptor at (64,-1,0,64)'
PUBLIC	??_R1JA@?0A@EA@ResourceMakerCallback@@8		; ResourceMakerCallback::`RTTI Base Class Descriptor at (144,-1,0,64)'
PUBLIC	??_R1JI@?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (152,-1,0,66)'
PUBLIC	??_R4BerconNoise@@6BISubMap@@@			; BerconNoise::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconNoise@@6B@				; BerconNoise::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconNoiseClassDesc@@6B@			; BerconNoiseClassDesc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconNoiseClassDesc@@@8		; BerconNoiseClassDesc `RTTI Type Descriptor'
PUBLIC	??_R3BerconNoiseClassDesc@@8			; BerconNoiseClassDesc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconNoiseClassDesc@@8			; BerconNoiseClassDesc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconNoiseClassDesc@@8		; BerconNoiseClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ClassDesc2@@8			; ClassDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3ClassDesc2@@8				; ClassDesc2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ClassDesc2@@8				; ClassDesc2::`RTTI Base Class Array'
PUBLIC	??_R4BerconCurveDlgProcNOISE@@6B@		; BerconCurveDlgProcNOISE::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconCurveDlgProcNOISE@@@8		; BerconCurveDlgProcNOISE `RTTI Type Descriptor'
PUBLIC	??_R3BerconCurveDlgProcNOISE@@8			; BerconCurveDlgProcNOISE::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconCurveDlgProcNOISE@@8			; BerconCurveDlgProcNOISE::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconCurveDlgProcNOISE@@8	; BerconCurveDlgProcNOISE::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconNoiseDlgProc@@6B@			; BerconNoiseDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconNoiseDlgProc@@@8			; BerconNoiseDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3BerconNoiseDlgProc@@8			; BerconNoiseDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconNoiseDlgProc@@8			; BerconNoiseDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconNoiseDlgProc@@8		; BerconNoiseDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3a83126f
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f1a36e2e0000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fb99999a0000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@4039000000000000
PUBLIC	__real@40400000
PUBLIC	__real@4059000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40a00000
PUBLIC	__real@412e848000000000
PUBLIC	__real@41c80000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c08f400000000000
PUBLIC	__real@c12e848000000000
EXTRN	_purecall:PROC
EXTRN	?__global_delete@@YAXPEAX_K@Z:PROC		; __global_delete
EXTRN	atexit:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	__imp_GetDlgItem:PROC
EXTRN	__imp_??2MaxHeapOperators@@SAPEAX_K@Z:PROC
EXTRN	__imp_??3MaxHeapOperators@@SAXPEAX@Z:PROC
EXTRN	__imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z:PROC
EXTRN	__imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ:PROC
EXTRN	__imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC
EXTRN	??_ETabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z:PROC ; MaxSDK::Util::TabOutOfRangeException::`vector deleting destructor'
EXTRN	__imp_??0WStr@@QEAA@PEB_W@Z:PROC
EXTRN	__imp_??1WStr@@QEAA@XZ:PROC
EXTRN	__imp_??4WStr@@QEAAAEAV0@PEB_W@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@XZ:PROC
EXTRN	__imp_??0Point3@@QEAA@MMM@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@HHH@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??GPoint3@@QEBA?AV0@XZ:PROC
EXTRN	__imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_??XPoint3@@QEAAAEAV0@M@Z:PROC
EXTRN	__imp_??_0Point3@@QEAAAEAV0@M@Z:PROC
EXTRN	__imp_??HPoint3@@QEBA?AV0@AEBV0@@Z:PROC
EXTRN	__imp_?CreateInstance@@YAPEAXKVClass_ID@@@Z:PROC
EXTRN	__imp_?IdentityMatrix@Matrix3@@QEAAXXZ:PROC
EXTRN	__imp_?ClampMinMax@Color@@QEAAXXZ:PROC
EXTRN	__imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z:PROC
EXTRN	__imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z:PROC
EXTRN	__imp_??0Interval@@QEAA@HH@Z:PROC
EXTRN	__imp_?InInterval@Interval@@QEBAHH@Z:PROC
EXTRN	__imp_??IInterval@@QEBA?AV0@V0@@Z:PROC
EXTRN	__imp_?GetCOREInterface@@YAPEAVInterface@@XZ:PROC
EXTRN	__imp_?DeleteMe@ReferenceMaker@@QEAAXXZ:PROC
EXTRN	__imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z:PROC
EXTRN	__imp_?DeleteReference@ReferenceMaker@@QEAA?AW4RefResult@@H@Z:PROC
EXTRN	__imp_?GetInterface@ReferenceTarget@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC
EXTRN	__imp_?GetSubTexmapTVName@ISubMap@@QEAA?AVWStr@@H@Z:PROC
EXTRN	__imp_??1MtlBase@@UEAA@XZ:PROC
EXTRN	__imp_??4MtlBase@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_?GetInterface@MtlBase@@UEAAPEAXK@Z:PROC
EXTRN	__imp_??0Texmap@@QEAA@XZ:PROC
EXTRN	__imp_?GetNewDefaultTextureOutput@@YAPEAVTextureOutput@@XZ:PROC
EXTRN	__imp_??0ClassDesc2@@QEAA@XZ:PROC
EXTRN	__imp_??1ClassDesc2@@UEAA@XZ:PROC
EXTRN	__imp_?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z:PROC
EXTRN	__imp_?SetUserDlgProc@ClassDesc2@@QEAA_NPEAVParamBlockDesc2@@FPEAVParamMap2UserDlgProc@@@Z:PROC
EXTRN	__imp_?CreateParamDlgs@ClassDesc2@@QEAAPEAVIAutoMParamDlg@@PEAUHWND__@@PEAVIMtlParams@@PEAVReferenceTarget@@@Z:PROC
EXTRN	__imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ:PROC
EXTRN	__imp_??1ParamBlockDesc2@@UEAA@XZ:PROC
EXTRN	__imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z:PROC
EXTRN	__imp_?SetUserDlgProc@ParamBlockDesc2@@QEAAXFPEAVParamMap2UserDlgProc@@@Z:PROC
EXTRN	??_EParamMap2UserDlgProc@@UEAAPEAXI@Z:PROC	; ParamMap2UserDlgProc::`vector deleting destructor'
EXTRN	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z:PROC ; CurveCtrl::update
EXTRN	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z:PROC	; CurveCtrl::disable
EXTRN	?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z:PROC	; CurveCtrl::init
EXTRN	?GetString@@YAPEA_WH@Z:PROC			; GetString
EXTRN	??_EXYZ_Desc@@UEAAPEAXI@Z:PROC			; XYZ_Desc::`vector deleting destructor'
EXTRN	??_EBerconXYZDlgProc@@UEAAPEAXI@Z:PROC		; BerconXYZDlgProc::`vector deleting destructor'
EXTRN	?update@BerconXYZ@@QEAAXPEAVIParamBlock2@@HAEAVInterval@@@Z:PROC ; BerconXYZ::update
EXTRN	?update@BerconXYZ@@QEAAXXZ:PROC			; BerconXYZ::update
EXTRN	?reset@BerconXYZ@@QEAAXPEAVIParamBlock2@@AEAVInterval@@HHHH@Z:PROC ; BerconXYZ::reset
EXTRN	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@11@Z:PROC ; BerconXYZ::get
EXTRN	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@11PEAV3@@Z:PROC ; BerconXYZ::get
EXTRN	?alterUVW@Noise@@SAXAEAVPoint3@@H@Z:PROC	; Noise::alterUVW
EXTRN	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z:PROC ; Noise::limitedNoise
EXTRN	?limitedNoise@Noise@@SAMVPoint3@@00AEAVNoiseParams@@@Z:PROC ; Noise::limitedNoise
EXTRN	??_EBerconNoise@@UEAAPEAXI@Z:PROC		; BerconNoise::`vector deleting destructor'
EXTRN	??_EBerconNoiseClassDesc@@UEAAPEAXI@Z:PROC	; BerconNoiseClassDesc::`vector deleting destructor'
EXTRN	??_EBerconCurveDlgProcNOISE@@UEAAPEAXI@Z:PROC	; BerconCurveDlgProcNOISE::`vector deleting destructor'
EXTRN	??_EBerconNoiseDlgProc@@UEAAPEAXI@Z:PROC	; BerconNoiseDlgProc::`vector deleting destructor'
EXTRN	??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC	; MaxSDK::Util::Exception::Exception
EXTRN	??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC ; MaxSDK::Util::OutOfRangeException::OutOfRangeException
EXTRN	?AddInterface@ClassDesc@@UEAAXPEAVFPInterface@@@Z:PROC ; ClassDesc::AddInterface
EXTRN	?AddParamBlockDesc@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z:PROC ; ClassDesc2::AddParamBlockDesc
EXTRN	?AutoDelete@ReferenceTarget@@UEAA?AW4RefResult@@XZ:PROC ; ReferenceTarget::AutoDelete
EXTRN	?BaseClone@MtlBase@@UEAAXPEAVReferenceTarget@@0AEAVRemapDir@@@Z:PROC ; MtlBase::BaseClone
EXTRN	?BeginEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z:PROC ; ClassDesc2::BeginEditParams
EXTRN	?CreatePStamp@MtlBase@@UEAAPEAVPStamp@@HH@Z:PROC ; MtlBase::CreatePStamp
EXTRN	?DeleteAllRefsToMe@ReferenceTarget@@UEAA?AW4RefResult@@XZ:PROC ; ReferenceTarget::DeleteAllRefsToMe
EXTRN	?DiscardPStamp@MtlBase@@UEAAXH@Z:PROC		; MtlBase::DiscardPStamp
EXTRN	?DoEnumDependentsImpl@ReferenceTarget@@MEAAHPEAVDependentEnumProc@@@Z:PROC ; ReferenceTarget::DoEnumDependentsImpl
EXTRN	?EndEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z:PROC ; ClassDesc2::EndEditParams
EXTRN	?EnumAuxFiles@MtlBase@@UEAAXAEAVAssetEnumCallback@@K@Z:PROC ; MtlBase::EnumAuxFiles
EXTRN	?GetFullName@MtlBase@@UEAA?AVWStr@@XZ:PROC	; MtlBase::GetFullName
EXTRN	?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC ; BaseInterfaceServer::GetInterface
EXTRN	?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@PEB_W@Z:PROC ; ClassDesc::GetInterface
EXTRN	?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@VInterface_ID@@@Z:PROC ; ClassDesc::GetInterface
EXTRN	?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z:PROC ; BaseInterfaceServer::GetInterfaceAt
EXTRN	?GetPStamp@MtlBase@@UEAAPEAVPStamp@@H@Z:PROC	; MtlBase::GetPStamp
EXTRN	?GetParamBlockDesc@ClassDesc2@@UEAAPEAVParamBlockDesc2@@H@Z:PROC ; ClassDesc2::GetParamBlockDesc
EXTRN	?GetParamBlockDescByID@ClassDesc2@@UEAAPEAVParamBlockDesc2@@F@Z:PROC ; ClassDesc2::GetParamBlockDescByID
EXTRN	?GetParamMap@ClassDesc2@@UEAAPEAVIParamMap2@@H@Z:PROC ; ClassDesc2::GetParamMap
EXTRN	?GetProperty@MtlBase@@UEAAPEAXK@Z:PROC		; MtlBase::GetProperty
EXTRN	?GetRsrcString@ClassDesc@@UEAAPEB_W_J@Z:PROC	; ClassDesc::GetRsrcString
EXTRN	?GetTimeRange@Animatable@@UEAA?AVInterval@@K@Z:PROC ; Animatable::GetTimeRange
EXTRN	?GetVPDisplayDIB@Texmap@@UEAAPEAUtagBITMAPINFO@@HAEAVTexHandleMaker@@AEAVInterval@@HHH@Z:PROC ; Texmap::GetVPDisplayDIB
EXTRN	?InvalidateUI@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z:PROC ; ClassDesc2::InvalidateUI
EXTRN	?IsAnimated@Animatable@@UEAAHXZ:PROC		; Animatable::IsAnimated
EXTRN	?IsOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z:PROC ; Texmap::IsOutputMeaningful
EXTRN	?Load@MtlBase@@UEAA?AW4IOResult@@PEAVILoad@@@Z:PROC ; MtlBase::Load
EXTRN	?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z:PROC ; ClassDesc2::MakeAutoParamBlocks
EXTRN	?MapKeys@Animatable@@UEAAXPEAVTimeMap@@K@Z:PROC	; Animatable::MapKeys
EXTRN	?MouseCycleCompleted@Animatable@@UEAAXH@Z:PROC	; Animatable::MouseCycleCompleted
EXTRN	?MouseCycleStarted@Animatable@@UEAAXH@Z:PROC	; Animatable::MouseCycleStarted
EXTRN	?NodeName@Animatable@@UEAA?AVWStr@@XZ:PROC	; Animatable::NodeName
EXTRN	?NotifyDependents@ReferenceTarget@@UEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAV1@W4NotifyDependentsOption@@@Z:PROC ; ReferenceTarget::NotifyDependents
EXTRN	?NumInterfaces@BaseInterfaceServer@@UEBAHXZ:PROC ; BaseInterfaceServer::NumInterfaces
EXTRN	?NumParamBlockDescs@ClassDesc2@@UEAAHXZ:PROC	; ClassDesc2::NumParamBlockDescs
EXTRN	?NumParamMaps@ClassDesc2@@UEAAHXZ:PROC		; ClassDesc2::NumParamMaps
EXTRN	?RefAdded@Texmap@@UEAAXPEAVReferenceMaker@@@Z:PROC ; Texmap::RefAdded
EXTRN	?ReleaseInterface@Animatable@@UEAAXKPEAX@Z:PROC	; Animatable::ReleaseInterface
EXTRN	?RenderBitmap@Texmap@@UEAAXHPEAVBitmap@@MH@Z:PROC ; Texmap::RenderBitmap
EXTRN	?Requirements@MtlBase@@UEAAKH@Z:PROC		; MtlBase::Requirements
EXTRN	?RescaleWorldUnits@ReferenceMaker@@UEAAXM@Z:PROC ; ReferenceMaker::RescaleWorldUnits
EXTRN	?ResetClassParams@ClassDesc2@@UEAAXH@Z:PROC	; ClassDesc2::ResetClassParams
EXTRN	?Save@MtlBase@@UEAA?AW4IOResult@@PEAVISave@@@Z:PROC ; MtlBase::Save
EXTRN	?SaveEnum@ReferenceMaker@@UEAAXAEAVSaveEnumProc@@H@Z:PROC ; ReferenceMaker::SaveEnum
EXTRN	?SetProperty@MtlBase@@UEAAHKPEAX@Z:PROC		; MtlBase::SetProperty
EXTRN	?SpecifySaveReferences@ReferenceMaker@@UEAA_NAEAVReferenceSaveManager@@@Z:PROC ; ReferenceMaker::SpecifySaveReferences
EXTRN	?SubAnimCommitSetKeyBuffer@Animatable@@UEAAXHH@Z:PROC ; Animatable::SubAnimCommitSetKeyBuffer
EXTRN	?SubAnimRevertSetKeyBuffer@Animatable@@UEAAXH@Z:PROC ; Animatable::SubAnimRevertSetKeyBuffer
EXTRN	?SubAnimSetKeyBufferPresent@Animatable@@UEAAHH@Z:PROC ; Animatable::SubAnimSetKeyBufferPresent
EXTRN	?SvCanConcludeLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvCanConcludeLink
EXTRN	?SvCanDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanDetach
EXTRN	?SvCanDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvCanDetachRel
EXTRN	?SvCanInitiateLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanInitiateLink
EXTRN	?SvCanRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanRemoveThis
EXTRN	?SvCanSelect@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvCanSelect
EXTRN	?SvCanSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvCanSetName
EXTRN	?SvDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvDetach
EXTRN	?SvDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvDetachRel
EXTRN	?SvEditProperties@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvEditProperties
EXTRN	?SvGetMultiSelectCallback@MtlBase@@UEAAPEAVMultiSelectCallback@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvGetMultiSelectCallback
EXTRN	?SvGetName@MtlBase@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@_N@Z:PROC ; MtlBase::SvGetName
EXTRN	?SvGetRefTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvGetRefTip
EXTRN	?SvGetRelTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvGetRelTip
EXTRN	?SvGetSwatchColor@Animatable@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvGetSwatchColor
EXTRN	?SvGetTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvGetTip
EXTRN	?SvHandleDoubleClick@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvHandleDoubleClick
EXTRN	?SvHandleRelDoubleClick@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvHandleRelDoubleClick
EXTRN	?SvHighlightColor@MtlBase@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvHighlightColor
EXTRN	?SvIsHighlighted@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvIsHighlighted
EXTRN	?SvIsInactive@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvIsInactive
EXTRN	?SvIsSelected@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvIsSelected
EXTRN	?SvLinkChild@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvLinkChild
EXTRN	?SvRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvRemoveThis
EXTRN	?SvSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@AEBVWStr@@@Z:PROC ; MtlBase::SvSetName
EXTRN	?SvTraverseAnimGraph@Texmap@@UEAA?AVSvGraphNodeReference@@PEAVIGraphObjectManager@@PEAVAnimatable@@HK@Z:PROC ; Texmap::SvTraverseAnimGraph
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	GUID_NULL:BYTE
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?defaultDim@@3PEAVParamDimension@@EA:QWORD
EXTRN	__imp_?TEXMAP_CAT_3D@@3PA_WA:BYTE
EXTRN	?hInstance@@3PEAUHINSTANCE__@@EA:QWORD		; hInstance
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A DB 010H DUP (?) ; MaxSDK::AssetManagement::kInvalidId
?kTriObjNormalXTCID@@3VClass_ID@@B DQ 01H DUP (?)	; kTriObjNormalXTCID
?intvalid@@3VInterval@@A DQ 01H DUP (?)			; intvalid
?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A DB 038H DUP (?) ; BerconNoiseDesc
?xyz_blk@@3VXYZ_Desc@@A DB 080H DUP (?)			; xyz_blk
?berconnoise_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; berconnoise_param_blk
?BerconCurve_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; BerconCurve_param_blk
?BerconMap_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; BerconMap_param_blk
?black@@3VAColor@@A DB 010H DUP (?)			; black
?white@@3VAColor@@A DB 010H DUP (?)			; white
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8Class_ID@@QEBA_NAEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$??8Class_ID@@QEBA_NAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA DD imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVPoint3@@MAEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??D@YA?AVPoint3@@MAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVPoint3@@AEBV0@M@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??D@YA?AVPoint3@@AEBV0@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
	DD	imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ+21
	DD	imagerel $unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NumInterfaces@ClassDesc@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?NumInterfaces@ClassDesc@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearInterfaces@ClassDesc@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?ClearInterfaces@ClassDesc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Set@BitArray@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+188
	DD	imagerel $unwind$?Set@BitArray@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UseLocalBits@BitArray@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$?UseLocalBits@BitArray@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BitMask@BitArray@@AEBA_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?BitMask@BitArray@@AEBA_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??HAColor@@QEBA?AV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$??HAColor@@QEBA?AV0@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVAColor@@MAEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??D@YA?AVAColor@@MAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Interval@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0Interval@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_4Interval@@QEAAAEAV0@V0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??_4Interval@@QEAAAEAV0@V0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BypassTrackBar@Animatable@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?BypassTrackBar@Animatable@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyForeground@ReferenceTarget@@UEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?NotifyForeground@ReferenceTarget@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Texmap@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1Texmap@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkTriObjNormalXTCID@@YAXXZ DD imagerel ??__EkTriObjNormalXTCID@@YAXXZ
	DD	imagerel ??__EkTriObjNormalXTCID@@YAXXZ+32
	DD	imagerel $unwind$??__EkTriObjNormalXTCID@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eintvalid@@YAXXZ DD imagerel ??__Eintvalid@@YAXXZ
	DD	imagerel ??__Eintvalid@@YAXXZ+33
	DD	imagerel $unwind$??__Eintvalid@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD imagerel $LN4
	DD	imagerel $LN4+5732
	DD	imagerel $unwind$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA DD imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
	DD	imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1XYZ_Desc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1XYZ_Desc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GXYZ_Desc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GXYZ_Desc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN8
	DD	imagerel $LN8+1507
	DD	imagerel $unwind$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconXYZDlgProc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconXYZDlgProc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconXYZDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconXYZDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconXYZ@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??0BerconXYZ@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z DD imagerel $LN31
	DD	imagerel $LN31+2821
	DD	imagerel $unwind$?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z DD imagerel $LN6
	DD	imagerel $LN6+382
	DD	imagerel $unwind$?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnableStuff@BerconNoise@@QEAAXXZ DD imagerel $LN29
	DD	imagerel $LN29+1390
	DD	imagerel $unwind$?EnableStuff@BerconNoise@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z DD imagerel $LN4
	DD	imagerel $LN4+121
	DD	imagerel $unwind$?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z DD imagerel $LN3
	DD	imagerel $LN3+483
	DD	imagerel $unwind$?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DiscardTexHandle@BerconNoise@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$?DiscardTexHandle@BerconNoise@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ActivateTexDisplay@BerconNoise@@UEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$?ActivateTexDisplay@BerconNoise@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z DD imagerel $LN6
	DD	imagerel $LN6+260
	DD	imagerel $unwind$?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD imagerel $LN12
	DD	imagerel $LN12+484
	DD	imagerel $unwind$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z DD imagerel $LN18
	DD	imagerel $LN18+4222
	DD	imagerel $unwind$?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Reset@BerconNoise@@UEAAXXZ DD imagerel $LN12
	DD	imagerel $LN12+2194
	DD	imagerel $unwind$?Reset@BerconNoise@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Validity@BerconNoise@@UEAA?AVInterval@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?Validity@BerconNoise@@UEAA?AVInterval@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LocalRequirements@BerconNoise@@UEAAKH@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?LocalRequirements@BerconNoise@@UEAAKH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z DD imagerel $LN11
	DD	imagerel $LN11+325
	DD	imagerel $unwind$?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z DD imagerel $LN27
	DD	imagerel $LN27+1012
	DD	imagerel $unwind$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD imagerel $LN17
	DD	imagerel $LN17+1944
	DD	imagerel $unwind$?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD imagerel $LN17
	DD	imagerel $LN17+3243
	DD	imagerel $unwind$?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD imagerel $LN10
	DD	imagerel $LN10+689
	DD	imagerel $unwind$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA DD imagerel ?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z DD imagerel $LN14
	DD	imagerel $LN14+383
	DD	imagerel $unwind$?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z DD imagerel $LN14
	DD	imagerel $LN14+220
	DD	imagerel $unwind$?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z DD imagerel $LN16
	DD	imagerel $LN16+464
	DD	imagerel $unwind$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z DD imagerel $LN14
	DD	imagerel $LN14+220
	DD	imagerel $unwind$?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z DD imagerel $LN14
	DD	imagerel $LN14+264
	DD	imagerel $unwind$?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z DD imagerel $LN9
	DD	imagerel $LN9+119
	DD	imagerel $unwind$?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z DD imagerel $LN7
	DD	imagerel $LN7+252
	DD	imagerel $unwind$?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconNoise@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconNoise@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconNoise@@QEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+395
	DD	imagerel $unwind$??0BerconNoise@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconNoise@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??1BerconNoise@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@BerconNoise@@UEAAPEAXK@Z DD imagerel $LN7
	DD	imagerel $LN7+87
	DD	imagerel $unwind$?GetInterface@BerconNoise@@UEAAPEAXK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconNoise@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconNoise@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconNoise@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconNoise@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconNoiseClassDesc@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??0BerconNoiseClassDesc@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconNoiseClassDesc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1BerconNoiseClassDesc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+107
	DD	imagerel $unwind$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA DD imagerel ?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconNoiseClassDesc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconNoiseClassDesc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconNoiseDesc@@YAXXZ DD imagerel ??__EBerconNoiseDesc@@YAXXZ
	DD	imagerel ??__EBerconNoiseDesc@@YAXXZ+50
	DD	imagerel $unwind$??__EBerconNoiseDesc@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconNoiseDesc@@YAXXZ DD imagerel ??__FBerconNoiseDesc@@YAXXZ
	DD	imagerel ??__FBerconNoiseDesc@@YAXXZ+21
	DD	imagerel $unwind$??__FBerconNoiseDesc@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Exyz_blk@@YAXXZ DD imagerel ??__Exyz_blk@@YAXXZ
	DD	imagerel ??__Exyz_blk@@YAXXZ+103
	DD	imagerel $unwind$??__Exyz_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fxyz_blk@@YAXXZ DD imagerel ??__Fxyz_blk@@YAXXZ
	DD	imagerel ??__Fxyz_blk@@YAXXZ+21
	DD	imagerel $unwind$??__Fxyz_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eberconnoise_param_blk@@YAXXZ DD imagerel ??__Eberconnoise_param_blk@@YAXXZ
	DD	imagerel ??__Eberconnoise_param_blk@@YAXXZ+5286
	DD	imagerel $unwind$??__Eberconnoise_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fberconnoise_param_blk@@YAXXZ DD imagerel ??__Fberconnoise_param_blk@@YAXXZ
	DD	imagerel ??__Fberconnoise_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__Fberconnoise_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconCurve_param_blk@@YAXXZ DD imagerel ??__EBerconCurve_param_blk@@YAXXZ
	DD	imagerel ??__EBerconCurve_param_blk@@YAXXZ+360
	DD	imagerel $unwind$??__EBerconCurve_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconCurve_param_blk@@YAXXZ DD imagerel ??__FBerconCurve_param_blk@@YAXXZ
	DD	imagerel ??__FBerconCurve_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__FBerconCurve_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconMap_param_blk@@YAXXZ DD imagerel ??__EBerconMap_param_blk@@YAXXZ
	DD	imagerel ??__EBerconMap_param_blk@@YAXXZ+3963
	DD	imagerel $unwind$??__EBerconMap_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconMap_param_blk@@YAXXZ DD imagerel ??__FBerconMap_param_blk@@YAXXZ
	DD	imagerel ??__FBerconMap_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__FBerconMap_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconCurveDlgProcNOISE@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??1BerconCurveDlgProcNOISE@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN8
	DD	imagerel $LN8+257
	DD	imagerel $unwind$?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconNoiseDlgProc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??1BerconNoiseDlgProc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN7
	DD	imagerel $LN7+2188
	DD	imagerel $unwind$?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconNoiseDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconNoiseDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eblack@@YAXXZ DD imagerel ??__Eblack@@YAXXZ
	DD	imagerel ??__Eblack@@YAXXZ+39
	DD	imagerel $unwind$??__Eblack@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Ewhite@@YAXXZ DD imagerel ??__Ewhite@@YAXXZ
	DD	imagerel ??__Ewhite@@YAXXZ+59
	DD	imagerel $unwind$??__Ewhite@@YAXXZ
pdata	ENDS
CRT$XCU	SEGMENT
?kInvalidId$initializer$@AssetManagement@MaxSDK@@3P6AXXZEA DQ FLAT:??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ; MaxSDK::AssetManagement::kInvalidId$initializer$
CRT$XCU	ENDS
;	COMDAT __real@c12e848000000000
CONST	SEGMENT
__real@c12e848000000000 DQ 0c12e848000000000r	; -1e+06
CONST	ENDS
;	COMDAT __real@c08f400000000000
CONST	SEGMENT
__real@c08f400000000000 DQ 0c08f400000000000r	; -1000
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+06
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4039000000000000
CONST	SEGMENT
__real@4039000000000000 DQ 04039000000000000r	; 25
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fb99999a0000000
CONST	SEGMENT
__real@3fb99999a0000000 DQ 03fb99999a0000000r	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f1a36e2e0000000
CONST	SEGMENT
__real@3f1a36e2e0000000 DQ 03f1a36e2e0000000r	; 0.0001
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconNoiseDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconNoiseDlgProc@@8 DD imagerel ??_R0?AVBerconNoiseDlgProc@@@8 ; BerconNoiseDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconNoiseDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconNoiseDlgProc@@8
rdata$r	SEGMENT
??_R2BerconNoiseDlgProc@@8 DD imagerel ??_R1A@?0A@EA@BerconNoiseDlgProc@@8 ; BerconNoiseDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconNoiseDlgProc@@8
rdata$r	SEGMENT
??_R3BerconNoiseDlgProc@@8 DD 00H			; BerconNoiseDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconNoiseDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconNoiseDlgProc@@@8
data$r	SEGMENT
??_R0?AVBerconNoiseDlgProc@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconNoiseDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconNoiseDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconNoiseDlgProc@@6B@
rdata$r	SEGMENT
??_R4BerconNoiseDlgProc@@6B@ DD 01H			; BerconNoiseDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconNoiseDlgProc@@@8
	DD	imagerel ??_R3BerconNoiseDlgProc@@8
	DD	imagerel ??_R4BerconNoiseDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconCurveDlgProcNOISE@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconCurveDlgProcNOISE@@8 DD imagerel ??_R0?AVBerconCurveDlgProcNOISE@@@8 ; BerconCurveDlgProcNOISE::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconCurveDlgProcNOISE@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconCurveDlgProcNOISE@@8
rdata$r	SEGMENT
??_R2BerconCurveDlgProcNOISE@@8 DD imagerel ??_R1A@?0A@EA@BerconCurveDlgProcNOISE@@8 ; BerconCurveDlgProcNOISE::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconCurveDlgProcNOISE@@8
rdata$r	SEGMENT
??_R3BerconCurveDlgProcNOISE@@8 DD 00H			; BerconCurveDlgProcNOISE::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconCurveDlgProcNOISE@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconCurveDlgProcNOISE@@@8
data$r	SEGMENT
??_R0?AVBerconCurveDlgProcNOISE@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconCurveDlgProcNOISE `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconCurveDlgProcNOISE@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconCurveDlgProcNOISE@@6B@
rdata$r	SEGMENT
??_R4BerconCurveDlgProcNOISE@@6B@ DD 01H		; BerconCurveDlgProcNOISE::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconCurveDlgProcNOISE@@@8
	DD	imagerel ??_R3BerconCurveDlgProcNOISE@@8
	DD	imagerel ??_R4BerconCurveDlgProcNOISE@@6B@
rdata$r	ENDS
;	COMDAT ??_R2ClassDesc2@@8
rdata$r	SEGMENT
??_R2ClassDesc2@@8 DD imagerel ??_R1A@?0A@EA@ClassDesc2@@8 ; ClassDesc2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ClassDesc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ClassDesc2@@8
rdata$r	SEGMENT
??_R3ClassDesc2@@8 DD 00H				; ClassDesc2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ClassDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ClassDesc2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ClassDesc2@@8 DD imagerel ??_R0?AVClassDesc2@@@8 ; ClassDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ClassDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconNoiseClassDesc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconNoiseClassDesc@@8 DD imagerel ??_R0?AVBerconNoiseClassDesc@@@8 ; BerconNoiseClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconNoiseClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconNoiseClassDesc@@8
rdata$r	SEGMENT
??_R2BerconNoiseClassDesc@@8 DD imagerel ??_R1A@?0A@EA@BerconNoiseClassDesc@@8 ; BerconNoiseClassDesc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ClassDesc2@@8
	DD	imagerel ??_R1A@?0A@EA@ClassDesc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconNoiseClassDesc@@8
rdata$r	SEGMENT
??_R3BerconNoiseClassDesc@@8 DD 00H			; BerconNoiseClassDesc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2BerconNoiseClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconNoiseClassDesc@@@8
data$r	SEGMENT
??_R0?AVBerconNoiseClassDesc@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconNoiseClassDesc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconNoiseClassDesc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconNoiseClassDesc@@6B@
rdata$r	SEGMENT
??_R4BerconNoiseClassDesc@@6B@ DD 01H			; BerconNoiseClassDesc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconNoiseClassDesc@@@8
	DD	imagerel ??_R3BerconNoiseClassDesc@@8
	DD	imagerel ??_R4BerconNoiseClassDesc@@6B@
rdata$r	ENDS
;	COMDAT ??_R4BerconNoise@@6B@
rdata$r	SEGMENT
??_R4BerconNoise@@6B@ DD 01H				; BerconNoise::`RTTI Complete Object Locator'
	DD	090H
	DD	00H
	DD	imagerel ??_R0?AVBerconNoise@@@8
	DD	imagerel ??_R3BerconNoise@@8
	DD	imagerel ??_R4BerconNoise@@6B@
rdata$r	ENDS
;	COMDAT ??_R4BerconNoise@@6BISubMap@@@
rdata$r	SEGMENT
??_R4BerconNoise@@6BISubMap@@@ DD 01H			; BerconNoise::`RTTI Complete Object Locator'
	DD	040H
	DD	00H
	DD	imagerel ??_R0?AVBerconNoise@@@8
	DD	imagerel ??_R3BerconNoise@@8
	DD	imagerel ??_R4BerconNoise@@6BISubMap@@@
rdata$r	ENDS
;	COMDAT ??_R1JI@?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1JI@?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (152,-1,0,66)'
	DD	00H
	DD	098H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R1JA@?0A@EA@ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R1JA@?0A@EA@ResourceMakerCallback@@8 DD imagerel ??_R0?AVResourceMakerCallback@@@8 ; ResourceMakerCallback::`RTTI Base Class Descriptor at (144,-1,0,64)'
	DD	01H
	DD	090H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1EA@?0A@EA@ISubMap@@8
rdata$r	SEGMENT
??_R1EA@?0A@EA@ISubMap@@8 DD imagerel ??_R0?AVISubMap@@@8 ; ISubMap::`RTTI Base Class Descriptor at (64,-1,0,64)'
	DD	01H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R2MtlBase@@8
rdata$r	SEGMENT
??_R2MtlBase@@8 DD imagerel ??_R1A@?0A@EA@MtlBase@@8	; MtlBase::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3MtlBase@@8
rdata$r	SEGMENT
??_R3MtlBase@@8 DD 00H					; MtlBase::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	imagerel ??_R2MtlBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMtlBase@@@8
data$r	SEGMENT
??_R0?AVMtlBase@@@8 DQ FLAT:??_7type_info@@6B@		; MtlBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVMtlBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MtlBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MtlBase@@8 DD imagerel ??_R0?AVMtlBase@@@8 ; MtlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MtlBase@@8
rdata$r	ENDS
;	COMDAT ??_R2Texmap@@8
rdata$r	SEGMENT
??_R2Texmap@@8 DD imagerel ??_R1A@?0A@EA@Texmap@@8	; Texmap::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@MtlBase@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Texmap@@8
rdata$r	SEGMENT
??_R3Texmap@@8 DD 00H					; Texmap::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	imagerel ??_R2Texmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTexmap@@@8
data$r	SEGMENT
??_R0?AVTexmap@@@8 DQ FLAT:??_7type_info@@6B@		; Texmap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVTexmap@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Texmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Texmap@@8 DD imagerel ??_R0?AVTexmap@@@8	; Texmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Texmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconNoise@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconNoise@@8 DD imagerel ??_R0?AVBerconNoise@@@8 ; BerconNoise::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconNoise@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconNoise@@8
rdata$r	SEGMENT
??_R2BerconNoise@@8 DD imagerel ??_R1A@?0A@EA@BerconNoise@@8 ; BerconNoise::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Texmap@@8
	DD	imagerel ??_R1A@?0A@EA@MtlBase@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1JA@?0A@EA@ResourceMakerCallback@@8
	DD	imagerel ??_R1JI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconNoise@@8
rdata$r	SEGMENT
??_R3BerconNoise@@8 DD 00H				; BerconNoise::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0eH
	DD	imagerel ??_R2BerconNoise@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconNoise@@@8
data$r	SEGMENT
??_R0?AVBerconNoise@@@8 DQ FLAT:??_7type_info@@6B@	; BerconNoise `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconNoise@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconNoise@@6BReferenceTarget@@@
rdata$r	SEGMENT
??_R4BerconNoise@@6BReferenceTarget@@@ DD 01H		; BerconNoise::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconNoise@@@8
	DD	imagerel ??_R3BerconNoise@@8
	DD	imagerel ??_R4BerconNoise@@6BReferenceTarget@@@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconXYZDlgProc@@8 DD imagerel ??_R0?AVBerconXYZDlgProc@@@8 ; BerconXYZDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconXYZDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R2BerconXYZDlgProc@@8 DD imagerel ??_R1A@?0A@EA@BerconXYZDlgProc@@8 ; BerconXYZDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R3BerconXYZDlgProc@@8 DD 00H				; BerconXYZDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconXYZDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconXYZDlgProc@@@8
data$r	SEGMENT
??_R0?AVBerconXYZDlgProc@@@8 DQ FLAT:??_7type_info@@6B@	; BerconXYZDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconXYZDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconXYZDlgProc@@6B@
rdata$r	SEGMENT
??_R4BerconXYZDlgProc@@6B@ DD 01H			; BerconXYZDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconXYZDlgProc@@@8
	DD	imagerel ??_R3BerconXYZDlgProc@@8
	DD	imagerel ??_R4BerconXYZDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R2ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R2ParamBlockDesc2@@8 DD imagerel ??_R1A@?0A@EA@ParamBlockDesc2@@8 ; ParamBlockDesc2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R3ParamBlockDesc2@@8 DD 00H				; ParamBlockDesc2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2ParamBlockDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParamBlockDesc2@@@8
data$r	SEGMENT
??_R0?AVParamBlockDesc2@@@8 DQ FLAT:??_7type_info@@6B@	; ParamBlockDesc2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVParamBlockDesc2@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParamBlockDesc2@@8 DD imagerel ??_R0?AVParamBlockDesc2@@@8 ; ParamBlockDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ParamBlockDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XYZ_Desc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XYZ_Desc@@8 DD imagerel ??_R0?AVXYZ_Desc@@@8 ; XYZ_Desc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3XYZ_Desc@@8
rdata$r	ENDS
;	COMDAT ??_R2XYZ_Desc@@8
rdata$r	SEGMENT
??_R2XYZ_Desc@@8 DD imagerel ??_R1A@?0A@EA@XYZ_Desc@@8	; XYZ_Desc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamBlockDesc2@@8
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3XYZ_Desc@@8
rdata$r	SEGMENT
??_R3XYZ_Desc@@8 DD 00H					; XYZ_Desc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2XYZ_Desc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXYZ_Desc@@@8
data$r	SEGMENT
??_R0?AVXYZ_Desc@@@8 DQ FLAT:??_7type_info@@6B@		; XYZ_Desc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVXYZ_Desc@@', 00H
data$r	ENDS
;	COMDAT ??_R4XYZ_Desc@@6B@
rdata$r	SEGMENT
??_R4XYZ_Desc@@6B@ DD 01H				; XYZ_Desc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVXYZ_Desc@@@8
	DD	imagerel ??_R3XYZ_Desc@@8
	DD	imagerel ??_R4XYZ_Desc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceMakerCallback@@8 DD imagerel ??_R0?AVResourceMakerCallback@@@8 ; ResourceMakerCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R2ResourceMakerCallback@@8 DD imagerel ??_R1A@?0A@EA@ResourceMakerCallback@@8 ; ResourceMakerCallback::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R3ResourceMakerCallback@@8 DD 00H			; ResourceMakerCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceMakerCallback@@@8
data$r	SEGMENT
??_R0?AVResourceMakerCallback@@@8 DQ FLAT:??_7type_info@@6B@ ; ResourceMakerCallback `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVResourceMakerCallback@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceMakerCallback@@6B@
rdata$r	SEGMENT
??_R4ResourceMakerCallback@@6B@ DD 01H			; ResourceMakerCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVResourceMakerCallback@@@8
	DD	imagerel ??_R3ResourceMakerCallback@@8
	DD	imagerel ??_R4ResourceMakerCallback@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISubMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISubMap@@8 DD imagerel ??_R0?AVISubMap@@@8 ; ISubMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R2ISubMap@@8
rdata$r	SEGMENT
??_R2ISubMap@@8 DD imagerel ??_R1A@?0A@EA@ISubMap@@8	; ISubMap::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ISubMap@@8
rdata$r	SEGMENT
??_R3ISubMap@@8 DD 00H					; ISubMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISubMap@@@8
data$r	SEGMENT
??_R0?AVISubMap@@@8 DQ FLAT:??_7type_info@@6B@		; ISubMap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVISubMap@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ClassDesc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ClassDesc@@8 DD imagerel ??_R0?AVClassDesc@@@8 ; ClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R2ClassDesc@@8
rdata$r	SEGMENT
??_R2ClassDesc@@8 DD imagerel ??_R1A@?0A@EA@ClassDesc@@8 ; ClassDesc::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ClassDesc@@8
rdata$r	SEGMENT
??_R3ClassDesc@@8 DD 00H				; ClassDesc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVClassDesc@@@8
data$r	SEGMENT
??_R0?AVClassDesc@@@8 DQ FLAT:??_7type_info@@6B@	; ClassDesc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVClassDesc@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParamMap2UserDlgProc@@8 DD imagerel ??_R0?AVParamMap2UserDlgProc@@@8 ; ParamMap2UserDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ParamMap2UserDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R2ParamMap2UserDlgProc@@8 DD imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8 ; ParamMap2UserDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R3ParamMap2UserDlgProc@@8 DD 00H			; ParamMap2UserDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ParamMap2UserDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParamMap2UserDlgProc@@@8
data$r	SEGMENT
??_R0?AVParamMap2UserDlgProc@@@8 DQ FLAT:??_7type_info@@6B@ ; ParamMap2UserDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVParamMap2UserDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4ParamMap2UserDlgProc@@6B@
rdata$r	SEGMENT
??_R4ParamMap2UserDlgProc@@6B@ DD 01H			; ParamMap2UserDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVParamMap2UserDlgProc@@@8
	DD	imagerel ??_R3ParamMap2UserDlgProc@@8
	DD	imagerel ??_R4ParamMap2UserDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1EI@?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1EI@?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (72,-1,0,66)'
	DD	00H
	DD	048H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R18?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R18?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (9,-1,0,66)'
	DD	00H
	DD	09H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R0?AVNoncopyable@Util@MaxSDK@@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3Noncopyable@Util@MaxSDK@@8 DD 00H			; MaxSDK::Util::Noncopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNoncopyable@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVNoncopyable@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::Noncopyable `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVNoncopyable@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R0?AVNoncopyable@Util@MaxSDK@@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (9,-1,0,64)'
	DD	01H
	DD	09H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R17?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2Animatable@@8
rdata$r	SEGMENT
??_R2Animatable@@8 DD imagerel ??_R1A@?0A@EA@Animatable@@8 ; Animatable::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Animatable@@8
rdata$r	SEGMENT
??_R3Animatable@@8 DD 00H				; Animatable::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	05H
	DD	imagerel ??_R2Animatable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAnimatable@@@8
data$r	SEGMENT
??_R0?AVAnimatable@@@8 DQ FLAT:??_7type_info@@6B@	; Animatable `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAnimatable@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Animatable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Animatable@@8 DD imagerel ??_R0?AVAnimatable@@@8 ; Animatable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Animatable@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferenceMaker@@8
rdata$r	SEGMENT
??_R2ReferenceMaker@@8 DD imagerel ??_R1A@?0A@EA@ReferenceMaker@@8 ; ReferenceMaker::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReferenceMaker@@8
rdata$r	SEGMENT
??_R3ReferenceMaker@@8 DD 00H				; ReferenceMaker::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	imagerel ??_R2ReferenceMaker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferenceMaker@@@8
data$r	SEGMENT
??_R0?AVReferenceMaker@@@8 DQ FLAT:??_7type_info@@6B@	; ReferenceMaker `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReferenceMaker@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferenceMaker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferenceMaker@@8 DD imagerel ??_R0?AVReferenceMaker@@@8 ; ReferenceMaker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReferenceMaker@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferenceTarget@@8
rdata$r	SEGMENT
??_R2ReferenceTarget@@8 DD imagerel ??_R1A@?0A@EA@ReferenceTarget@@8 ; ReferenceTarget::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReferenceTarget@@8
rdata$r	SEGMENT
??_R3ReferenceTarget@@8 DD 00H				; ReferenceTarget::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	imagerel ??_R2ReferenceTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferenceTarget@@@8
data$r	SEGMENT
??_R0?AVReferenceTarget@@@8 DQ FLAT:??_7type_info@@6B@	; ReferenceTarget `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReferenceTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferenceTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferenceTarget@@8 DD imagerel ??_R0?AVReferenceTarget@@@8 ; ReferenceTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReferenceTarget@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BaseInterfaceServer@@8 DD imagerel ??_R0?AVBaseInterfaceServer@@@8 ; BaseInterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BaseInterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R2BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R2BaseInterfaceServer@@8 DD imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8 ; BaseInterfaceServer::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R3BaseInterfaceServer@@8 DD 00H			; BaseInterfaceServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BaseInterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBaseInterfaceServer@@@8
data$r	SEGMENT
??_R0?AVBaseInterfaceServer@@@8 DQ FLAT:??_7type_info@@6B@ ; BaseInterfaceServer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBaseInterfaceServer@@', 00H
data$r	ENDS
;	COMDAT ??_R2InterfaceServer@@8
rdata$r	SEGMENT
??_R2InterfaceServer@@8 DD imagerel ??_R1A@?0A@EA@InterfaceServer@@8 ; InterfaceServer::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InterfaceServer@@8
rdata$r	SEGMENT
??_R3InterfaceServer@@8 DD 00H				; InterfaceServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2InterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVInterfaceServer@@@8
data$r	SEGMENT
??_R0?AVInterfaceServer@@@8 DQ FLAT:??_7type_info@@6B@	; InterfaceServer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInterfaceServer@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InterfaceServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InterfaceServer@@8 DD imagerel ??_R0?AVInterfaceServer@@@8 ; InterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2MaxHeapOperators@@8
rdata$r	SEGMENT
??_R2MaxHeapOperators@@8 DD imagerel ??_R1A@?0A@EA@MaxHeapOperators@@8 ; MaxHeapOperators::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3MaxHeapOperators@@8
rdata$r	SEGMENT
??_R3MaxHeapOperators@@8 DD 00H				; MaxHeapOperators::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R17?0A@EA@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2Exception@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8 ; MaxSDK::Util::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3Exception@Util@MaxSDK@@8 DD 00H			; MaxSDK::Util::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Util@MaxSDK@@8 DD imagerel ??_R0?AVException@Util@MaxSDK@@@8 ; MaxSDK::Util::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2OutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3OutOfRangeException@Util@MaxSDK@@8 DD 00H		; MaxSDK::Util::OutOfRangeException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2OutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3OutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2TabOutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8
	DD	imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3TabOutOfRangeException@Util@MaxSDK@@8 DD 00H	; MaxSDK::Util::TabOutOfRangeException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R4TabOutOfRangeException@Util@MaxSDK@@6B@
rdata$r	SEGMENT
??_R4TabOutOfRangeException@Util@MaxSDK@@6B@ DD 01H	; MaxSDK::Util::TabOutOfRangeException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
	DD	imagerel ??_R3TabOutOfRangeException@Util@MaxSDK@@8
	DD	imagerel ??_R4TabOutOfRangeException@Util@MaxSDK@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@
CONST	SEGMENT
??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' '
	DB	00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'a'
	DB	00H, ' ', 00H, 'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'S', 00H
	DB	'D', 00H, 'K', 00H, ' ', 00H, 'T', 00H, 'a', 00H, 'b', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel __imp_??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVOutOfRangeException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::OutOfRangeException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVOutOfRangeException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::TabOutOfRangeException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVTabOutOfRangeException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	SEGMENT
_CTA4?AVTabOutOfRangeException@Util@MaxSDK@@ DD 04H
	DD	imagerel _CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVMaxHeapOperators@@@818
xdata$x	ENDS
;	COMDAT _TI4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	SEGMENT
_TI4?AVTabOutOfRangeException@Util@MaxSDK@@ DD 00H
	DD	imagerel ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	ENDS
;	COMDAT ??_7BerconNoiseDlgProc@@6B@
CONST	SEGMENT
??_7BerconNoiseDlgProc@@6B@ DQ FLAT:??_R4BerconNoiseDlgProc@@6B@ ; BerconNoiseDlgProc::`vftable'
	DQ	FLAT:??_EBerconNoiseDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_7BerconCurveDlgProcNOISE@@6B@
CONST	SEGMENT
??_7BerconCurveDlgProcNOISE@@6B@ DQ FLAT:??_R4BerconCurveDlgProcNOISE@@6B@ ; BerconCurveDlgProcNOISE::`vftable'
	DQ	FLAT:??_EBerconCurveDlgProcNOISE@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_C@_1BI@OFHJLFOO@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAN?$AAo?$AAi?$AAs?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@OFHJLFOO@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAN?$AAo?$AAi?$AAs?$AAe?$AA?$AA@ DB 'B'
	DB	00H, 'e', 00H, 'r', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'N', 00H
	DB	'o', 00H, 'i', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7BerconNoiseClassDesc@@6B@
CONST	SEGMENT
??_7BerconNoiseClassDesc@@6B@ DQ FLAT:??_R4BerconNoiseClassDesc@@6B@ ; BerconNoiseClassDesc::`vftable'
	DQ	FLAT:??_EBerconNoiseClassDesc@@UEAAPEAXI@Z
	DQ	FLAT:?IsPublic@BerconNoiseClassDesc@@UEAAHXZ
	DQ	FLAT:?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
	DQ	FLAT:?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?SuperClassID@BerconNoiseClassDesc@@UEAAKXZ
	DQ	FLAT:?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?Category@BerconNoiseClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?HasClassParams@ClassDesc@@UEAAHXZ
	DQ	FLAT:?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z
	DQ	FLAT:?ResetClassParams@ClassDesc2@@UEAAXH@Z
	DQ	FLAT:?NumActionTables@ClassDesc@@UEAAHXZ
	DQ	FLAT:?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z
	DQ	FLAT:?IsManipulator@ClassDesc@@UEAAHXZ
	DQ	FLAT:?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z
	DQ	FLAT:?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z
	DQ	FLAT:?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z
	DQ	FLAT:?NeedsToSave@ClassDesc@@UEAAHXZ
	DQ	FLAT:?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z
	DQ	FLAT:?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z
	DQ	FLAT:?InitialRollupPageState@ClassDesc@@UEAAKXZ
	DQ	FLAT:?InternalName@BerconNoiseClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ
	DQ	FLAT:?HInstance@BerconNoiseClassDesc@@UEAAPEAUHINSTANCE__@@XZ
	DQ	FLAT:?NumParamBlockDescs@ClassDesc2@@UEAAHXZ
	DQ	FLAT:?GetParamBlockDesc@ClassDesc2@@UEAAPEAVParamBlockDesc2@@H@Z
	DQ	FLAT:?GetParamBlockDescByID@ClassDesc2@@UEAAPEAVParamBlockDesc2@@F@Z
	DQ	FLAT:?AddParamBlockDesc@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?BeginEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z
	DQ	FLAT:?EndEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z
	DQ	FLAT:?InvalidateUI@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetRsrcString@ClassDesc@@UEAAPEB_W_J@Z
	DQ	FLAT:?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?NumParamMaps@ClassDesc2@@UEAAHXZ
	DQ	FLAT:?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetParamMap@ClassDesc2@@UEAAPEAVIParamMap2@@H@Z
	DQ	FLAT:?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
	DQ	FLAT:?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z
	DQ	FLAT:?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z
	DQ	FLAT:?NumInterfaces@ClassDesc@@UEAAHXZ
	DQ	FLAT:?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
	DQ	FLAT:?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@PEB_W@Z
	DQ	FLAT:?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@VInterface_ID@@@Z
	DQ	FLAT:?AddInterface@ClassDesc@@UEAAXPEAVFPInterface@@@Z
	DQ	FLAT:?ClearInterfaces@ClassDesc@@UEAAXXZ
	DQ	FLAT:?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?Execute@ClassDesc@@UEAA_JH_K00@Z
	DQ	FLAT:?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z
CONST	ENDS
;	COMDAT ??_7BerconNoise@@6B@
CONST	SEGMENT
??_7BerconNoise@@6B@ DQ FLAT:??_R4BerconNoise@@6B@	; BerconNoise::`vftable'
	DQ	FLAT:?SetCustomImageList@BerconNoise@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
	DQ	FLAT:?GetToolTip@BerconNoise@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
	DQ	FLAT:?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?GetInterface@BerconNoise@@WJA@EAAPEAXK@Z
CONST	ENDS
;	COMDAT ??_7BerconNoise@@6BISubMap@@@
CONST	SEGMENT
??_7BerconNoise@@6BISubMap@@@ DQ FLAT:??_R4BerconNoise@@6BISubMap@@@ ; BerconNoise::`vftable'
	DQ	FLAT:??_EBerconNoise@@WEA@EAAPEAXI@Z
	DQ	FLAT:?NumSubTexmaps@BerconNoise@@UEAAHXZ
	DQ	FLAT:?GetSubTexmap@BerconNoise@@UEAAPEAVTexmap@@H@Z
	DQ	FLAT:?MapSlotType@Texmap@@UEAAHH@Z
	DQ	FLAT:?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z
	DQ	FLAT:?SubTexmapOn@ISubMap@@UEAAHH@Z
	DQ	FLAT:?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
	DQ	FLAT:?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z
	DQ	FLAT:?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ
CONST	ENDS
;	COMDAT ??_7BerconNoise@@6BReferenceTarget@@@
CONST	SEGMENT
??_7BerconNoise@@6BReferenceTarget@@@ DQ FLAT:??_R4BerconNoise@@6BReferenceTarget@@@ ; BerconNoise::`vftable'
	DQ	FLAT:??_EBerconNoise@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?DeleteThis@BerconNoise@@UEAAXXZ
	DQ	FLAT:?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z
	DQ	FLAT:?SuperClassID@BerconNoise@@UEAAKXZ
	DQ	FLAT:?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?FreeCaches@Animatable@@UEAAXXZ
	DQ	FLAT:?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
	DQ	FLAT:?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
	DQ	FLAT:?GetInterface@BerconNoise@@UEAAPEAXK@Z
	DQ	FLAT:?ReleaseInterface@Animatable@@UEAAXKPEAX@Z
	DQ	FLAT:?SetProperty@MtlBase@@UEAAHKPEAX@Z
	DQ	FLAT:?GetProperty@MtlBase@@UEAAPEAXK@Z
	DQ	FLAT:?NumSubs@BerconNoise@@UEAAHXZ
	DQ	FLAT:?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z
	DQ	FLAT:?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
	DQ	FLAT:?BypassTreeView@Animatable@@UEAAHXZ
	DQ	FLAT:?BypassTrackBar@Animatable@@UEAAHXZ
	DQ	FLAT:?BypassPropertyLevel@Animatable@@UEAAHXZ
	DQ	FLAT:?InvisibleProperty@Animatable@@UEAAHXZ
	DQ	FLAT:?AssignController@Animatable@@UEAAHPEAV1@H@Z
	DQ	FLAT:?CanAssignController@Animatable@@UEAAHH@Z
	DQ	FLAT:?CanDeleteSubAnim@Animatable@@UEAAHH@Z
	DQ	FLAT:?DeleteSubAnim@Animatable@@UEAAXH@Z
	DQ	FLAT:?GetSubAnimCurveColor@Animatable@@UEAAKH@Z
	DQ	FLAT:?SubNumToRefNum@BerconNoise@@UEAAHH@Z
	DQ	FLAT:?CanCopyAnim@Animatable@@UEAAHXZ
	DQ	FLAT:?CanMakeUnique@Animatable@@UEAAHXZ
	DQ	FLAT:?NumChildren@Animatable@@UEAAHXZ
	DQ	FLAT:?ChildAnim@Animatable@@UEAAPEAV1@H@Z
	DQ	FLAT:?NodeName@Animatable@@UEAA?AVWStr@@XZ
	DQ	FLAT:?RenderBegin@Animatable@@UEAAHHK@Z
	DQ	FLAT:?RenderEnd@Animatable@@UEAAHH@Z
	DQ	FLAT:?EditTrack@Animatable@@UEAAXXZ
	DQ	FLAT:?NumKeys@Animatable@@UEAAHXZ
	DQ	FLAT:?GetKeyTime@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetKeyIndex@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z
	DQ	FLAT:?CopyKeysFromTime@Animatable@@UEAAXHHK@Z
	DQ	FLAT:?DeleteKeyAtTime@Animatable@@UEAAXH@Z
	DQ	FLAT:?IsKeyAtTime@Animatable@@UEAAHHK@Z
	DQ	FLAT:?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z
	DQ	FLAT:?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z
	DQ	FLAT:?GetTimeRange@Animatable@@UEAA?AVInterval@@K@Z
	DQ	FLAT:?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?DeleteTime@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?ReverseTime@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?ScaleTime@Animatable@@UEAAXVInterval@@M@Z
	DQ	FLAT:?InsertTime@Animatable@@UEAAXHH@Z
	DQ	FLAT:?SupportTimeOperations@Animatable@@UEAAHXZ
	DQ	FLAT:?MapKeys@Animatable@@UEAAXPEAVTimeMap@@K@Z
	DQ	FLAT:?DeleteKeys@Animatable@@UEAAXK@Z
	DQ	FLAT:?DeleteKeyByIndex@Animatable@@UEAAXH@Z
	DQ	FLAT:?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z
	DQ	FLAT:?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z
	DQ	FLAT:?SelectSubCurve@Animatable@@UEAAXHH@Z
	DQ	FLAT:?SelectKeyByIndex@Animatable@@UEAAXHH@Z
	DQ	FLAT:?IsKeySelected@Animatable@@UEAAHH@Z
	DQ	FLAT:?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z
	DQ	FLAT:?GetFlagKeyIndex@Animatable@@UEAAHXZ
	DQ	FLAT:?NumSelKeys@Animatable@@UEAAHXZ
	DQ	FLAT:?CloneSelectedKeys@Animatable@@UEAAXH@Z
	DQ	FLAT:?AddNewKey@Animatable@@UEAAXHK@Z
	DQ	FLAT:?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z
	DQ	FLAT:?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z
	DQ	FLAT:?SelectCurve@Animatable@@UEAAXH@Z
	DQ	FLAT:?IsCurveSelected@Animatable@@UEAAHXZ
	DQ	FLAT:?IsSubCurveSelected@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z
	DQ	FLAT:?SetSelKeyCoords@Animatable@@UEAAXHMK@Z
	DQ	FLAT:?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z
	DQ	FLAT:?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z
	DQ	FLAT:?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z
	DQ	FLAT:?SubAnimSetKeyBufferPresent@Animatable@@UEAAHH@Z
	DQ	FLAT:?SetKeyBufferPresent@Animatable@@UEAAHXZ
	DQ	FLAT:?SubAnimCommitSetKeyBuffer@Animatable@@UEAAXHH@Z
	DQ	FLAT:?CommitSetKeyBuffer@Animatable@@UEAAXH@Z
	DQ	FLAT:?SubAnimRevertSetKeyBuffer@Animatable@@UEAAXH@Z
	DQ	FLAT:?RevertSetKeyBuffer@Animatable@@UEAAXXZ
	DQ	FLAT:?IsAnimated@Animatable@@UEAAHXZ
	DQ	FLAT:?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z
	DQ	FLAT:?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z
	DQ	FLAT:?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z
	DQ	FLAT:?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?GetTrackVSpace@Animatable@@UEAAHH@Z
	DQ	FLAT:?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z
	DQ	FLAT:?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
	DQ	FLAT:?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
	DQ	FLAT:?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z
	DQ	FLAT:?TrackParamsType@Animatable@@UEAAHXZ
	DQ	FLAT:?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z
	DQ	FLAT:?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z
	DQ	FLAT:?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z
	DQ	FLAT:?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z
	DQ	FLAT:?SelectSubAnim@Animatable@@UEAAHH@Z
	DQ	FLAT:?EnumAuxFiles@MtlBase@@UEAAXAEAVAssetEnumCallback@@K@Z
	DQ	FLAT:?FreeAllBitmaps@Animatable@@UEAAXXZ
	DQ	FLAT:?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z
	DQ	FLAT:?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
	DQ	FLAT:?IsRefMaker@ReferenceMaker@@UEAAHXZ
	DQ	FLAT:?MouseCycleCompleted@Animatable@@UEAAXH@Z
	DQ	FLAT:?MouseCycleStarted@Animatable@@UEAAXH@Z
	DQ	FLAT:?NumParamBlocks@BerconNoise@@UEAAHXZ
	DQ	FLAT:?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z
	DQ	FLAT:?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z
	DQ	FLAT:?SvTraverseAnimGraph@Texmap@@UEAA?AVSvGraphNodeReference@@PEAVIGraphObjectManager@@PEAVAnimatable@@HK@Z
	DQ	FLAT:?SvCanInitiateLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvCanConcludeLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvGetName@MtlBase@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@_N@Z
	DQ	FLAT:?SvCanSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@AEBVWStr@@@Z
	DQ	FLAT:?SvCanRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsSelected@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsHighlighted@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvHighlightColor@MtlBase@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetSwatchColor@Animatable@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsInactive@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvLinkChild@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvHandleDoubleClick@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetMultiSelectCallback@MtlBase@@UEAAPEAVMultiSelectCallback@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvCanSelect@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvEditProperties@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetRefTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvCanDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetRelTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvCanDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvHandleRelDoubleClick@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z
	DQ	FLAT:?DeleteAllRefsToMe@ReferenceTarget@@UEAA?AW4RefResult@@XZ
	DQ	FLAT:?CanTransferReference@ReferenceMaker@@UEAAHH@Z
	DQ	FLAT:?NumRefs@BerconNoise@@UEAAHXZ
	DQ	FLAT:?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z
	DQ	FLAT:?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z
	DQ	FLAT:?Save@MtlBase@@UEAA?AW4IOResult@@PEAVISave@@@Z
	DQ	FLAT:?Load@MtlBase@@UEAA?AW4IOResult@@PEAVILoad@@@Z
	DQ	FLAT:?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z
	DQ	FLAT:?RescaleWorldUnits@ReferenceMaker@@UEAAXM@Z
	DQ	FLAT:?NotifyDependents@ReferenceTarget@@UEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAV1@W4NotifyDependentsOption@@@Z
	DQ	FLAT:?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z
	DQ	FLAT:?SaveEnum@ReferenceMaker@@UEAAXAEAVSaveEnumProc@@H@Z
	DQ	FLAT:?SpecifySaveReferences@ReferenceMaker@@UEAA_NAEAVReferenceSaveManager@@@Z
	DQ	FLAT:?DoEnumDependentsImpl@ReferenceTarget@@MEAAHPEAVDependentEnumProc@@@Z
	DQ	FLAT:?IsRefTarget@ReferenceTarget@@UEAAHXZ
	DQ	FLAT:?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
	DQ	FLAT:?AutoDelete@ReferenceTarget@@UEAA?AW4RefResult@@XZ
	DQ	FLAT:?RefAdded@Texmap@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?RefDeleted@ReferenceTarget@@UEAAXXZ
	DQ	FLAT:?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ
	DQ	FLAT:?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DQ	FLAT:?BaseClone@MtlBase@@UEAAXPEAVReferenceTarget@@0AEAVRemapDir@@@Z
	DQ	FLAT:?NotifyForeground@ReferenceTarget@@UEAAXH@Z
	DQ	FLAT:?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z
	DQ	FLAT:?GetFullName@MtlBase@@UEAA?AVWStr@@XZ
	DQ	FLAT:?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z
	DQ	FLAT:?Requirements@MtlBase@@UEAAKH@Z
	DQ	FLAT:?LocalRequirements@BerconNoise@@UEAAKH@Z
	DQ	FLAT:?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z
	DQ	FLAT:?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z
	DQ	FLAT:?IsMultiMtl@MtlBase@@UEAAHXZ
	DQ	FLAT:?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z
	DQ	FLAT:?Reset@BerconNoise@@UEAAXXZ
	DQ	FLAT:?Validity@BerconNoise@@UEAA?AVInterval@@H@Z
	DQ	FLAT:?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DQ	FLAT:?GetPStamp@MtlBase@@UEAAPEAVPStamp@@H@Z
	DQ	FLAT:?CreatePStamp@MtlBase@@UEAAPEAVPStamp@@HH@Z
	DQ	FLAT:?DiscardPStamp@MtlBase@@UEAAXH@Z
	DQ	FLAT:?SupportTexDisplay@BerconNoise@@UEAAHXZ
	DQ	FLAT:?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z
	DQ	FLAT:?ActivateTexDisplay@BerconNoise@@UEAAXH@Z
	DQ	FLAT:?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ
	DQ	FLAT:?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z
	DQ	FLAT:?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z
	DQ	FLAT:?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DQ	FLAT:?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z
	DQ	FLAT:?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DQ	FLAT:?HandleOwnViewPerturb@Texmap@@UEAAHXZ
	DQ	FLAT:?GetVPDisplayDIB@Texmap@@UEAAPEAUtagBITMAPINFO@@HAEAVTexHandleMaker@@AEAVInterval@@HHH@Z
	DQ	FLAT:?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
	DQ	FLAT:?GetTextureTiling@Texmap@@UEAAHXZ
	DQ	FLAT:?GetUVWSource@Texmap@@UEAAHXZ
	DQ	FLAT:?GetMapChannel@Texmap@@UEAAHXZ
	DQ	FLAT:?InitSlotType@Texmap@@UEAAXH@Z
	DQ	FLAT:?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ
	DQ	FLAT:?GetTheXYZGen@BerconNoise@@UEAAPEAVXYZGen@@XZ
	DQ	FLAT:?SetOutputLevel@Texmap@@UEAAXHM@Z
	DQ	FLAT:?IsOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
	DQ	FLAT:?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
	DQ	FLAT:?LoadMapFiles@Texmap@@UEAAHH@Z
	DQ	FLAT:?RenderBitmap@Texmap@@UEAAXHPEAVBitmap@@MH@Z
	DQ	FLAT:?IsHighDynamicRange@Texmap@@UEBAHXZ
CONST	ENDS
;	COMDAT ??_C@_13PHJMHGG@?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_13PHJMHGG@?$AAL?$AA?$AA@ DB 'L', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7BerconXYZDlgProc@@6B@
CONST	SEGMENT
??_7BerconXYZDlgProc@@6B@ DQ FLAT:??_R4BerconXYZDlgProc@@6B@ ; BerconXYZDlgProc::`vftable'
	DQ	FLAT:??_EBerconXYZDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@ DB 'M', 00H
	DB	'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@ DB 'x', 00H
	DB	'y', 00H, 'z', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'n', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@ DB 's', 00H, 'e', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'O', 00H
	DB	'b', 00H, 'j', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7XYZ_Desc@@6B@
CONST	SEGMENT
??_7XYZ_Desc@@6B@ DQ FLAT:??_R4XYZ_Desc@@6B@		; XYZ_Desc::`vftable'
	DQ	FLAT:??_EXYZ_Desc@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?NumInterfaces@BaseInterfaceServer@@UEBAHXZ
	DQ	FLAT:?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z
CONST	ENDS
;	COMDAT ??_7ResourceMakerCallback@@6B@
CONST	SEGMENT
??_7ResourceMakerCallback@@6B@ DQ FLAT:??_R4ResourceMakerCallback@@6B@ ; ResourceMakerCallback::`vftable'
	DQ	FLAT:?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
	DQ	FLAT:?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
	DQ	FLAT:?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z
CONST	ENDS
;	COMDAT _CT??_R0?AVMaxHeapOperators@@@818
xdata$x	SEGMENT
_CT??_R0?AVMaxHeapOperators@@@818 DD 00H
	DD	imagerel ??_R0?AVMaxHeapOperators@@@8
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVMaxHeapOperators@@@8
data$r	SEGMENT
??_R0?AVMaxHeapOperators@@@8 DQ FLAT:??_7type_info@@6B@	; MaxHeapOperators `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVMaxHeapOperators@@', 00H
data$r	ENDS
;	COMDAT ??_7ParamMap2UserDlgProc@@6B@
CONST	SEGMENT
??_7ParamMap2UserDlgProc@@6B@ DQ FLAT:??_R4ParamMap2UserDlgProc@@6B@ ; ParamMap2UserDlgProc::`vftable'
	DQ	FLAT:??_EParamMap2UserDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_R0?AVClassDesc2@@@8
data$r	SEGMENT
??_R0?AVClassDesc2@@@8 DQ FLAT:??_7type_info@@6B@	; ClassDesc2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVClassDesc2@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@
CONST	SEGMENT
??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@ DB 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'S', 00H, 'D', 00H, 'K', 00H, ':', 00H
	DB	':', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, ':', 00H, ':'
	DB	00H, 'T', 00H, 'a', 00H, 'b', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'O', 00H, 'f', 00H, 'R', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7TabOutOfRangeException@Util@MaxSDK@@6B@
CONST	SEGMENT
??_7TabOutOfRangeException@Util@MaxSDK@@6B@ DQ FLAT:??_R4TabOutOfRangeException@Util@MaxSDK@@6B@ ; MaxSDK::Util::TabOutOfRangeException::`vftable'
	DQ	FLAT:??_ETabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
	DQ	FLAT:?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Ewhite@@YAXXZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eblack@@YAXXZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconNoiseDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 022c19H
	DD	01b011aH
	DD	imagerel __GSHandlerCheck
	DD	0c8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z DD imagerel ??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z+34
	DD	00H
	DD	imagerel ??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconNoiseDlgProc@@UEAA@XZ DD imagerel ??1BerconNoiseDlgProc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconNoiseDlgProc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconNoiseDlgProc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconNoiseDlgProc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconNoiseDlgProc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconNoiseDlgProc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconNoiseDlgProc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 011701H
	DD	06217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z DD imagerel ??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z+34
	DD	00H
	DD	imagerel ??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconCurveDlgProcNOISE@@UEAA@XZ DD imagerel ??1BerconCurveDlgProcNOISE@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconCurveDlgProcNOISE@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconCurveDlgProcNOISE@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconCurveDlgProcNOISE@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconCurveDlgProcNOISE@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconCurveDlgProcNOISE@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconCurveDlgProcNOISE@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconMap_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconMap_param_blk@@YAXXZ DD 020701H
	DD	015f0107H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconCurve_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconCurve_param_blk@@YAXXZ DD 020701H
	DD	0210107H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fberconnoise_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eberconnoise_param_blk@@YAXXZ DD 040a01H
	DD	01b9010aH
	DD	060027003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fxyz_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Exyz_blk@@YAXXZ DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconNoiseDesc@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconNoiseDesc@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconNoiseClassDesc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z DD imagerel ?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
	DD	0ffffffffH
	DD	imagerel ?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z+38
	DD	00H
	DD	imagerel ?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z+97
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
	DD	038H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z DD 011611H
	DD	0820dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconNoiseClassDesc@@UEAA@XZ DD imagerel ??1BerconNoiseClassDesc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconNoiseClassDesc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconNoiseClassDesc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconNoiseClassDesc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconNoiseClassDesc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconNoiseClassDesc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconNoiseClassDesc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconNoiseClassDesc@@QEAA@XZ DD imagerel ??0BerconNoiseClassDesc@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BerconNoiseClassDesc@@QEAA@XZ+30
	DD	00H
	DD	imagerel ??0BerconNoiseClassDesc@@QEAA@XZ+45
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconNoiseClassDesc@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconNoiseClassDesc@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconNoiseClassDesc@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconNoiseClassDesc@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconNoiseClassDesc@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconNoiseClassDesc@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconNoise@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconNoise@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@BerconNoise@@UEAAPEAXK@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconNoise@@UEAA@XZ DD imagerel ??1BerconNoise@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1BerconNoise@@UEAA@XZ+68
	DD	00H
	DD	imagerel ??1BerconNoise@@UEAA@XZ+79
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconNoise@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconNoise@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconNoise@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1BerconNoise@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconNoise@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconNoise@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconNoise@@QEAA@XZ DD imagerel ??0BerconNoise@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BerconNoise@@QEAA@XZ+30
	DD	00H
	DD	imagerel ??0BerconNoise@@QEAA@XZ+385
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconNoise@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconNoise@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconNoise@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconNoise@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconNoise@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconNoise@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconNoise@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z DD 011201H
	DD	02212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z DD imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+85
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+87
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+112
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+133
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+158
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+179
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+204
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+225
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+250
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+271
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+296
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+314
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+339
	DD	00H
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+357
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z+388
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
	DD	00H
	DD	00H
	DD	010H
	DD	imagerel $ip2state$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD imagerel ?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z+39
	DD	00H
	DD	imagerel ?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z+98
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	050H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 011711H
	DD	0c20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD 042a19H
	DD	0710118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck
	DD	0378H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD 042a19H
	DD	04f0118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck
	DD	0260H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z DD imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+77
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+79
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+104
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+125
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+150
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+171
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+196
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+217
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+242
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+263
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+288
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+309
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+334
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+355
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+380
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+401
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+426
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+447
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+472
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+493
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+518
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+539
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+564
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+585
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+610
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+631
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+656
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+677
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+702
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+723
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+748
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+769
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+794
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+812
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+837
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+855
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+880
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+898
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z+917
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
	DD	00H
	DD	00H
	DD	028H
	DD	imagerel $ip2state$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LocalRequirements@BerconNoise@@UEAAKH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Validity@BerconNoise@@UEAA?AVInterval@@H@Z DD 012219H
	DD	06213H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Reset@BerconNoise@@UEAAXXZ DD 020c01H
	DD	015010cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z DD 021501H
	DD	0410115H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+174
	DD	00H
	DD	imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+241
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+274
	DD	01H
	DD	imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+341
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+374
	DD	02H
	DD	imagerel ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+441
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	070H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 021f11H
	DD	0110116H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z DD 011201H
	DD	0a212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ActivateTexDisplay@BerconNoise@@UEAAXH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DiscardTexHandle@BerconNoise@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z DD 022719H
	DD	0170115H
	DD	imagerel __GSHandlerCheck
	DD	0a8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z DD 011201H
	DD	06212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnableStuff@BerconNoise@@QEAAXXZ DD 020c01H
	DD	015010cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z DD 011301H
	DD	0c213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z DD 041801H
	DD	0170118H
	DD	060107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconXYZ@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconXYZDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconXYZDlgProc@@UEAA@XZ DD imagerel ??1BerconXYZDlgProc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconXYZDlgProc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconXYZDlgProc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconXYZDlgProc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconXYZDlgProc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconXYZDlgProc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconXYZDlgProc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 022c19H
	DD	015011aH
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z+34
	DD	00H
	DD	imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GXYZ_Desc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1XYZ_Desc@@UEAA@XZ DD imagerel ??1XYZ_Desc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1XYZ_Desc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1XYZ_Desc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1XYZ_Desc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1XYZ_Desc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1XYZ_Desc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1XYZ_Desc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	0ffffffffH
	DD	imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z+5698
	DD	00H
	DD	imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z+5716
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	0e70H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 022711H
	DD	01d1011bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eintvalid@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkTriObjNormalXTCID@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Texmap@@UEAA@XZ DD imagerel ??1Texmap@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Texmap@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Texmap@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Texmap@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Texmap@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Texmap@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Texmap@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyForeground@ReferenceTarget@@UEAAXH@Z DD 010d01H
	DD	0a20dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BypassTrackBar@Animatable@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_4Interval@@QEAAAEAV0@V0@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Interval@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVAColor@@MAEBV0@@Z DD 011401H
	DD	08214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??HAColor@@QEBA?AV0@AEBV0@@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BitMask@BitArray@@AEBA_KH@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UseLocalBits@BitArray@@AEBA_NXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Set@BitArray@@QEAAXH@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearInterfaces@ClassDesc@@UEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NumInterfaces@ClassDesc@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD 020701H
	DD	060067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVPoint3@@AEBV0@M@Z DD 011401H
	DD	06214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVPoint3@@MAEBV0@@Z DD 011401H
	DD	06214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	0ffffffffH
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z+40
	DD	00H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z+55
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD imagerel ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z+40
	DD	00H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z+55
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8Class_ID@@QEBA_NAEBV0@@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 011801H
	DD	06218H
xdata	ENDS
CRT$XCU	SEGMENT
?kTriObjNormalXTCID$initializer$@@3P6AXXZEA DQ FLAT:??__EkTriObjNormalXTCID@@YAXXZ ; kTriObjNormalXTCID$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?intvalid$initializer$@@3P6AXXZEA DQ FLAT:??__Eintvalid@@YAXXZ ; intvalid$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconNoiseDesc$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconNoiseDesc@@YAXXZ ; BerconNoiseDesc$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?xyz_blk$initializer$@@3P6AXXZEA DQ FLAT:??__Exyz_blk@@YAXXZ ; xyz_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?berconnoise_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__Eberconnoise_param_blk@@YAXXZ ; berconnoise_param_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconCurve_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconCurve_param_blk@@YAXXZ ; BerconCurve_param_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconMap_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconMap_param_blk@@YAXXZ ; BerconMap_param_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?black$initializer$@@3P6AXXZEA DQ FLAT:??__Eblack@@YAXXZ ; black$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?white$initializer$@@3P6AXXZEA DQ FLAT:??__Ewhite@@YAXXZ ; white$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ?GetInterface@BerconNoise@@WJA@EAAPEAXK@Z
_TEXT	SEGMENT
?GetInterface@BerconNoise@@WJA@EAAPEAXK@Z PROC		; [thunk]:BerconNoise::GetInterface`adjustor{144}', COMDAT
	sub	rcx, 144				; 00000090H
	jmp	?GetInterface@BerconNoise@@UEAAPEAXK@Z	; BerconNoise::GetInterface
?GetInterface@BerconNoise@@WJA@EAAPEAXK@Z ENDP		; [thunk]:BerconNoise::GetInterface`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_EBerconNoise@@WEA@EAAPEAXI@Z
_TEXT	SEGMENT
??_EBerconNoise@@WEA@EAAPEAXI@Z PROC			; [thunk]:BerconNoise::`vector deleting destructor', COMDAT
	sub	rcx, 64					; 00000040H
	jmp	??_EBerconNoise@@UEAAPEAXI@Z
??_EBerconNoise@@WEA@EAAPEAXI@Z ENDP			; [thunk]:BerconNoise::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__Ewhite@@YAXXZ
text$di	SEGMENT
??__Ewhite@@YAXXZ PROC					; `dynamic initializer for 'white'', COMDAT

; 766  : static AColor white(1.0f,1.0f,1.0f,1.0f);

	sub	rsp, 56					; 00000038H
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?white@@3VAColor@@A
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	add	rsp, 56					; 00000038H
	ret	0
??__Ewhite@@YAXXZ ENDP					; `dynamic initializer for 'white''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__Eblack@@YAXXZ
text$di	SEGMENT
??__Eblack@@YAXXZ PROC					; `dynamic initializer for 'black'', COMDAT

; 765  : static AColor black(0.0f,0.0f,0.0f,0.0f);

	sub	rsp, 56					; 00000038H
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?black@@3VAColor@@A
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	add	rsp, 56					; 00000038H
	ret	0
??__Eblack@@YAXXZ ENDP					; `dynamic initializer for 'black''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconNoiseDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconNoiseDlgProc@@UEAAPEAXI@Z PROC		; BerconNoiseDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconNoiseDlgProc@@UEAA@XZ		; BerconNoiseDlgProc::~BerconNoiseDlgProc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconNoiseDlgProc@@UEAAPEAXI@Z ENDP		; BerconNoiseDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z PROC	; BerconNoiseDlgProc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z ENDP	; BerconNoiseDlgProc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 48
m$ = 56
?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconNoiseDlgProc::SetThing, COMDAT

; 328  : 	void SetThing(ReferenceTarget *m) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 329  : 		berconNoise = (BerconNoise*)m;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 330  : 		berconNoise->EnableStuff();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?EnableStuff@BerconNoise@@QEAAXXZ	; BerconNoise::EnableStuff

; 331  : 	}

	add	rsp, 40					; 00000028H
	ret	0
?SetThing@BerconNoiseDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconNoiseDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ PROC		; BerconNoiseDlgProc::DeleteThis, COMDAT

; 327  : 	void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconNoiseDlgProc@@UEAAXXZ ENDP		; BerconNoiseDlgProc::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwndMap$1 = 48
tv64 = 56
tv258 = 64
tv279 = 72
tv300 = 80
tv321 = 88
tv342 = 96
tv363 = 104
tv384 = 112
tv405 = 120
tv268 = 128
tv289 = 136
tv310 = 144
tv331 = 152
tv352 = 160
tv373 = 168
tv394 = 176
tv415 = 184
curIndex$2 = 192
curIndex$3 = 196
__$ArrayPad$ = 200
this$ = 224
t$ = 232
map$ = 240
hWnd$ = 248
msg$ = 256
wParam$ = 264
lParam$ = 272
?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconNoiseDlgProc::DlgProc, COMDAT

; 334  : INT_PTR BerconNoiseDlgProc::DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam)	{	

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 216				; 000000d8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 335  : 	switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 24
	je	$LN5@DlgProc
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN4@DlgProc
	jmp	$LN2@DlgProc
$LN4@DlgProc:

; 336  : 	case WM_INITDIALOG: {
; 337  : 		// UVW
; 338  : 		HWND hwndMap = GetDlgItem(hWnd, IDC_DIST_UVW);

	mov	edx, 1007				; 000003efH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 339  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_UVW_NORMAL));

	mov	ecx, 139				; 0000008bH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 340  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_UVW_RADIAL));

	mov	ecx, 140				; 0000008cH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 341  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_UVW_SPHERICAL));

	mov	ecx, 141				; 0000008dH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 342  : 
; 343  : 		// Noise type
; 344  : 		hwndMap = GetDlgItem(hWnd, IDC_NOISE_FUNCTION);

	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 345  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_PERLIN2));

	mov	ecx, 225				; 000000e1H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 346  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_PERLIN3));

	mov	ecx, 226				; 000000e2H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 347  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_PERLIN4));

	mov	ecx, 227				; 000000e3H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 348  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_SIMPLEX2));

	mov	ecx, 1066				; 0000042aH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 349  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_SIMPLEX3));

	mov	ecx, 223				; 000000dfH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 350  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_SIMPLEX4));

	mov	ecx, 224				; 000000e0H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 351  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NF_WORLEY));

	mov	ecx, 14
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 352  : 
; 353  : 		// Worley distance
; 354  : 		hwndMap = GetDlgItem(hWnd, IDC_WORLEY_DISTANCE);

	mov	edx, 1004				; 000003ecH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 355  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_W_LIN));

	mov	ecx, 1071				; 0000042fH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 356  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_W_SQU));

	mov	ecx, 1072				; 00000430H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 357  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_W_MAN));

	mov	ecx, 1073				; 00000431H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 358  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_W_CHE));

	mov	ecx, 1074				; 00000432H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 359  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_W_MI5));

	mov	ecx, 27
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 360  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_W_MI4));

	mov	ecx, 28
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 361  : 
; 362  : 		// Fractal type
; 363  : 		hwndMap = GetDlgItem(hWnd, IDC_FRACTAL_TYPE);

	mov	edx, 1005				; 000003edH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 364  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_REGULAR));

	mov	ecx, 16
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 365  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_FRACTAL));

	mov	ecx, 15
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 366  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_TURBULENCE));

	mov	ecx, 17
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 367  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_FBM));

	mov	ecx, 18
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 368  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_FBMTURB));

	mov	ecx, 143				; 0000008fH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 369  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_HETEROTERRAIN));

	mov	ecx, 19
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 370  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_HYBRIDMULTIFRACTAL));

	mov	ecx, 20
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 371  : 		SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_F_RIDGEDMULTIFRACTAL));

	mov	ecx, 21
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 372  : 
; 373  : 		// Set correct dropdown value
; 374  : 		int curIndex;
; 375  : 		map->GetParamBlock()->GetValue(noise_function_type, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv258[rsp], rax
	mov	rax, QWORD PTR tv258[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$2[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rcx, QWORD PTR tv258[rsp]
	call	QWORD PTR [rax+1704]

; 376  : 		SendMessage(GetDlgItem(hWnd, IDC_NOISE_FUNCTION), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$2[rsp]
	mov	QWORD PTR tv268[rsp], rax
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv268[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 377  : 		map->GetParamBlock()->GetValue(worley_distance, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv279[rsp], rax
	mov	rax, QWORD PTR tv279[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$2[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	mov	rcx, QWORD PTR tv279[rsp]
	call	QWORD PTR [rax+1704]

; 378  : 		SendMessage(GetDlgItem(hWnd, IDC_WORLEY_DISTANCE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$2[rsp]
	mov	QWORD PTR tv289[rsp], rax
	mov	edx, 1004				; 000003ecH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv289[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 379  : 		map->GetParamBlock()->GetValue(fractal_type, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv300[rsp], rax
	mov	rax, QWORD PTR tv300[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$2[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv300[rsp]
	call	QWORD PTR [rax+1704]

; 380  : 		SendMessage(GetDlgItem(hWnd, IDC_FRACTAL_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$2[rsp]
	mov	QWORD PTR tv310[rsp], rax
	mov	edx, 1005				; 000003edH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv310[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 381  : 		map->GetParamBlock()->GetValue(uvw_dist, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv321[rsp], rax
	mov	rax, QWORD PTR tv321[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$2[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rcx, QWORD PTR tv321[rsp]
	call	QWORD PTR [rax+1704]

; 382  : 		SendMessage(GetDlgItem(hWnd, IDC_DIST_UVW), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$2[rsp]
	mov	QWORD PTR tv331[rsp], rax
	mov	edx, 1007				; 000003efH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv331[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 383  : 		break;

	jmp	$LN2@DlgProc
$LN5@DlgProc:

; 384  : 	}
; 385  : 	case WM_SHOWWINDOW: {
; 386  : 		// Set correct dropdown value
; 387  : 		int curIndex;
; 388  : 		map->GetParamBlock()->GetValue(noise_function_type, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv342[rsp], rax
	mov	rax, QWORD PTR tv342[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rcx, QWORD PTR tv342[rsp]
	call	QWORD PTR [rax+1704]

; 389  : 		SendMessage(GetDlgItem(hWnd, IDC_NOISE_FUNCTION), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv352[rsp], rax
	mov	edx, 1003				; 000003ebH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv352[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 390  : 		map->GetParamBlock()->GetValue(worley_distance, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv363[rsp], rax
	mov	rax, QWORD PTR tv363[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	mov	rcx, QWORD PTR tv363[rsp]
	call	QWORD PTR [rax+1704]

; 391  : 		SendMessage(GetDlgItem(hWnd, IDC_WORLEY_DISTANCE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv373[rsp], rax
	mov	edx, 1004				; 000003ecH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv373[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 392  : 		map->GetParamBlock()->GetValue(fractal_type, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv384[rsp], rax
	mov	rax, QWORD PTR tv384[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv384[rsp]
	call	QWORD PTR [rax+1704]

; 393  : 		SendMessage(GetDlgItem(hWnd, IDC_FRACTAL_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv394[rsp], rax
	mov	edx, 1005				; 000003edH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv394[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 394  : 		map->GetParamBlock()->GetValue(uvw_dist, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv405[rsp], rax
	mov	rax, QWORD PTR tv405[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rcx, QWORD PTR tv405[rsp]
	call	QWORD PTR [rax+1704]

; 395  : 		SendMessage(GetDlgItem(hWnd, IDC_DIST_UVW), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv415[rsp], rax
	mov	edx, 1007				; 000003efH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv415[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW
$LN2@DlgProc:

; 396  : 		break;
; 397  : 	}
; 398  : 
; 399  : 	}
; 400  : 	return FALSE;

	xor	eax, eax

; 401  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	ret	0
?DlgProc@BerconNoiseDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconNoiseDlgProc::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z PROC	; BerconNoiseDlgProc::BerconNoiseDlgProc, COMDAT

; 325  : 	BerconNoiseDlgProc(BerconNoise *m) {berconNoise = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoiseDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z ENDP	; BerconNoiseDlgProc::BerconNoiseDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA PROC ; `BerconNoiseDlgProc::BerconNoiseDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA ENDP ; `BerconNoiseDlgProc::BerconNoiseDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA PROC ; `BerconNoiseDlgProc::BerconNoiseDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z@4HA ENDP ; `BerconNoiseDlgProc::BerconNoiseDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??1BerconNoiseDlgProc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconNoiseDlgProc@@UEAA@XZ PROC			; BerconNoiseDlgProc::~BerconNoiseDlgProc, COMDAT

; 323  : 	virtual ~BerconNoiseDlgProc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoiseDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconNoiseDlgProc@@UEAA@XZ ENDP			; BerconNoiseDlgProc::~BerconNoiseDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA PROC	; `BerconNoiseDlgProc::~BerconNoiseDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA ENDP	; `BerconNoiseDlgProc::~BerconNoiseDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA PROC	; `BerconNoiseDlgProc::~BerconNoiseDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconNoiseDlgProc@@UEAA@XZ@4HA ENDP	; `BerconNoiseDlgProc::~BerconNoiseDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z PROC		; BerconCurveDlgProcNOISE::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconCurveDlgProcNOISE@@UEAA@XZ	; BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconCurveDlgProcNOISE@@UEAAPEAXI@Z ENDP		; BerconCurveDlgProcNOISE::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z PROC ; BerconCurveDlgProcNOISE::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z ENDP ; BerconCurveDlgProcNOISE::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 48
m$ = 56
?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconCurveDlgProcNOISE::SetThing, COMDAT

; 313  : 		void SetThing(ReferenceTarget *m) { 

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 314  : 			CurveCtrl::disable(berconNoise->curve); // Disable previously used curve

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rax+792]
	call	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z ; CurveCtrl::disable

; 315  : 			berconNoise = (BerconNoise*)m;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 316  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?SetThing@BerconCurveDlgProcNOISE@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconCurveDlgProcNOISE::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ PROC	; BerconCurveDlgProcNOISE::DeleteThis, COMDAT

; 312  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconCurveDlgProcNOISE@@UEAAXXZ ENDP	; BerconCurveDlgProcNOISE::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
tv91 = 32
tv73 = 40
this$ = 64
t$ = 72
map$ = 80
hWnd$ = 88
msg$ = 96
wParam$ = 104
lParam$ = 112
?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconCurveDlgProcNOISE::DlgProc, COMDAT

; 298  : 		INT_PTR DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam) {

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 299  : 			if (berconNoise->curve->GetHWND() != GetDlgItem(hWnd, IDC_CURVE))

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1360]
	mov	QWORD PTR tv73[rsp], rax
	mov	edx, 1008				; 000003f0H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR tv73[rsp]
	cmp	rcx, rax
	je	SHORT $LN4@DlgProc

; 300  : 				CurveCtrl::update(berconNoise->curve, GetDlgItem(hWnd, IDC_CURVE), static_cast<ReferenceMaker*>(berconNoise)); // Force update curve

	mov	edx, 1008				; 000003f0H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rdx+8]
	mov	rdx, rax
	mov	rcx, QWORD PTR [rcx+792]
	call	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z ; CurveCtrl::update
$LN4@DlgProc:

; 301  : 			switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv91[rsp], eax
	cmp	DWORD PTR tv91[rsp], 2
	je	SHORT $LN6@DlgProc
	cmp	DWORD PTR tv91[rsp], 24
	je	SHORT $LN5@DlgProc
	cmp	DWORD PTR tv91[rsp], 272		; 00000110H
	je	SHORT $LN5@DlgProc
	jmp	SHORT $LN2@DlgProc
$LN5@DlgProc:

; 302  : 				case WM_INITDIALOG:
; 303  : 				case WM_SHOWWINDOW:
; 304  : 					CurveCtrl::update(berconNoise->curve, GetDlgItem(hWnd, IDC_CURVE), static_cast<ReferenceMaker*>(berconNoise));					

	mov	edx, 1008				; 000003f0H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rdx+8]
	mov	rdx, rax
	mov	rcx, QWORD PTR [rcx+792]
	call	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z ; CurveCtrl::update

; 305  : 					break;

	jmp	SHORT $LN2@DlgProc
$LN6@DlgProc:

; 306  : 				case WM_DESTROY:
; 307  : 					CurveCtrl::disable(berconNoise->curve);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rax+792]
	call	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z ; CurveCtrl::disable
$LN2@DlgProc:

; 308  : 					break;
; 309  : 			}
; 310  : 			return FALSE;

	xor	eax, eax

; 311  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?DlgProc@BerconCurveDlgProcNOISE@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconCurveDlgProcNOISE::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z PROC ; BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE, COMDAT

; 297  : 		BerconCurveDlgProcNOISE(BerconNoise *m) {berconNoise = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconCurveDlgProcNOISE@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z ENDP ; BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA PROC ; `BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA ENDP ; `BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA PROC ; `BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z@4HA ENDP ; `BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??1BerconCurveDlgProcNOISE@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconCurveDlgProcNOISE@@UEAA@XZ PROC		; BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE, COMDAT

; 295  : 	virtual ~BerconCurveDlgProcNOISE() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconCurveDlgProcNOISE@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconCurveDlgProcNOISE@@UEAA@XZ ENDP		; BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA PROC	; `BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA ENDP	; `BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA PROC	; `BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconCurveDlgProcNOISE@@UEAA@XZ@4HA ENDP	; `BerconCurveDlgProcNOISE::~BerconCurveDlgProcNOISE'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconMap_param_blk@@YAXXZ
text$yd	SEGMENT
??__FBerconMap_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconMap_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconMap_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconMap_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__EBerconMap_param_blk@@YAXXZ
text$di	SEGMENT
??__EBerconMap_param_blk@@YAXXZ PROC			; `dynamic initializer for 'BerconMap_param_blk'', COMDAT

; 290  : );

	sub	rsp, 2808				; 00000af8H

; 270  : static ParamBlockDesc2 BerconMap_param_blk ( BerconMap_params, _T("params"),  0, &BerconNoiseDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	mov	DWORD PTR [rsp+2784], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2776], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2768], 1653		; 00000675H
	mov	DWORD PTR [rsp+2760], 2
	mov	DWORD PTR [rsp+2752], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2744], 1
	mov	DWORD PTR [rsp+2736], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2728], 102		; 00000066H
	mov	QWORD PTR [rsp+2720], 0
	mov	DWORD PTR [rsp+2712], 4
	lea	rax, OFFSET FLAT:$SG211850
	mov	QWORD PTR [rsp+2704], rax
	mov	DWORD PTR [rsp+2696], 27
	mov	DWORD PTR [rsp+2688], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2680], 1046		; 00000416H
	mov	DWORD PTR [rsp+2672], 8
	mov	DWORD PTR [rsp+2664], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2656], 17
	mov	DWORD PTR [rsp+2648], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+2640], 19
	mov	DWORD PTR [rsp+2632], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2624], 86		; 00000056H
	mov	DWORD PTR [rsp+2616], 512		; 00000200H
	mov	DWORD PTR [rsp+2608], 15
	lea	rax, OFFSET FLAT:$SG211851
	mov	QWORD PTR [rsp+2600], rax
	mov	DWORD PTR [rsp+2592], 13
	mov	DWORD PTR [rsp+2584], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2576], 1652		; 00000674H
	mov	DWORD PTR [rsp+2568], 2
	mov	DWORD PTR [rsp+2560], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2552], 1
	mov	DWORD PTR [rsp+2544], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2536], 101		; 00000065H
	mov	QWORD PTR [rsp+2528], 0
	mov	DWORD PTR [rsp+2520], 4
	lea	rax, OFFSET FLAT:$SG211852
	mov	QWORD PTR [rsp+2512], rax
	mov	DWORD PTR [rsp+2504], 26
	mov	DWORD PTR [rsp+2496], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2488], 1045		; 00000415H
	mov	DWORD PTR [rsp+2480], 8
	mov	DWORD PTR [rsp+2472], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2464], 16
	mov	DWORD PTR [rsp+2456], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+2448], 18
	mov	DWORD PTR [rsp+2440], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2432], 85		; 00000055H
	mov	DWORD PTR [rsp+2424], 512		; 00000200H
	mov	DWORD PTR [rsp+2416], 15
	lea	rax, OFFSET FLAT:$SG211853
	mov	QWORD PTR [rsp+2408], rax
	mov	DWORD PTR [rsp+2400], 12
	mov	DWORD PTR [rsp+2392], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2384], 1651		; 00000673H
	mov	DWORD PTR [rsp+2376], 2
	mov	DWORD PTR [rsp+2368], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2360], 1
	mov	DWORD PTR [rsp+2352], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2344], 100		; 00000064H
	mov	QWORD PTR [rsp+2336], 0
	mov	DWORD PTR [rsp+2328], 4
	lea	rax, OFFSET FLAT:$SG211854
	mov	QWORD PTR [rsp+2320], rax
	mov	DWORD PTR [rsp+2312], 25
	mov	DWORD PTR [rsp+2304], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2296], 1044		; 00000414H
	mov	DWORD PTR [rsp+2288], 8
	mov	DWORD PTR [rsp+2280], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2272], 15
	mov	DWORD PTR [rsp+2264], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+2256], 17
	mov	DWORD PTR [rsp+2248], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2240], 84		; 00000054H
	mov	DWORD PTR [rsp+2232], 512		; 00000200H
	mov	DWORD PTR [rsp+2224], 15
	lea	rax, OFFSET FLAT:$SG211855
	mov	QWORD PTR [rsp+2216], rax
	mov	DWORD PTR [rsp+2208], 11
	mov	DWORD PTR [rsp+2200], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2192], 1650		; 00000672H
	mov	DWORD PTR [rsp+2184], 2
	mov	DWORD PTR [rsp+2176], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2168], 1
	mov	DWORD PTR [rsp+2160], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2152], 99		; 00000063H
	mov	QWORD PTR [rsp+2144], 0
	mov	DWORD PTR [rsp+2136], 4
	lea	rax, OFFSET FLAT:$SG211856
	mov	QWORD PTR [rsp+2128], rax
	mov	DWORD PTR [rsp+2120], 24
	mov	DWORD PTR [rsp+2112], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2104], 1043		; 00000413H
	mov	DWORD PTR [rsp+2096], 8
	mov	DWORD PTR [rsp+2088], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2080], 14
	mov	DWORD PTR [rsp+2072], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+2064], 16
	mov	DWORD PTR [rsp+2056], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2048], 83		; 00000053H
	mov	DWORD PTR [rsp+2040], 512		; 00000200H
	mov	DWORD PTR [rsp+2032], 15
	lea	rax, OFFSET FLAT:$SG211857
	mov	QWORD PTR [rsp+2024], rax
	mov	DWORD PTR [rsp+2016], 10
	mov	DWORD PTR [rsp+2008], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2000], 1649		; 00000671H
	mov	DWORD PTR [rsp+1992], 2
	mov	DWORD PTR [rsp+1984], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1976], 1
	mov	DWORD PTR [rsp+1968], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1960], 98		; 00000062H
	mov	QWORD PTR [rsp+1952], 0
	mov	DWORD PTR [rsp+1944], 4
	lea	rax, OFFSET FLAT:$SG211858
	mov	QWORD PTR [rsp+1936], rax
	mov	DWORD PTR [rsp+1928], 23
	mov	DWORD PTR [rsp+1920], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1912], 1042		; 00000412H
	mov	DWORD PTR [rsp+1904], 8
	mov	DWORD PTR [rsp+1896], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1888], 13
	mov	DWORD PTR [rsp+1880], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+1872], 15
	mov	DWORD PTR [rsp+1864], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+1856], 82		; 00000052H
	mov	DWORD PTR [rsp+1848], 512		; 00000200H
	mov	DWORD PTR [rsp+1840], 15
	lea	rax, OFFSET FLAT:$SG211859
	mov	QWORD PTR [rsp+1832], rax
	mov	DWORD PTR [rsp+1824], 9
	mov	DWORD PTR [rsp+1816], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1808], 1648		; 00000670H
	mov	DWORD PTR [rsp+1800], 2
	mov	DWORD PTR [rsp+1792], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1784], 1
	mov	DWORD PTR [rsp+1776], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1768], 97		; 00000061H
	mov	QWORD PTR [rsp+1760], 0
	mov	DWORD PTR [rsp+1752], 4
	lea	rax, OFFSET FLAT:$SG211860
	mov	QWORD PTR [rsp+1744], rax
	mov	DWORD PTR [rsp+1736], 22
	mov	DWORD PTR [rsp+1728], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1720], 1041		; 00000411H
	mov	DWORD PTR [rsp+1712], 8
	mov	DWORD PTR [rsp+1704], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1696], 12
	mov	DWORD PTR [rsp+1688], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+1680], 14
	mov	DWORD PTR [rsp+1672], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+1664], 81		; 00000051H
	mov	DWORD PTR [rsp+1656], 512		; 00000200H
	mov	DWORD PTR [rsp+1648], 15
	lea	rax, OFFSET FLAT:$SG211861
	mov	QWORD PTR [rsp+1640], rax
	mov	DWORD PTR [rsp+1632], 8
	mov	DWORD PTR [rsp+1624], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1616], 1647		; 0000066fH
	mov	DWORD PTR [rsp+1608], 2
	mov	DWORD PTR [rsp+1600], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1592], 1
	mov	DWORD PTR [rsp+1584], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1576], 96		; 00000060H
	mov	QWORD PTR [rsp+1568], 0
	mov	DWORD PTR [rsp+1560], 4
	lea	rax, OFFSET FLAT:$SG211862
	mov	QWORD PTR [rsp+1552], rax
	mov	DWORD PTR [rsp+1544], 21
	mov	DWORD PTR [rsp+1536], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1528], 1040		; 00000410H
	mov	DWORD PTR [rsp+1520], 8
	mov	DWORD PTR [rsp+1512], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1504], 11
	mov	DWORD PTR [rsp+1496], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+1488], 13
	mov	DWORD PTR [rsp+1480], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+1472], 80		; 00000050H
	mov	DWORD PTR [rsp+1464], 512		; 00000200H
	mov	DWORD PTR [rsp+1456], 15
	lea	rax, OFFSET FLAT:$SG211863
	mov	QWORD PTR [rsp+1448], rax
	mov	DWORD PTR [rsp+1440], 7
	mov	DWORD PTR [rsp+1432], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1424], 1646		; 0000066eH
	mov	DWORD PTR [rsp+1416], 2
	mov	DWORD PTR [rsp+1408], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1400], 1
	mov	DWORD PTR [rsp+1392], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1384], 95		; 0000005fH
	mov	QWORD PTR [rsp+1376], 0
	mov	DWORD PTR [rsp+1368], 4
	lea	rax, OFFSET FLAT:$SG211864
	mov	QWORD PTR [rsp+1360], rax
	mov	DWORD PTR [rsp+1352], 20
	mov	DWORD PTR [rsp+1344], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1336], 1039		; 0000040fH
	mov	DWORD PTR [rsp+1328], 8
	mov	DWORD PTR [rsp+1320], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1312], 10
	mov	DWORD PTR [rsp+1304], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+1296], 12
	mov	DWORD PTR [rsp+1288], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+1280], 79		; 0000004fH
	mov	DWORD PTR [rsp+1272], 512		; 00000200H
	mov	DWORD PTR [rsp+1264], 15
	lea	rax, OFFSET FLAT:$SG211865
	mov	QWORD PTR [rsp+1256], rax
	mov	DWORD PTR [rsp+1248], 6
	mov	DWORD PTR [rsp+1240], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1232], 1645		; 0000066dH
	mov	DWORD PTR [rsp+1224], 2
	mov	DWORD PTR [rsp+1216], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1208], 1
	mov	DWORD PTR [rsp+1200], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1192], 94		; 0000005eH
	mov	QWORD PTR [rsp+1184], 0
	mov	DWORD PTR [rsp+1176], 4
	lea	rax, OFFSET FLAT:$SG211866
	mov	QWORD PTR [rsp+1168], rax
	mov	DWORD PTR [rsp+1160], 19
	mov	DWORD PTR [rsp+1152], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1144], 1038		; 0000040eH
	mov	DWORD PTR [rsp+1136], 8
	mov	DWORD PTR [rsp+1128], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1120], 9
	mov	DWORD PTR [rsp+1112], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+1104], 11
	mov	DWORD PTR [rsp+1096], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+1088], 78		; 0000004eH
	mov	DWORD PTR [rsp+1080], 512		; 00000200H
	mov	DWORD PTR [rsp+1072], 15
	lea	rax, OFFSET FLAT:$SG211867
	mov	QWORD PTR [rsp+1064], rax
	mov	DWORD PTR [rsp+1056], 5
	mov	DWORD PTR [rsp+1048], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1040], 1643		; 0000066bH
	mov	DWORD PTR [rsp+1032], 2
	mov	DWORD PTR [rsp+1024], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1016], 1
	mov	DWORD PTR [rsp+1008], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1000], 93		; 0000005dH
	mov	QWORD PTR [rsp+992], 0
	mov	DWORD PTR [rsp+984], 4
	lea	rax, OFFSET FLAT:$SG211868
	mov	QWORD PTR [rsp+976], rax
	mov	DWORD PTR [rsp+968], 18
	mov	DWORD PTR [rsp+960], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+952], 1037		; 0000040dH
	mov	DWORD PTR [rsp+944], 8
	mov	DWORD PTR [rsp+936], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+928], 8
	mov	DWORD PTR [rsp+920], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+912], 10
	mov	DWORD PTR [rsp+904], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+896], 77			; 0000004dH
	mov	DWORD PTR [rsp+888], 512		; 00000200H
	mov	DWORD PTR [rsp+880], 15
	lea	rax, OFFSET FLAT:$SG211869
	mov	QWORD PTR [rsp+872], rax
	mov	DWORD PTR [rsp+864], 4
	mov	DWORD PTR [rsp+856], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+848], 1642		; 0000066aH
	mov	DWORD PTR [rsp+840], 2
	mov	DWORD PTR [rsp+832], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+824], 1
	mov	DWORD PTR [rsp+816], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+808], 92			; 0000005cH
	mov	QWORD PTR [rsp+800], 0
	mov	DWORD PTR [rsp+792], 4
	lea	rax, OFFSET FLAT:$SG211870
	mov	QWORD PTR [rsp+784], rax
	mov	DWORD PTR [rsp+776], 17
	mov	DWORD PTR [rsp+768], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+760], 1036		; 0000040cH
	mov	DWORD PTR [rsp+752], 8
	mov	DWORD PTR [rsp+744], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+736], 7
	mov	DWORD PTR [rsp+728], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+720], 9
	mov	DWORD PTR [rsp+712], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+704], 76			; 0000004cH
	mov	DWORD PTR [rsp+696], 512		; 00000200H
	mov	DWORD PTR [rsp+688], 15
	lea	rax, OFFSET FLAT:$SG211871
	mov	QWORD PTR [rsp+680], rax
	mov	DWORD PTR [rsp+672], 3
	mov	DWORD PTR [rsp+664], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+656], 1644		; 0000066cH
	mov	DWORD PTR [rsp+648], 2
	mov	DWORD PTR [rsp+640], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+632], 1
	mov	DWORD PTR [rsp+624], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+616], 91			; 0000005bH
	mov	QWORD PTR [rsp+608], 0
	mov	DWORD PTR [rsp+600], 4
	lea	rax, OFFSET FLAT:$SG211872
	mov	QWORD PTR [rsp+592], rax
	mov	DWORD PTR [rsp+584], 16
	mov	DWORD PTR [rsp+576], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+568], 1035		; 0000040bH
	mov	DWORD PTR [rsp+560], 8
	mov	DWORD PTR [rsp+552], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+544], 6
	mov	DWORD PTR [rsp+536], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+528], 8
	mov	DWORD PTR [rsp+520], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+512], 75			; 0000004bH
	mov	DWORD PTR [rsp+504], 512		; 00000200H
	mov	DWORD PTR [rsp+496], 15
	lea	rax, OFFSET FLAT:$SG211873
	mov	QWORD PTR [rsp+488], rax
	mov	DWORD PTR [rsp+480], 2
	mov	DWORD PTR [rsp+472], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+464], 1641		; 00000669H
	mov	DWORD PTR [rsp+456], 2
	mov	DWORD PTR [rsp+448], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+440], 1
	mov	DWORD PTR [rsp+432], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+424], 90			; 0000005aH
	mov	QWORD PTR [rsp+416], 0
	mov	DWORD PTR [rsp+408], 4
	lea	rax, OFFSET FLAT:$SG211874
	mov	QWORD PTR [rsp+400], rax
	mov	DWORD PTR [rsp+392], 15
	mov	DWORD PTR [rsp+384], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+376], 1034		; 0000040aH
	mov	DWORD PTR [rsp+368], 8
	mov	DWORD PTR [rsp+360], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+352], 5
	mov	DWORD PTR [rsp+344], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+336], 7
	mov	DWORD PTR [rsp+328], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+320], 74			; 0000004aH
	mov	DWORD PTR [rsp+312], 512		; 00000200H
	mov	DWORD PTR [rsp+304], 15
	lea	rax, OFFSET FLAT:$SG211875
	mov	QWORD PTR [rsp+296], rax
	mov	DWORD PTR [rsp+288], 1
	mov	DWORD PTR [rsp+280], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+272], 1640		; 00000668H
	mov	DWORD PTR [rsp+264], 2
	mov	DWORD PTR [rsp+256], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+248], 1
	mov	DWORD PTR [rsp+240], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+232], 89			; 00000059H
	mov	QWORD PTR [rsp+224], 0
	mov	DWORD PTR [rsp+216], 4
	lea	rax, OFFSET FLAT:$SG211876
	mov	QWORD PTR [rsp+208], rax
	mov	DWORD PTR [rsp+200], 14
	mov	DWORD PTR [rsp+192], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+184], 1033		; 00000409H
	mov	DWORD PTR [rsp+176], 8
	mov	DWORD PTR [rsp+168], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+160], 4
	mov	DWORD PTR [rsp+152], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+144], 6
	mov	DWORD PTR [rsp+136], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+128], 73			; 00000049H
	mov	DWORD PTR [rsp+120], 512		; 00000200H
	mov	DWORD PTR [rsp+112], 15
	lea	rax, OFFSET FLAT:$SG211877
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	DWORD PTR [rsp+80], 1
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 72			; 00000048H
	mov	DWORD PTR [rsp+56], 108			; 0000006cH
	mov	DWORD PTR [rsp+48], 23
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG211878
	mov	edx, 3
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__FBerconMap_param_blk@@YAXXZ ; `dynamic atexit destructor for 'BerconMap_param_blk''
	call	atexit
	add	rsp, 2808				; 00000af8H
	ret	0
??__EBerconMap_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'BerconMap_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconCurve_param_blk@@YAXXZ
text$yd	SEGMENT
??__FBerconCurve_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconCurve_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconCurve_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconCurve_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__EBerconCurve_param_blk@@YAXXZ
text$di	SEGMENT
??__EBerconCurve_param_blk@@YAXXZ PROC			; `dynamic initializer for 'BerconCurve_param_blk'', COMDAT

; 263  : );

	sub	rsp, 264				; 00000108H

; 252  : static ParamBlockDesc2 BerconCurve_param_blk ( BerconCurve_params, _T("params"),  0, &BerconNoiseDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	mov	DWORD PTR [rsp+248], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+240], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+232], 22
	mov	DWORD PTR [rsp+224], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+216], 51			; 00000033H
	mov	DWORD PTR [rsp+208], 512		; 00000200H
	mov	DWORD PTR [rsp+200], 18
	lea	rax, OFFSET FLAT:$SG211812
	mov	QWORD PTR [rsp+192], rax
	mov	DWORD PTR [rsp+184], 1
	mov	DWORD PTR [rsp+176], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+168], 1032		; 00000408H
	mov	DWORD PTR [rsp+160], 2
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+144], 0
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+128], 1067		; 0000042bH
	mov	QWORD PTR [rsp+120], 0
	mov	DWORD PTR [rsp+112], 4
	lea	rax, OFFSET FLAT:$SG211813
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	DWORD PTR [rsp+80], 1
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 67			; 00000043H
	mov	DWORD PTR [rsp+56], 104			; 00000068H
	mov	DWORD PTR [rsp+48], 21
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG211814
	mov	edx, 2
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__FBerconCurve_param_blk@@YAXXZ ; `dynamic atexit destructor for 'BerconCurve_param_blk''
	call	atexit
	add	rsp, 264				; 00000108H
	ret	0
??__EBerconCurve_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'BerconCurve_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Fberconnoise_param_blk@@YAXXZ
text$yd	SEGMENT
??__Fberconnoise_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'berconnoise_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fberconnoise_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'berconnoise_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__Eberconnoise_param_blk@@YAXXZ
text$di	SEGMENT
$T1 = 3456
$T2 = 3472
$T3 = 3488
$T4 = 3500
??__Eberconnoise_param_blk@@YAXXZ PROC			; `dynamic initializer for 'berconnoise_param_blk'', COMDAT

; 248  : );

	push	rsi
	push	rdi
	sub	rsp, 3528				; 00000dc8H

; 99   : static ParamBlockDesc2 berconnoise_param_blk ( berconnoise_params, _T("params"),  0, &BerconNoiseDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	movsd	xmm3, QWORD PTR __real@3ff0000000000000
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0Color@@QEAA@NNN@Z			; Color::Color
	lea	rcx, QWORD PTR $T1[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0Color@@QEAA@HHH@Z			; Color::Color
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	DWORD PTR [rsp+3440], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3432], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3424], 20
	mov	DWORD PTR [rsp+3416], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+3408], 8
	mov	DWORD PTR [rsp+3400], 512		; 00000200H
	mov	DWORD PTR [rsp+3392], 18
	lea	rax, OFFSET FLAT:$SG211770
	mov	QWORD PTR [rsp+3384], rax
	mov	DWORD PTR [rsp+3376], 28
	mov	DWORD PTR [rsp+3368], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+3360], 0
	mov	DWORD PTR [rsp+3352], 1007		; 000003efH
	mov	DWORD PTR [rsp+3344], 13
	mov	DWORD PTR [rsp+3336], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3328], 1
	mov	DWORD PTR [rsp+3320], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3312], 138		; 0000008aH
	mov	QWORD PTR [rsp+3304], 0
	mov	DWORD PTR [rsp+3296], 1
	lea	rax, OFFSET FLAT:$SG211771
	mov	QWORD PTR [rsp+3288], rax
	mov	DWORD PTR [rsp+3280], 12
	mov	DWORD PTR [rsp+3272], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3264], 1643		; 0000066bH
	mov	DWORD PTR [rsp+3256], 2
	mov	DWORD PTR [rsp+3248], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+3240], 0
	mov	DWORD PTR [rsp+3232], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3224], 39		; 00000027H
	mov	QWORD PTR [rsp+3216], 0
	mov	DWORD PTR [rsp+3208], 4
	lea	rax, OFFSET FLAT:$SG211772
	mov	QWORD PTR [rsp+3200], rax
	mov	DWORD PTR [rsp+3192], 10
	mov	DWORD PTR [rsp+3184], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3176], xmm0
	mov	DWORD PTR [rsp+3168], 1064		; 00000428H
	mov	DWORD PTR [rsp+3160], 1063		; 00000427H
	mov	DWORD PTR [rsp+3152], 1
	mov	QWORD PTR [rsp+3144], 0
	mov	DWORD PTR [rsp+3136], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+3128], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3120], xmm0
	mov	DWORD PTR [rsp+3112], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3fb99999a0000000
	movsd	QWORD PTR [rsp+3104], xmm0
	mov	DWORD PTR [rsp+3096], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3088], 12
	mov	DWORD PTR [rsp+3080], 1
	mov	QWORD PTR [rsp+3072], 0
	lea	rax, OFFSET FLAT:$SG211773
	mov	QWORD PTR [rsp+3064], rax
	mov	DWORD PTR [rsp+3056], 11
	mov	DWORD PTR [rsp+3048], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3040], 1036		; 0000040cH
	mov	DWORD PTR [rsp+3032], 8
	mov	DWORD PTR [rsp+3024], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3016], 3
	mov	DWORD PTR [rsp+3008], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+3000], 5
	mov	DWORD PTR [rsp+2992], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2984], 38		; 00000026H
	mov	DWORD PTR [rsp+2976], 512		; 00000200H
	mov	DWORD PTR [rsp+2968], 15
	lea	rax, OFFSET FLAT:$SG211774
	mov	QWORD PTR [rsp+2960], rax
	mov	DWORD PTR [rsp+2952], 9
	mov	DWORD PTR [rsp+2944], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2936], 1053		; 0000041dH
	mov	DWORD PTR [rsp+2928], 8
	mov	DWORD PTR [rsp+2920], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2912], 2
	mov	DWORD PTR [rsp+2904], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+2896], 4
	mov	DWORD PTR [rsp+2888], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2880], 13
	mov	DWORD PTR [rsp+2872], 512		; 00000200H
	mov	DWORD PTR [rsp+2864], 15
	lea	rax, OFFSET FLAT:$SG211775
	mov	QWORD PTR [rsp+2856], rax
	mov	DWORD PTR [rsp+2848], 8
	mov	DWORD PTR [rsp+2840], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2832], xmm0
	mov	DWORD PTR [rsp+2824], 1515		; 000005ebH
	mov	DWORD PTR [rsp+2816], 1514		; 000005eaH
	mov	DWORD PTR [rsp+2808], 1
	mov	QWORD PTR [rsp+2800], 0
	mov	DWORD PTR [rsp+2792], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2784], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2776], xmm0
	mov	DWORD PTR [rsp+2768], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2760], xmm0
	mov	DWORD PTR [rsp+2752], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2744], 24
	mov	DWORD PTR [rsp+2736], 1
	mov	QWORD PTR [rsp+2728], 0
	lea	rax, OFFSET FLAT:$SG211776
	mov	QWORD PTR [rsp+2720], rax
	mov	DWORD PTR [rsp+2712], 4
	mov	DWORD PTR [rsp+2704], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2696], xmm0
	mov	DWORD PTR [rsp+2688], 1517		; 000005edH
	mov	DWORD PTR [rsp+2680], 1516		; 000005ecH
	mov	DWORD PTR [rsp+2672], 1
	mov	QWORD PTR [rsp+2664], 0
	mov	DWORD PTR [rsp+2656], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2648], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2640], xmm0
	mov	DWORD PTR [rsp+2632], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2624], xmm0
	mov	DWORD PTR [rsp+2616], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2608], 26
	mov	DWORD PTR [rsp+2600], 1
	mov	QWORD PTR [rsp+2592], 0
	lea	rax, OFFSET FLAT:$SG211777
	mov	QWORD PTR [rsp+2584], rax
	mov	DWORD PTR [rsp+2576], 3
	mov	DWORD PTR [rsp+2568], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2560], xmm0
	mov	DWORD PTR [rsp+2552], 1511		; 000005e7H
	mov	DWORD PTR [rsp+2544], 1510		; 000005e6H
	mov	DWORD PTR [rsp+2536], 1
	mov	QWORD PTR [rsp+2528], 0
	mov	DWORD PTR [rsp+2520], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2512], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2504], xmm0
	mov	DWORD PTR [rsp+2496], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2488], xmm0
	mov	DWORD PTR [rsp+2480], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2472], 23
	mov	DWORD PTR [rsp+2464], 1
	mov	QWORD PTR [rsp+2456], 0
	lea	rax, OFFSET FLAT:$SG211778
	mov	QWORD PTR [rsp+2448], rax
	mov	DWORD PTR [rsp+2440], 2
	mov	DWORD PTR [rsp+2432], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2424], xmm0
	mov	DWORD PTR [rsp+2416], 1513		; 000005e9H
	mov	DWORD PTR [rsp+2408], 1512		; 000005e8H
	mov	DWORD PTR [rsp+2400], 1
	mov	QWORD PTR [rsp+2392], 0
	mov	DWORD PTR [rsp+2384], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2376], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2368], xmm0
	mov	DWORD PTR [rsp+2360], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2352], xmm0
	mov	DWORD PTR [rsp+2344], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2336], 22
	mov	DWORD PTR [rsp+2328], 1
	mov	QWORD PTR [rsp+2320], 0
	lea	rax, OFFSET FLAT:$SG211779
	mov	QWORD PTR [rsp+2312], rax
	mov	DWORD PTR [rsp+2304], 1
	mov	DWORD PTR [rsp+2296], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2288], xmm0
	mov	DWORD PTR [rsp+2280], 1058		; 00000422H
	mov	DWORD PTR [rsp+2272], 1057		; 00000421H
	mov	DWORD PTR [rsp+2264], 1
	mov	QWORD PTR [rsp+2256], 0
	mov	DWORD PTR [rsp+2248], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4034000000000000
	movsd	QWORD PTR [rsp+2240], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+2232], xmm0
	mov	DWORD PTR [rsp+2224], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@4008000000000000
	movsd	QWORD PTR [rsp+2216], xmm0
	mov	DWORD PTR [rsp+2208], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2200], 1059		; 00000423H
	mov	DWORD PTR [rsp+2192], 1
	mov	QWORD PTR [rsp+2184], 0
	lea	rax, OFFSET FLAT:$SG211780
	mov	QWORD PTR [rsp+2176], rax
	mov	DWORD PTR [rsp+2168], 5
	mov	DWORD PTR [rsp+2160], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2152], 0
	mov	DWORD PTR [rsp+2144], 1005		; 000003edH
	mov	DWORD PTR [rsp+2136], 13
	mov	DWORD PTR [rsp+2128], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2120], 0
	mov	DWORD PTR [rsp+2112], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2104], 1069		; 0000042dH
	mov	QWORD PTR [rsp+2096], 0
	mov	DWORD PTR [rsp+2088], 1
	lea	rax, OFFSET FLAT:$SG211781
	mov	QWORD PTR [rsp+2080], rax
	mov	QWORD PTR [rsp+2072], 0
	mov	DWORD PTR [rsp+2064], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2056], xmm0
	mov	DWORD PTR [rsp+2048], 1060		; 00000424H
	mov	DWORD PTR [rsp+2040], 1059		; 00000423H
	mov	DWORD PTR [rsp+2032], 1
	mov	QWORD PTR [rsp+2024], 0
	mov	DWORD PTR [rsp+2016], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+2008], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2000], xmm0
	mov	DWORD PTR [rsp+1992], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@4008000000000000
	movsd	QWORD PTR [rsp+1984], xmm0
	mov	DWORD PTR [rsp+1976], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1968], 1070		; 0000042eH
	mov	DWORD PTR [rsp+1960], 1
	mov	QWORD PTR [rsp+1952], 0
	lea	rax, OFFSET FLAT:$SG211782
	mov	QWORD PTR [rsp+1944], rax
	mov	DWORD PTR [rsp+1936], 15
	mov	DWORD PTR [rsp+1928], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1920], xmm0
	mov	DWORD PTR [rsp+1912], 1072		; 00000430H
	mov	DWORD PTR [rsp+1904], 1071		; 0000042fH
	mov	DWORD PTR [rsp+1896], 1
	mov	QWORD PTR [rsp+1888], 0
	mov	DWORD PTR [rsp+1880], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+1872], xmm0
	movsd	xmm0, QWORD PTR __real@c08f400000000000
	movsd	QWORD PTR [rsp+1864], xmm0
	mov	DWORD PTR [rsp+1856], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1848], xmm0
	mov	DWORD PTR [rsp+1840], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1832], 120		; 00000078H
	mov	DWORD PTR [rsp+1824], 1
	mov	QWORD PTR [rsp+1816], 0
	lea	rax, OFFSET FLAT:$SG211783
	mov	QWORD PTR [rsp+1808], rax
	mov	DWORD PTR [rsp+1800], 19
	mov	DWORD PTR [rsp+1792], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1784], xmm0
	mov	DWORD PTR [rsp+1776], 1070		; 0000042eH
	mov	DWORD PTR [rsp+1768], 1069		; 0000042dH
	mov	DWORD PTR [rsp+1760], 1
	mov	QWORD PTR [rsp+1752], 0
	mov	DWORD PTR [rsp+1744], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+1736], xmm0
	movsd	xmm0, QWORD PTR __real@c08f400000000000
	movsd	QWORD PTR [rsp+1728], xmm0
	mov	DWORD PTR [rsp+1720], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1712], xmm0
	mov	DWORD PTR [rsp+1704], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1696], 119		; 00000077H
	mov	DWORD PTR [rsp+1688], 1
	mov	QWORD PTR [rsp+1680], 0
	lea	rax, OFFSET FLAT:$SG211784
	mov	QWORD PTR [rsp+1672], rax
	mov	DWORD PTR [rsp+1664], 18
	mov	DWORD PTR [rsp+1656], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1648], xmm0
	mov	DWORD PTR [rsp+1640], 1068		; 0000042cH
	mov	DWORD PTR [rsp+1632], 1067		; 0000042bH
	mov	DWORD PTR [rsp+1624], 1
	mov	QWORD PTR [rsp+1616], 0
	mov	DWORD PTR [rsp+1608], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+1600], xmm0
	movsd	xmm0, QWORD PTR __real@c08f400000000000
	movsd	QWORD PTR [rsp+1592], xmm0
	mov	DWORD PTR [rsp+1584], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1576], xmm0
	mov	DWORD PTR [rsp+1568], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1560], 118		; 00000076H
	mov	DWORD PTR [rsp+1552], 1
	mov	QWORD PTR [rsp+1544], 0
	lea	rax, OFFSET FLAT:$SG211785
	mov	QWORD PTR [rsp+1536], rax
	mov	DWORD PTR [rsp+1528], 17
	mov	DWORD PTR [rsp+1520], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1512], xmm0
	mov	DWORD PTR [rsp+1504], 1066		; 0000042aH
	mov	DWORD PTR [rsp+1496], 1065		; 00000429H
	mov	DWORD PTR [rsp+1488], 1
	mov	QWORD PTR [rsp+1480], 0
	mov	DWORD PTR [rsp+1472], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+1464], xmm0
	movsd	xmm0, QWORD PTR __real@c08f400000000000
	movsd	QWORD PTR [rsp+1456], xmm0
	mov	DWORD PTR [rsp+1448], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+1440], xmm0
	mov	DWORD PTR [rsp+1432], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1424], 117		; 00000075H
	mov	DWORD PTR [rsp+1416], 1
	mov	QWORD PTR [rsp+1408], 0
	lea	rax, OFFSET FLAT:$SG211786
	mov	QWORD PTR [rsp+1400], rax
	mov	DWORD PTR [rsp+1392], 16
	mov	DWORD PTR [rsp+1384], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1376], 0
	mov	DWORD PTR [rsp+1368], 1004		; 000003ecH
	mov	DWORD PTR [rsp+1360], 13
	mov	DWORD PTR [rsp+1352], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+1344], 0
	mov	DWORD PTR [rsp+1336], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1328], 1068		; 0000042cH
	mov	QWORD PTR [rsp+1320], 0
	mov	DWORD PTR [rsp+1312], 1
	lea	rax, OFFSET FLAT:$SG211787
	mov	QWORD PTR [rsp+1304], rax
	mov	DWORD PTR [rsp+1296], 14
	mov	DWORD PTR [rsp+1288], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1280], 0
	mov	DWORD PTR [rsp+1272], 1003		; 000003ebH
	mov	DWORD PTR [rsp+1264], 13
	mov	DWORD PTR [rsp+1256], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1248], 1
	mov	DWORD PTR [rsp+1240], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1232], 1063		; 00000427H
	mov	QWORD PTR [rsp+1224], 0
	mov	DWORD PTR [rsp+1216], 1
	lea	rax, OFFSET FLAT:$SG211788
	mov	QWORD PTR [rsp+1208], rax
	mov	DWORD PTR [rsp+1200], 13
	mov	DWORD PTR [rsp+1192], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1184], xmm0
	mov	DWORD PTR [rsp+1176], 1056		; 00000420H
	mov	DWORD PTR [rsp+1168], 1055		; 0000041fH
	mov	DWORD PTR [rsp+1160], 1
	mov	QWORD PTR [rsp+1152], 0
	mov	DWORD PTR [rsp+1144], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+1136], xmm0
	movsd	xmm0, QWORD PTR __real@c08f400000000000
	movsd	QWORD PTR [rsp+1128], xmm0
	mov	DWORD PTR [rsp+1120], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1112], xmm0
	mov	DWORD PTR [rsp+1104], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1096], 1058		; 00000422H
	mov	DWORD PTR [rsp+1088], 1
	mov	QWORD PTR [rsp+1080], 0
	lea	rax, OFFSET FLAT:$SG211789
	mov	QWORD PTR [rsp+1072], rax
	mov	DWORD PTR [rsp+1064], 27
	mov	DWORD PTR [rsp+1056], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1048], xmm0
	mov	DWORD PTR [rsp+1040], 1509		; 000005e5H
	mov	DWORD PTR [rsp+1032], 1508		; 000005e4H
	mov	DWORD PTR [rsp+1024], 1
	mov	QWORD PTR [rsp+1016], 0
	mov	DWORD PTR [rsp+1008], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+1000], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+992], xmm0
	mov	DWORD PTR [rsp+984], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+976], xmm0
	mov	DWORD PTR [rsp+968], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+960], 1061		; 00000425H
	mov	DWORD PTR [rsp+952], 1
	mov	QWORD PTR [rsp+944], 0
	lea	rax, OFFSET FLAT:$SG211790
	mov	QWORD PTR [rsp+936], rax
	mov	DWORD PTR [rsp+928], 7
	mov	DWORD PTR [rsp+920], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+912], xmm0
	mov	DWORD PTR [rsp+904], 1507		; 000005e3H
	mov	DWORD PTR [rsp+896], 1506		; 000005e2H
	mov	DWORD PTR [rsp+888], 1
	mov	QWORD PTR [rsp+880], 0
	mov	DWORD PTR [rsp+872], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+864], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+856], xmm0
	mov	DWORD PTR [rsp+848], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+840], xmm0
	mov	DWORD PTR [rsp+832], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+824], 1060		; 00000424H
	mov	DWORD PTR [rsp+816], 1
	mov	QWORD PTR [rsp+808], 0
	lea	rax, OFFSET FLAT:$SG211791
	mov	QWORD PTR [rsp+800], rax
	mov	DWORD PTR [rsp+792], 6
	mov	DWORD PTR [rsp+784], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+776], xmm0
	mov	DWORD PTR [rsp+768], 1049		; 00000419H
	mov	DWORD PTR [rsp+760], 1050		; 0000041aH
	mov	DWORD PTR [rsp+752], 1
	mov	QWORD PTR [rsp+744], 0
	mov	DWORD PTR [rsp+736], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+728], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+720], xmm0
	mov	DWORD PTR [rsp+712], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@4039000000000000
	movsd	QWORD PTR [rsp+704], xmm0
	mov	DWORD PTR [rsp+696], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+688], 1057		; 00000421H
	mov	DWORD PTR [rsp+680], 1
	mov	QWORD PTR [rsp+672], 0
	lea	rax, OFFSET FLAT:$SG211792
	mov	QWORD PTR [rsp+664], rax
	mov	DWORD PTR [rsp+656], 26
	mov	DWORD PTR [rsp+648], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+640], 1641		; 00000669H
	mov	DWORD PTR [rsp+632], 2
	mov	DWORD PTR [rsp+624], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+616], 1
	mov	DWORD PTR [rsp+608], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+600], 1056		; 00000420H
	mov	QWORD PTR [rsp+592], 0
	mov	DWORD PTR [rsp+584], 4
	lea	rax, OFFSET FLAT:$SG211793
	mov	QWORD PTR [rsp+576], rax
	mov	DWORD PTR [rsp+568], 25
	mov	DWORD PTR [rsp+560], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+552], 1640		; 00000668H
	mov	DWORD PTR [rsp+544], 2
	mov	DWORD PTR [rsp+536], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+528], 1
	mov	DWORD PTR [rsp+520], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+512], 1055		; 0000041fH
	mov	QWORD PTR [rsp+504], 0
	mov	DWORD PTR [rsp+496], 4
	lea	rax, OFFSET FLAT:$SG211794
	mov	QWORD PTR [rsp+488], rax
	mov	DWORD PTR [rsp+480], 24
	mov	DWORD PTR [rsp+472], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+464], 1052		; 0000041cH
	mov	DWORD PTR [rsp+456], 8
	mov	DWORD PTR [rsp+448], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+440], 1
	mov	DWORD PTR [rsp+432], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+424], 3
	mov	DWORD PTR [rsp+416], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+408], 1054		; 0000041eH
	mov	DWORD PTR [rsp+400], 512		; 00000200H
	mov	DWORD PTR [rsp+392], 15
	lea	rax, OFFSET FLAT:$SG211795
	mov	QWORD PTR [rsp+384], rax
	mov	DWORD PTR [rsp+376], 23
	mov	DWORD PTR [rsp+368], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+360], 1051		; 0000041bH
	mov	DWORD PTR [rsp+352], 8
	mov	DWORD PTR [rsp+344], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+336], 0
	mov	DWORD PTR [rsp+328], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+320], 2
	mov	DWORD PTR [rsp+312], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+304], 1053		; 0000041dH
	mov	DWORD PTR [rsp+296], 512		; 00000200H
	mov	DWORD PTR [rsp+288], 15
	lea	rax, OFFSET FLAT:$SG211796
	mov	QWORD PTR [rsp+280], rax
	mov	DWORD PTR [rsp+272], 22
	mov	DWORD PTR [rsp+264], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+256], 1048		; 00000418H
	mov	DWORD PTR [rsp+248], 4
	mov	DWORD PTR [rsp+240], -1073741821	; ffffffffc0000003H
	lea	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+232], rax
	mov	DWORD PTR [rsp+224], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+216], 1052		; 0000041cH
	mov	DWORD PTR [rsp+208], 1
	mov	DWORD PTR [rsp+200], 2
	lea	rax, OFFSET FLAT:$SG211797
	mov	QWORD PTR [rsp+192], rax
	mov	DWORD PTR [rsp+184], 21
	mov	DWORD PTR [rsp+176], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+168], 1047		; 00000417H
	mov	DWORD PTR [rsp+160], 4
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rsp+144], rax
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+128], 1051		; 0000041bH
	mov	DWORD PTR [rsp+120], 1
	mov	DWORD PTR [rsp+112], 2
	lea	rax, OFFSET FLAT:$SG211798
	mov	QWORD PTR [rsp+104], rax
	mov	DWORD PTR [rsp+96], 20
	mov	QWORD PTR [rsp+88], 0
	mov	QWORD PTR [rsp+80], 0
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 4
	mov	DWORD PTR [rsp+56], 101			; 00000065H
	mov	DWORD PTR [rsp+48], 1
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG211799
	mov	edx, 1
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__Fberconnoise_param_blk@@YAXXZ ; `dynamic atexit destructor for 'berconnoise_param_blk''
	call	atexit
	add	rsp, 3528				; 00000dc8H
	pop	rdi
	pop	rsi
	ret	0
??__Eberconnoise_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'berconnoise_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Fxyz_blk@@YAXXZ
text$yd	SEGMENT
??__Fxyz_blk@@YAXXZ PROC				; `dynamic atexit destructor for 'xyz_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	??1XYZ_Desc@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fxyz_blk@@YAXXZ ENDP				; `dynamic atexit destructor for 'xyz_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__Exyz_blk@@YAXXZ
text$di	SEGMENT
??__Exyz_blk@@YAXXZ PROC				; `dynamic initializer for 'xyz_blk'', COMDAT

; 72   : static XYZ_Desc xyz_blk(&BerconNoiseDesc, COORD_REF, xyz_params, 2, 0, 0, 0);

	sub	rsp, 88					; 00000058H
	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
	mov	DWORD PTR [rsp+64], 1
	mov	DWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 2
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z ; XYZ_Desc::XYZ_Desc
	lea	rcx, OFFSET FLAT:??__Fxyz_blk@@YAXXZ	; `dynamic atexit destructor for 'xyz_blk''
	call	atexit
	add	rsp, 88					; 00000058H
	ret	0
??__Exyz_blk@@YAXXZ ENDP				; `dynamic initializer for 'xyz_blk''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?GetBerconNoiseDesc@@YAPEAVClassDesc2@@XZ
_TEXT	SEGMENT
?GetBerconNoiseDesc@@YAPEAVClassDesc2@@XZ PROC		; GetBerconNoiseDesc, COMDAT

; 68   : ClassDesc2* GetBerconNoiseDesc() { return &BerconNoiseDesc; }

	lea	rax, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	ret	0
?GetBerconNoiseDesc@@YAPEAVClassDesc2@@XZ ENDP		; GetBerconNoiseDesc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconNoiseDesc@@YAXXZ
text$yd	SEGMENT
??__FBerconNoiseDesc@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconNoiseDesc'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	call	??1BerconNoiseClassDesc@@UEAA@XZ	; BerconNoiseClassDesc::~BerconNoiseClassDesc
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconNoiseDesc@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconNoiseDesc''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??__EBerconNoiseDesc@@YAXXZ
text$di	SEGMENT
??__EBerconNoiseDesc@@YAXXZ PROC			; `dynamic initializer for 'BerconNoiseDesc'', COMDAT

; 67   : static BerconNoiseClassDesc BerconNoiseDesc;

	sub	rsp, 40					; 00000028H
	mov	edx, 56					; 00000038H
	lea	rcx, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	call	?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z
	lea	rcx, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	call	??0BerconNoiseClassDesc@@QEAA@XZ	; BerconNoiseClassDesc::BerconNoiseClassDesc
	lea	rcx, OFFSET FLAT:??__FBerconNoiseDesc@@YAXXZ ; `dynamic atexit destructor for 'BerconNoiseDesc''
	call	atexit
	add	rsp, 40					; 00000028H
	ret	0
??__EBerconNoiseDesc@@YAXXZ ENDP			; `dynamic initializer for 'BerconNoiseDesc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconNoiseClassDesc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconNoiseClassDesc@@UEAAPEAXI@Z PROC		; BerconNoiseClassDesc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconNoiseClassDesc@@UEAA@XZ	; BerconNoiseClassDesc::~BerconNoiseClassDesc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 56					; 00000038H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconNoiseClassDesc@@UEAAPEAXI@Z ENDP		; BerconNoiseClassDesc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z PROC	; BerconNoiseClassDesc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconNoiseClassDesc@@QEAAX_K@Z ENDP	; BerconNoiseClassDesc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?HInstance@BerconNoiseClassDesc@@UEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 8
?HInstance@BerconNoiseClassDesc@@UEAAPEAUHINSTANCE__@@XZ PROC ; BerconNoiseClassDesc::HInstance, COMDAT

; 200  : 	virtual HINSTANCE HInstance() 					{ return hInstance; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR ?hInstance@@3PEAUHINSTANCE__@@EA ; hInstance
	ret	0
?HInstance@BerconNoiseClassDesc@@UEAAPEAUHINSTANCE__@@XZ ENDP ; BerconNoiseClassDesc::HInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?InternalName@BerconNoiseClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?InternalName@BerconNoiseClassDesc@@UEAAPEB_WXZ PROC	; BerconNoiseClassDesc::InternalName, COMDAT

; 199  : 	virtual const TCHAR* InternalName() 			{ return _T("BerconNoise"); } // returns fixed parsable name (scripter-visible name)

	mov	QWORD PTR [rsp+8], rcx
	lea	rax, OFFSET FLAT:??_C@_1BI@OFHJLFOO@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAN?$AAo?$AAi?$AAs?$AAe?$AA?$AA@
	ret	0
?InternalName@BerconNoiseClassDesc@@UEAAPEB_WXZ ENDP	; BerconNoiseClassDesc::InternalName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?Category@BerconNoiseClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?Category@BerconNoiseClassDesc@@UEAAPEB_WXZ PROC	; BerconNoiseClassDesc::Category, COMDAT

; 198  : 	virtual const TCHAR* Category() 				{ return TEXMAP_CAT_3D; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR __imp_?TEXMAP_CAT_3D@@3PA_WA
	ret	0
?Category@BerconNoiseClassDesc@@UEAAPEB_WXZ ENDP	; BerconNoiseClassDesc::Category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ PROC	; BerconNoiseClassDesc::ClassID, COMDAT

; 197  : 	virtual Class_ID ClassID() 						{ return BerconNoise_CLASS_ID; }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 2075492926				; 7bb5823eH
	mov	edx, 710826357				; 2a5e5975H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconNoiseClassDesc@@UEAA?AVClass_ID@@XZ ENDP	; BerconNoiseClassDesc::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?SuperClassID@BerconNoiseClassDesc@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?SuperClassID@BerconNoiseClassDesc@@UEAAKXZ PROC	; BerconNoiseClassDesc::SuperClassID, COMDAT

; 196  : 	virtual SClass_ID SuperClassID() 				{ return TEXMAP_CLASS_ID; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3088				; 00000c10H
	ret	0
?SuperClassID@BerconNoiseClassDesc@@UEAAKXZ ENDP	; BerconNoiseClassDesc::SuperClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ PROC	; BerconNoiseClassDesc::ClassName, COMDAT

; 195  : 	virtual const TCHAR *	ClassName() 			{ return GetString(IDS_CLASS_NAME); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	ecx, 3
	call	?GetString@@YAPEA_WH@Z			; GetString
	add	rsp, 40					; 00000028H
	ret	0
?ClassName@BerconNoiseClassDesc@@UEAAPEB_WXZ ENDP	; BerconNoiseClassDesc::ClassName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z
_TEXT	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z PROC		; BerconNoiseClassDesc::Create, COMDAT

; 194  : 	virtual void* Create(BOOL)				 		{ return new BerconNoise(); }

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T3[rsp], -2
	mov	ecx, 824				; 00000338H
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@Create
	mov	edx, 824				; 00000338H
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@BerconNoise@@QEAAX_K@Z
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0BerconNoise@@QEAA@XZ			; BerconNoise::BerconNoise
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN4@Create
$LN3@Create:
	mov	QWORD PTR tv76[rsp], 0
$LN4@Create:
	mov	rax, QWORD PTR tv76[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	add	rsp, 72					; 00000048H
	ret	0
?Create@BerconNoiseClassDesc@@UEAAPEAXH@Z ENDP		; BerconNoiseClassDesc::Create
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA PROC ; `BerconNoiseClassDesc::Create'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA ENDP ; `BerconNoiseClassDesc::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA PROC ; `BerconNoiseClassDesc::Create'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Create@BerconNoiseClassDesc@@UEAAPEAXH@Z@4HA ENDP ; `BerconNoiseClassDesc::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?IsPublic@BerconNoiseClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsPublic@BerconNoiseClassDesc@@UEAAHXZ PROC		; BerconNoiseClassDesc::IsPublic, COMDAT

; 193  : 	virtual int IsPublic() 							{ return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsPublic@BerconNoiseClassDesc@@UEAAHXZ ENDP		; BerconNoiseClassDesc::IsPublic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ??1BerconNoiseClassDesc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconNoiseClassDesc@@UEAA@XZ PROC			; BerconNoiseClassDesc::~BerconNoiseClassDesc, COMDAT

; 192  : 	virtual ~BerconNoiseClassDesc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoiseClassDesc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconNoiseClassDesc@@UEAA@XZ ENDP			; BerconNoiseClassDesc::~BerconNoiseClassDesc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA PROC	; `BerconNoiseClassDesc::~BerconNoiseClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA ENDP	; `BerconNoiseClassDesc::~BerconNoiseClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA PROC	; `BerconNoiseClassDesc::~BerconNoiseClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconNoiseClassDesc@@UEAA@XZ@4HA ENDP	; `BerconNoiseClassDesc::~BerconNoiseClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ??0BerconNoiseClassDesc@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0BerconNoiseClassDesc@@QEAA@XZ PROC			; BerconNoiseClassDesc::BerconNoiseClassDesc, COMDAT

; 191  : 	BerconNoiseClassDesc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0ClassDesc2@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoiseClassDesc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconNoiseClassDesc@@QEAA@XZ ENDP			; BerconNoiseClassDesc::BerconNoiseClassDesc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA PROC	; `BerconNoiseClassDesc::BerconNoiseClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA ENDP	; `BerconNoiseClassDesc::BerconNoiseClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA PROC	; `BerconNoiseClassDesc::BerconNoiseClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconNoiseClassDesc@@QEAA@XZ@4HA ENDP	; `BerconNoiseClassDesc::BerconNoiseClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconNoise@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconNoise@@UEAAPEAXI@Z PROC			; BerconNoise::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconNoise@@UEAA@XZ			; BerconNoise::~BerconNoise
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconNoise@@UEAAPEAXI@Z ENDP			; BerconNoise::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconNoise@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconNoise@@QEAAX_K@Z PROC		; BerconNoise::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconNoise@@QEAAX_K@Z ENDP		; BerconNoise::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetInterface@BerconNoise@@UEAAPEAXK@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
id$ = 72
?GetInterface@BerconNoise@@UEAAPEAXK@Z PROC		; BerconNoise::GetInterface, COMDAT

; 181  : 		void* GetInterface(ULONG id) {

$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 182  : 			if(id == I_RESMAKER_INTERFACE)

	cmp	DWORD PTR id$[rsp], 611595082		; 2474334aH
	jne	SHORT $LN2@GetInterfa

; 183  : 				return (void *) (ResourceMakerCallback*) this;

	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN5@GetInterfa
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 144				; 00000090H
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN6@GetInterfa
$LN5@GetInterfa:
	mov	QWORD PTR tv69[rsp], 0
$LN6@GetInterfa:
	mov	rax, QWORD PTR tv69[rsp]
	jmp	SHORT $LN1@GetInterfa

; 184  : 			else

	jmp	SHORT $LN3@GetInterfa
$LN2@GetInterfa:

; 185  : 				return Texmap::GetInterface(id);

	mov	edx, DWORD PTR id$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?GetInterface@MtlBase@@UEAAPEAXK@Z
$LN3@GetInterfa:
$LN1@GetInterfa:

; 186  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?GetInterface@BerconNoise@@UEAAPEAXK@Z ENDP		; BerconNoise::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??1BerconNoise@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconNoise@@UEAA@XZ PROC				; BerconNoise::~BerconNoise, COMDAT

; 417  : BerconNoise::~BerconNoise() { DiscardTexHandle(); }

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoise@@6BReferenceTarget@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoise@@6BISubMap@@@
	mov	QWORD PTR [rax+64], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoise@@6B@
	mov	QWORD PTR [rax+144], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconNoise@@QEAAXXZ	; BerconNoise::DiscardTexHandle
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	??1Texmap@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconNoise@@UEAA@XZ ENDP				; BerconNoise::~BerconNoise
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA PROC		; `BerconNoise::~BerconNoise'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA ENDP		; `BerconNoise::~BerconNoise'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA PROC		; `BerconNoise::~BerconNoise'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconNoise@@UEAA@XZ@4HA ENDP		; `BerconNoise::~BerconNoise'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ??0BerconNoise@@QEAA@XZ
_TEXT	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
??0BerconNoise@@QEAA@XZ PROC				; BerconNoise::BerconNoise, COMDAT

; 404  : BerconNoise::BerconNoise() {	

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0Texmap@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 144				; 00000090H
	mov	rcx, rax
	call	??0ResourceMakerCallback@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoise@@6BReferenceTarget@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoise@@6BISubMap@@@
	mov	QWORD PTR [rax+64], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconNoise@@6B@
	mov	QWORD PTR [rax+144], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 272				; 00000110H
	mov	rcx, rax
	call	??0BerconXYZ@@QEAA@XZ			; BerconXYZ::BerconXYZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 536				; 00000218H
	lea	r9, OFFSET FLAT:??0Color@@QEAA@XZ	; Color::Color
	mov	r8d, 2
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, rax
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 816				; 00000330H
	mov	rcx, rax
	call	??0Interval@@QEAA@XZ			; Interval::Interval

; 405  : 	for (int i=0; i<NOISE_NSUBTEX; i++) subtex[i] = NULL;

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@BerconNois
$LN2@BerconNois:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@BerconNois:
	cmp	DWORD PTR i$1[rsp], 18
	jge	SHORT $LN3@BerconNois
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+rax*8+560], 0
	jmp	SHORT $LN2@BerconNois
$LN3@BerconNois:

; 406  : 	texHandle = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+808], 0

; 407  : 	pblock = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+248], 0

; 408  : 	pbCurve = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+256], 0

; 409  : 	pbMap = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+264], 0

; 410  : 	pbXYZ = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+240], 0

; 411  : 	BerconNoiseDesc.MakeAutoParamBlocks(this);

	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	call	QWORD PTR __imp_?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z

; 412  : 	texout = NULL;	

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+776], 0

; 413  : 	curve = NULL;		

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+792], 0

; 414  : 	Reset();

	mov	rcx, QWORD PTR this$[rsp]
	call	?Reset@BerconNoise@@UEAAXXZ		; BerconNoise::Reset
	npad	1

; 415  : }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconNoise@@QEAA@XZ ENDP				; BerconNoise::BerconNoise
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA PROC		; `BerconNoise::BerconNoise'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA ENDP		; `BerconNoise::BerconNoise'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA PROC		; `BerconNoise::BerconNoise'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconNoise@@QEAA@XZ@4HA ENDP		; `BerconNoise::BerconNoise'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?DeleteThis@BerconNoise@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconNoise@@UEAAXXZ PROC			; BerconNoise::DeleteThis, COMDAT

; 175  : 		void DeleteThis() { delete this; }		

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconNoise@@UEAAXXZ ENDP			; BerconNoise::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z
_TEXT	SEGMENT
this$ = 48
id$ = 56
?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z PROC ; BerconNoise::GetParamBlockByID, COMDAT

; 167  : 		IParamBlock2* GetParamBlockByID(BlockID id) { 

$LN7:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 168  : 			if (pblock->ID() == id) return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN2@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	jmp	$LN1@GetParamBl
$LN2@GetParamBl:

; 169  : 			if (pbCurve->ID() == id) return pbCurve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+256]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN3@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	jmp	SHORT $LN1@GetParamBl
$LN3@GetParamBl:

; 170  : 			if (pbMap->ID() == id) return pbMap;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+264]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+264]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN4@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+264]
	jmp	SHORT $LN1@GetParamBl
$LN4@GetParamBl:

; 171  : 			if (pbXYZ->ID() == id) return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+240]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN5@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	jmp	SHORT $LN1@GetParamBl
$LN5@GetParamBl:

; 172  : 			return NULL;			

	xor	eax, eax
$LN1@GetParamBl:

; 173  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?GetParamBlockByID@BerconNoise@@UEAAPEAVIParamBlock2@@F@Z ENDP ; BerconNoise::GetParamBlockByID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z PROC ; BerconNoise::GetParamBlock, COMDAT

; 166  : 		IParamBlock2* GetParamBlock(int i) { switch (i) { case 0: return pblock; case 1: return pbCurve; case 2: return pbMap; case 3: return pbXYZ; } return pblock; }

$LN9:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@GetParamBl
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@GetParamBl
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN6@GetParamBl
	cmp	DWORD PTR tv64[rsp], 3
	je	SHORT $LN7@GetParamBl
	jmp	SHORT $LN2@GetParamBl
$LN4@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	jmp	SHORT $LN1@GetParamBl
$LN5@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	jmp	SHORT $LN1@GetParamBl
$LN6@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+264]
	jmp	SHORT $LN1@GetParamBl
$LN7@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	jmp	SHORT $LN1@GetParamBl
$LN2@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
$LN1@GetParamBl:
	add	rsp, 24
	ret	0
?GetParamBlock@BerconNoise@@UEAAPEAVIParamBlock2@@H@Z ENDP ; BerconNoise::GetParamBlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?NumParamBlocks@BerconNoise@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumParamBlocks@BerconNoise@@UEAAHXZ PROC		; BerconNoise::NumParamBlocks, COMDAT

; 165  : 		int	NumParamBlocks() { return 4; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?NumParamBlocks@BerconNoise@@UEAAHXZ ENDP		; BerconNoise::NumParamBlocks
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
rtarg$ = 48
?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z PROC ; BerconNoise::SetReference, COMDAT

; 682  : void BerconNoise::SetReference(int i, RefTargetHandle rtarg) {	

$LN14:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 683  : 	switch(i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 23
	ja	$LN10@SetReferen
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN12@SetReferen[rcx+rax]
	mov	eax, DWORD PTR $LN13@SetReferen[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@SetReferen:

; 684  : 		case COORD_REF:  pbXYZ = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+240], rcx
	jmp	SHORT $LN2@SetReferen
$LN5@SetReferen:

; 685  : 		case PBLOCK_REF: pblock = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+248], rcx
	jmp	SHORT $LN2@SetReferen
$LN6@SetReferen:

; 686  : 		case OUTPUT_REF: texout = (TextureOutput *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+776], rcx
	jmp	SHORT $LN2@SetReferen
$LN7@SetReferen:

; 687  : 		case CURVE_REF: curve = (ICurveCtl *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+792], rcx
	jmp	SHORT $LN2@SetReferen
$LN8@SetReferen:

; 688  : 		case CURVEPB_REF: pbCurve = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+256], rcx
	jmp	SHORT $LN2@SetReferen
$LN9@SetReferen:

; 689  : 		case PBMAP_REF: pbMap = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+264], rcx
	jmp	SHORT $LN2@SetReferen
$LN10@SetReferen:

; 690  : 		default: subtex[i-2] = (Texmap *)rtarg; break;

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rcx+rax*8+560], rdx
$LN2@SetReferen:

; 691  : 	}
; 692  : }

	add	rsp, 24
	ret	0
$LN13@SetReferen:
	DD	$LN4@SetReferen
	DD	$LN5@SetReferen
	DD	$LN6@SetReferen
	DD	$LN8@SetReferen
	DD	$LN7@SetReferen
	DD	$LN9@SetReferen
	DD	$LN10@SetReferen
$LN12@SetReferen:
	DB	0
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	4
	DB	5
?SetReference@BerconNoise@@UEAAXHPEAVReferenceTarget@@@Z ENDP ; BerconNoise::SetReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z PROC ; BerconNoise::GetReference, COMDAT

; 670  : RefTargetHandle BerconNoise::GetReference(int i)  {

$LN14:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 671  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 23
	ja	SHORT $LN10@GetReferen
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN12@GetReferen[rcx+rax]
	mov	eax, DWORD PTR $LN13@GetReferen[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@GetReferen:

; 672  : 		case COORD_REF: return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	jmp	SHORT $LN1@GetReferen
$LN5@GetReferen:

; 673  : 		case PBLOCK_REF: return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	jmp	SHORT $LN1@GetReferen
$LN6@GetReferen:

; 674  : 		case OUTPUT_REF: return texout;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+776]
	jmp	SHORT $LN1@GetReferen
$LN7@GetReferen:

; 675  : 		case CURVE_REF: return curve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	jmp	SHORT $LN1@GetReferen
$LN8@GetReferen:

; 676  : 		case CURVEPB_REF: return pbCurve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	jmp	SHORT $LN1@GetReferen
$LN9@GetReferen:

; 677  : 		case PBMAP_REF: return pbMap;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+264]
	jmp	SHORT $LN1@GetReferen
$LN10@GetReferen:

; 678  : 		default: return subtex[i-2];

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+560]
$LN1@GetReferen:

; 679  : 	}
; 680  : }

	add	rsp, 24
	ret	0
$LN13@GetReferen:
	DD	$LN4@GetReferen
	DD	$LN5@GetReferen
	DD	$LN6@GetReferen
	DD	$LN8@GetReferen
	DD	$LN7@GetReferen
	DD	$LN9@GetReferen
	DD	$LN10@GetReferen
$LN12@GetReferen:
	DB	0
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	4
	DB	5
?GetReference@BerconNoise@@UEAAPEAVReferenceTarget@@H@Z ENDP ; BerconNoise::GetReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?NumRefs@BerconNoise@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumRefs@BerconNoise@@UEAAHXZ PROC			; BerconNoise::NumRefs, COMDAT

; 161  : 		int NumRefs() { return 24; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 24
	ret	0
?NumRefs@BerconNoise@@UEAAHXZ ENDP			; BerconNoise::NumRefs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z
_TEXT	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z PROC		; BerconNoise::SubAnimName, COMDAT

; 726  : TSTR BerconNoise::SubAnimName(int i) {	

$LN16:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 727  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 23
	ja	$LN10@SubAnimNam
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN14@SubAnimNam[rcx+rax]
	mov	eax, DWORD PTR $LN15@SubAnimNam[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@SubAnimNam:

; 728  : 		case COORD_REF: return GetString(IDS_COORDS);		

	mov	ecx, 7
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN5@SubAnimNam:

; 729  : 		case PBLOCK_REF: return GetString(IDS_PARAMS);

	mov	ecx, 4
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN6@SubAnimNam:

; 730  : 		case CURVE_REF: return GetString(IDS_CURVE);

	mov	ecx, 51					; 00000033H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN7@SubAnimNam:

; 731  : 		case CURVEPB_REF: return GetString(IDS_CURVEPB);

	mov	ecx, 66					; 00000042H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN8@SubAnimNam:

; 732  : 		case OUTPUT_REF: return GetString(IDS_OUTPUT);

	mov	ecx, 8
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@SubAnimNam
$LN9@SubAnimNam:

; 733  : 		case PBMAP_REF: return GetString(IDS_PBMAP);

	mov	ecx, 72					; 00000048H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@SubAnimNam
$LN10@SubAnimNam:

; 734  : 		default: return GetSubTexmapTVName(i-2);

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 64					; 00000040H
	mov	r8d, eax
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_?GetSubTexmapTVName@ISubMap@@QEAA?AVWStr@@H@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@SubAnimNam:

; 735  : 	}
; 736  : }

	add	rsp, 56					; 00000038H
	ret	0
	int	3
	npad	2
$LN15@SubAnimNam:
	DD	$LN4@SubAnimNam
	DD	$LN5@SubAnimNam
	DD	$LN8@SubAnimNam
	DD	$LN7@SubAnimNam
	DD	$LN6@SubAnimNam
	DD	$LN9@SubAnimNam
	DD	$LN10@SubAnimNam
$LN14@SubAnimNam:
	DB	0
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	4
	DB	5
?SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z ENDP		; BerconNoise::SubAnimName
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconNoise::SubAnimName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN13@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN13@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconNoise::SubAnimName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconNoise::SubAnimName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN13@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN13@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??SubAnimName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconNoise::SubAnimName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z PROC	; BerconNoise::SubAnim, COMDAT

; 714  : Animatable* BerconNoise::SubAnim(int i) {

$LN14:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 715  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 23
	ja	SHORT $LN10@SubAnim
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN12@SubAnim[rcx+rax]
	mov	eax, DWORD PTR $LN13@SubAnim[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@SubAnim:

; 716  : 		case COORD_REF: return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	jmp	SHORT $LN1@SubAnim
$LN5@SubAnim:

; 717  : 		case PBLOCK_REF: return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	jmp	SHORT $LN1@SubAnim
$LN6@SubAnim:

; 718  : 		case CURVE_REF: return curve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	jmp	SHORT $LN1@SubAnim
$LN7@SubAnim:

; 719  : 		case CURVEPB_REF: return pbCurve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	jmp	SHORT $LN1@SubAnim
$LN8@SubAnim:

; 720  : 		case OUTPUT_REF: return texout;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+776]
	jmp	SHORT $LN1@SubAnim
$LN9@SubAnim:

; 721  : 		case PBMAP_REF: return pbMap;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+264]
	jmp	SHORT $LN1@SubAnim
$LN10@SubAnim:

; 722  : 		default: return subtex[i-2];

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+560]
$LN1@SubAnim:

; 723  : 	}
; 724  : }

	add	rsp, 24
	ret	0
$LN13@SubAnim:
	DD	$LN4@SubAnim
	DD	$LN5@SubAnim
	DD	$LN8@SubAnim
	DD	$LN7@SubAnim
	DD	$LN6@SubAnim
	DD	$LN9@SubAnim
	DD	$LN10@SubAnim
$LN12@SubAnim:
	DB	0
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	3
	DB	4
	DB	5
?SubAnim@BerconNoise@@UEAAPEAVAnimatable@@H@Z ENDP	; BerconNoise::SubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?NumSubs@BerconNoise@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSubs@BerconNoise@@UEAAHXZ PROC			; BerconNoise::NumSubs, COMDAT

; 156  : 		int NumSubs() { return 24; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 24
	ret	0
?NumSubs@BerconNoise@@UEAAHXZ ENDP			; BerconNoise::NumSubs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
_TEXT	SEGMENT
changing_param$1 = 32
changing_param$2 = 36
changing_param$3 = 40
tv64 = 44
this$ = 64
changeInt$ = 72
hTarget$ = 80
partID$ = 88
message$ = 96
propagate$ = 104
?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z PROC ; BerconNoise::NotifyRefChanged, COMDAT

; 738  : RefResult BerconNoise::NotifyRefChanged(NOTIFY_REF_CHANGED_ARGS) {

$LN14:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 739  : 	switch (message) {

	mov	eax, DWORD PTR message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 80			; 00000050H
	je	SHORT $LN4@NotifyRefC
	jmp	$LN2@NotifyRefC
$LN4@NotifyRefC:

; 740  : 		case REFMSG_CHANGE:
; 741  : 			ivalid.SetEmpty();			

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 742  : 			if (hTarget == pblock) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN5@NotifyRefC

; 743  : 				ParamID changing_param = pblock->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$1[rsp], ax

; 744  : 				berconnoise_param_blk.InvalidateUI(changing_param);

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$1[rsp]
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 745  : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$1[rsp]
	cmp	eax, -1
	je	SHORT $LN7@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconNoise@@QEAAXXZ	; BerconNoise::DiscardTexHandle
$LN7@NotifyRefC:

; 746  : 			}  else if (hTarget == pbCurve) {

	jmp	$LN6@NotifyRefC
$LN5@NotifyRefC:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN8@NotifyRefC

; 747  : 				ParamID changing_param = pbCurve->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+256]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$2[rsp], ax

; 748  : 				BerconCurve_param_blk.InvalidateUI(changing_param);

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$2[rsp]
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 749  : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$2[rsp]
	cmp	eax, -1
	je	SHORT $LN10@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconNoise@@QEAAXXZ	; BerconNoise::DiscardTexHandle
$LN10@NotifyRefC:

; 750  : 			}  else if (hTarget == pbXYZ) {

	jmp	SHORT $LN9@NotifyRefC
$LN8@NotifyRefC:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN11@NotifyRefC

; 751  : 				ParamID changing_param = pbXYZ->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+240]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+240]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$3[rsp], ax

; 752  : 				xyz_blk.InvalidateUI(changing_param);

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$3[rsp]
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 753  : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$3[rsp]
	cmp	eax, -1
	je	SHORT $LN12@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconNoise@@QEAAXXZ	; BerconNoise::DiscardTexHandle
$LN12@NotifyRefC:
$LN11@NotifyRefC:
$LN9@NotifyRefC:
$LN6@NotifyRefC:
$LN2@NotifyRefC:

; 754  : 			}
; 755  : 			break;
; 756  : 		}
; 757  : 	return(REF_SUCCEED);

	mov	eax, 1

; 758  : }

	add	rsp, 56					; 00000038H
	ret	0
?NotifyRefChanged@BerconNoise@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z ENDP ; BerconNoise::NotifyRefChanged
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
_TEXT	SEGMENT
i$1 = 32
mnew$ = 40
$T2 = 48
tv76 = 56
$T3 = 64
tv293 = 72
$T4 = 80
this$ = 112
remap$ = 120
?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z PROC ; BerconNoise::Clone, COMDAT

; 694  : RefTargetHandle BerconNoise::Clone(RemapDir &remap) {

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	QWORD PTR $T4[rsp], -2

; 695  : 	BerconNoise *mnew = new BerconNoise();

	mov	ecx, 824				; 00000338H
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN7@Clone
	mov	edx, 824				; 00000338H
	mov	rcx, QWORD PTR $T2[rsp]
	call	?__autoclassinit2@BerconNoise@@QEAAX_K@Z
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0BerconNoise@@QEAA@XZ			; BerconNoise::BerconNoise
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN8@Clone
$LN7@Clone:
	mov	QWORD PTR tv76[rsp], 0
$LN8@Clone:
	mov	rax, QWORD PTR tv76[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR mnew$[rsp], rax

; 696  : 	*((MtlBase*)mnew) = *((MtlBase*)this); // copy superclass stuff

	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_??4MtlBase@@QEAAAEAV0@AEBV0@@Z

; 697  : 	mnew->ReplaceReference(COORD_REF,remap.CloneRef(pbXYZ));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+240]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 698  : 	mnew->ReplaceReference(OUTPUT_REF,remap.CloneRef(texout));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+776]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 20
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 699  : 	mnew->ReplaceReference(PBLOCK_REF,remap.CloneRef(pblock));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+248]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 1
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 700  : 	mnew->ReplaceReference(CURVE_REF,remap.CloneRef(curve));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+792]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 22
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 701  : 	mnew->ReplaceReference(CURVEPB_REF,remap.CloneRef(pbCurve));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+256]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 21
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 702  : 	mnew->ReplaceReference(PBMAP_REF,remap.CloneRef(pbMap));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+264]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 23
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 703  : 	mnew->ivalid.SetEmpty();		

	mov	rax, QWORD PTR mnew$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 704  : 	for (int i = 0; i<NOISE_NSUBTEX; i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Clone
$LN2@Clone:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Clone:
	cmp	DWORD PTR i$1[rsp], 18
	jge	$LN3@Clone

; 705  : 		mnew->subtex[i] = NULL;

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR mnew$[rsp]
	mov	QWORD PTR [rcx+rax*8+560], 0

; 706  : 		if (subtex[i])

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+560], 0
	je	SHORT $LN5@Clone

; 707  : 			mnew->ReplaceReference(i+2,remap.CloneRef(subtex[i]));

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR remap$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv293[rsp], rcx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+rax*8+560]
	mov	rcx, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR tv293[rsp]
	call	QWORD PTR [rax+8]
	mov	ecx, DWORD PTR i$1[rsp]
	add	ecx, 2
	mov	r9d, 1
	mov	r8, rax
	mov	edx, ecx
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z
$LN5@Clone:

; 708  : 		mnew->mapOn[i] = mapOn[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	movsxd	rcx, DWORD PTR i$1[rsp]
	mov	rdx, QWORD PTR mnew$[rsp]
	mov	r8, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [r8+rax*4+704]
	mov	DWORD PTR [rdx+rcx*4+704], eax

; 709  : 		}

	jmp	$LN2@Clone
$LN3@Clone:

; 710  : 	BaseClone(this, mnew, remap);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR remap$[rsp]
	mov	r8, QWORD PTR mnew$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1320]

; 711  : 	return (RefTargetHandle)mnew;

	mov	rax, QWORD PTR mnew$[rsp]

; 712  : }

	add	rsp, 104				; 00000068H
	ret	0
?Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z ENDP ; BerconNoise::Clone
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
mnew$ = 40
$T2 = 48
tv76 = 56
$T3 = 64
tv293 = 72
$T4 = 80
this$ = 112
remap$ = 120
?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA PROC ; `BerconNoise::Clone'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA ENDP ; `BerconNoise::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
mnew$ = 40
$T2 = 48
tv76 = 56
$T3 = 64
tv293 = 72
$T4 = 80
this$ = 112
remap$ = 120
?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA PROC ; `BerconNoise::Clone'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Clone@BerconNoise@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA ENDP ; `BerconNoise::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z
_TEXT	SEGMENT
this$ = 48
s$ = 56
?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z PROC	; BerconNoise::GetClassName, COMDAT

; 151  : 		void GetClassName(TSTR& s) {s = GetString(IDS_CLASS_NAME);}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	ecx, 3
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR s$[rsp]
	call	QWORD PTR __imp_??4WStr@@QEAAAEAV0@PEB_W@Z
	add	rsp, 40					; 00000028H
	ret	0
?GetClassName@BerconNoise@@UEAAXAEAVWStr@@@Z ENDP	; BerconNoise::GetClassName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?SuperClassID@BerconNoise@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?SuperClassID@BerconNoise@@UEAAKXZ PROC			; BerconNoise::SuperClassID, COMDAT

; 150  : 		SClass_ID SuperClassID() { return TEXMAP_CLASS_ID; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3088				; 00000c10H
	ret	0
?SuperClassID@BerconNoise@@UEAAKXZ ENDP			; BerconNoise::SuperClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ PROC		; BerconNoise::ClassID, COMDAT

; 149  : 		Class_ID ClassID() {return BerconNoise_CLASS_ID;}		

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 2075492926				; 7bb5823eH
	mov	edx, 710826357				; 2a5e5975H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconNoise@@UEAA?AVClass_ID@@XZ ENDP		; BerconNoise::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?SubNumToRefNum@BerconNoise@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?SubNumToRefNum@BerconNoise@@UEAAHH@Z PROC		; BerconNoise::SubNumToRefNum, COMDAT

; 144  : 		int SubNumToRefNum(int subNum) { return subNum; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, DWORD PTR subNum$[rsp]
	ret	0
?SubNumToRefNum@BerconNoise@@UEAAHH@Z ENDP		; BerconNoise::SubNumToRefNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetTheXYZGen@BerconNoise@@UEAAPEAVXYZGen@@XZ
_TEXT	SEGMENT
this$ = 8
?GetTheXYZGen@BerconNoise@@UEAAPEAVXYZGen@@XZ PROC	; BerconNoise::GetTheXYZGen, COMDAT

; 142  : 		XYZGen *GetTheXYZGen() { return NULL; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetTheXYZGen@BerconNoise@@UEAAPEAVXYZGen@@XZ ENDP	; BerconNoise::GetTheXYZGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
maps$ = 48
d$ = 52
f2$ = 56
f1$ = 60
tv166 = 64
nSize$ = 68
tv233 = 72
tv277 = 76
tv321 = 80
tv197 = 88
tv223 = 96
tv267 = 104
tv311 = 112
$T1 = 120
tv591 = 128
tv203 = 136
tv590 = 144
$T2 = 152
tv229 = 160
tv587 = 168
$T3 = 176
tv273 = 184
tv584 = 192
$T4 = 200
tv317 = 208
tv581 = 216
$T5 = 224
$T6 = 232
$T7 = 240
tv540 = 248
tv548 = 256
$T8 = 264
tv564 = 272
tv567 = 280
$T9 = 288
$T10 = 296
$T11 = 304
$T12 = 312
$T13 = 320
$T14 = 332
$T15 = 344
$T16 = 356
$T17 = 368
$T18 = 384
$T19 = 400
$T20 = 416
$T21 = 432
$T22 = 448
$T23 = 464
$T24 = 480
$T25 = 496
$T26 = 512
$T27 = 528
$T28 = 544
$T29 = 560
$T30 = 572
$T31 = 584
$T32 = 596
$T33 = 608
$T34 = 620
$T35 = 632
$T36 = 644
$T37 = 656
normal$ = 672
p$ = 688
v2$ = 704
v1$ = 720
dpdx$ = 736
dpdy$ = 752
np$ = 768
M$ = 848
__$ArrayPad$ = 888
this$ = 928
__$ReturnUdt$ = 936
sc$ = 944
?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z PROC ; BerconNoise::EvalNormalPerturb, COMDAT

; 873  : Point3 BerconNoise::EvalNormalPerturb(ShadeContext& sc) {		

$LN17:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 904				; 00000388H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 874  : 	if (!sc.doMaps) return Point3(0,0,0);

	mov	rax, QWORD PTR sc$[rsp]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN2@EvalNormal
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@HHH@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN2@EvalNormal:

; 875  : 	if (gbufID) sc.SetGBufferID(gbufID);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN3@EvalNormal
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rcx+120]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+464]
$LN3@EvalNormal:

; 876  : 
; 877  : 	// UVW and Distortion
; 878  : 	Point3 p, dpdx, dpdy;

	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR dpdx$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR dpdy$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 879  : 	Point3 M[3];

	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	lea	rcx, QWORD PTR M$[rsp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 880  : 	if (!berconXYZ.get(sc, p, dpdx, dpdy, M)) return Point3(0,0,0);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 272				; 00000110H
	lea	rcx, QWORD PTR M$[rsp]
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, QWORD PTR dpdy$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR dpdx$[rsp]
	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, rax
	call	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@11PEAV3@@Z ; BerconXYZ::get
	test	eax, eax
	jne	SHORT $LN4@EvalNormal
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@HHH@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN4@EvalNormal:

; 881  : 
; 882  : 	if (useDistortion)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+224], 0
	je	SHORT $LN5@EvalNormal

; 883  : 		applyDistortion(sc,p);	

	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z ; BerconNoise::applyDistortion
$LN5@EvalNormal:

; 884  : 	float nSize = (mapOn[4] && subtex[4]) ? subtex[4]->EvalMono(sc)*size : size;

	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN15@EvalNormal
	mov	eax, 8
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN15@EvalNormal
	mov	eax, 8
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+156]
	movss	DWORD PTR tv166[rsp], xmm0
	jmp	SHORT $LN16@EvalNormal
$LN15@EvalNormal:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+156]
	movss	DWORD PTR tv166[rsp], xmm0
$LN16@EvalNormal:
	movss	xmm0, DWORD PTR tv166[rsp]
	movss	DWORD PTR nSize$[rsp], xmm0

; 885  : 	p /= nSize;

	movss	xmm1, DWORD PTR nSize$[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??_0Point3@@QEAAAEAV0@M@Z

; 886  : 	Noise::alterUVW(p, uvwDist);

	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+232]
	lea	rcx, QWORD PTR p$[rsp]
	call	?alterUVW@Noise@@SAXAEAVPoint3@@H@Z	; Noise::alterUVW

; 887  : 
; 888  : 	NoiseParams np = EvalParameters(&sc);

	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z ; BerconNoise::EvalParameters

; 889  : 
; 890  : 	// Vector
; 891  : 	Point3 normal;

	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 892  : 	float d = Noise::limitedNoise(p, np);

	lea	rax, QWORD PTR $T19[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	movss	DWORD PTR d$[rsp], xmm0

; 893  : 	if (useCurve) {		

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+800], 0
	je	$LN6@EvalNormal

; 894  : 		d = curve->GetControlCurve(0)->GetValue(sc.CurTime(), d);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv197[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T9[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv203[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv591[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv591[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR tv197[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv590[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv203[rsp]
	mov	r9, rdx
	movss	xmm2, DWORD PTR d$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR tv197[rsp]
	mov	rax, QWORD PTR tv590[rsp]
	call	QWORD PTR [rax+1376]
	movss	DWORD PTR d$[rsp], xmm0

; 895  : 		normal.x = (curve->GetControlCurve(0)->GetValue(sc.CurTime(), Noise::limitedNoise(p+DELTA*M[0], np)) - d) / DELTA;

	lea	rax, QWORD PTR $T20[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv223[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T10[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv229[rsp], rax
	mov	ecx, 12
	imul	rcx, rcx, 0
	lea	rcx, QWORD PTR M$[rsp+rcx]
	mov	r8, rcx
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T21[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	movss	DWORD PTR tv233[rsp], xmm0
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR tv223[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv587[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv229[rsp]
	mov	r9, rdx
	movss	xmm0, DWORD PTR tv233[rsp]
	movaps	xmm2, xmm0
	mov	edx, eax
	mov	rcx, QWORD PTR tv223[rsp]
	mov	rax, QWORD PTR tv587[rsp]
	call	QWORD PTR [rax+1376]
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR normal$[rsp], xmm0

; 896  : 		normal.y = (curve->GetControlCurve(0)->GetValue(sc.CurTime(), Noise::limitedNoise(p+DELTA*M[1], np)) - d) / DELTA;

	lea	rax, QWORD PTR $T22[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv267[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T11[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv273[rsp], rax
	mov	ecx, 12
	imul	rcx, rcx, 1
	lea	rcx, QWORD PTR M$[rsp+rcx]
	mov	r8, rcx
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T23[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	movss	DWORD PTR tv277[rsp], xmm0
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR tv267[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv584[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv273[rsp]
	mov	r9, rdx
	movss	xmm0, DWORD PTR tv277[rsp]
	movaps	xmm2, xmm0
	mov	edx, eax
	mov	rcx, QWORD PTR tv267[rsp]
	mov	rax, QWORD PTR tv584[rsp]
	call	QWORD PTR [rax+1376]
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR normal$[rsp+4], xmm0

; 897  : 		normal.z = (curve->GetControlCurve(0)->GetValue(sc.CurTime(), Noise::limitedNoise(p+DELTA*M[2], np)) - d) / DELTA;

	lea	rax, QWORD PTR $T24[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv311[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T12[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv317[rsp], rax
	mov	ecx, 12
	imul	rcx, rcx, 2
	lea	rcx, QWORD PTR M$[rsp+rcx]
	mov	r8, rcx
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T25[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	movss	DWORD PTR tv321[rsp], xmm0
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR tv311[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv581[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv317[rsp]
	mov	r9, rdx
	movss	xmm0, DWORD PTR tv321[rsp]
	movaps	xmm2, xmm0
	mov	edx, eax
	mov	rcx, QWORD PTR tv311[rsp]
	mov	rax, QWORD PTR tv581[rsp]
	call	QWORD PTR [rax+1376]
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR normal$[rsp+8], xmm0

; 898  : 	} else {

	jmp	$LN7@EvalNormal
$LN6@EvalNormal:

; 899  : 		normal.x = (Noise::limitedNoise(p+DELTA*M[0], np) - d) / DELTA;

	lea	rax, QWORD PTR $T26[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	eax, 12
	imul	rax, rax, 0
	lea	rax, QWORD PTR M$[rsp+rax]
	mov	r8, rax
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T27[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR normal$[rsp], xmm0

; 900  : 		normal.y = (Noise::limitedNoise(p+DELTA*M[1], np) - d) / DELTA;

	lea	rax, QWORD PTR $T28[rsp]
	mov	QWORD PTR $T6[rsp], rax
	mov	eax, 12
	imul	rax, rax, 1
	lea	rax, QWORD PTR M$[rsp+rax]
	mov	r8, rax
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T13[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR normal$[rsp+4], xmm0

; 901  : 		normal.z = (Noise::limitedNoise(p+DELTA*M[2], np) - d) / DELTA;

	lea	rax, QWORD PTR $T18[rsp]
	mov	QWORD PTR $T7[rsp], rax
	mov	eax, 12
	imul	rax, rax, 2
	lea	rax, QWORD PTR M$[rsp+rax]
	mov	r8, rax
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T17[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T7[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR normal$[rsp+8], xmm0
$LN7@EvalNormal:

; 902  : 	}	
; 903  : 	normal = -sc.VectorFromNoScale(normal, REF_OBJECT);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9d, 2
	lea	r8, QWORD PTR normal$[rsp]
	lea	rdx, QWORD PTR $T16[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+456]
	lea	rdx, QWORD PTR $T15[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??GPoint3@@QEBA?AV0@XZ
	lea	rcx, QWORD PTR normal$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 904  : 
; 905  : 	// Eval sub maps
; 906  : 	float f1, f2;
; 907  : 	Point3 v1, v2;

	lea	rcx, QWORD PTR v1$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR v2$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 908  : 	bool maps = false;

	mov	BYTE PTR maps$[rsp], 0

; 909  : 	if (subtex[0]) {

	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	$LN8@EvalNormal

; 910  : 		f1 = subtex[0]->EvalMono(sc);

	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	movss	DWORD PTR f1$[rsp], xmm0

; 911  : 		v1 = subtex[0]->EvalNormalPerturb(sc);

	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T14[rsp]
	call	QWORD PTR [rax+1520]
	lea	rcx, QWORD PTR v1$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 912  : 		maps = true;

	mov	BYTE PTR maps$[rsp], 1

; 913  : 	} else {

	jmp	SHORT $LN9@EvalNormal
$LN8@EvalNormal:

; 914  : 		f1 = Intens(col[0]);

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+536]
	mov	rcx, rax
	call	?Intens@@YAMAEBVColor@@@Z		; Intens
	movss	DWORD PTR f1$[rsp], xmm0

; 915  : 		v1 = Point3(0.f, 0.f, 0.f);

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T29[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	lea	rcx, QWORD PTR v1$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
$LN9@EvalNormal:

; 916  : 	}
; 917  : 	if (subtex[1]) {

	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	$LN10@EvalNormal

; 918  : 		f2 = subtex[1]->EvalMono(sc);

	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	movss	DWORD PTR f2$[rsp], xmm0

; 919  : 		v2 = subtex[1]->EvalNormalPerturb(sc);

	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T30[rsp]
	call	QWORD PTR [rax+1520]
	lea	rcx, QWORD PTR v2$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 920  : 		maps = true;

	mov	BYTE PTR maps$[rsp], 1

; 921  : 	} else {

	jmp	SHORT $LN11@EvalNormal
$LN10@EvalNormal:

; 922  : 		f2 = Intens(col[1]);

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+536]
	mov	rcx, rax
	call	?Intens@@YAMAEBVColor@@@Z		; Intens
	movss	DWORD PTR f2$[rsp], xmm0

; 923  : 		v2 = Point3(0.f, 0.f, 0.f);

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T31[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	lea	rcx, QWORD PTR v2$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
$LN11@EvalNormal:

; 924  : 	}
; 925  : 	
; 926  : 	// Calculate vector
; 927  : 	if (maps)

	movzx	eax, BYTE PTR maps$[rsp]
	test	eax, eax
	je	$LN12@EvalNormal

; 928  : 		normal = (f2-f1)*normal + d*v2 + (1.f-d)*v1;

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR d$[rsp]
	lea	r8, QWORD PTR v1$[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T32[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	QWORD PTR tv548[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR d$[rsp]
	lea	rcx, QWORD PTR $T33[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	QWORD PTR tv540[rsp], rax
	movss	xmm0, DWORD PTR f2$[rsp]
	subss	xmm0, DWORD PTR f1$[rsp]
	lea	r8, QWORD PTR normal$[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T34[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	rcx, QWORD PTR tv540[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T35[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	mov	rcx, QWORD PTR tv548[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T36[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rcx, QWORD PTR normal$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 929  : 	else

	jmp	SHORT $LN13@EvalNormal
$LN12@EvalNormal:

; 930  : 		normal *= f2 - f1;

	movss	xmm0, DWORD PTR f2$[rsp]
	subss	xmm0, DWORD PTR f1$[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??XPoint3@@QEAAAEAV0@M@Z
$LN13@EvalNormal:

; 931  : 
; 932  : 	return texout->Filter(normal); // Does this filter actually do something?

	lea	rax, QWORD PTR $T37[rsp]
	mov	QWORD PTR $T8[rsp], rax
	lea	rdx, QWORD PTR normal$[rsp]
	mov	rcx, QWORD PTR $T8[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+776]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+776]
	mov	QWORD PTR tv564[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv567[rsp], rcx
	mov	r8, rax
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rax, QWORD PTR tv564[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv567[rsp]
	call	QWORD PTR [rax+1504]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalNormal:

; 933  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 904				; 00000388H
	pop	rdi
	pop	rsi
	ret	0
?EvalNormalPerturb@BerconNoise@@UEAA?AVPoint3@@AEAVShadeContext@@@Z ENDP ; BerconNoise::EvalNormalPerturb
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
sc$ = 72
?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z PROC	; BerconNoise::EvalMono, COMDAT

; 861  : float BerconNoise::EvalMono(ShadeContext& sc) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 862  : 	// TODO: Evaluate two maps with mono instead of color, slightly faster...
; 863  : 	return Intens(EvalColor(sc));

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1504]
	mov	rcx, rax
	call	?Intens@@YAMAEBVAColor@@@Z		; Intens

; 864  : }

	add	rsp, 56					; 00000038H
	ret	0
?EvalMono@BerconNoise@@UEAAMAEAVShadeContext@@@Z ENDP	; BerconNoise::EvalMono
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
d$ = 48
nSize$ = 52
tv175 = 56
tv224 = 60
tv235 = 64
tv282 = 72
tv314 = 80
$T1 = 88
$T2 = 96
$T3 = 104
tv194 = 112
tv195 = 120
$T4 = 128
tv391 = 136
tv241 = 144
tv390 = 152
$T5 = 160
$T6 = 168
tv337 = 176
$T7 = 184
tv319 = 192
tv387 = 200
$T8 = 208
$T9 = 216
$T10 = 232
$T11 = 248
$T12 = 264
$T13 = 280
$T14 = 296
$T15 = 312
$T16 = 328
$T17 = 344
$T18 = 360
$T19 = 376
$T20 = 392
p$ = 408
c$ = 424
dpdy$ = 440
dpdx$ = 456
c0$ = 472
c1$ = 488
dp$ = 504
np$ = 528
__$ArrayPad$ = 608
this$ = 656
__$ReturnUdt$ = 664
sc$ = 672
?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z PROC ; BerconNoise::EvalColor, COMDAT

; 826  : AColor BerconNoise::EvalColor(ShadeContext& sc) {

$LN17:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 632				; 00000278H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 827  : 	if (!sc.doMaps) return black;

	mov	rax, QWORD PTR sc$[rsp]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN2@EvalColor
	lea	rdx, OFFSET FLAT:?black@@3VAColor@@A
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN2@EvalColor:

; 828  : 	
; 829  : 	AColor c;

	lea	rcx, QWORD PTR c$[rsp]
	call	??0AColor@@QEAA@XZ			; AColor::AColor

; 830  : 	if (sc.GetCache(this,c)) 

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR c$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+504]
	test	eax, eax
	je	SHORT $LN3@EvalColor

; 831  : 		return c; 	

	lea	rdx, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN3@EvalColor:

; 832  : 	if (gbufID) sc.SetGBufferID(gbufID);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN4@EvalColor
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rcx+120]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+464]
$LN4@EvalColor:

; 833  : 
; 834  : 	// UVW and Distortion
; 835  : 	Point3 p, dpdx, dpdy, dp;	

	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR dpdx$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR dpdy$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR dp$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 836  : 	if(!berconXYZ.get(sc, p, dpdx, dpdy)) return AColor(0,0,0,0);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 272				; 00000110H
	lea	rcx, QWORD PTR dpdy$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR dpdx$[rsp]
	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, rax
	call	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@11@Z ; BerconXYZ::get
	test	eax, eax
	jne	SHORT $LN5@EvalColor
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@HHHH@Z			; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN5@EvalColor:

; 837  : 
; 838  : 	if (useDistortion)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+224], 0
	je	SHORT $LN6@EvalColor

; 839  : 		applyDistortion(sc,p);	

	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z ; BerconNoise::applyDistortion
$LN6@EvalColor:

; 840  : 	float nSize = (mapOn[4] && subtex[4]) ? subtex[4]->EvalMono(sc)*size : size;

	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN9@EvalColor
	mov	eax, 8
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN9@EvalColor
	mov	eax, 8
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+156]
	movss	DWORD PTR tv175[rsp], xmm0
	jmp	SHORT $LN10@EvalColor
$LN9@EvalColor:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+156]
	movss	DWORD PTR tv175[rsp], xmm0
$LN10@EvalColor:
	movss	xmm0, DWORD PTR tv175[rsp]
	movss	DWORD PTR nSize$[rsp], xmm0

; 841  : 	p /= nSize; dpdx /= nSize; dpdy /= nSize;

	movss	xmm1, DWORD PTR nSize$[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??_0Point3@@QEAAAEAV0@M@Z
	movss	xmm1, DWORD PTR nSize$[rsp]
	lea	rcx, QWORD PTR dpdx$[rsp]
	call	QWORD PTR __imp_??_0Point3@@QEAAAEAV0@M@Z
	movss	xmm1, DWORD PTR nSize$[rsp]
	lea	rcx, QWORD PTR dpdy$[rsp]
	call	QWORD PTR __imp_??_0Point3@@QEAAAEAV0@M@Z

; 842  : 	
; 843  : 	Noise::alterUVW(p, uvwDist);

	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+232]
	lea	rcx, QWORD PTR p$[rsp]
	call	?alterUVW@Noise@@SAXAEAVPoint3@@H@Z	; Noise::alterUVW

; 844  : 	NoiseParams np = EvalParameters(&sc);

	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z ; BerconNoise::EvalParameters

; 845  : 		
; 846  : 	// Caluclate noise function
; 847  : 	float d = sc.filterMaps ? Noise::limitedNoise(p, dpdx, dpdy, np) : Noise::limitedNoise(p, np);	

	mov	rax, QWORD PTR sc$[rsp]
	cmp	DWORD PTR [rax+16], 0
	je	$LN11@EvalColor
	lea	rax, QWORD PTR $T9[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rax, QWORD PTR $T11[rsp]
	mov	QWORD PTR $T3[rsp], rax
	lea	rdx, QWORD PTR dpdy$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv194[rsp], rax
	lea	rdx, QWORD PTR dpdx$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv195[rsp], rax
	lea	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T3[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	lea	r9, QWORD PTR np$[rsp]
	mov	rcx, QWORD PTR tv194[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv195[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@00AEAVNoiseParams@@@Z ; Noise::limitedNoise
	movss	DWORD PTR tv224[rsp], xmm0
	jmp	SHORT $LN12@EvalColor
$LN11@EvalColor:
	lea	rax, QWORD PTR $T12[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, rax
	call	?limitedNoise@Noise@@SAMVPoint3@@AEAVNoiseParams@@@Z ; Noise::limitedNoise
	movss	DWORD PTR tv224[rsp], xmm0
$LN12@EvalColor:
	movss	xmm0, DWORD PTR tv224[rsp]
	movss	DWORD PTR d$[rsp], xmm0

; 848  : 	if (useCurve)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+800], 0
	je	$LN7@EvalColor

; 849  : 		d = curve->GetControlCurve(0)->GetValue(sc.CurTime(), d);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv235[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T8[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv241[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv391[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv391[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR tv235[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv390[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv241[rsp]
	mov	r9, rdx
	movss	xmm2, DWORD PTR d$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR tv235[rsp]
	mov	rax, QWORD PTR tv390[rsp]
	call	QWORD PTR [rax+1376]
	movss	DWORD PTR d$[rsp], xmm0
$LN7@EvalColor:

; 850  : 
; 851  : 	// Get colors
; 852  : 	RGBA c0 = mapOn[0]&&subtex[0] ? subtex[0]->EvalColor(sc): col[0];

	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN13@EvalColor
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN13@EvalColor
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T14[rsp]
	call	QWORD PTR [rax+1504]
	mov	QWORD PTR tv282[rsp], rax
	jmp	SHORT $LN14@EvalColor
$LN13@EvalColor:
	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+536]
	movss	xmm2, DWORD PTR __real@3f800000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T15[rsp]
	call	??0AColor@@QEAA@AEBVColor@@M@Z		; AColor::AColor
	mov	QWORD PTR tv282[rsp], rax
$LN14@EvalColor:
	mov	rax, QWORD PTR tv282[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR c0$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor

; 853  : 	RGBA c1 = mapOn[1]&&subtex[1] ? subtex[1]->EvalColor(sc): col[1];				

	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN15@EvalColor
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN15@EvalColor
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T16[rsp]
	call	QWORD PTR [rax+1504]
	mov	QWORD PTR tv314[rsp], rax
	jmp	SHORT $LN16@EvalColor
$LN15@EvalColor:
	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+536]
	movss	xmm2, DWORD PTR __real@3f800000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T13[rsp]
	call	??0AColor@@QEAA@AEBVColor@@M@Z		; AColor::AColor
	mov	QWORD PTR tv314[rsp], rax
$LN16@EvalColor:
	mov	rax, QWORD PTR tv314[rsp]
	mov	QWORD PTR $T6[rsp], rax
	mov	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR c1$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor

; 854  : 	c = texout->Filter((1.f-d)*c0 + d*c1);

	lea	rax, QWORD PTR $T17[rsp]
	mov	QWORD PTR $T7[rsp], rax
	lea	r8, QWORD PTR c1$[rsp]
	movss	xmm1, DWORD PTR d$[rsp]
	lea	rcx, QWORD PTR $T18[rsp]
	call	??D@YA?AVAColor@@MAEBV0@@Z		; operator*
	mov	QWORD PTR tv337[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR d$[rsp]
	lea	r8, QWORD PTR c0$[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T19[rsp]
	call	??D@YA?AVAColor@@MAEBV0@@Z		; operator*
	mov	rcx, QWORD PTR tv337[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR $T7[rsp]
	mov	rcx, rax
	call	??HAColor@@QEBA?AV0@AEBV0@@Z		; AColor::operator+
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+776]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+776]
	mov	QWORD PTR tv319[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv387[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR $T20[rsp]
	mov	rax, QWORD PTR tv319[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv387[rsp]
	call	QWORD PTR [rax+1520]
	lea	rcx, QWORD PTR c$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 855  : 
; 856  : 	// Cache
; 857  : 	sc.PutCache(this,c); 

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR c$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+528]

; 858  : 	return c;	

	lea	rdx, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalColor:

; 859  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 632				; 00000278H
	pop	rdi
	pop	rsi
	ret	0
?EvalColor@BerconNoise@@UEAA?AVAColor@@AEAVShadeContext@@@Z ENDP ; BerconNoise::EvalColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z
_TEXT	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z PROC ; BerconNoise::GetSubTexmapSlotName, COMDAT

; 644  : TSTR BerconNoise::GetSubTexmapSlotName(int i) {	

$LN27:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 645  : 	switch(i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 17
	ja	$LN22@GetSubTexm
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN26@GetSubTexm[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@GetSubTexm:

; 646  : 		case 0:  return TSTR(GetString(IDS_DS_COLOR1)); 

	mov	ecx, 1051				; 0000041bH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN5@GetSubTexm:

; 647  : 		case 1:  return TSTR(GetString(IDS_DS_COLOR2)); 

	mov	ecx, 1052				; 0000041cH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN6@GetSubTexm:

; 648  : 		case 2:  return TSTR(GetString(IDS_DISTORTION_MAP)); 

	mov	ecx, 13
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN7@GetSubTexm:

; 649  : 		case 3:  return TSTR(GetString(IDS_DISTORTION_MAP2)); 

	mov	ecx, 38					; 00000026H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN8@GetSubTexm:

; 650  : 
; 651  : 		case BMAP1_NUM: return TSTR(GetString(IDS_MAP1)); 

	mov	ecx, 73					; 00000049H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN9@GetSubTexm:

; 652  : 		case BMAP2_NUM: return TSTR(GetString(IDS_MAP2)); 

	mov	ecx, 74					; 0000004aH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN10@GetSubTexm:

; 653  : 		case BMAP3_NUM: return TSTR(GetString(IDS_MAP3)); 

	mov	ecx, 75					; 0000004bH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN11@GetSubTexm:

; 654  : 		case BMAP4_NUM: return TSTR(GetString(IDS_MAP4)); 

	mov	ecx, 76					; 0000004cH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN12@GetSubTexm:

; 655  : 		case BMAP5_NUM: return TSTR(GetString(IDS_MAP5)); 

	mov	ecx, 77					; 0000004dH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN13@GetSubTexm:

; 656  : 		case BMAP6_NUM: return TSTR(GetString(IDS_MAP6)); 

	mov	ecx, 78					; 0000004eH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN14@GetSubTexm:

; 657  : 		case BMAP7_NUM: return TSTR(GetString(IDS_MAP7)); 

	mov	ecx, 79					; 0000004fH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN15@GetSubTexm:

; 658  : 		case BMAP8_NUM: return TSTR(GetString(IDS_MAP8)); 

	mov	ecx, 80					; 00000050H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN16@GetSubTexm:

; 659  : 		case BMAP9_NUM: return TSTR(GetString(IDS_MAP9)); 

	mov	ecx, 81					; 00000051H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN17@GetSubTexm:

; 660  : 		case BMAP10_NUM: return TSTR(GetString(IDS_MAP10)); 

	mov	ecx, 82					; 00000052H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN18@GetSubTexm:

; 661  : 		case BMAP11_NUM: return TSTR(GetString(IDS_MAP11)); 

	mov	ecx, 83					; 00000053H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN19@GetSubTexm:

; 662  : 		case BMAP12_NUM: return TSTR(GetString(IDS_MAP12)); 

	mov	ecx, 84					; 00000054H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN20@GetSubTexm:

; 663  : 		case BMAP13_NUM: return TSTR(GetString(IDS_MAP13)); 

	mov	ecx, 85					; 00000055H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN21@GetSubTexm:

; 664  : 		case BMAP14_NUM: return TSTR(GetString(IDS_MAP14)); 

	mov	ecx, 86					; 00000056H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN22@GetSubTexm:

; 665  : 
; 666  : 		default: return TSTR(_T(""));

	lea	rdx, OFFSET FLAT:$SG212221
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@GetSubTexm:

; 667  : 	}
; 668  : }

	add	rsp, 56					; 00000038H
	ret	0
	int	3
	npad	1
$LN26@GetSubTexm:
	DD	$LN4@GetSubTexm
	DD	$LN5@GetSubTexm
	DD	$LN6@GetSubTexm
	DD	$LN7@GetSubTexm
	DD	$LN8@GetSubTexm
	DD	$LN9@GetSubTexm
	DD	$LN10@GetSubTexm
	DD	$LN11@GetSubTexm
	DD	$LN12@GetSubTexm
	DD	$LN13@GetSubTexm
	DD	$LN14@GetSubTexm
	DD	$LN15@GetSubTexm
	DD	$LN16@GetSubTexm
	DD	$LN17@GetSubTexm
	DD	$LN18@GetSubTexm
	DD	$LN19@GetSubTexm
	DD	$LN20@GetSubTexm
	DD	$LN21@GetSubTexm
?GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z ENDP ; BerconNoise::GetSubTexmapSlotName
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconNoise::GetSubTexmapSlotName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN25@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN25@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconNoise::GetSubTexmapSlotName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconNoise::GetSubTexmapSlotName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN25@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN25@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??GetSubTexmapSlotName@BerconNoise@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconNoise::GetSubTexmapSlotName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
m$ = 64
?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z PROC	; BerconNoise::SetSubTexmap, COMDAT

; 622  : void BerconNoise::SetSubTexmap(int i, Texmap *m)  {

$LN11:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 623  : 	ReplaceReference(i+2,m);

	mov	eax, DWORD PTR i$[rsp]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 64					; 00000040H
	mov	r9d, 1
	mov	r8, QWORD PTR m$[rsp]
	mov	edx, eax
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 624  : 	if (i==0) {

	cmp	DWORD PTR i$[rsp], 0
	jne	SHORT $LN2@SetSubTexm

; 625  : 		berconnoise_param_blk.InvalidateUI(noise_map1);

	mov	r8d, -1
	mov	dx, 22
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 626  : 		ivalid.SetEmpty();		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 720				; 000002d0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	$LN3@SetSubTexm
$LN2@SetSubTexm:

; 627  : 	} else if (i==1) {

	cmp	DWORD PTR i$[rsp], 1
	jne	SHORT $LN4@SetSubTexm

; 628  : 		berconnoise_param_blk.InvalidateUI(noise_map2);

	mov	r8d, -1
	mov	dx, 23
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 629  : 		ivalid.SetEmpty();		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 720				; 000002d0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	SHORT $LN5@SetSubTexm
$LN4@SetSubTexm:

; 630  : 	} else if (i==2) {

	cmp	DWORD PTR i$[rsp], 2
	jne	SHORT $LN6@SetSubTexm

; 631  : 		berconnoise_param_blk.InvalidateUI(distortion_map);

	mov	r8d, -1
	mov	dx, 8
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 632  : 		ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 720				; 000002d0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	SHORT $LN7@SetSubTexm
$LN6@SetSubTexm:

; 633  : 	}  else if (i==3) {

	cmp	DWORD PTR i$[rsp], 3
	jne	SHORT $LN8@SetSubTexm

; 634  : 		berconnoise_param_blk.InvalidateUI(distortion_map2);

	mov	r8d, -1
	mov	dx, 9
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 635  : 		ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 720				; 000002d0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
$LN8@SetSubTexm:
$LN7@SetSubTexm:
$LN5@SetSubTexm:
$LN3@SetSubTexm:

; 636  : 	}
; 637  : 
; 638  : 	if (BMAP1_NUM <= i && i <= BMAP14_NUM) {

	cmp	DWORD PTR i$[rsp], 4
	jl	SHORT $LN9@SetSubTexm
	cmp	DWORD PTR i$[rsp], 17
	jg	SHORT $LN9@SetSubTexm

; 639  : 		BerconMap_param_blk.InvalidateUI(i-BMAP1_NUM);

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 4
	mov	r8d, -1
	movzx	edx, ax
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 640  : 		ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 720				; 000002d0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
$LN9@SetSubTexm:

; 641  : 	}
; 642  : }

	add	rsp, 40					; 00000028H
	ret	0
?SetSubTexmap@BerconNoise@@UEAAXHPEAVTexmap@@@Z ENDP	; BerconNoise::SetSubTexmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetSubTexmap@BerconNoise@@UEAAPEAVTexmap@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetSubTexmap@BerconNoise@@UEAAPEAVTexmap@@H@Z PROC	; BerconNoise::GetSubTexmap, COMDAT

; 133  : 		Texmap* GetSubTexmap(int i) { return subtex[i]; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+496]
	ret	0
?GetSubTexmap@BerconNoise@@UEAAPEAVTexmap@@H@Z ENDP	; BerconNoise::GetSubTexmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?NumSubTexmaps@BerconNoise@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSubTexmaps@BerconNoise@@UEAAHXZ PROC		; BerconNoise::NumSubTexmaps, COMDAT

; 132  : 		int NumSubTexmaps() { return NOISE_NSUBTEX; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 18
	ret	0
?NumSubTexmaps@BerconNoise@@UEAAHXZ ENDP		; BerconNoise::NumSubTexmaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
mapreq$ = 64
bumpreq$ = 72
?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z PROC ; BerconNoise::MappingsRequired, COMDAT

; 129  : 		void MappingsRequired(int subMtlNum, BitArray& mapreq, BitArray& bumpreq) { berconXYZ.map(subMtlNum, mapreq, bumpreq); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 272				; 00000110H
	mov	r9, QWORD PTR bumpreq$[rsp]
	mov	r8, QWORD PTR mapreq$[rsp]
	mov	edx, DWORD PTR subMtlNum$[rsp]
	mov	rcx, rax
	call	?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z	; BerconXYZ::map
	add	rsp, 40					; 00000028H
	ret	0
?MappingsRequired@BerconNoise@@UEAAXHAEAVBitArray@@0@Z ENDP ; BerconNoise::MappingsRequired
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?LocalRequirements@BerconNoise@@UEAAKH@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
?LocalRequirements@BerconNoise@@UEAAKH@Z PROC		; BerconNoise::LocalRequirements, COMDAT

; 128  : 		ULONG LocalRequirements(int subMtlNum) { return berconXYZ.req(); }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 272				; 00000110H
	mov	rcx, rax
	call	?req@BerconXYZ@@QEAAKXZ			; BerconXYZ::req
	add	rsp, 40					; 00000028H
	ret	0
?LocalRequirements@BerconNoise@@UEAAKH@Z ENDP		; BerconNoise::LocalRequirements
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?Validity@BerconNoise@@UEAA?AVInterval@@H@Z
_TEXT	SEGMENT
v$ = 32
__$ArrayPad$ = 40
this$ = 64
__$ReturnUdt$ = 72
t$ = 80
?Validity@BerconNoise@@UEAA?AVInterval@@H@Z PROC	; BerconNoise::Validity, COMDAT

; 551  : Interval BerconNoise::Validity(TimeValue t) {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 552  : 	Interval v;

	lea	rcx, QWORD PTR v$[rsp]
	call	??0Interval@@QEAA@XZ			; Interval::Interval

; 553  : 	Update(t,v);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR v$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1400]

; 554  : 	return ivalid;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+784]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 555  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?Validity@BerconNoise@@UEAA?AVInterval@@H@Z ENDP	; BerconNoise::Validity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?Reset@BerconNoise@@UEAAXXZ
_TEXT	SEGMENT
t$ = 64
i$1 = 68
i$2 = 72
tv66 = 80
$T3 = 88
tv184 = 96
tv503 = 104
tv200 = 112
tv502 = 120
$T4 = 128
$T5 = 136
$T6 = 148
this$ = 176
?Reset@BerconNoise@@UEAAXXZ PROC			; BerconNoise::Reset, COMDAT

; 419  : void BerconNoise::Reset() {

$LN12:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H

; 420  : 	TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR tv66[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv66[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 421  : 
; 422  : 	if (texout) texout->Reset();

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+776], 0
	je	SHORT $LN8@Reset
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+776]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+776]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1408]
	jmp	SHORT $LN9@Reset
$LN8@Reset:

; 423  : 	else ReplaceReference( OUTPUT_REF, GetNewDefaultTextureOutput());

	call	QWORD PTR __imp_?GetNewDefaultTextureOutput@@YAPEAVTextureOutput@@XZ
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 20
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z
$LN9@Reset:

; 424  : 
; 425  : 	if (curve) curve->DeleteMe();

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+792], 0
	je	SHORT $LN10@Reset
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+792]
	call	QWORD PTR __imp_?DeleteMe@ReferenceMaker@@QEAAXXZ
$LN10@Reset:

; 426  : 	curve = (ICurveCtl *) CreateInstance(REF_MAKER_CLASS_ID,CURVE_CONTROL_CLASS_ID);

	lea	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	r8d, 1211792847				; 483a7dcfH
	mov	edx, 341333875				; 14585773H
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rdx, rax
	mov	ecx, 256				; 00000100H
	call	QWORD PTR __imp_?CreateInstance@@YAPEAXKVClass_ID@@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+792], rax

; 427  : #if MAX_RELEASE >= 18900
; 428  : 	curve->RegisterResourceMaker(static_cast<ReferenceTarget*>(this));

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+792]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+792]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1424]

; 429  : #else
; 430  : 	curve->RegisterResourceMaker(static_cast<ReferenceMaker*>(this));
; 431  : #endif
; 432  : 	CurveCtrl::init(curve);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+792]
	call	?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z	; CurveCtrl::init

; 433  : 	pbCurve->SetValue(enable_curve, t, FALSE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+256]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+256]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	call	QWORD PTR [rax+1576]

; 434  : 
; 435  : 	for (int i=0; i<NOISE_NSUBTEX; i++) 

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Reset
$LN2@Reset:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Reset:
	cmp	DWORD PTR i$1[rsp], 18
	jge	SHORT $LN3@Reset

; 436  : 		DeleteReference(i+2);	

	mov	eax, DWORD PTR i$1[rsp]
	add	eax, 2
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?DeleteReference@ReferenceMaker@@QEAA?AW4RefResult@@H@Z
	jmp	SHORT $LN2@Reset
$LN3@Reset:

; 437  : 
; 438  : 	pblock->SetValue( noise_color1, t, Color(0.f, 0.f, 0.f));

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	QWORD PTR tv184[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv503[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rax, QWORD PTR tv184[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv503[rsp]
	call	QWORD PTR [rax+1544]

; 439  : 	pblock->SetValue( noise_color2, t, Color(1.f, 1.f, 1.f));

	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	QWORD PTR tv200[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv502[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 21
	mov	rax, QWORD PTR tv200[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv502[rsp]
	call	QWORD PTR [rax+1544]

; 440  : 	pblock->SetValue( noise_map1_on, t, TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 24
	call	QWORD PTR [rax+1576]

; 441  : 	pblock->SetValue( noise_map2_on, t,	TRUE);		

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 25
	call	QWORD PTR [rax+1576]

; 442  : 	pblock->SetValue( distortion_str, t, .1f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3dcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	call	QWORD PTR [rax+1584]

; 443  : 	pblock->SetValue( use_distortion, t, FALSE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	call	QWORD PTR [rax+1576]

; 444  : 	pblock->SetValue( uvw_dist, t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	call	QWORD PTR [rax+1576]

; 445  : 	pblock->SetValue( noise_function_type, t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	call	QWORD PTR [rax+1576]

; 446  : 	pblock->SetValue( fractal_type, t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	call	QWORD PTR [rax+1576]

; 447  : 	pblock->SetValue( worley_distance, t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	call	QWORD PTR [rax+1576]

; 448  : 	pblock->SetValue( noise_lowthresh, t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 6
	call	QWORD PTR [rax+1584]

; 449  : 	pblock->SetValue( noise_hithresh, t, 1.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3f800000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	call	QWORD PTR [rax+1584]

; 450  : 	pblock->SetValue( worley_spread, t, 3.f);			

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@40400000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 15
	call	QWORD PTR [rax+1584]

; 451  : 	pblock->SetValue( worley_F1, t,	1.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3f800000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 16
	call	QWORD PTR [rax+1584]

; 452  : 	pblock->SetValue( worley_F2, t,	0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	call	QWORD PTR [rax+1584]

; 453  : 	pblock->SetValue( worley_F3, t,	0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	call	QWORD PTR [rax+1584]

; 454  : 	pblock->SetValue( worley_F4, t,	0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	call	QWORD PTR [rax+1584]

; 455  : 	pblock->SetValue( noise_phase, t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 27
	call	QWORD PTR [rax+1584]

; 456  : 	pblock->SetValue( noise_size, t, 25.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@41c80000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 26
	call	QWORD PTR [rax+1584]

; 457  : 	pblock->SetValue( fractal_gain, t, 5.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@40a00000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 1
	call	QWORD PTR [rax+1584]

; 458  : 	pblock->SetValue( fractal_offset, t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	call	QWORD PTR [rax+1584]

; 459  : 	pblock->SetValue( fractal_h, t, .5f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3f000000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 3
	call	QWORD PTR [rax+1584]

; 460  : 	pblock->SetValue( fractal_lacunarity, t, 2.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@40000000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 4
	call	QWORD PTR [rax+1584]

; 461  : 	pblock->SetValue( fractal_levels, t, 3.f);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@40400000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 5
	call	QWORD PTR [rax+1584]

; 462  : 
; 463  : 	// Maps
; 464  : 	for (int i=14; i<28; i++)

	mov	DWORD PTR i$2[rsp], 14
	jmp	SHORT $LN7@Reset
$LN5@Reset:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN7@Reset:
	cmp	DWORD PTR i$2[rsp], 28
	jge	SHORT $LN6@Reset

; 465  : 		pbMap->SetValue(i, t, TRUE);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+264]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+264]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	movzx	edx, WORD PTR i$2[rsp]
	call	QWORD PTR [rax+1576]
	jmp	SHORT $LN5@Reset
$LN6@Reset:

; 466  : 
; 467  : 	berconXYZ.reset(pbXYZ, ivalid, 2, 0, 0, 0);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 272				; 00000110H
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 2
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+240]
	call	?reset@BerconXYZ@@QEAAXPEAVIParamBlock2@@AEAVInterval@@HHHH@Z ; BerconXYZ::reset

; 468  : 
; 469  : 	ivalid.SetEmpty();	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 470  : }

	add	rsp, 168				; 000000a8H
	ret	0
?Reset@BerconNoise@@UEAAXXZ ENDP			; BerconNoise::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z
_TEXT	SEGMENT
i$1 = 48
i$2 = 52
i$3 = 56
tmp$4 = 60
tv83 = 64
tv595 = 72
tv93 = 80
tv594 = 88
tv145 = 96
tv593 = 104
tv182 = 112
tv592 = 120
tv192 = 128
tv591 = 136
tv208 = 144
tv590 = 152
tv224 = 160
tv589 = 168
tv238 = 176
tv588 = 184
tv252 = 192
tv587 = 200
tv266 = 208
tv586 = 216
tv280 = 224
tv585 = 232
tv294 = 240
tv584 = 248
tv308 = 256
tv583 = 264
tv322 = 272
tv582 = 280
tv336 = 288
tv581 = 296
tv350 = 304
tv580 = 312
tv364 = 320
tv579 = 328
tv378 = 336
tv578 = 344
tv392 = 352
tv577 = 360
tv406 = 368
tv576 = 376
tv420 = 384
tv575 = 392
tv434 = 400
tv574 = 408
tv448 = 416
tv573 = 424
tv462 = 432
tv572 = 440
tv476 = 448
tv571 = 456
tv490 = 464
tv570 = 472
tv513 = 480
tv569 = 488
tv533 = 496
tv566 = 504
this$ = 528
t$ = 536
valid$ = 544
?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z PROC	; BerconNoise::Update, COMDAT

; 472  : void BerconNoise::Update(TimeValue t, Interval& valid) {	

$LN18:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 520				; 00000208H

; 473  : 	if (pblock == NULL) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+248], 0
	jne	SHORT $LN11@Update
	jmp	$LN1@Update
$LN11@Update:

; 474  : 
; 475  : 	if (!ivalid.InInterval(t)) {

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?InInterval@Interval@@QEBAHH@Z
	test	eax, eax
	jne	$LN12@Update

; 476  : 		ivalid.SetInfinite();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, rax
	call	?SetInfinite@Interval@@QEAAXXZ		; Interval::SetInfinite

; 477  : 
; 478  : 		if (texout != NULL)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+776], 0
	je	SHORT $LN13@Update

; 479  : 			texout->Update(t,ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+776]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+776]
	mov	QWORD PTR tv83[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv595[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv83[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv595[rsp]
	call	QWORD PTR [rax+1400]
$LN13@Update:

; 480  : 
; 481  : 		pblock->GetValue( noise_color1, t, col[0], ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+536]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv93[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv594[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rax, QWORD PTR tv93[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv594[rsp]
	call	QWORD PTR [rax+1672]

; 482  : 		col[0].ClampMinMax();

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+536]
	mov	rcx, rax
	call	QWORD PTR __imp_?ClampMinMax@Color@@QEAAXXZ

; 483  : 		pblock->GetValue( noise_color2, t, col[1], ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+536]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv145[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv593[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 21
	mov	rax, QWORD PTR tv145[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv593[rsp]
	call	QWORD PTR [rax+1672]

; 484  : 		col[1].ClampMinMax();		

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+536]
	mov	rcx, rax
	call	QWORD PTR __imp_?ClampMinMax@Color@@QEAAXXZ

; 485  : 		
; 486  : 		for (int i=0; i<NOISE_NSUBTEX; i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Update
$LN2@Update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Update:
	cmp	DWORD PTR i$1[rsp], 18
	jge	SHORT $LN3@Update

; 487  : 			if (subtex[i]) 

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+560], 0
	je	SHORT $LN14@Update

; 488  : 				subtex[i]->Update(t,ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	movsxd	rcx, DWORD PTR i$1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8+560]
	movsxd	rdx, DWORD PTR i$1[rsp]
	mov	r8, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [r8+rdx*8+560]
	mov	QWORD PTR tv182[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv592[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv182[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv592[rsp]
	call	QWORD PTR [rax+1400]
$LN14@Update:

; 489  : 
; 490  : 		pblock->GetValue( noise_map1_on, t, mapOn[0], ivalid);

	jmp	$LN2@Update
$LN3@Update:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+704]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv192[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv591[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 24
	mov	rax, QWORD PTR tv192[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv591[rsp]
	call	QWORD PTR [rax+1704]

; 491  : 		pblock->GetValue( noise_map2_on, t, mapOn[1], ivalid);				

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+704]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv208[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv590[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 25
	mov	rax, QWORD PTR tv208[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv590[rsp]
	call	QWORD PTR [rax+1704]

; 492  : 
; 493  : 		// General
; 494  : 		pblock->GetValue( noise_hithresh, t, high, ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 204				; 000000ccH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv224[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv589[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	mov	rax, QWORD PTR tv224[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv589[rsp]
	call	QWORD PTR [rax+1712]

; 495  : 		pblock->GetValue( noise_lowthresh, t, low, ivalid );	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 200				; 000000c8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv238[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv588[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 6
	mov	rax, QWORD PTR tv238[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv588[rsp]
	call	QWORD PTR [rax+1712]

; 496  : 		pblock->GetValue( noise_size, t,   size, ivalid );		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 156				; 0000009cH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv252[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv587[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 26
	mov	rax, QWORD PTR tv252[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv587[rsp]
	call	QWORD PTR [rax+1712]

; 497  : 
; 498  : 		// Distortion
; 499  : 		pblock->GetValue( distortion_str, t, distortionStr, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 228				; 000000e4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv266[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv586[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	mov	rax, QWORD PTR tv266[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv586[rsp]
	call	QWORD PTR [rax+1712]

; 500  : 		pblock->GetValue( use_distortion, t, useDistortion, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 224				; 000000e0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv280[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv585[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	mov	rax, QWORD PTR tv280[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv585[rsp]
	call	QWORD PTR [rax+1704]

; 501  : 		pblock->GetValue( uvw_dist, t, uvwDist, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 232				; 000000e8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv294[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv584[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rax, QWORD PTR tv294[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv584[rsp]
	call	QWORD PTR [rax+1704]

; 502  : 
; 503  : 		// Update noise parameters
; 504  : 		pblock->GetValue( noise_phase, t,			phase , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 160				; 000000a0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv308[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv583[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 27
	mov	rax, QWORD PTR tv308[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv583[rsp]
	call	QWORD PTR [rax+1712]

; 505  : 		pblock->GetValue( worley_spread, t,			spread , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 164				; 000000a4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv322[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv582[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 15
	mov	rax, QWORD PTR tv322[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv582[rsp]
	call	QWORD PTR [rax+1712]

; 506  : 		pblock->GetValue( worley_F1, t,				F1 , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 168				; 000000a8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv336[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv581[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 16
	mov	rax, QWORD PTR tv336[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv581[rsp]
	call	QWORD PTR [rax+1712]

; 507  : 		pblock->GetValue( worley_F2, t,				F2 , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 172				; 000000acH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv350[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv580[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	mov	rax, QWORD PTR tv350[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv580[rsp]
	call	QWORD PTR [rax+1712]

; 508  : 		pblock->GetValue( worley_F3, t,				F3 , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 176				; 000000b0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv364[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv579[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	mov	rax, QWORD PTR tv364[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv579[rsp]
	call	QWORD PTR [rax+1712]

; 509  : 		pblock->GetValue( worley_F4, t,				F4 , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 180				; 000000b4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv378[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv578[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	mov	rax, QWORD PTR tv378[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv578[rsp]
	call	QWORD PTR [rax+1712]

; 510  : 
; 511  : 		// Static noise params
; 512  : 		pblock->GetValue( noise_function_type, t,	noiseFunction , ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 184				; 000000b8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv392[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv577[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rax, QWORD PTR tv392[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv577[rsp]
	call	QWORD PTR [rax+1704]

; 513  : 		pblock->GetValue( worley_distance, t,		worleyFunction , ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 188				; 000000bcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv406[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv576[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	mov	rax, QWORD PTR tv406[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv576[rsp]
	call	QWORD PTR [rax+1704]

; 514  : 		pblock->GetValue( fractal_type, t,			fractalFunction, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 192				; 000000c0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv420[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv575[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR tv420[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv575[rsp]
	call	QWORD PTR [rax+1704]

; 515  : 
; 516  : 		// Update fractal parameters
; 517  : 		pblock->GetValue( fractal_levels, t,  levels, ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 196				; 000000c4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv434[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv574[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 5
	mov	rax, QWORD PTR tv434[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv574[rsp]
	call	QWORD PTR [rax+1712]

; 518  : 		pblock->GetValue( fractal_h, t, fractalH, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 208				; 000000d0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv448[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv573[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 3
	mov	rax, QWORD PTR tv448[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv573[rsp]
	call	QWORD PTR [rax+1712]

; 519  : 		pblock->GetValue( fractal_offset, t, fractalOffset, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 212				; 000000d4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv462[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv572[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	mov	rax, QWORD PTR tv462[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv572[rsp]
	call	QWORD PTR [rax+1712]

; 520  : 		pblock->GetValue( fractal_gain, t, fractalGain, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 216				; 000000d8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv476[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv571[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 1
	mov	rax, QWORD PTR tv476[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv571[rsp]
	call	QWORD PTR [rax+1712]

; 521  : 		pblock->GetValue( fractal_lacunarity, t, fractalLacunarity, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 220				; 000000dcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv490[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv570[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 4
	mov	rax, QWORD PTR tv490[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv570[rsp]
	call	QWORD PTR [rax+1712]

; 522  : 	
; 523  : 		if (high<low) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+200]
	comiss	xmm0, DWORD PTR [rcx+204]
	jbe	SHORT $LN15@Update

; 524  : 			float tmp = low;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+200]
	movss	DWORD PTR tmp$4[rsp], xmm0

; 525  : 			low = high;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+204]
	movss	DWORD PTR [rax+200], xmm0

; 526  : 			high = tmp;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR tmp$4[rsp]
	movss	DWORD PTR [rax+204], xmm0
$LN15@Update:

; 527  : 		}
; 528  : 
; 529  : 		// Update maps
; 530  : 		for (int i = 0; i<14; i++)

	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN7@Update
$LN5@Update:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN7@Update:
	cmp	DWORD PTR i$2[rsp], 14
	jge	$LN6@Update

; 531  : 			pbMap->GetValue((i+14), t, mapOn[i+4], ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	ecx, DWORD PTR i$2[rsp]
	add	ecx, 4
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx*4+704]
	mov	edx, DWORD PTR i$2[rsp]
	add	edx, 14
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+264]
	mov	r9, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [r9+264]
	mov	QWORD PTR tv513[rsp], r9
	mov	r8, QWORD PTR [r8]
	mov	QWORD PTR tv569[rsp], r8
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv513[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv569[rsp]
	call	QWORD PTR [rax+1704]
	jmp	$LN5@Update
$LN6@Update:

; 532  : 
; 533  : 		// Curve
; 534  : 		pbCurve->GetValue(enable_curve, t, useCurve, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 800				; 00000320H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+256]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+256]
	mov	QWORD PTR tv533[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv566[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR tv533[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv566[rsp]
	call	QWORD PTR [rax+1704]

; 535  : 
; 536  : 		EnableStuff();		

	mov	rcx, QWORD PTR this$[rsp]
	call	?EnableStuff@BerconNoise@@QEAAXXZ	; BerconNoise::EnableStuff

; 537  : 
; 538  : 		// Slight optimization
; 539  : 		mappedParameters = false;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+152], 0

; 540  : 		for (int i=5;i<=17;i++)

	mov	DWORD PTR i$3[rsp], 5
	jmp	SHORT $LN10@Update
$LN8@Update:
	mov	eax, DWORD PTR i$3[rsp]
	inc	eax
	mov	DWORD PTR i$3[rsp], eax
$LN10@Update:
	cmp	DWORD PTR i$3[rsp], 17
	jg	SHORT $LN9@Update

; 541  : 			if (mapOn[i] && subtex[i])

	movsxd	rax, DWORD PTR i$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax*4+704], 0
	je	SHORT $LN16@Update
	movsxd	rax, DWORD PTR i$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+560], 0
	je	SHORT $LN16@Update

; 542  : 				mappedParameters = true;			

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+152], 1
$LN16@Update:

; 543  : 
; 544  : 		//calcAverage(); // Update average value		
; 545  : 		berconXYZ.update(pbXYZ, t, ivalid);

	jmp	SHORT $LN8@Update
$LN9@Update:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 272				; 00000110H
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+240]
	call	?update@BerconXYZ@@QEAAXPEAVIParamBlock2@@HAEAVInterval@@@Z ; BerconXYZ::update
$LN12@Update:

; 546  : 	}
; 547  : 	
; 548  : 	valid &= ivalid;

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+784]
	mov	rcx, QWORD PTR valid$[rsp]
	call	??_4Interval@@QEAAAEAV0@V0@@Z		; Interval::operator&=
$LN1@Update:

; 549  : }

	add	rsp, 520				; 00000208H
	ret	0
?Update@BerconNoise@@UEAAXHAEAVInterval@@@Z ENDP	; BerconNoise::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z
_TEXT	SEGMENT
this$ = 48
dlg$ = 56
?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z PROC	; BerconNoise::SetDlgThing, COMDAT

; 614  : BOOL BerconNoise::SetDlgThing(ParamDlg* dlg) {	

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 615  : 	if (dlg == texoutDlg)

	mov	rax, QWORD PTR ?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA ; BerconNoise::texoutDlg
	cmp	QWORD PTR dlg$[rsp], rax
	jne	SHORT $LN2@SetDlgThin

; 616  : 		texoutDlg->SetThing(texout);

	mov	rax, QWORD PTR ?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA ; BerconNoise::texoutDlg
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+712]
	mov	rcx, QWORD PTR ?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA ; BerconNoise::texoutDlg
	call	QWORD PTR [rax+24]

; 617  : 	else 

	jmp	SHORT $LN3@SetDlgThin
$LN2@SetDlgThin:

; 618  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@SetDlgThin
$LN3@SetDlgThin:

; 619  : 	return TRUE;

	mov	eax, 1
$LN1@SetDlgThin:

; 620  : }

	add	rsp, 40					; 00000028H
	ret	0
?SetDlgThing@BerconNoise@@UEAAHPEAVParamDlg@@@Z ENDP	; BerconNoise::SetDlgThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z PROC ; BerconNoise::CreateParamDlg, COMDAT

; 603  : ParamDlg* BerconNoise::CreateParamDlg(HWND hwMtlEdit, IMtlParams *imp) {	

$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H
	mov	QWORD PTR $T7[rsp], -2

; 604  : 	IAutoMParamDlg* masterDlg = BerconNoiseDesc.CreateParamDlgs(hwMtlEdit, imp, this);

	mov	r9, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR imp$[rsp]
	mov	rdx, QWORD PTR hwMtlEdit$[rsp]
	lea	rcx, OFFSET FLAT:?BerconNoiseDesc@@3VBerconNoiseClassDesc@@A
	call	QWORD PTR __imp_?CreateParamDlgs@ClassDesc2@@QEAAPEAVIAutoMParamDlg@@PEAUHWND__@@PEAVIMtlParams@@PEAVReferenceTarget@@@Z
	mov	QWORD PTR masterDlg$[rsp], rax

; 605  : 	texoutDlg = texout->CreateParamDlg(hwMtlEdit, imp);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+776]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+776]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR imp$[rsp]
	mov	rdx, QWORD PTR hwMtlEdit$[rsp]
	call	QWORD PTR [rax+1424]
	mov	QWORD PTR ?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA, rax ; BerconNoise::texoutDlg

; 606  : 	masterDlg->AddDlg(texoutDlg);

	mov	rax, QWORD PTR masterDlg$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR ?texoutDlg@BerconNoise@@2PEAVParamDlg@@EA ; BerconNoise::texoutDlg
	mov	rcx, QWORD PTR masterDlg$[rsp]
	call	QWORD PTR [rax+120]

; 607  : 	berconnoise_param_blk.SetUserDlgProc(new BerconNoiseDlgProc(this));

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@BerconNoiseDlgProc@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0BerconNoiseDlgProc@@QEAA@PEAVBerconNoise@@@Z ; BerconNoiseDlgProc::BerconNoiseDlgProc
	mov	QWORD PTR tv144[rsp], rax
	jmp	SHORT $LN4@CreatePara
$LN3@CreatePara:
	mov	QWORD PTR tv144[rsp], 0
$LN4@CreatePara:
	mov	rax, QWORD PTR tv144[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rdx, QWORD PTR $T4[rsp]
	lea	rcx, OFFSET FLAT:?berconnoise_param_blk@@3VParamBlockDesc2@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 608  : 	BerconCurve_param_blk.SetUserDlgProc(new BerconCurveDlgProcNOISE(this));

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN5@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rsp]
	call	?__autoclassinit2@BerconCurveDlgProcNOISE@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0BerconCurveDlgProcNOISE@@QEAA@PEAVBerconNoise@@@Z ; BerconCurveDlgProcNOISE::BerconCurveDlgProcNOISE
	mov	QWORD PTR tv163[rsp], rax
	jmp	SHORT $LN6@CreatePara
$LN5@CreatePara:
	mov	QWORD PTR tv163[rsp], 0
$LN6@CreatePara:
	mov	rax, QWORD PTR tv163[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	rdx, QWORD PTR $T5[rsp]
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 609  : 	xyz_blk.SetUserDlgProc(new BerconXYZDlgProc(this));	

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T3[rsp], rax
	cmp	QWORD PTR $T3[rsp], 0
	je	SHORT $LN7@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T3[rsp]
	call	?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ; BerconXYZDlgProc::BerconXYZDlgProc
	mov	QWORD PTR tv190[rsp], rax
	jmp	SHORT $LN8@CreatePara
$LN7@CreatePara:
	mov	QWORD PTR tv190[rsp], 0
$LN8@CreatePara:
	mov	rax, QWORD PTR tv190[rsp]
	mov	QWORD PTR $T6[rsp], rax
	mov	rdx, QWORD PTR $T6[rsp]
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 610  : 	EnableStuff();

	mov	rcx, QWORD PTR this$[rsp]
	call	?EnableStuff@BerconNoise@@QEAAXXZ	; BerconNoise::EnableStuff

; 611  : 	return masterDlg;	

	mov	rax, QWORD PTR masterDlg$[rsp]

; 612  : }

	add	rsp, 136				; 00000088H
	ret	0
?CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z ENDP ; BerconNoise::CreateParamDlg
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconNoise::CreateParamDlg'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconNoise::CreateParamDlg'::`1'::dtor$0
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconNoise::CreateParamDlg'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconNoise::CreateParamDlg'::`1'::dtor$1
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconNoise::CreateParamDlg'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconNoise::CreateParamDlg'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconNoise::CreateParamDlg'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconNoise::CreateParamDlg'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconNoise::CreateParamDlg'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconNoise::CreateParamDlg'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconNoise::CreateParamDlg'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??CreateParamDlg@BerconNoise@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconNoise::CreateParamDlg'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z
_TEXT	SEGMENT
tv143 = 64
tv142 = 72
this$ = 96
t$ = 104
thmaker$ = 112
?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z PROC ; BerconNoise::GetActiveTexHandle, COMDAT

; 593  : DWORD_PTR BerconNoise::GetActiveTexHandle(TimeValue t, TexHandleMaker& thmaker) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 594  : 	if (texHandle) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+808], 0
	je	SHORT $LN2@GetActiveT

; 595  : 		if (texHandleValid.InInterval(t))

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 816				; 00000330H
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?InInterval@Interval@@QEBAHH@Z
	test	eax, eax
	je	SHORT $LN3@GetActiveT

; 596  : 			return texHandle->GetHandle();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+808]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+808]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
	jmp	$LN1@GetActiveT
	jmp	SHORT $LN4@GetActiveT
$LN3@GetActiveT:

; 597  : 		else DiscardTexHandle();

	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconNoise@@QEAAXXZ	; BerconNoise::DiscardTexHandle
$LN4@GetActiveT:
$LN2@GetActiveT:

; 598  : 		}
; 599  : 	texHandle = thmaker.MakeHandle(GetVPDisplayDIB(t,thmaker,texHandleValid));

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 816				; 00000330H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv143[rsp], rcx
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8, QWORD PTR thmaker$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv143[rsp]
	call	QWORD PTR [rax+1536]
	mov	rcx, QWORD PTR thmaker$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv142[rsp], rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR thmaker$[rsp]
	mov	rax, QWORD PTR tv142[rsp]
	call	QWORD PTR [rax+32]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+808], rax

; 600  : 	return texHandle->GetHandle();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+808]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+808]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
$LN1@GetActiveT:

; 601  : }

	add	rsp, 88					; 00000058H
	ret	0
?GetActiveTexHandle@BerconNoise@@UEAA_KHAEAVTexHandleMaker@@@Z ENDP ; BerconNoise::GetActiveTexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?ActivateTexDisplay@BerconNoise@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 48
onoff$ = 56
?ActivateTexDisplay@BerconNoise@@UEAAXH@Z PROC		; BerconNoise::ActivateTexDisplay, COMDAT

; 119  : 		void ActivateTexDisplay(BOOL onoff) { if (!onoff) DiscardTexHandle(); }

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	cmp	DWORD PTR onoff$[rsp], 0
	jne	SHORT $LN2@ActivateTe
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconNoise@@QEAAXXZ	; BerconNoise::DiscardTexHandle
$LN2@ActivateTe:
	add	rsp, 40					; 00000028H
	ret	0
?ActivateTexDisplay@BerconNoise@@UEAAXH@Z ENDP		; BerconNoise::ActivateTexDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?SupportTexDisplay@BerconNoise@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportTexDisplay@BerconNoise@@UEAAHXZ PROC		; BerconNoise::SupportTexDisplay, COMDAT

; 118  : 		BOOL SupportTexDisplay() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SupportTexDisplay@BerconNoise@@UEAAHXZ ENDP		; BerconNoise::SupportTexDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?DiscardTexHandle@BerconNoise@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?DiscardTexHandle@BerconNoise@@QEAAXXZ PROC		; BerconNoise::DiscardTexHandle, COMDAT

; 117  : 		void DiscardTexHandle() { if (texHandle) { texHandle->DeleteThis(); texHandle = NULL; } }

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+808], 0
	je	SHORT $LN2@DiscardTex
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+808]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+808]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+808], 0
$LN2@DiscardTex:
	add	rsp, 40					; 00000028H
	ret	0
?DiscardTexHandle@BerconNoise@@QEAAXXZ ENDP		; BerconNoise::DiscardTexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
pCurve$ = 48
t$ = 56
tv71 = 64
tv165 = 72
tv161 = 80
$T1 = 88
$T2 = 96
$T3 = 104
pt$ = 136
__$ArrayPad$ = 168
this$ = 192
curvenum$ = 200
pCCtl$ = 208
?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z PROC ; BerconNoise::NewCurveCreatedCallback, COMDAT

; 101  : 	{

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 184				; 000000b8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 102  : 		ICurve* pCurve = pCCtl->GetControlCurve(curvenum);

	mov	rax, QWORD PTR pCCtl$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR curvenum$[rsp]
	mov	rcx, QWORD PTR pCCtl$[rsp]
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR pCurve$[rsp], rax

; 103  : 		TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv71[rsp], rax
	mov	rax, QWORD PTR tv71[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 104  : 		CurvePoint pt = pCurve->GetPoint(t, 0);

	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv165[rsp], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	lea	rdx, QWORD PTR pt$[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR tv165[rsp]
	call	QWORD PTR [rax+1448]

; 105  : 		pt.p.y = 0.f;

	xorps	xmm0, xmm0
	movss	DWORD PTR pt$[rsp+4], xmm0

; 106  : 		pCurve->SetPoint(t, 0, &pt);

	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	lea	r9, QWORD PTR pt$[rsp]
	xor	r8d, r8d
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1440]

; 107  : 		pCurve->SetPenProperty(RGB(0,0,0));

	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1344]

; 108  : 		pCurve->SetDisabledPenProperty(RGB(128,128,128));

	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 8421504				; 00808080H
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1360]

; 109  : 		pt = pCurve->GetPoint(t, 1);

	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv161[rsp], rcx
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR tv161[rsp]
	call	QWORD PTR [rax+1448]
	mov	rdx, rax
	lea	rcx, QWORD PTR pt$[rsp]
	call	??4CurvePoint@@QEAAAEAV0@AEBV0@@Z	; CurvePoint::operator=

; 110  : 		pt.p.y = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR pt$[rsp+4], xmm0

; 111  : 		pCurve->SetPoint(t, 1, &pt);

	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	lea	r9, QWORD PTR pt$[rsp]
	mov	r8d, 1
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1440]

; 112  : 	}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 184				; 000000b8H
	ret	0
?NewCurveCreatedCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z ENDP ; BerconNoise::NewCurveCreatedCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
p_curve$ = 32
tv86 = 40
this$ = 64
curvenum$ = 72
pCCtl$ = 80
?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z PROC ; BerconNoise::ResetCallback, COMDAT

; 91   : 	{

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 92   : 		ICurve* p_curve{ pCCtl->GetControlCurve(curvenum) };

	mov	rax, QWORD PTR pCCtl$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR curvenum$[rsp]
	mov	rcx, QWORD PTR pCCtl$[rsp]
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR p_curve$[rsp], rax

; 93   : 		if (p_curve)

	cmp	QWORD PTR p_curve$[rsp], 0
	je	SHORT $LN2@ResetCallb

; 94   : 		{
; 95   : 			p_curve->SetNumPts(2);

	mov	rax, QWORD PTR p_curve$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 2
	mov	rcx, QWORD PTR p_curve$[rsp]
	call	QWORD PTR [rax+1416]

; 96   : 			NewCurveCreatedCallback(curvenum, pCCtl);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv86[rsp], rcx
	mov	r8, QWORD PTR pCCtl$[rsp]
	mov	edx, DWORD PTR curvenum$[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv86[rsp]
	call	QWORD PTR [rax+24]
$LN2@ResetCallb:

; 97   : 		}
; 98   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?ResetCallback@BerconNoise@@UEAAXHPEAVICurveCtl@@@Z ENDP ; BerconNoise::ResetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?GetToolTip@BerconNoise@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
iButton$ = 16
ToolTip$ = 24
pCCtl$ = 32
?GetToolTip@BerconNoise@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z PROC ; BerconNoise::GetToolTip, COMDAT

; 89   : 	BOOL GetToolTip(int iButton, TSTR& ToolTip, ICurveCtl* pCCtl) { return TRUE; };

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetToolTip@BerconNoise@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ENDP ; BerconNoise::GetToolTip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.h
;	COMDAT ?SetCustomImageList@BerconNoise@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
hCTools$ = 16
pCCtl$ = 24
?SetCustomImageList@BerconNoise@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z PROC ; BerconNoise::SetCustomImageList, COMDAT

; 88   : 	BOOL SetCustomImageList(HIMAGELIST& hCTools, ICurveCtl* pCCtl) { return TRUE; };

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SetCustomImageList@BerconNoise@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ENDP ; BerconNoise::SetCustomImageList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?EnableStuff@BerconNoise@@QEAAXXZ
_TEXT	SEGMENT
map$1 = 48
tv158 = 56
tv167 = 60
tv176 = 64
tv185 = 68
tv194 = 72
tv203 = 76
tv212 = 80
tv221 = 84
tv230 = 88
tv239 = 92
tv248 = 96
tv257 = 100
tv80 = 104
tv298 = 112
tv94 = 120
tv297 = 128
tv140 = 136
tv296 = 144
this$ = 176
?EnableStuff@BerconNoise@@QEAAXXZ PROC			; BerconNoise::EnableStuff, COMDAT

; 557  : void BerconNoise::EnableStuff() {	

$LN29:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H

; 558  : 	if (pblock) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+248], 0
	je	$LN2@EnableStuf

; 559  : 		IParamMap2 *map = pblock->GetMap();		

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+248]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+248]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+2328]
	mov	QWORD PTR map$1[rsp], rax

; 560  : 		if (map) {

	cmp	QWORD PTR map$1[rsp], 0
	je	$LN3@EnableStuf

; 561  : 			// Update values we need to know
; 562  : 			pblock->GetValue( use_distortion, 0, useDistortion, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 224				; 000000e0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv80[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv298[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	xor	r8d, r8d
	mov	dx, 10
	mov	rax, QWORD PTR tv80[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv298[rsp]
	call	QWORD PTR [rax+1704]

; 563  : 			pblock->GetValue( noise_function_type, 0, noiseFunction, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 184				; 000000b8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv94[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv297[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	xor	r8d, r8d
	mov	dx, 13
	mov	rax, QWORD PTR tv94[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv297[rsp]
	call	QWORD PTR [rax+1704]

; 564  : 			pblock->GetValue( fractal_type, 0, fractalFunction, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 784				; 00000310H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 192				; 000000c0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+248]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+248]
	mov	QWORD PTR tv140[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv296[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	xor	r8d, r8d
	xor	edx, edx
	mov	rax, QWORD PTR tv140[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv296[rsp]
	call	QWORD PTR [rax+1704]

; 565  : 
; 566  : 			// Update parameters			
; 567  : 			map->Enable(noise_phase, noiseFunction==2||noiseFunction==5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 2
	je	SHORT $LN5@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 5
	je	SHORT $LN5@EnableStuf
	mov	DWORD PTR tv158[rsp], 0
	jmp	SHORT $LN6@EnableStuf
$LN5@EnableStuf:
	mov	DWORD PTR tv158[rsp], 1
$LN6@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv158[rsp]
	mov	dx, 27
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 568  : 			
; 569  : 			map->Enable(worley_F1, noiseFunction==6?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 6
	jne	SHORT $LN7@EnableStuf
	mov	DWORD PTR tv167[rsp], 1
	jmp	SHORT $LN8@EnableStuf
$LN7@EnableStuf:
	mov	DWORD PTR tv167[rsp], 0
$LN8@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv167[rsp]
	mov	dx, 16
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 570  : 			map->Enable(worley_F2, noiseFunction==6?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 6
	jne	SHORT $LN9@EnableStuf
	mov	DWORD PTR tv176[rsp], 1
	jmp	SHORT $LN10@EnableStuf
$LN9@EnableStuf:
	mov	DWORD PTR tv176[rsp], 0
$LN10@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv176[rsp]
	mov	dx, 17
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 571  : 			map->Enable(worley_F3, noiseFunction==6?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 6
	jne	SHORT $LN11@EnableStuf
	mov	DWORD PTR tv185[rsp], 1
	jmp	SHORT $LN12@EnableStuf
$LN11@EnableStuf:
	mov	DWORD PTR tv185[rsp], 0
$LN12@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv185[rsp]
	mov	dx, 18
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 572  : 			map->Enable(worley_F4, noiseFunction==6?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 6
	jne	SHORT $LN13@EnableStuf
	mov	DWORD PTR tv194[rsp], 1
	jmp	SHORT $LN14@EnableStuf
$LN13@EnableStuf:
	mov	DWORD PTR tv194[rsp], 0
$LN14@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv194[rsp]
	mov	dx, 19
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 573  : 			map->Enable(worley_distance, noiseFunction==6?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 6
	jne	SHORT $LN15@EnableStuf
	mov	DWORD PTR tv203[rsp], 1
	jmp	SHORT $LN16@EnableStuf
$LN15@EnableStuf:
	mov	DWORD PTR tv203[rsp], 0
$LN16@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv203[rsp]
	mov	dx, 14
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 574  : 			map->Enable(worley_spread, noiseFunction==6?TRUE:FALSE);			

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+184], 6
	jne	SHORT $LN17@EnableStuf
	mov	DWORD PTR tv212[rsp], 1
	jmp	SHORT $LN18@EnableStuf
$LN17@EnableStuf:
	mov	DWORD PTR tv212[rsp], 0
$LN18@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv212[rsp]
	mov	dx, 15
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 575  : 
; 576  : 			map->Enable(fractal_levels, fractalFunction!=0?TRUE:FALSE);			

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+192], 0
	je	SHORT $LN19@EnableStuf
	mov	DWORD PTR tv221[rsp], 1
	jmp	SHORT $LN20@EnableStuf
$LN19@EnableStuf:
	mov	DWORD PTR tv221[rsp], 0
$LN20@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv221[rsp]
	mov	dx, 5
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 577  : 			map->Enable(fractal_lacunarity, fractalFunction>2?TRUE:FALSE);			

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+192], 2
	jle	SHORT $LN21@EnableStuf
	mov	DWORD PTR tv230[rsp], 1
	jmp	SHORT $LN22@EnableStuf
$LN21@EnableStuf:
	mov	DWORD PTR tv230[rsp], 0
$LN22@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv230[rsp]
	mov	dx, 4
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 578  : 			map->Enable(fractal_h, fractalFunction>2?TRUE:FALSE);			

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+192], 2
	jle	SHORT $LN23@EnableStuf
	mov	DWORD PTR tv239[rsp], 1
	jmp	SHORT $LN24@EnableStuf
$LN23@EnableStuf:
	mov	DWORD PTR tv239[rsp], 0
$LN24@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv239[rsp]
	mov	dx, 3
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 579  : 			map->Enable(fractal_offset, fractalFunction>4?TRUE:FALSE);			

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+192], 4
	jle	SHORT $LN25@EnableStuf
	mov	DWORD PTR tv248[rsp], 1
	jmp	SHORT $LN26@EnableStuf
$LN25@EnableStuf:
	mov	DWORD PTR tv248[rsp], 0
$LN26@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv248[rsp]
	mov	dx, 2
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 580  : 			map->Enable(fractal_gain, fractalFunction>5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+192], 5
	jle	SHORT $LN27@EnableStuf
	mov	DWORD PTR tv257[rsp], 1
	jmp	SHORT $LN28@EnableStuf
$LN27@EnableStuf:
	mov	DWORD PTR tv257[rsp], 0
$LN28@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv257[rsp]
	mov	dx, 1
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 581  : 
; 582  : 			map->Enable(distortion_str, useDistortion);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+224]
	mov	dx, 11
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 583  : 			map->Enable(distortion_map, useDistortion);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+224]
	mov	dx, 8
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 584  : 			map->Enable(distortion_map2, useDistortion);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+224]
	mov	dx, 9
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]
$LN3@EnableStuf:
$LN2@EnableStuf:

; 585  : 		}
; 586  : 	}
; 587  : }

	add	rsp, 168				; 000000a8H
	ret	0
?EnableStuff@BerconNoise@@QEAAXXZ ENDP			; BerconNoise::EnableStuff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z
_TEXT	SEGMENT
tv86 = 32
$T1 = 36
$T2 = 48
$T3 = 60
$T4 = 72
$T5 = 84
this$ = 112
sc$ = 120
p$ = 128
?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z PROC ; BerconNoise::applyDistortion, COMDAT

; 768  : void BerconNoise::applyDistortion(ShadeContext& sc, Point3& p) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H

; 769  : 	if (subtex[2])

	mov	eax, 8
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	$LN2@applyDisto

; 770  : 		if (subtex[3])

	mov	eax, 8
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	$LN3@applyDisto

; 771  : 			p += subtex[2]->EvalNormalPerturb(sc)*distortionStr*subtex[3]->EvalMono(sc);

	mov	eax, 8
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	movss	DWORD PTR tv86[rsp], xmm0
	mov	eax, 8
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax+1520]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rcx+228]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	movss	xmm0, DWORD PTR tv86[rsp]
	movaps	xmm2, xmm0
	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	rdx, rax
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z

; 772  : 		else					

	jmp	SHORT $LN4@applyDisto
$LN3@applyDisto:

; 773  : 			p += subtex[2]->EvalNormalPerturb(sc)*distortionStr;

	mov	eax, 8
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T4[rsp]
	call	QWORD PTR [rax+1520]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rcx+228]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T5[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	rdx, rax
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z
$LN4@applyDisto:
$LN2@applyDisto:

; 774  : }

	add	rsp, 104				; 00000068H
	ret	0
?applyDistortion@BerconNoise@@QEAAXAEAVShadeContext@@AEAVPoint3@@@Z ENDP ; BerconNoise::applyDistortion
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z
_TEXT	SEGMENT
tv94 = 32
tv151 = 36
tv176 = 40
tv201 = 44
tv226 = 48
tv251 = 52
tv276 = 56
tv301 = 60
tv326 = 64
tv351 = 68
tv376 = 72
tv433 = 76
tv458 = 80
np$ = 96
this$ = 208
__$ReturnUdt$ = 216
sc$ = 224
?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z PROC ; BerconNoise::EvalParameters, COMDAT

; 776  : NoiseParams BerconNoise::EvalParameters(ShadeContext* sc) {

$LN31:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 184				; 000000b8H

; 777  : 	NoiseParams np;
; 778  : 	np.noiseFunction = noiseFunction;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+184]
	mov	DWORD PTR np$[rsp], eax

; 779  : 	np.fractalFunction = fractalFunction;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+192]
	mov	DWORD PTR np$[rsp+4], eax

; 780  : 	np.worleyFunction = worleyFunction;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+188]
	mov	DWORD PTR np$[rsp+8], eax

; 781  : 	if (mappedParameters) {

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+152]
	test	eax, eax
	je	$LN2@EvalParame

; 782  : 		np.low			= (mapOn[5] && subtex[5])?subtex[5]->EvalMono(*sc)*low:low;	

	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN5@EvalParame
	mov	eax, 8
	imul	rax, rax, 5
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN5@EvalParame
	mov	eax, 8
	imul	rax, rax, 5
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+200]
	movss	DWORD PTR tv94[rsp], xmm0
	jmp	SHORT $LN6@EvalParame
$LN5@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+200]
	movss	DWORD PTR tv94[rsp], xmm0
$LN6@EvalParame:
	movss	xmm0, DWORD PTR tv94[rsp]
	movss	DWORD PTR np$[rsp+60], xmm0

; 783  : 		np.high			= (mapOn[6] && subtex[6])?subtex[6]->EvalMono(*sc)*high:high;

	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN7@EvalParame
	mov	eax, 8
	imul	rax, rax, 6
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN7@EvalParame
	mov	eax, 8
	imul	rax, rax, 6
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+204]
	movss	DWORD PTR tv151[rsp], xmm0
	jmp	SHORT $LN8@EvalParame
$LN7@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+204]
	movss	DWORD PTR tv151[rsp], xmm0
$LN8@EvalParame:
	movss	xmm0, DWORD PTR tv151[rsp]
	movss	DWORD PTR np$[rsp+64], xmm0

; 784  : 		np.phase		= (mapOn[7] && subtex[7])?subtex[7]->EvalMono(*sc)*phase:phase;

	mov	eax, 4
	imul	rax, rax, 7
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN9@EvalParame
	mov	eax, 8
	imul	rax, rax, 7
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN9@EvalParame
	mov	eax, 8
	imul	rax, rax, 7
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 7
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+160]
	movss	DWORD PTR tv176[rsp], xmm0
	jmp	SHORT $LN10@EvalParame
$LN9@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+160]
	movss	DWORD PTR tv176[rsp], xmm0
$LN10@EvalParame:
	movss	xmm0, DWORD PTR tv176[rsp]
	movss	DWORD PTR np$[rsp+12], xmm0

; 785  : 		np.spread		= (mapOn[8] && subtex[8])?subtex[8]->EvalMono(*sc)*spread:spread;

	mov	eax, 4
	imul	rax, rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN11@EvalParame
	mov	eax, 8
	imul	rax, rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN11@EvalParame
	mov	eax, 8
	imul	rax, rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 8
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+164]
	movss	DWORD PTR tv201[rsp], xmm0
	jmp	SHORT $LN12@EvalParame
$LN11@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+164]
	movss	DWORD PTR tv201[rsp], xmm0
$LN12@EvalParame:
	movss	xmm0, DWORD PTR tv201[rsp]
	movss	DWORD PTR np$[rsp+16], xmm0

; 786  : 		np.F1			= (mapOn[9] && subtex[9])?subtex[9]->EvalMono(*sc)*F1:F1;

	mov	eax, 4
	imul	rax, rax, 9
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN13@EvalParame
	mov	eax, 8
	imul	rax, rax, 9
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN13@EvalParame
	mov	eax, 8
	imul	rax, rax, 9
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 9
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+168]
	movss	DWORD PTR tv226[rsp], xmm0
	jmp	SHORT $LN14@EvalParame
$LN13@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+168]
	movss	DWORD PTR tv226[rsp], xmm0
$LN14@EvalParame:
	movss	xmm0, DWORD PTR tv226[rsp]
	movss	DWORD PTR np$[rsp+20], xmm0

; 787  : 		np.F2			= (mapOn[10] && subtex[10])?subtex[10]->EvalMono(*sc)*F2:F2;

	mov	eax, 4
	imul	rax, rax, 10
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN15@EvalParame
	mov	eax, 8
	imul	rax, rax, 10
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN15@EvalParame
	mov	eax, 8
	imul	rax, rax, 10
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 10
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+172]
	movss	DWORD PTR tv251[rsp], xmm0
	jmp	SHORT $LN16@EvalParame
$LN15@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+172]
	movss	DWORD PTR tv251[rsp], xmm0
$LN16@EvalParame:
	movss	xmm0, DWORD PTR tv251[rsp]
	movss	DWORD PTR np$[rsp+24], xmm0

; 788  : 		np.F3			= (mapOn[11] && subtex[11])?subtex[11]->EvalMono(*sc)*F3:F3;

	mov	eax, 4
	imul	rax, rax, 11
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN17@EvalParame
	mov	eax, 8
	imul	rax, rax, 11
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN17@EvalParame
	mov	eax, 8
	imul	rax, rax, 11
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 11
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+176]
	movss	DWORD PTR tv276[rsp], xmm0
	jmp	SHORT $LN18@EvalParame
$LN17@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+176]
	movss	DWORD PTR tv276[rsp], xmm0
$LN18@EvalParame:
	movss	xmm0, DWORD PTR tv276[rsp]
	movss	DWORD PTR np$[rsp+28], xmm0

; 789  : 		np.F4			= (mapOn[12] && subtex[12])?subtex[12]->EvalMono(*sc)*F4:F4;

	mov	eax, 4
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN19@EvalParame
	mov	eax, 8
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN19@EvalParame
	mov	eax, 8
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 12
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+180]
	movss	DWORD PTR tv301[rsp], xmm0
	jmp	SHORT $LN20@EvalParame
$LN19@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+180]
	movss	DWORD PTR tv301[rsp], xmm0
$LN20@EvalParame:
	movss	xmm0, DWORD PTR tv301[rsp]
	movss	DWORD PTR np$[rsp+32], xmm0

; 790  : 		np.levels		= (mapOn[13] && subtex[13])?subtex[13]->EvalMono(*sc)*levels:levels;

	mov	eax, 4
	imul	rax, rax, 13
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN21@EvalParame
	mov	eax, 8
	imul	rax, rax, 13
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN21@EvalParame
	mov	eax, 8
	imul	rax, rax, 13
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 13
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+196]
	movss	DWORD PTR tv326[rsp], xmm0
	jmp	SHORT $LN22@EvalParame
$LN21@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+196]
	movss	DWORD PTR tv326[rsp], xmm0
$LN22@EvalParame:
	movss	xmm0, DWORD PTR tv326[rsp]
	movss	DWORD PTR np$[rsp+36], xmm0

; 791  : 		np.offset		= (mapOn[14] && subtex[14])?subtex[14]->EvalMono(*sc)*fractalOffset:fractalOffset;

	mov	eax, 4
	imul	rax, rax, 14
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN23@EvalParame
	mov	eax, 8
	imul	rax, rax, 14
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN23@EvalParame
	mov	eax, 8
	imul	rax, rax, 14
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 14
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+212]
	movss	DWORD PTR tv351[rsp], xmm0
	jmp	SHORT $LN24@EvalParame
$LN23@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+212]
	movss	DWORD PTR tv351[rsp], xmm0
$LN24@EvalParame:
	movss	xmm0, DWORD PTR tv351[rsp]
	movss	DWORD PTR np$[rsp+48], xmm0

; 792  : 		np.gain			= (mapOn[15] && subtex[15])?subtex[15]->EvalMono(*sc)*fractalGain:fractalGain;

	mov	eax, 4
	imul	rax, rax, 15
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN25@EvalParame
	mov	eax, 8
	imul	rax, rax, 15
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN25@EvalParame
	mov	eax, 8
	imul	rax, rax, 15
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 15
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+216]
	movss	DWORD PTR tv376[rsp], xmm0
	jmp	SHORT $LN26@EvalParame
$LN25@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+216]
	movss	DWORD PTR tv376[rsp], xmm0
$LN26@EvalParame:
	movss	xmm0, DWORD PTR tv376[rsp]
	movss	DWORD PTR np$[rsp+52], xmm0

; 793  : 		np.lacunarity	= (mapOn[16] && subtex[16])?subtex[16]->EvalMono(*sc)*fractalLacunarity:fractalLacunarity;

	mov	eax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN27@EvalParame
	mov	eax, 8
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN27@EvalParame
	mov	eax, 8
	imul	rax, rax, 16
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 16
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+220]
	movss	DWORD PTR tv433[rsp], xmm0
	jmp	SHORT $LN28@EvalParame
$LN27@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+220]
	movss	DWORD PTR tv433[rsp], xmm0
$LN28@EvalParame:
	movss	xmm0, DWORD PTR tv433[rsp]
	movss	DWORD PTR np$[rsp+44], xmm0

; 794  : 		np.H			= (mapOn[17] && subtex[17])?subtex[17]->EvalMono(*sc)*fractalH:fractalH;

	mov	eax, 4
	imul	rax, rax, 17
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+704], 0
	je	SHORT $LN29@EvalParame
	mov	eax, 8
	imul	rax, rax, 17
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+560], 0
	je	SHORT $LN29@EvalParame
	mov	eax, 8
	imul	rax, rax, 17
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+560]
	mov	ecx, 8
	imul	rcx, rcx, 17
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+560]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+208]
	movss	DWORD PTR tv458[rsp], xmm0
	jmp	SHORT $LN30@EvalParame
$LN29@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+208]
	movss	DWORD PTR tv458[rsp], xmm0
$LN30@EvalParame:
	movss	xmm0, DWORD PTR tv458[rsp]
	movss	DWORD PTR np$[rsp+40], xmm0

; 795  : 	} else {

	jmp	$LN3@EvalParame
$LN2@EvalParame:

; 796  : 		np.low			= low;	

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+200]
	movss	DWORD PTR np$[rsp+60], xmm0

; 797  : 		np.high			= high;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+204]
	movss	DWORD PTR np$[rsp+64], xmm0

; 798  : 		np.phase		= phase;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+160]
	movss	DWORD PTR np$[rsp+12], xmm0

; 799  : 		np.spread		= spread;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+164]
	movss	DWORD PTR np$[rsp+16], xmm0

; 800  : 		np.F1			= F1;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+168]
	movss	DWORD PTR np$[rsp+20], xmm0

; 801  : 		np.F2			= F2;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+172]
	movss	DWORD PTR np$[rsp+24], xmm0

; 802  : 		np.F3			= F3;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+176]
	movss	DWORD PTR np$[rsp+28], xmm0

; 803  : 		np.F4			= F4;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+180]
	movss	DWORD PTR np$[rsp+32], xmm0

; 804  : 		np.levels		= levels;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+196]
	movss	DWORD PTR np$[rsp+36], xmm0

; 805  : 		np.offset		= fractalOffset;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+212]
	movss	DWORD PTR np$[rsp+48], xmm0

; 806  : 		np.gain			= fractalGain;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+216]
	movss	DWORD PTR np$[rsp+52], xmm0

; 807  : 		np.lacunarity	= fractalLacunarity;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+220]
	movss	DWORD PTR np$[rsp+44], xmm0

; 808  : 		np.H			= fractalH;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+208]
	movss	DWORD PTR np$[rsp+40], xmm0
$LN3@EvalParame:

; 809  : 	}
; 810  : 	return np;

	lea	rax, QWORD PTR np$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 68					; 00000044H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 811  : }		  

	add	rsp, 184				; 000000b8H
	pop	rdi
	pop	rsi
	ret	0
?EvalParameters@BerconNoise@@QEAA?AVNoiseParams@@PEAVShadeContext@@@Z ENDP ; BerconNoise::EvalParameters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
mapreq$ = 64
bumpreq$ = 72
?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z PROC		; BerconXYZ::map, COMDAT

; 327  : 	void map(int subMtlNum, BitArray& mapreq, BitArray& bumpreq) { if (mappingType==0 || mappingType==1) mapreq.Set(mappingChannel); }	

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@map
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@map
$LN3@map:
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR mapreq$[rsp]
	call	?Set@BitArray@@QEAAXH@Z			; BitArray::Set
$LN2@map:
	add	rsp, 40					; 00000028H
	ret	0
?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z ENDP		; BerconXYZ::map
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?req@BerconXYZ@@QEAAKXZ
_TEXT	SEGMENT
this$ = 8
?req@BerconXYZ@@QEAAKXZ PROC				; BerconXYZ::req, COMDAT

; 326  : 	ULONG req() { if (mappingType==0 || mappingType==1) return MTLREQ_UV; return 0; };

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@req
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@req
$LN3@req:
	mov	eax, 16
	jmp	SHORT $LN1@req
$LN2@req:
	xor	eax, eax
$LN1@req:
	ret	0
?req@BerconXYZ@@QEAAKXZ ENDP				; BerconXYZ::req
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0BerconXYZ@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0BerconXYZ@@QEAA@XZ PROC				; BerconXYZ::BerconXYZ, COMDAT

; 323  : 	BerconXYZ() {offX=0; offY=0; offZ=0; mode2D = FALSE; update();}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 314  : 	bool variance;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 120				; 00000078H
	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 323  : 	BerconXYZ() {offX=0; offY=0; offZ=0; mode2D = FALSE; update();}

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 156				; 0000009cH
	mov	rcx, rax
	call	??0Matrix3@@QEAA@XZ			; Matrix3::Matrix3
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 208				; 000000d0H
	mov	rcx, rax
	call	??0Matrix3@@QEAA@XZ			; Matrix3::Matrix3
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+260], 0
	mov	rcx, QWORD PTR this$[rsp]
	call	?update@BerconXYZ@@QEAAXXZ		; BerconXYZ::update
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0BerconXYZ@@QEAA@XZ ENDP				; BerconXYZ::BerconXYZ
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconXYZDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconXYZDlgProc@@UEAAPEAXI@Z PROC			; BerconXYZDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconXYZDlgProc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconXYZDlgProc@@UEAAPEAXI@Z ENDP			; BerconXYZDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z PROC	; BerconXYZDlgProc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z ENDP	; BerconXYZDlgProc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconXYZDlgProc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconXYZDlgProc@@UEAA@XZ PROC			; BerconXYZDlgProc::~BerconXYZDlgProc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconXYZDlgProc@@UEAA@XZ ENDP			; BerconXYZDlgProc::~BerconXYZDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA PROC	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA ENDP	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA PROC	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA ENDP	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
m$ = 16
?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconXYZDlgProc::SetThing, COMDAT

; 296  : 		void SetThing(ReferenceTarget *m) { reftarg = m; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	ret	0
?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconXYZDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconXYZDlgProc@@UEAAXXZ PROC		; BerconXYZDlgProc::DeleteThis, COMDAT

; 295  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconXYZDlgProc@@UEAAXXZ ENDP		; BerconXYZDlgProc::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwndMap$ = 48
tv64 = 56
custButton$ = 64
tv244 = 72
tv265 = 80
tv286 = 88
tv307 = 96
tv254 = 104
tv275 = 112
tv296 = 120
tv317 = 128
curIndex$1 = 136
__$ArrayPad$ = 144
this$ = 176
t$ = 184
map$ = 192
hWnd$ = 200
msg$ = 208
wParam$ = 216
IParam$ = 224
?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconXYZDlgProc::DlgProc, COMDAT

; 239  : 		INT_PTR DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM IParam) {

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 240  : 			HWND hwndMap;
; 241  : 			ICustButton* custButton;
; 242  : 			switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 24
	je	$LN5@DlgProc
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN4@DlgProc
	jmp	$LN6@DlgProc
$LN4@DlgProc:

; 243  : 				case WM_INITDIALOG:
; 244  : 					custButton = GetICustButton(GetDlgItem(hWnd, IDC_LOCK));

	mov	edx, 1115				; 0000045bH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	call	QWORD PTR __imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z
	mov	QWORD PTR custButton$[rsp], rax

; 245  : 					custButton->SetText(_T("L"));

	mov	rax, QWORD PTR custButton$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_13PHJMHGG@?$AAL?$AA?$AA@
	mov	rcx, QWORD PTR custButton$[rsp]
	call	QWORD PTR [rax+88]

; 246  : 					ReleaseICustButton(custButton);

	mov	rcx, QWORD PTR custButton$[rsp]
	call	QWORD PTR __imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z

; 247  : 
; 248  : 					// UVW
; 249  : 					hwndMap = GetDlgItem(hWnd, IDC_TYPE);  

	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 250  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_UVW));

	mov	ecx, 217				; 000000d9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 251  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_UVW2));

	mov	ecx, 222				; 000000deH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 252  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_OBJ));

	mov	ecx, 218				; 000000daH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 253  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_WOR));

	mov	ecx, 219				; 000000dbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 254  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_SCR));

	mov	ecx, 220				; 000000dcH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 255  : 
; 256  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_X);  

	mov	edx, 1065				; 00000429H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 257  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 258  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 259  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 260  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 261  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 262  : 
; 263  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_Y);  

	mov	edx, 1066				; 0000042aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 264  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 265  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 266  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 267  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 268  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 269  : 
; 270  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_Z);

	mov	edx, 1071				; 0000042fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 271  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 272  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 273  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 274  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 275  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW
$LN5@DlgProc:

; 276  : 
; 277  : 					// NO BREAK HERE, WE WANT TO UPDATE DROPDOWN VALUES TOO
; 278  : 				case WM_SHOWWINDOW: 
; 279  : 					// Set correct dropdown value
; 280  : 					int curIndex;
; 281  : 					map->GetParamBlock()->GetValue(xyz_map, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv244[rsp], rax
	mov	rax, QWORD PTR tv244[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv244[rsp]
	call	QWORD PTR [rax+1704]

; 282  : 					SendMessage(GetDlgItem(hWnd, IDC_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv254[rsp], rax
	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv254[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 283  : 					map->GetParamBlock()->GetValue(xyz_tile_x, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	mov	rcx, QWORD PTR tv265[rsp]
	call	QWORD PTR [rax+1704]

; 284  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_X), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv275[rsp], rax
	mov	edx, 1065				; 00000429H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv275[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 285  : 					map->GetParamBlock()->GetValue(xyz_tile_y, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv286[rsp], rax
	mov	rax, QWORD PTR tv286[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rcx, QWORD PTR tv286[rsp]
	call	QWORD PTR [rax+1704]

; 286  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_Y), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv296[rsp], rax
	mov	edx, 1066				; 0000042aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv296[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 287  : 					map->GetParamBlock()->GetValue(xyz_tile_z, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv307[rsp], rax
	mov	rax, QWORD PTR tv307[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rcx, QWORD PTR tv307[rsp]
	call	QWORD PTR [rax+1704]

; 288  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_Z), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv317[rsp], rax
	mov	edx, 1071				; 0000042fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv317[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 289  : 					break;

	jmp	SHORT $LN2@DlgProc
$LN6@DlgProc:

; 290  : 				case WM_DESTROY:			
; 291  : 				default: return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@DlgProc
$LN2@DlgProc:

; 292  : 			}
; 293  : 			return TRUE;

	mov	eax, 1
$LN1@DlgProc:

; 294  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	ret	0
?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconXYZDlgProc::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z PROC	; BerconXYZDlgProc::BerconXYZDlgProc, COMDAT

; 238  : 		BerconXYZDlgProc(ReferenceTarget *m) {reftarg = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconXYZDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ENDP	; BerconXYZDlgProc::BerconXYZDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA PROC ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA ENDP ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA PROC ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA ENDP ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GXYZ_Desc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GXYZ_Desc@@UEAAPEAXI@Z PROC				; XYZ_Desc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1XYZ_Desc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GXYZ_Desc@@UEAAPEAXI@Z ENDP				; XYZ_Desc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z PROC		; XYZ_Desc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z ENDP		; XYZ_Desc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1XYZ_Desc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1XYZ_Desc@@UEAA@XZ PROC				; XYZ_Desc::~XYZ_Desc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1XYZ_Desc@@UEAA@XZ ENDP				; XYZ_Desc::~XYZ_Desc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA PROC		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA ENDP		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA PROC		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA ENDP		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
_TEXT	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z PROC	; XYZ_Desc::XYZ_Desc, COMDAT

; 232  : 	p_end) {}

$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 3720				; 00000e88H
	mov	QWORD PTR $T1[rsp], -2

; 108  : 	XYZ_Desc(ClassDesc2* pointer, int ref, int blkID, int type, int x, int y, int z, int closed=1) : ParamBlockDesc2(blkID, _T("Mapping"),  0, pointer, 

	mov	DWORD PTR [rsp+3688], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3680], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3672], xmm0
	mov	DWORD PTR [rsp+3664], 1075		; 00000433H
	mov	DWORD PTR [rsp+3656], 1074		; 00000432H
	mov	DWORD PTR [rsp+3648], 1
	mov	QWORD PTR [rsp+3640], 0
	mov	DWORD PTR [rsp+3632], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3624], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3616], xmm0
	mov	DWORD PTR [rsp+3608], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3600], xmm0
	mov	DWORD PTR [rsp+3592], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	mov	QWORD PTR [rsp+3584], rax
	mov	DWORD PTR [rsp+3576], 1
	mov	QWORD PTR [rsp+3568], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	mov	QWORD PTR [rsp+3560], rax
	mov	DWORD PTR [rsp+3552], 28
	mov	DWORD PTR [rsp+3544], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3536], 1115		; 0000045bH
	mov	DWORD PTR [rsp+3528], 6
	mov	DWORD PTR [rsp+3520], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3512], 1
	mov	DWORD PTR [rsp+3504], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
	mov	QWORD PTR [rsp+3496], rax
	mov	DWORD PTR [rsp+3488], 1
	mov	DWORD PTR [rsp+3480], 4
	lea	rax, OFFSET FLAT:??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
	mov	QWORD PTR [rsp+3472], rax
	mov	DWORD PTR [rsp+3464], 27
	mov	DWORD PTR [rsp+3456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3448], xmm0
	mov	DWORD PTR [rsp+3440], 1113		; 00000459H
	mov	DWORD PTR [rsp+3432], 1112		; 00000458H
	mov	DWORD PTR [rsp+3424], 1
	mov	QWORD PTR [rsp+3416], 0
	mov	DWORD PTR [rsp+3408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3400], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3392], xmm0
	mov	DWORD PTR [rsp+3384], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3376], xmm0
	mov	DWORD PTR [rsp+3368], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3360], rax
	mov	DWORD PTR [rsp+3352], 1
	mov	QWORD PTR [rsp+3344], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3336], rax
	mov	DWORD PTR [rsp+3328], 22
	mov	DWORD PTR [rsp+3320], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3312], xmm0
	mov	DWORD PTR [rsp+3304], 1106		; 00000452H
	mov	DWORD PTR [rsp+3296], 1105		; 00000451H
	mov	DWORD PTR [rsp+3288], 1
	mov	QWORD PTR [rsp+3280], 0
	mov	DWORD PTR [rsp+3272], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3264], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3256], xmm0
	mov	DWORD PTR [rsp+3248], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3240], xmm0
	mov	DWORD PTR [rsp+3232], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3224], rax
	mov	DWORD PTR [rsp+3216], 1
	mov	QWORD PTR [rsp+3208], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3200], rax
	mov	DWORD PTR [rsp+3192], 21
	mov	DWORD PTR [rsp+3184], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3176], xmm0
	mov	DWORD PTR [rsp+3168], 1099		; 0000044bH
	mov	DWORD PTR [rsp+3160], 1098		; 0000044aH
	mov	DWORD PTR [rsp+3152], 1
	mov	QWORD PTR [rsp+3144], 0
	mov	DWORD PTR [rsp+3136], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3128], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3120], xmm0
	mov	DWORD PTR [rsp+3112], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3104], xmm0
	mov	DWORD PTR [rsp+3096], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3088], rax
	mov	DWORD PTR [rsp+3080], 1
	mov	QWORD PTR [rsp+3072], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3064], rax
	mov	DWORD PTR [rsp+3056], 20
	mov	DWORD PTR [rsp+3048], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3040], xmm0
	mov	DWORD PTR [rsp+3032], 1111		; 00000457H
	mov	DWORD PTR [rsp+3024], 1110		; 00000456H
	mov	DWORD PTR [rsp+3016], 1
	mov	QWORD PTR [rsp+3008], 0
	mov	DWORD PTR [rsp+3000], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2992], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2984], xmm0
	mov	DWORD PTR [rsp+2976], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2968], xmm0
	mov	DWORD PTR [rsp+2960], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2952], rax
	mov	DWORD PTR [rsp+2944], 1
	mov	QWORD PTR [rsp+2936], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2928], rax
	mov	DWORD PTR [rsp+2920], 19
	mov	DWORD PTR [rsp+2912], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2904], xmm0
	mov	DWORD PTR [rsp+2896], 1104		; 00000450H
	mov	DWORD PTR [rsp+2888], 1103		; 0000044fH
	mov	DWORD PTR [rsp+2880], 1
	mov	QWORD PTR [rsp+2872], 0
	mov	DWORD PTR [rsp+2864], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2856], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2848], xmm0
	mov	DWORD PTR [rsp+2840], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2832], xmm0
	mov	DWORD PTR [rsp+2824], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2816], rax
	mov	DWORD PTR [rsp+2808], 1
	mov	QWORD PTR [rsp+2800], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2792], rax
	mov	DWORD PTR [rsp+2784], 18
	mov	DWORD PTR [rsp+2776], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2768], xmm0
	mov	DWORD PTR [rsp+2760], 1097		; 00000449H
	mov	DWORD PTR [rsp+2752], 1096		; 00000448H
	mov	DWORD PTR [rsp+2744], 1
	mov	QWORD PTR [rsp+2736], 0
	mov	DWORD PTR [rsp+2728], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2720], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2712], xmm0
	mov	DWORD PTR [rsp+2704], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2696], xmm0
	mov	DWORD PTR [rsp+2688], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2680], rax
	mov	DWORD PTR [rsp+2672], 1
	mov	QWORD PTR [rsp+2664], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2656], rax
	mov	DWORD PTR [rsp+2648], 17
	mov	DWORD PTR [rsp+2640], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2632], xmm0
	mov	DWORD PTR [rsp+2624], 1109		; 00000455H
	mov	DWORD PTR [rsp+2616], 1108		; 00000454H
	mov	DWORD PTR [rsp+2608], 1
	mov	QWORD PTR [rsp+2600], 0
	mov	DWORD PTR [rsp+2592], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2584], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2576], xmm0
	mov	DWORD PTR [rsp+2568], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2560], xmm0
	mov	DWORD PTR [rsp+2552], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2544], rax
	mov	DWORD PTR [rsp+2536], 1
	mov	QWORD PTR [rsp+2528], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2520], rax
	mov	DWORD PTR [rsp+2512], 16
	mov	DWORD PTR [rsp+2504], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2496], xmm0
	mov	DWORD PTR [rsp+2488], 1102		; 0000044eH
	mov	DWORD PTR [rsp+2480], 1101		; 0000044dH
	mov	DWORD PTR [rsp+2472], 1
	mov	QWORD PTR [rsp+2464], 0
	mov	DWORD PTR [rsp+2456], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2448], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2440], xmm0
	mov	DWORD PTR [rsp+2432], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2424], xmm0
	mov	DWORD PTR [rsp+2416], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2408], rax
	mov	DWORD PTR [rsp+2400], 1
	mov	QWORD PTR [rsp+2392], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2384], rax
	mov	DWORD PTR [rsp+2376], 15
	mov	DWORD PTR [rsp+2368], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2360], xmm0
	mov	DWORD PTR [rsp+2352], 1095		; 00000447H
	mov	DWORD PTR [rsp+2344], 1094		; 00000446H
	mov	DWORD PTR [rsp+2336], 1
	mov	QWORD PTR [rsp+2328], 0
	mov	DWORD PTR [rsp+2320], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2312], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2304], xmm0
	mov	DWORD PTR [rsp+2296], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2288], xmm0
	mov	DWORD PTR [rsp+2280], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2272], rax
	mov	DWORD PTR [rsp+2264], 1
	mov	QWORD PTR [rsp+2256], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2248], rax
	mov	DWORD PTR [rsp+2240], 14
	mov	DWORD PTR [rsp+2232], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2224], 1034		; 0000040aH
	mov	DWORD PTR [rsp+2216], 2
	mov	DWORD PTR [rsp+2208], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2200], 0
	mov	DWORD PTR [rsp+2192], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2184], 166		; 000000a6H
	mov	DWORD PTR [rsp+2176], 1
	mov	DWORD PTR [rsp+2168], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@
	mov	QWORD PTR [rsp+2160], rax
	mov	DWORD PTR [rsp+2152], 26
	mov	DWORD PTR [rsp+2144], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2136], 1033		; 00000409H
	mov	DWORD PTR [rsp+2128], 2
	mov	DWORD PTR [rsp+2120], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2112], 1
	mov	DWORD PTR [rsp+2104], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2096], 165		; 000000a5H
	mov	DWORD PTR [rsp+2088], 1
	mov	DWORD PTR [rsp+2080], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@
	mov	QWORD PTR [rsp+2072], rax
	mov	DWORD PTR [rsp+2064], 25
	mov	DWORD PTR [rsp+2056], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2048], 1051		; 0000041bH
	mov	DWORD PTR [rsp+2040], 2
	mov	DWORD PTR [rsp+2032], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2024], 0
	mov	DWORD PTR [rsp+2016], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2008], 164		; 000000a4H
	mov	DWORD PTR [rsp+2000], 1
	mov	DWORD PTR [rsp+1992], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@
	mov	QWORD PTR [rsp+1984], rax
	mov	DWORD PTR [rsp+1976], 24
	mov	DWORD PTR [rsp+1968], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1960], xmm0
	mov	DWORD PTR [rsp+1952], 1017		; 000003f9H
	mov	DWORD PTR [rsp+1944], 1015		; 000003f7H
	mov	QWORD PTR [rsp+1936], 0
	mov	QWORD PTR [rsp+1928], 0
	mov	DWORD PTR [rsp+1920], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1912], 99999		; 0001869fH
	mov	DWORD PTR [rsp+1904], 1
	mov	DWORD PTR [rsp+1896], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+1888], 12345		; 00003039H
	mov	DWORD PTR [rsp+1880], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1872], 50		; 00000032H
	mov	DWORD PTR [rsp+1864], 1
	mov	DWORD PTR [rsp+1856], 1
	lea	rax, OFFSET FLAT:??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@
	mov	QWORD PTR [rsp+1848], rax
	mov	DWORD PTR [rsp+1840], 23
	mov	DWORD PTR [rsp+1832], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1824], 0
	mov	DWORD PTR [rsp+1816], 1071		; 0000042fH
	mov	DWORD PTR [rsp+1808], 13
	mov	DWORD PTR [rsp+1800], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR z$[rsp]
	mov	DWORD PTR [rsp+1792], eax
	mov	DWORD PTR [rsp+1784], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1776], rax
	mov	DWORD PTR [rsp+1768], 1
	mov	DWORD PTR [rsp+1760], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1752], rax
	mov	DWORD PTR [rsp+1744], 13
	mov	DWORD PTR [rsp+1736], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1728], 0
	mov	DWORD PTR [rsp+1720], 1066		; 0000042aH
	mov	DWORD PTR [rsp+1712], 13
	mov	DWORD PTR [rsp+1704], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR y$[rsp]
	mov	DWORD PTR [rsp+1696], eax
	mov	DWORD PTR [rsp+1688], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1680], rax
	mov	DWORD PTR [rsp+1672], 1
	mov	DWORD PTR [rsp+1664], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1656], rax
	mov	DWORD PTR [rsp+1648], 12
	mov	DWORD PTR [rsp+1640], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1632], 0
	mov	DWORD PTR [rsp+1624], 1065		; 00000429H
	mov	DWORD PTR [rsp+1616], 13
	mov	DWORD PTR [rsp+1608], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR [rsp+1600], eax
	mov	DWORD PTR [rsp+1592], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1584], rax
	mov	DWORD PTR [rsp+1576], 1
	mov	DWORD PTR [rsp+1568], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1560], rax
	mov	DWORD PTR [rsp+1552], 11
	mov	DWORD PTR [rsp+1544], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1536], xmm0
	mov	DWORD PTR [rsp+1528], 1070		; 0000042eH
	mov	DWORD PTR [rsp+1520], 1069		; 0000042dH
	mov	DWORD PTR [rsp+1512], 1
	mov	QWORD PTR [rsp+1504], 0
	mov	DWORD PTR [rsp+1496], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1488], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1480], xmm0
	mov	DWORD PTR [rsp+1472], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1464], xmm0
	mov	DWORD PTR [rsp+1456], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1448], rax
	mov	DWORD PTR [rsp+1440], 1
	mov	QWORD PTR [rsp+1432], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1424], rax
	mov	DWORD PTR [rsp+1416], 10
	mov	DWORD PTR [rsp+1408], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1400], xmm0
	mov	DWORD PTR [rsp+1392], 1062		; 00000426H
	mov	DWORD PTR [rsp+1384], 1061		; 00000425H
	mov	DWORD PTR [rsp+1376], 1
	mov	QWORD PTR [rsp+1368], 0
	mov	DWORD PTR [rsp+1360], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1352], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1344], xmm0
	mov	DWORD PTR [rsp+1336], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1328], xmm0
	mov	DWORD PTR [rsp+1320], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1312], rax
	mov	DWORD PTR [rsp+1304], 1
	mov	QWORD PTR [rsp+1296], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1288], rax
	mov	DWORD PTR [rsp+1280], 9
	mov	DWORD PTR [rsp+1272], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1264], xmm0
	mov	DWORD PTR [rsp+1256], 1058		; 00000422H
	mov	DWORD PTR [rsp+1248], 1057		; 00000421H
	mov	DWORD PTR [rsp+1240], 1
	mov	QWORD PTR [rsp+1232], 0
	mov	DWORD PTR [rsp+1224], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1216], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1208], xmm0
	mov	DWORD PTR [rsp+1200], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1192], xmm0
	mov	DWORD PTR [rsp+1184], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1176], rax
	mov	DWORD PTR [rsp+1168], 1
	mov	QWORD PTR [rsp+1160], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1152], rax
	mov	DWORD PTR [rsp+1144], 8
	mov	DWORD PTR [rsp+1136], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1128], xmm0
	mov	DWORD PTR [rsp+1120], 1068		; 0000042cH
	mov	DWORD PTR [rsp+1112], 1067		; 0000042bH
	mov	DWORD PTR [rsp+1104], 1
	mov	QWORD PTR [rsp+1096], 0
	mov	DWORD PTR [rsp+1088], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1080], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+1072], xmm0
	mov	DWORD PTR [rsp+1064], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+1056], xmm0
	mov	DWORD PTR [rsp+1048], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1040], rax
	mov	DWORD PTR [rsp+1032], 1
	mov	QWORD PTR [rsp+1024], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1016], rax
	mov	DWORD PTR [rsp+1008], 7
	mov	DWORD PTR [rsp+1000], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+992], xmm0
	mov	DWORD PTR [rsp+984], 1060		; 00000424H
	mov	DWORD PTR [rsp+976], 1059		; 00000423H
	mov	DWORD PTR [rsp+968], 1
	mov	QWORD PTR [rsp+960], 0
	mov	DWORD PTR [rsp+952], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+944], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+936], xmm0
	mov	DWORD PTR [rsp+928], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+920], xmm0
	mov	DWORD PTR [rsp+912], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+904], rax
	mov	DWORD PTR [rsp+896], 1
	mov	QWORD PTR [rsp+888], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+880], rax
	mov	DWORD PTR [rsp+872], 6
	mov	DWORD PTR [rsp+864], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+856], xmm0
	mov	DWORD PTR [rsp+848], 1056		; 00000420H
	mov	DWORD PTR [rsp+840], 1055		; 0000041fH
	mov	DWORD PTR [rsp+832], 1
	mov	QWORD PTR [rsp+824], 0
	mov	DWORD PTR [rsp+816], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+808], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+800], xmm0
	mov	DWORD PTR [rsp+792], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+784], xmm0
	mov	DWORD PTR [rsp+776], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+768], rax
	mov	DWORD PTR [rsp+760], 1
	mov	QWORD PTR [rsp+752], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+744], rax
	mov	DWORD PTR [rsp+736], 5
	mov	DWORD PTR [rsp+728], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+720], xmm0
	mov	DWORD PTR [rsp+712], 1064		; 00000428H
	mov	DWORD PTR [rsp+704], 1063		; 00000427H
	mov	DWORD PTR [rsp+696], 1
	mov	QWORD PTR [rsp+688], 0
	mov	DWORD PTR [rsp+680], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+672], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+664], xmm0
	mov	DWORD PTR [rsp+656], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+648], xmm0
	mov	DWORD PTR [rsp+640], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+632], rax
	mov	DWORD PTR [rsp+624], 1
	mov	QWORD PTR [rsp+616], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+608], rax
	mov	DWORD PTR [rsp+600], 4
	mov	DWORD PTR [rsp+592], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+584], xmm0
	mov	DWORD PTR [rsp+576], 1054		; 0000041eH
	mov	DWORD PTR [rsp+568], 1053		; 0000041dH
	mov	DWORD PTR [rsp+560], 1
	mov	QWORD PTR [rsp+552], 0
	mov	DWORD PTR [rsp+544], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+536], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+528], xmm0
	mov	DWORD PTR [rsp+520], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+512], xmm0
	mov	DWORD PTR [rsp+504], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+496], rax
	mov	DWORD PTR [rsp+488], 1
	mov	QWORD PTR [rsp+480], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+472], rax
	mov	DWORD PTR [rsp+464], 3
	mov	DWORD PTR [rsp+456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+448], xmm0
	mov	DWORD PTR [rsp+440], 1073		; 00000431H
	mov	DWORD PTR [rsp+432], 1072		; 00000430H
	mov	DWORD PTR [rsp+424], 1
	mov	QWORD PTR [rsp+416], 0
	mov	DWORD PTR [rsp+408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+400], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+392], xmm0
	mov	DWORD PTR [rsp+384], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+376], xmm0
	mov	DWORD PTR [rsp+368], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+360], rax
	mov	DWORD PTR [rsp+352], 1
	mov	QWORD PTR [rsp+344], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+336], rax
	mov	DWORD PTR [rsp+328], 2
	mov	DWORD PTR [rsp+320], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+312], xmm0
	mov	DWORD PTR [rsp+304], 1511		; 000005e7H
	mov	DWORD PTR [rsp+296], 1510		; 000005e6H
	mov	QWORD PTR [rsp+288], 0
	mov	QWORD PTR [rsp+280], 0
	mov	DWORD PTR [rsp+272], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+264], 100		; 00000064H
	mov	QWORD PTR [rsp+256], 0
	mov	DWORD PTR [rsp+248], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+240], 1
	mov	DWORD PTR [rsp+232], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+224], 50			; 00000032H
	mov	DWORD PTR [rsp+216], 1
	mov	DWORD PTR [rsp+208], 1
	lea	rax, OFFSET FLAT:??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@
	mov	QWORD PTR [rsp+200], rax
	mov	DWORD PTR [rsp+192], 1
	mov	DWORD PTR [rsp+184], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+176], 0
	mov	DWORD PTR [rsp+168], 1018		; 000003faH
	mov	DWORD PTR [rsp+160], 13
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR [rsp+144], eax
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
	mov	QWORD PTR [rsp+128], rax
	mov	DWORD PTR [rsp+120], 1
	mov	DWORD PTR [rsp+112], 1
	lea	rax, OFFSET FLAT:??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	eax, DWORD PTR closed$[rsp]
	mov	DWORD PTR [rsp+80], eax
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 216			; 000000d8H
	mov	DWORD PTR [rsp+56], 112			; 00000070H
	mov	eax, DWORD PTR ref$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	WORD PTR [rsp+40], 6
	mov	rax, QWORD PTR pointer$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@
	movsx	edx, WORD PTR blkID$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	npad	1

; 232  : 	p_end) {}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7XYZ_Desc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 3720				; 00000e88H
	ret	0
??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z ENDP	; XYZ_Desc::XYZ_Desc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA PROC ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA ENDP ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA PROC ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA ENDP ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??__Eintvalid@@YAXXZ
text$di	SEGMENT
??__Eintvalid@@YAXXZ PROC				; `dynamic initializer for 'intvalid'', COMDAT

; 83   : static Interval intvalid = Interval(TIME_NegInfinity, TIME_PosInfinity);

	sub	rsp, 40					; 00000028H
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	add	rsp, 40					; 00000028H
	ret	0
??__Eintvalid@@YAXXZ ENDP				; `dynamic initializer for 'intvalid''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ResourceMakerCallback@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ResourceMakerCallback@@QEAA@XZ PROC			; ResourceMakerCallback::ResourceMakerCallback, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ResourceMakerCallback@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ResourceMakerCallback@@QEAA@XZ ENDP			; ResourceMakerCallback::ResourceMakerCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z
_TEXT	SEGMENT
this$ = 8
id$ = 16
?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z PROC	; ResourceMakerCallback::GetInterface, COMDAT

; 746  : 	virtual void* GetInterface(ULONG id) {return NULL;}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z ENDP	; ResourceMakerCallback::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
curvenum$ = 16
pCCtl$ = 24
?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::NewCurveCreatedCallback, COMDAT

; 744  : 	virtual void NewCurveCreatedCallback(int curvenum, ICurveCtl *pCCtl){}

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::NewCurveCreatedCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
curvenum$ = 16
pCCtl$ = 24
?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::ResetCallback, COMDAT

; 732  : 	virtual void ResetCallback(int curvenum, ICurveCtl *pCCtl){}

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::ResetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
iButton$ = 16
ToolTip$ = 24
pCCtl$ = 32
?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::GetToolTip, COMDAT

; 720  : 	virtual BOOL GetToolTip(int iButton, MSTR &ToolTip,ICurveCtl *pCCtl){return FALSE;}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::GetToolTip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
hCTools$ = 16
pCCtl$ = 24
?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::SetCustomImageList, COMDAT

; 697  : 	virtual BOOL SetCustomImageList(HIMAGELIST& hCTools, ICurveCtl* pCCtl){return FALSE;} 

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::SetCustomImageList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ??4CurvePoint@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
rhs$ = 16
??4CurvePoint@@QEAAAEAV0@AEBV0@@Z PROC			; CurvePoint::operator=, COMDAT

; 416  : 	{

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 417  : 		p		= rhs.p;

	mov	rax, QWORD PTR rhs$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 418  : 		in		= rhs.in;

	mov	rax, QWORD PTR rhs$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 419  : 		out		= rhs.out;

	mov	rax, QWORD PTR rhs$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 420  : 		flags	= rhs.flags;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	DWORD PTR [rax+24], ecx

; 421  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 422  : 	}

	ret	0
??4CurvePoint@@QEAAAEAV0@AEBV0@@Z ENDP			; CurvePoint::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GParamMap2UserDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GParamMap2UserDlgProc@@UEAAPEAXI@Z PROC		; ParamMap2UserDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 8
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GParamMap2UserDlgProc@@UEAAPEAXI@Z ENDP		; ParamMap2UserDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ParamMap2UserDlgProc@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ParamMap2UserDlgProc@@QEAA@XZ PROC			; ParamMap2UserDlgProc::ParamMap2UserDlgProc, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ParamMap2UserDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ParamMap2UserDlgProc@@QEAA@XZ ENDP			; ParamMap2UserDlgProc::ParamMap2UserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
_TEXT	SEGMENT
this$ = 48
t$ = 56
valid$ = 64
pmap$ = 72
?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z PROC ; ParamMap2UserDlgProc::Update, COMDAT

; 89   : 		virtual void Update(TimeValue t, Interval& valid, IParamMap2* pmap) { this->Update(t); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+40]
	add	rsp, 40					; 00000028H
	ret	0
?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z ENDP ; ParamMap2UserDlgProc::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
_TEXT	SEGMENT
this$ = 8
pb$ = 16
?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z PROC ; ParamMap2UserDlgProc::SetParamBlock, COMDAT

; 76   : 		virtual void SetParamBlock(IParamBlock2 *pb) { }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z ENDP ; ParamMap2UserDlgProc::SetParamBlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?Update@ParamMap2UserDlgProc@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?Update@ParamMap2UserDlgProc@@UEAAXH@Z PROC		; ParamMap2UserDlgProc::Update, COMDAT

; 75   : 		virtual void Update(TimeValue t) { }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?Update@ParamMap2UserDlgProc@@UEAAXH@Z ENDP		; ParamMap2UserDlgProc::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
m$ = 16
?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; ParamMap2UserDlgProc::SetThing, COMDAT

; 74   : 		virtual void SetThing(ReferenceTarget *m) { }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; ParamMap2UserDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ??1ParamMap2UserDlgProc@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ParamMap2UserDlgProc@@UEAA@XZ PROC			; ParamMap2UserDlgProc::~ParamMap2UserDlgProc, COMDAT

; 59   : 		virtual ~ParamMap2UserDlgProc() { }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ParamMap2UserDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	ret	0
??1ParamMap2UserDlgProc@@UEAA@XZ ENDP			; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z PROC	; ParamBlockDesc2::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z ENDP	; ParamBlockDesc2::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.h
;	COMDAT ?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z
_TEXT	SEGMENT
this$ = 48
proc$ = 56
?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z PROC ; ParamBlockDesc2::SetUserDlgProc, COMDAT

; 3969 : 	inline void		SetUserDlgProc(ParamMap2UserDlgProc* proc=NULL) { SetUserDlgProc(0, proc); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8, QWORD PTR proc$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?SetUserDlgProc@ParamBlockDesc2@@QEAAXFPEAVParamMap2UserDlgProc@@@Z
	add	rsp, 40					; 00000028H
	ret	0
?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ENDP ; ParamBlockDesc2::SetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.inline.h
;	COMDAT ?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
__formal$ = 32
__formal$ = 40
__formal$ = 48
__formal$ = 56
?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z PROC ; ClassDesc2::CreateQtWidget, COMDAT

; 290  : {

	mov	WORD PTR [rsp+32], r9w
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 291  :     // Default implementation returns null, only needs to be implemented for new Qt-based plugins.
; 292  :     return nullptr;

	xor	eax, eax

; 293  : }

	ret	0
?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z ENDP ; ClassDesc2::CreateQtWidget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.h
;	COMDAT ?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
_TEXT	SEGMENT
this$ = 48
pbd$ = 56
proc$ = 64
?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z PROC ; ClassDesc2::SetUserDlgProc, COMDAT

; 2653 : 	inline bool SetUserDlgProc(ParamBlockDesc2* pbd, ParamMap2UserDlgProc* proc=NULL) { return SetUserDlgProc(pbd, 0, proc); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r9, QWORD PTR proc$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR pbd$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?SetUserDlgProc@ClassDesc2@@QEAA_NPEAVParamBlockDesc2@@FPEAVParamMap2UserDlgProc@@@Z
	add	rsp, 40					; 00000028H
	ret	0
?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z ENDP ; ClassDesc2::SetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\triobj.h
;	COMDAT ??__EkTriObjNormalXTCID@@YAXXZ
text$di	SEGMENT
??__EkTriObjNormalXTCID@@YAXXZ PROC			; `dynamic initializer for 'kTriObjNormalXTCID'', COMDAT

; 289  : const Class_ID kTriObjNormalXTCID = Class_ID(0x730a33d7, 0x27246c55);

	sub	rsp, 40					; 00000028H
	mov	r8d, 656698453				; 27246c55H
	mov	edx, 1930048471				; 730a33d7H
	lea	rcx, OFFSET FLAT:?kTriObjNormalXTCID@@3VClass_ID@@B
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	add	rsp, 40					; 00000028H
	ret	0
??__EkTriObjNormalXTCID@@YAXXZ ENDP			; `dynamic initializer for 'kTriObjNormalXTCID''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Texmap@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Texmap@@UEAA@XZ PROC					; Texmap::~Texmap, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1Texmap@@UEAA@XZ ENDP					; Texmap::~Texmap
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA PROC			; `Texmap::~Texmap'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA ENDP			; `Texmap::~Texmap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA PROC			; `Texmap::~Texmap'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA ENDP			; `Texmap::~Texmap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?IsHighDynamicRange@Texmap@@UEBAHXZ
_TEXT	SEGMENT
this$ = 8
?IsHighDynamicRange@Texmap@@UEBAHXZ PROC		; Texmap::IsHighDynamicRange, COMDAT

; 483  : 			virtual int IsHighDynamicRange( ) const { return false; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsHighDynamicRange@Texmap@@UEBAHXZ ENDP		; Texmap::IsHighDynamicRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?LoadMapFiles@Texmap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?LoadMapFiles@Texmap@@UEAAHH@Z PROC			; Texmap::LoadMapFiles, COMDAT

; 450  : 			virtual int LoadMapFiles(TimeValue t) { return 1; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?LoadMapFiles@Texmap@@UEAAHH@Z ENDP			; Texmap::LoadMapFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
_TEXT	SEGMENT
this$ = 8
sc$ = 16
?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z PROC ; Texmap::IsLocalOutputMeaningful, COMDAT

; 364  : 			virtual bool IsLocalOutputMeaningful( ShadeContext& sc ) { return false; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z ENDP ; Texmap::IsLocalOutputMeaningful
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?SetOutputLevel@Texmap@@UEAAXHM@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
v$ = 24
?SetOutputLevel@Texmap@@UEAAXHM@Z PROC			; Texmap::SetOutputLevel, COMDAT

; 338  : 			virtual void SetOutputLevel(TimeValue t, float v) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetOutputLevel@Texmap@@UEAAXHM@Z ENDP			; Texmap::SetOutputLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ
_TEXT	SEGMENT
this$ = 8
?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ PROC		; Texmap::GetTheUVGen, COMDAT

; 312  : 			virtual UVGen *GetTheUVGen() { return NULL; }  // maps with a UVGen should implement this

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ ENDP		; Texmap::GetTheUVGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?MapSlotType@Texmap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?MapSlotType@Texmap@@UEAAHH@Z PROC			; Texmap::MapSlotType, COMDAT

; 303  : 			virtual int MapSlotType(int i) { return defaultSlotType; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+20]
	ret	0
?MapSlotType@Texmap@@UEAAHH@Z ENDP			; Texmap::MapSlotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?InitSlotType@Texmap@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sType$ = 16
?InitSlotType@Texmap@@UEAAXH@Z PROC			; Texmap::InitSlotType, COMDAT

; 302  : 			virtual void InitSlotType(int sType) { defaultSlotType = sType; }          

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR sType$[rsp]
	mov	DWORD PTR [rax+84], ecx
	ret	0
?InitSlotType@Texmap@@UEAAXH@Z ENDP			; Texmap::InitSlotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetMapChannel@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetMapChannel@Texmap@@UEAAHXZ PROC			; Texmap::GetMapChannel, COMDAT

; 287  : 			virtual int GetMapChannel () { return 1; }   // only relevant if above returns UVWSRC_EXPLICIT

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetMapChannel@Texmap@@UEAAHXZ ENDP			; Texmap::GetMapChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetUVWSource@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetUVWSource@Texmap@@UEAAHXZ PROC			; Texmap::GetUVWSource, COMDAT

; 281  : 			virtual int GetUVWSource() { return UVWSRC_EXPLICIT; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetUVWSource@Texmap@@UEAAHXZ ENDP			; Texmap::GetUVWSource
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTextureTiling@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetTextureTiling@Texmap@@UEAAHXZ PROC			; Texmap::GetTextureTiling, COMDAT

; 256  : 			virtual int GetTextureTiling() { return  U_WRAP|V_WRAP; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3
	ret	0
?GetTextureTiling@Texmap@@UEAAHXZ ENDP			; Texmap::GetTextureTiling
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
_TEXT	SEGMENT
this$ = 48
uvtrans$ = 56
?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z PROC	; Texmap::GetUVTransform, COMDAT

; 247  : 			virtual  void GetUVTransform(Matrix3 &uvtrans) { uvtrans.IdentityMatrix(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR uvtrans$[rsp]
	call	QWORD PTR __imp_?IdentityMatrix@Matrix3@@QEAAXXZ
	add	rsp, 40					; 00000028H
	ret	0
?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z ENDP	; Texmap::GetUVTransform
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?HandleOwnViewPerturb@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?HandleOwnViewPerturb@Texmap@@UEAAHXZ PROC		; Texmap::HandleOwnViewPerturb, COMDAT

; 207  : 			virtual BOOL HandleOwnViewPerturb() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?HandleOwnViewPerturb@Texmap@@UEAAHXZ ENDP		; Texmap::HandleOwnViewPerturb
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
valid$ = 24
?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z PROC ; MtlBase::GetTransparencyHint, COMDAT

; 752  : 			virtual BOOL GetTransparencyHint(TimeValue t, Interval& valid) { return TRUE; }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z ENDP ; MtlBase::GetTransparencyHint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ
_TEXT	SEGMENT
this$ = 8
?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ PROC	; MtlBase::GetRefTarget, COMDAT

; 738  : 			virtual ReferenceTarget *GetRefTarget(){return this;}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 64					; 00000040H
	ret	0
?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ ENDP	; MtlBase::GetRefTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
id$ = 72
?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z PROC ; MtlBase::GetInterface, COMDAT

; 737  :             virtual BaseInterface *GetInterface(Interface_ID id) { return ReferenceTarget::GetInterface(id); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR id$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0Interface_ID@@QEAA@AEBV0@@Z		; Interface_ID::Interface_ID
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?GetInterface@ReferenceTarget@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	add	rsp, 56					; 00000038H
	ret	0
?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z ENDP ; MtlBase::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
mtl$ = 24
cb$ = 32
?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z PROC ; MtlBase::SetupGfxMultiMaps, COMDAT

; 732  : 			virtual void SetupGfxMultiMaps(TimeValue t, Material *mtl, MtlMakerCallback &cb) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z ENDP ; MtlBase::SetupGfxMultiMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ PROC	; MtlBase::SupportsMultiMapsInViewport, COMDAT

; 702  : 			virtual BOOL SupportsMultiMapsInViewport() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ ENDP	; MtlBase::SupportsMultiMapsInViewport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?IsMultiMtl@MtlBase@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsMultiMtl@MtlBase@@UEAAHXZ PROC			; MtlBase::IsMultiMtl, COMDAT

; 368  : 			virtual  BOOL IsMultiMtl() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsMultiMtl@MtlBase@@UEAAHXZ ENDP			; MtlBase::IsMultiMtl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 8
subMtlNum$ = 16
mapreq$ = 24
bumpreq$ = 32
?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z PROC ; MtlBase::LocalMappingsRequired, COMDAT

; 350  : 			virtual void LocalMappingsRequired(int subMtlNum, BitArray & mapreq, BitArray &bumpreq) {  }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z ENDP ; MtlBase::LocalMappingsRequired
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
rmc$ = 24
?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z PROC ; MtlBase::BuildMaps, COMDAT

; 258  : 			virtual int BuildMaps(TimeValue t, RenderMapsContext &rmc) { return 1; }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z ENDP ; MtlBase::BuildMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\isubmap.h
;	COMDAT ?SubTexmapOn@ISubMap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?SubTexmapOn@ISubMap@@UEAAHH@Z PROC			; ISubMap::SubTexmapOn, COMDAT

; 99   : 	virtual int SubTexmapOn(int i) { return 1; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SubTexmapOn@ISubMap@@UEAAHH@Z ENDP			; ISubMap::SubTexmapOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z
_TEXT	SEGMENT
this$ = 8
message$ = 16
hMaker$ = 24
?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z PROC ; ReferenceTarget::NotifyTarget, COMDAT

; 2150 : 		virtual void NotifyTarget(int message, ReferenceMaker* hMaker) { UNUSED_PARAM(message); UNUSED_PARAM(hMaker); }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z ENDP ; ReferenceTarget::NotifyTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyForeground@ReferenceTarget@@UEAAXH@Z
_TEXT	SEGMENT
tv71 = 64
$T1 = 72
this$ = 96
t$ = 104
?NotifyForeground@ReferenceTarget@@UEAAXH@Z PROC	; ReferenceTarget::NotifyForeground, COMDAT

; 2139 : 		virtual void NotifyForeground(TimeValue t) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 2140 : 			NotifyDependents(Interval(t,t),PART_PUT_IN_FG,REFMSG_FLAGDEPENDENTS);

	mov	r8d, DWORD PTR t$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv71[rsp], rcx
	mov	DWORD PTR [rsp+56], 0
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], -16			; fffffff0H
	mov	r9d, 112				; 00000070H
	mov	r8d, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+1200]

; 2141 : 		}

	add	rsp, 88					; 00000058H
	ret	0
?NotifyForeground@ReferenceTarget@@UEAAXH@Z ENDP	; ReferenceTarget::NotifyForeground
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ PROC	; ReferenceTarget::RefDeletedUndoRedo, COMDAT

; 1955 : 		virtual void RefDeletedUndoRedo() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ ENDP	; ReferenceTarget::RefDeletedUndoRedo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefDeleted@ReferenceTarget@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RefDeleted@ReferenceTarget@@UEAAXXZ PROC		; ReferenceTarget::RefDeleted, COMDAT

; 1946 : 		virtual void RefDeleted() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefDeleted@ReferenceTarget@@UEAAXXZ ENDP		; ReferenceTarget::RefDeleted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z
_TEXT	SEGMENT
this$ = 8
rm$ = 16
?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z PROC ; ReferenceTarget::RefAddedUndoRedo, COMDAT

; 1935 : 		virtual void RefAddedUndoRedo(RefMakerHandle rm) { UNUSED_PARAM(rm); }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z ENDP ; ReferenceTarget::RefAddedUndoRedo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRefTarget@ReferenceTarget@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsRefTarget@ReferenceTarget@@UEAAHXZ PROC		; ReferenceTarget::IsRefTarget, COMDAT

; 1874 : 		virtual BOOL IsRefTarget() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRefTarget@ReferenceTarget@@UEAAHXZ ENDP		; ReferenceTarget::IsRefTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
rtarg$ = 16
?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::ShouldPersistWeakRef, COMDAT

; 1664 : 		virtual BOOL ShouldPersistWeakRef(RefTargetHandle rtarg) { UNUSED_PARAM(rtarg); return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::ShouldPersistWeakRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
rtarg$ = 16
?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::IsRealDependency, COMDAT

; 1639 : 		virtual BOOL IsRealDependency(ReferenceTarget *rtarg) { UNUSED_PARAM(rtarg); return TRUE;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::IsRealDependency
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRefMaker@ReferenceMaker@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsRefMaker@ReferenceMaker@@UEAAHXZ PROC		; ReferenceMaker::IsRefMaker, COMDAT

; 1620 : 		virtual BOOL IsRefMaker() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRefMaker@ReferenceMaker@@UEAAHXZ ENDP		; ReferenceMaker::IsRefMaker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
changeInt$ = 16
partID$ = 24
message$ = 32
sclass$ = 40
propagate$ = 48
hTarg$ = 56
?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::NotifyDependents, COMDAT

; 1371 : 		{

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1372 : 			UNUSED_PARAM(changeInt); UNUSED_PARAM(partID);
; 1373 : 			UNUSED_PARAM(message); UNUSED_PARAM(sclass);
; 1374 : 			UNUSED_PARAM(propagate); UNUSED_PARAM(hTarg);
; 1375 : 			DbgAssert(false);
; 1376 : 			return REF_FAIL;

	xor	eax, eax

; 1377 : 		};

	ret	0
?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::NotifyDependents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
iref$ = 16
?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z PROC		; ReferenceMaker::RemapRefOnLoad, COMDAT

; 1337 : 		virtual int RemapRefOnLoad(int iref) { return iref; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, DWORD PTR iref$[rsp]
	ret	0
?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z ENDP		; ReferenceMaker::RemapRefOnLoad
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?CanTransferReference@ReferenceMaker@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?CanTransferReference@ReferenceMaker@@UEAAHH@Z PROC	; ReferenceMaker::CanTransferReference, COMDAT

; 1238 : 		virtual BOOL CanTransferReference(int i) { UNUSED_PARAM(i); return TRUE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanTransferReference@ReferenceMaker@@UEAAHH@Z ENDP	; ReferenceMaker::CanTransferReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z
_TEXT	SEGMENT
this$ = 8
used_as_rhs_value$ = 16
objectSpecifiedName$ = 24
?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z PROC ; Animatable::GetMacroRecorderName, COMDAT

; 2981 : 		virtual bool GetMacroRecorderName(bool used_as_rhs_value, MSTR &objectSpecifiedName) { return false; }

	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z ENDP ; Animatable::GetMacroRecorderName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
desc$ = 16
?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z PROC ; Animatable::IsParamBlockDesc2Used, COMDAT

; 2970 : 		virtual bool IsParamBlockDesc2Used(ParamBlockDesc2 * desc) { return true; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	al, 1
	ret	0
?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z ENDP ; Animatable::IsParamBlockDesc2Used
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
classID$ = 72
?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z PROC	; Animatable::IsSubClassOf, COMDAT

; 2285 : 		virtual BOOL IsSubClassOf(Class_ID classID) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2286 : 			return (classID == ClassID());

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+40]
	mov	rdx, rax
	mov	rcx, QWORD PTR classID$[rsp]
	call	??8Class_ID@@QEBA_NAEBV0@@Z		; Class_ID::operator==
	movzx	eax, al

; 2287 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z ENDP	; Animatable::IsSubClassOf
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z
_TEXT	SEGMENT
this$ = 8
nodes$ = 16
Context$ = 24
?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z PROC ; Animatable::GetSystemNodes, COMDAT

; 2265 : 		virtual void GetSystemNodes(INodeTab &nodes, SysNodeContext Context) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z ENDP ; Animatable::GetSystemNodes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FreeAllBitmaps@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?FreeAllBitmaps@Animatable@@UEAAXXZ PROC		; Animatable::FreeAllBitmaps, COMDAT

; 2237 : 		virtual void FreeAllBitmaps() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FreeAllBitmaps@Animatable@@UEAAXXZ ENDP		; Animatable::FreeAllBitmaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubAnim@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?SelectSubAnim@Animatable@@UEAAHH@Z PROC		; Animatable::SelectSubAnim, COMDAT

; 2163 : 		virtual BOOL SelectSubAnim(int subNum) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SelectSubAnim@Animatable@@UEAAHH@Z ENDP		; Animatable::SelectSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
this$ = 8
hwnd$ = 16
message$ = 24
wParam$ = 32
lParam$ = 40
?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z PROC ; Animatable::TrackViewWinProc, COMDAT

; 2146 : 			LPARAM lParam ) { return 0;}

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z ENDP ; Animatable::TrackViewWinProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z PROC ; Animatable::GetParamDimension, COMDAT

; 2137 : 		virtual ParamDimension* GetParamDimension(int i) { return defaultDim; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR __imp_?defaultDim@@3PEAVParamDimension@@EA
	mov	rax, QWORD PTR [rax]
	ret	0
?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z ENDP ; Animatable::GetParamDimension
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
min$ = 32
max$ = 40
flags$ = 48
?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z PROC ; Animatable::GetSubFCurveExtents, COMDAT

; 2128 : 			DWORD flags) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z ENDP ; Animatable::GetSubFCurveExtents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
min$ = 24
max$ = 32
flags$ = 40
?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z PROC ; Animatable::GetFCurveExtents, COMDAT

; 2097 : 			DWORD flags) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z ENDP ; Animatable::GetFCurveExtents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?TrackParamsType@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?TrackParamsType@Animatable@@UEAAHXZ PROC		; Animatable::TrackParamsType, COMDAT

; 2069 : 		virtual int TrackParamsType() {return TRACKPARAMS_NONE;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?TrackParamsType@Animatable@@UEAAHXZ ENDP		; Animatable::TrackParamsType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
dim$ = 24
pname$ = 32
hParent$ = 40
ip$ = 48
flags$ = 56
?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z PROC ; Animatable::EditTrackParams, COMDAT

; 2048 : 			DWORD flags) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z ENDP ; Animatable::EditTrackParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hits$ = 32
rcHit$ = 40
rcGraph$ = 48
tzoom$ = 56
tscroll$ = 64
vzoom$ = 72
vscroll$ = 80
flags$ = 88
?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::HitTestSubFCurves, COMDAT

; 2013 : 			DWORD flags ) { return HITCURVE_NONE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::HitTestSubFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hdc$ = 32
rcGraph$ = 40
rcPaint$ = 48
tzoom$ = 56
tscroll$ = 64
vzoom$ = 72
vscroll$ = 80
flags$ = 88
?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::PaintSubFCurves, COMDAT

; 1959 : 			DWORD flags ) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::PaintSubFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hits$ = 24
rcHit$ = 32
rcGraph$ = 40
tzoom$ = 48
tscroll$ = 56
vzoom$ = 64
vscroll$ = 72
flags$ = 80
?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::HitTestFCurves, COMDAT

; 1912 : 			DWORD flags ) { return HITCURVE_NONE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::HitTestFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hdc$ = 24
rcGraph$ = 32
rcPaint$ = 40
tzoom$ = 48
tscroll$ = 56
vzoom$ = 64
vscroll$ = 72
flags$ = 80
?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::PaintFCurves, COMDAT

; 1858 : 			DWORD flags ) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::PaintFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hdc$ = 32
rcTrack$ = 40
rcPaint$ = 48
zoom$ = 56
scroll$ = 64
flags$ = 72
?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z PROC ; Animatable::PaintSubTrack, COMDAT

; 1811 : 			DWORD flags) {return TRACK_DORANGE;}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ENDP ; Animatable::PaintSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hdc$ = 24
rcTrack$ = 32
rcPaint$ = 40
zoom$ = 48
scroll$ = 56
flags$ = 64
?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z PROC ; Animatable::PaintTrack, COMDAT

; 1776 : 			DWORD flags ) { return TRACK_DORANGE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ENDP ; Animatable::PaintTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z
_TEXT	SEGMENT
this$ = 8
hits$ = 16
rcHit$ = 24
rcTrack$ = 32
zoom$ = 40
scroll$ = 48
flags$ = 56
?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z PROC ; Animatable::HitTestTrack, COMDAT

; 1736 : 			DWORD flags ) { return TRACK_DORANGE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z ENDP ; Animatable::HitTestTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetTrackVSpace@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
lineHeight$ = 16
?GetTrackVSpace@Animatable@@UEAAHH@Z PROC		; Animatable::GetTrackVSpace, COMDAT

; 1694 : 		virtual int GetTrackVSpace( int lineHeight ) { return 1; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetTrackVSpace@Animatable@@UEAAHH@Z ENDP		; Animatable::GetTrackVSpace
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
cobj$ = 24
iv$ = 32
flags$ = 40
?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::PasteSubTrack, COMDAT

; 1685 : 		virtual void PasteSubTrack(int subNum, TrackClipObject *cobj, Interval iv, DWORD flags) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::PasteSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
iv$ = 24
flags$ = 32
?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z PROC ; Animatable::CopySubTrack, COMDAT

; 1672 : 		virtual TrackClipObject *CopySubTrack(int subNum, Interval iv, DWORD flags) { return NULL; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z ENDP ; Animatable::CopySubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
cobj$ = 24
iv$ = 32
flags$ = 40
?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CanPasteSubTrack, COMDAT

; 1657 : 		virtual BOOL CanPasteSubTrack(int subNum,TrackClipObject *cobj, Interval iv, DWORD flags) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CanPasteSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
iv$ = 24
flags$ = 32
?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z PROC	; Animatable::CanCopySubTrack, COMDAT

; 1637 : 		virtual BOOL CanCopySubTrack(int subNum, Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z ENDP	; Animatable::CanCopySubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
cobj$ = 16
iv$ = 24
flags$ = 32
?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::PasteTrack, COMDAT

; 1615 : 		virtual void PasteTrack(TrackClipObject *cobj, Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::PasteTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CopyTrack, COMDAT

; 1606 : 		virtual TrackClipObject *CopyTrack(Interval iv, DWORD flags) { return NULL; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CopyTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
cobj$ = 16
iv$ = 24
flags$ = 32
?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CanPasteTrack, COMDAT

; 1594 : 		virtual BOOL CanPasteTrack(TrackClipObject *cobj, Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CanPasteTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z PROC	; Animatable::CanCopyTrack, COMDAT

; 1582 : 		virtual BOOL CanCopyTrack(Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z ENDP	; Animatable::CanCopyTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RevertSetKeyBuffer@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RevertSetKeyBuffer@Animatable@@UEAAXXZ PROC		; Animatable::RevertSetKeyBuffer, COMDAT

; 1557 : 		virtual void RevertSetKeyBuffer() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RevertSetKeyBuffer@Animatable@@UEAAXXZ ENDP		; Animatable::RevertSetKeyBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CommitSetKeyBuffer@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?CommitSetKeyBuffer@Animatable@@UEAAXH@Z PROC		; Animatable::CommitSetKeyBuffer, COMDAT

; 1538 : 		virtual void CommitSetKeyBuffer(TimeValue t) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CommitSetKeyBuffer@Animatable@@UEAAXH@Z ENDP		; Animatable::CommitSetKeyBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetKeyBufferPresent@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SetKeyBufferPresent@Animatable@@UEAAHXZ PROC		; Animatable::SetKeyBufferPresent, COMDAT

; 1517 : 		virtual BOOL SetKeyBufferPresent() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SetKeyBufferPresent@Animatable@@UEAAHXZ ENDP		; Animatable::SetKeyBufferPresent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
dim$ = 24
angle$ = 32
length$ = 40
flags$ = 48
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z PROC ; Animatable::AdjustTangents, COMDAT

; 1488 : 			DWORD flags) {};

	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z ENDP ; Animatable::AdjustTangents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
dim$ = 24
rcGraph$ = 32
tzoom$ = 40
tscroll$ = 48
vzoom$ = 56
vscroll$ = 64
dx$ = 72
dy$ = 80
flags$ = 88
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z PROC ; Animatable::AdjustTangents, COMDAT

; 1465 : 			DWORD flags) {};

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z ENDP ; Animatable::AdjustTangents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
timeExpr$ = 24
valExpr$ = 32
flags$ = 40
?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z PROC ; Animatable::SetSelKeyCoordsExpr, COMDAT

; 1428 : 			DWORD flags) {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1429 : 				return KEYCOORDS_EXPR_UNSUPPORTED;

	xor	eax, eax

; 1430 : 		}

	ret	0
?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z ENDP ; Animatable::SetSelKeyCoordsExpr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetSelKeyCoords@Animatable@@UEAAXHMK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
val$ = 24
flags$ = 32
?SetSelKeyCoords@Animatable@@UEAAXHMK@Z PROC		; Animatable::SetSelKeyCoords, COMDAT

; 1385 : 		virtual void SetSelKeyCoords(TimeValue t, float val,DWORD flags) {}

	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetSelKeyCoords@Animatable@@UEAAXHMK@Z ENDP		; Animatable::SetSelKeyCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
val$ = 24
flags$ = 32
?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z PROC	; Animatable::GetSelKeyCoords, COMDAT

; 1370 : 		virtual int GetSelKeyCoords(TimeValue &t, float &val, DWORD flags) { 

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1371 : 			return KEYS_NONESELECTED; 

	mov	eax, 1

; 1372 : 		}

	ret	0
?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z ENDP	; Animatable::GetSelKeyCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsSubCurveSelected@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?IsSubCurveSelected@Animatable@@UEAAHH@Z PROC		; Animatable::IsSubCurveSelected, COMDAT

; 1343 : 		virtual BOOL IsSubCurveSelected(int subNum) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsSubCurveSelected@Animatable@@UEAAHH@Z ENDP		; Animatable::IsSubCurveSelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsCurveSelected@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsCurveSelected@Animatable@@UEAAHXZ PROC		; Animatable::IsCurveSelected, COMDAT

; 1338 : 		virtual BOOL IsCurveSelected() { return FALSE; }		

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsCurveSelected@Animatable@@UEAAHXZ ENDP		; Animatable::IsCurveSelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectCurve@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
?SelectCurve@Animatable@@UEAAXH@Z PROC			; Animatable::SelectCurve, COMDAT

; 1333 : 		virtual void SelectCurve(BOOL sel) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectCurve@Animatable@@UEAAXH@Z ENDP			; Animatable::SelectCurve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
origin$ = 24
scale$ = 32
flags$ = 40
?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z PROC ; Animatable::ScaleKeyValues, COMDAT

; 1326 : 			DWORD flags) {}

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z ENDP ; Animatable::ScaleKeyValues
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
delta$ = 24
flags$ = 32
?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z PROC ; Animatable::MoveKeys, COMDAT

; 1280 : 		virtual void MoveKeys(ParamDimensionBase *dim, float delta, DWORD flags) {}  

	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z ENDP ; Animatable::MoveKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AddNewKey@Animatable@@UEAAXHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?AddNewKey@Animatable@@UEAAXHK@Z PROC			; Animatable::AddNewKey, COMDAT

; 1256 : 		virtual void AddNewKey(TimeValue t, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AddNewKey@Animatable@@UEAAXHK@Z ENDP			; Animatable::AddNewKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CloneSelectedKeys@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
offset$ = 16
?CloneSelectedKeys@Animatable@@UEAAXH@Z PROC		; Animatable::CloneSelectedKeys, COMDAT

; 1245 : 		virtual void CloneSelectedKeys(BOOL offset = FALSE) {}   

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CloneSelectedKeys@Animatable@@UEAAXH@Z ENDP		; Animatable::CloneSelectedKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumSelKeys@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSelKeys@Animatable@@UEAAHXZ PROC			; Animatable::NumSelKeys, COMDAT

; 1239 : 		virtual int NumSelKeys() { return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumSelKeys@Animatable@@UEAAHXZ ENDP			; Animatable::NumSelKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetFlagKeyIndex@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetFlagKeyIndex@Animatable@@UEAAHXZ PROC		; Animatable::GetFlagKeyIndex, COMDAT

; 1235 : 		virtual int GetFlagKeyIndex() { return -1; } 

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?GetFlagKeyIndex@Animatable@@UEAAHXZ ENDP		; Animatable::GetFlagKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z PROC	; Animatable::FlagKey, COMDAT

; 1227 : 		virtual void FlagKey(TrackHitRecord hit) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z ENDP	; Animatable::FlagKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsKeySelected@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?IsKeySelected@Animatable@@UEAAHH@Z PROC		; Animatable::IsKeySelected, COMDAT

; 1207 : 		virtual BOOL IsKeySelected(int i) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsKeySelected@Animatable@@UEAAHH@Z ENDP		; Animatable::IsKeySelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectKeyByIndex@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
sel$ = 24
?SelectKeyByIndex@Animatable@@UEAAXHH@Z PROC		; Animatable::SelectKeyByIndex, COMDAT

; 1201 : 		virtual void SelectKeyByIndex(int i, BOOL sel) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectKeyByIndex@Animatable@@UEAAXHH@Z ENDP		; Animatable::SelectKeyByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubCurve@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
sel$ = 24
?SelectSubCurve@Animatable@@UEAAXHH@Z PROC		; Animatable::SelectSubCurve, COMDAT

; 1192 : 		virtual void SelectSubCurve(int subNum, BOOL sel) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectSubCurve@Animatable@@UEAAXHH@Z ENDP		; Animatable::SelectSubCurve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
sel$ = 24
flags$ = 32
?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z PROC ; Animatable::SelectSubKeys, COMDAT

; 1183 : 		virtual void SelectSubKeys(int subNum, TrackHitTab& sel, DWORD flags) {} 

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z ENDP ; Animatable::SelectSubKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
flags$ = 24
?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z PROC ; Animatable::SelectKeys, COMDAT

; 1160 : 		virtual void SelectKeys(TrackHitTab& sel, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z ENDP ; Animatable::SelectKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeyByIndex@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?DeleteKeyByIndex@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteKeyByIndex, COMDAT

; 1144 : 		virtual void DeleteKeyByIndex(int index) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeyByIndex@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteKeyByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeys@Animatable@@UEAAXK@Z
_TEXT	SEGMENT
this$ = 8
flags$ = 16
?DeleteKeys@Animatable@@UEAAXK@Z PROC			; Animatable::DeleteKeys, COMDAT

; 1139 : 		virtual void DeleteKeys(DWORD flags) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeys@Animatable@@UEAAXK@Z ENDP			; Animatable::DeleteKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SupportTimeOperations@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportTimeOperations@Animatable@@UEAAHXZ PROC		; Animatable::SupportTimeOperations, COMDAT

; 1107 : 		virtual BOOL SupportTimeOperations() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SupportTimeOperations@Animatable@@UEAAHXZ ENDP		; Animatable::SupportTimeOperations
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?InsertTime@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
ins$ = 16
amount$ = 24
?InsertTime@Animatable@@UEAAXHH@Z PROC			; Animatable::InsertTime, COMDAT

; 1097 : 		virtual void InsertTime(TimeValue ins, TimeValue amount) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?InsertTime@Animatable@@UEAAXHH@Z ENDP			; Animatable::InsertTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ScaleTime@Animatable@@UEAAXVInterval@@M@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
s$ = 24
?ScaleTime@Animatable@@UEAAXVInterval@@M@Z PROC		; Animatable::ScaleTime, COMDAT

; 1087 : 		virtual void ScaleTime(Interval iv, float s) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ScaleTime@Animatable@@UEAAXVInterval@@M@Z ENDP		; Animatable::ScaleTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ReverseTime@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?ReverseTime@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::ReverseTime, COMDAT

; 1077 : 		virtual void ReverseTime(Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ReverseTime@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::ReverseTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteTime@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?DeleteTime@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::DeleteTime, COMDAT

; 1061 : 		virtual void DeleteTime(Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteTime@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::DeleteTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
range$ = 16
flags$ = 24
?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::EditTimeRange, COMDAT

; 1049 : 		virtual void EditTimeRange(Interval range, DWORD flags) {};

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::EditTimeRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
range$ = 24
flags$ = 32
?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z PROC ; Animatable::GetKeySelState, COMDAT

; 931  : 		virtual int GetKeySelState(BitArray& sel, Interval range, DWORD flags) { return 0; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z ENDP ; Animatable::GetKeySelState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
times$ = 16
range$ = 24
flags$ = 32
?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z PROC ; Animatable::GetKeyTimes, COMDAT

; 913  : 		virtual int GetKeyTimes(Tab<TimeValue>& times, Interval range, DWORD flags) { return 0; }		

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z ENDP ; Animatable::GetKeyTimes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsKeyAtTime@Animatable@@UEAAHHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?IsKeyAtTime@Animatable@@UEAAHHK@Z PROC			; Animatable::IsKeyAtTime, COMDAT

; 888  : 		virtual BOOL IsKeyAtTime(TimeValue t, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsKeyAtTime@Animatable@@UEAAHHK@Z ENDP			; Animatable::IsKeyAtTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeyAtTime@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?DeleteKeyAtTime@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteKeyAtTime, COMDAT

; 878  : 		virtual void DeleteKeyAtTime(TimeValue t) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeyAtTime@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteKeyAtTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopyKeysFromTime@Animatable@@UEAAXHHK@Z
_TEXT	SEGMENT
this$ = 8
src$ = 16
dst$ = 24
flags$ = 32
?CopyKeysFromTime@Animatable@@UEAAXHHK@Z PROC		; Animatable::CopyKeysFromTime, COMDAT

; 873  : 		virtual void CopyKeysFromTime(TimeValue src, TimeValue dst, DWORD flags) {} 

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CopyKeysFromTime@Animatable@@UEAAXHHK@Z ENDP		; Animatable::CopyKeysFromTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
nt$ = 32
?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z PROC		; Animatable::GetNextKeyTime, COMDAT

; 862  : 		virtual BOOL GetNextKeyTime(TimeValue t, DWORD flags, TimeValue &nt) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z ENDP		; Animatable::GetNextKeyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyIndex@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?GetKeyIndex@Animatable@@UEAAHH@Z PROC			; Animatable::GetKeyIndex, COMDAT

; 841  : 		virtual int GetKeyIndex(TimeValue t) { return -1; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?GetKeyIndex@Animatable@@UEAAHH@Z ENDP			; Animatable::GetKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyTime@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?GetKeyTime@Animatable@@UEAAHH@Z PROC			; Animatable::GetKeyTime, COMDAT

; 835  : 		virtual TimeValue GetKeyTime(int index) { return 0; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeyTime@Animatable@@UEAAHH@Z ENDP			; Animatable::GetKeyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumKeys@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumKeys@Animatable@@UEAAHXZ PROC			; Animatable::NumKeys, COMDAT

; 830  : 		virtual int NumKeys() { return NOT_KEYFRAMEABLE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?NumKeys@Animatable@@UEAAHXZ ENDP			; Animatable::NumKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTrack@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?EditTrack@Animatable@@UEAAXXZ PROC			; Animatable::EditTrack, COMDAT

; 821  : 		virtual void EditTrack() { assert(0); } 

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTrack@Animatable@@UEAAXXZ ENDP			; Animatable::EditTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RenderEnd@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?RenderEnd@Animatable@@UEAAHH@Z PROC			; Animatable::RenderEnd, COMDAT

; 817  : 		virtual int RenderEnd(TimeValue t) { return 0; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?RenderEnd@Animatable@@UEAAHH@Z ENDP			; Animatable::RenderEnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RenderBegin@Animatable@@UEAAHHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?RenderBegin@Animatable@@UEAAHHK@Z PROC			; Animatable::RenderBegin, COMDAT

; 810  : 		virtual int RenderBegin(TimeValue t, ULONG flags=0) { return 0; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?RenderBegin@Animatable@@UEAAHHK@Z ENDP			; Animatable::RenderBegin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ChildAnim@Animatable@@UEAAPEAV1@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?ChildAnim@Animatable@@UEAAPEAV1@H@Z PROC		; Animatable::ChildAnim, COMDAT

; 757  : 		virtual Animatable* ChildAnim(int i) { return NULL; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ChildAnim@Animatable@@UEAAPEAV1@H@Z ENDP		; Animatable::ChildAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumChildren@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumChildren@Animatable@@UEAAHXZ PROC			; Animatable::NumChildren, COMDAT

; 754  : 		virtual	int NumChildren() { return 0; }   

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumChildren@Animatable@@UEAAHXZ ENDP			; Animatable::NumChildren
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanMakeUnique@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?CanMakeUnique@Animatable@@UEAAHXZ PROC			; Animatable::CanMakeUnique, COMDAT

; 749  : 		virtual BOOL CanMakeUnique() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanMakeUnique@Animatable@@UEAAHXZ ENDP			; Animatable::CanMakeUnique
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopyAnim@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?CanCopyAnim@Animatable@@UEAAHXZ PROC			; Animatable::CanCopyAnim, COMDAT

; 739  : 		virtual BOOL CanCopyAnim() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanCopyAnim@Animatable@@UEAAHXZ ENDP			; Animatable::CanCopyAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSubAnimCurveColor@Animatable@@UEAAKH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?GetSubAnimCurveColor@Animatable@@UEAAKH@Z PROC		; Animatable::GetSubAnimCurveColor, COMDAT

; 713  : 		virtual DWORD GetSubAnimCurveColor(int subNum) { return PAINTCURVE_GENCOLOR; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 16
	ret	0
?GetSubAnimCurveColor@Animatable@@UEAAKH@Z ENDP		; Animatable::GetSubAnimCurveColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteSubAnim@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?DeleteSubAnim@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteSubAnim, COMDAT

; 698  : 		virtual void DeleteSubAnim(int i) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteSubAnim@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanDeleteSubAnim@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?CanDeleteSubAnim@Animatable@@UEAAHH@Z PROC		; Animatable::CanDeleteSubAnim, COMDAT

; 692  : 		virtual BOOL CanDeleteSubAnim(int i) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanDeleteSubAnim@Animatable@@UEAAHH@Z ENDP		; Animatable::CanDeleteSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanAssignController@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subAnim$ = 16
?CanAssignController@Animatable@@UEAAHH@Z PROC		; Animatable::CanAssignController, COMDAT

; 674  : 		virtual BOOL CanAssignController(int subAnim) { return TRUE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanAssignController@Animatable@@UEAAHH@Z ENDP		; Animatable::CanAssignController
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AssignController@Animatable@@UEAAHPEAV1@H@Z
_TEXT	SEGMENT
this$ = 8
control$ = 16
subAnim$ = 24
?AssignController@Animatable@@UEAAHPEAV1@H@Z PROC	; Animatable::AssignController, COMDAT

; 664  : 		virtual BOOL AssignController(Animatable *control,int subAnim) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?AssignController@Animatable@@UEAAHPEAV1@H@Z ENDP	; Animatable::AssignController
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?InvisibleProperty@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?InvisibleProperty@Animatable@@UEAAHXZ PROC		; Animatable::InvisibleProperty, COMDAT

; 653  : 		virtual BOOL InvisibleProperty() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?InvisibleProperty@Animatable@@UEAAHXZ ENDP		; Animatable::InvisibleProperty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassPropertyLevel@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?BypassPropertyLevel@Animatable@@UEAAHXZ PROC		; Animatable::BypassPropertyLevel, COMDAT

; 645  : 		virtual BOOL BypassPropertyLevel() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BypassPropertyLevel@Animatable@@UEAAHXZ ENDP		; Animatable::BypassPropertyLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassTrackBar@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?BypassTrackBar@Animatable@@UEAAHXZ PROC		; Animatable::BypassTrackBar, COMDAT

; 636  : 		virtual BOOL BypassTrackBar() { return BypassTreeView(); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+128]
	add	rsp, 40					; 00000028H
	ret	0
?BypassTrackBar@Animatable@@UEAAHXZ ENDP		; Animatable::BypassTrackBar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassTreeView@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?BypassTreeView@Animatable@@UEAAHXZ PROC		; Animatable::BypassTreeView, COMDAT

; 626  : 		virtual BOOL BypassTreeView() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BypassTreeView@Animatable@@UEAAHXZ ENDP		; Animatable::BypassTreeView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
_TEXT	SEGMENT
this$ = 8
ip$ = 16
flags$ = 24
next$ = 32
?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z PROC ; Animatable::EndEditParams, COMDAT

; 414  : 		virtual void EndEditParams(IObjParam *ip, ULONG flags, Animatable *next = NULL) {} 

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ENDP ; Animatable::EndEditParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
_TEXT	SEGMENT
this$ = 8
ip$ = 16
flags$ = 24
prev$ = 32
?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z PROC ; Animatable::BeginEditParams, COMDAT

; 395  : 		virtual void BeginEditParams(IObjParam *ip, ULONG flags, Animatable *prev = NULL) {} 

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ENDP ; Animatable::BeginEditParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FreeCaches@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?FreeCaches@Animatable@@UEAAXXZ PROC			; Animatable::FreeCaches, COMDAT

; 353  : 		virtual void FreeCaches() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FreeCaches@Animatable@@UEAAXXZ ENDP			; Animatable::FreeCaches
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ??_4Interval@@QEAAAEAV0@V0@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
i$ = 72
??_4Interval@@QEAAAEAV0@V0@@Z PROC			; Interval::operator&=, COMDAT

; 147  : 		Interval& operator&=(const Interval i) { return (*this = (*this&i)); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	r8, QWORD PTR i$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??IInterval@@QEBA?AV0@V0@@Z
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??_4Interval@@QEAAAEAV0@V0@@Z ENDP			; Interval::operator&=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ?SetInfinite@Interval@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetInfinite@Interval@@QEAAXXZ PROC			; Interval::SetInfinite, COMDAT

; 122  : 		void SetInfinite() { start = TIME_NegInfinity; end = TIME_PosInfinity; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 2147483647		; 7fffffffH
	ret	0
?SetInfinite@Interval@@QEAAXXZ ENDP			; Interval::SetInfinite
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ?SetEmpty@Interval@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetEmpty@Interval@@QEAAXXZ PROC			; Interval::SetEmpty, COMDAT

; 118  : 		void SetEmpty() { start = TIME_NegInfinity; end = TIME_NegInfinity; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], -2147483648		; ffffffff80000000H
	ret	0
?SetEmpty@Interval@@QEAAXXZ ENDP			; Interval::SetEmpty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ??0Interval@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0Interval@@QEAA@XZ PROC				; Interval::Interval, COMDAT

; 58   : 		Interval() { SetEmpty(); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0Interval@@QEAA@XZ ENDP				; Interval::Interval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ?Intens@@YAMAEBVAColor@@@Z
_TEXT	SEGMENT
c$ = 8
?Intens@@YAMAEBVAColor@@@Z PROC				; Intens, COMDAT

; 335  : static inline float Intens(const AColor& c) {   return (c.r+c.g+c.b)/3.0f; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rsp]
	addss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR __real@40400000
	ret	0
?Intens@@YAMAEBVAColor@@@Z ENDP				; Intens
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??D@YA?AVAColor@@MAEBV0@@Z
_TEXT	SEGMENT
tv76 = 48
__$ReturnUdt$ = 80
f$ = 88
a$ = 96
??D@YA?AVAColor@@MAEBV0@@Z PROC				; operator*, COMDAT

; 308  : inline AColor operator*(float f, const AColor& a) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 309  : 	return(AColor(a.r*f, a.g*f, a.b*f, a.a*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	mulss	xmm2, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm3, DWORD PTR [rax]
	mulss	xmm3, DWORD PTR f$[rsp]
	movss	DWORD PTR tv76[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv76[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 310  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??D@YA?AVAColor@@MAEBV0@@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??HAColor@@QEBA?AV0@AEBV0@@Z
_TEXT	SEGMENT
tv80 = 48
this$ = 80
__$ReturnUdt$ = 88
c$ = 96
??HAColor@@QEBA?AV0@AEBV0@@Z PROC			; AColor::operator+, COMDAT

; 290  : inline AColor AColor::operator+(const AColor& c) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 291  : 	return(AColor(r+c.r,g+c.g,b+c.b,a+c.a));

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	addss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	addss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm3, DWORD PTR [rax]
	addss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 292  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??HAColor@@QEBA?AV0@AEBV0@@Z ENDP			; AColor::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@AEBVColor@@M@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
alph$ = 24
??0AColor@@QEAA@AEBVColor@@M@Z PROC			; AColor::AColor, COMDAT

; 57   : 	AColor(const Color& c, float alph=1.0f) { r = c.r; g = c.g; b = c.b; a = alph; } 

	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR alph$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@AEBVColor@@M@Z ENDP			; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
??0AColor@@QEAA@AEBV0@@Z PROC				; AColor::AColor, COMDAT

; 54   : 	AColor(const AColor& c) { r = c.r; g = c.g; b = c.b; a = c.a; } 

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@AEBV0@@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
A$ = 40
??0AColor@@QEAA@HHHH@Z PROC				; AColor::AColor, COMDAT

; 51   : 	AColor(int R, int G, int B, int A=0) { 

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx

; 52   : 		r = (float)R; g = (float)G; b = (float)B; a = (float)A; }

	cvtsi2ss xmm0, DWORD PTR R$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
	cvtsi2ss xmm0, DWORD PTR G$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	cvtsi2ss xmm0, DWORD PTR B$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	cvtsi2ss xmm0, DWORD PTR A$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@HHHH@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
A$ = 40
??0AColor@@QEAA@MMMM@Z PROC				; AColor::AColor, COMDAT

; 44   : 	AColor(float R, float G, float B, float A=1.0f)  { r = R; g = G; b = B; a = A; }

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR R$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR G$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR B$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR A$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@MMMM@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AColor@@QEAA@XZ PROC					; AColor::AColor, COMDAT

; 41   : 	AColor()  {}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@XZ ENDP					; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ?Intens@@YAMAEBVColor@@@Z
_TEXT	SEGMENT
c$ = 8
?Intens@@YAMAEBVColor@@@Z PROC				; Intens, COMDAT

; 580  : static inline float Intens(const Color& c) { return (c.r+c.g+c.b)/3.0f; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rsp]
	addss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR __real@40400000
	ret	0
?Intens@@YAMAEBVColor@@@Z ENDP				; Intens
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@HHH@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
??0Color@@QEAA@HHH@Z PROC				; Color::Color, COMDAT

; 113  : 	Color(int R, int G, int B) { r = (float)R; g = (float)G; b = (float)B; }

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	cvtsi2ss xmm0, DWORD PTR R$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
	cvtsi2ss xmm0, DWORD PTR G$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	cvtsi2ss xmm0, DWORD PTR B$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@HHH@Z ENDP				; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@NNN@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
??0Color@@QEAA@NNN@Z PROC				; Color::Color, COMDAT

; 103  : 	Color(double R, double G, double B) { r = (float)R; g = (float)G; b = (float)B; }

	movsd	QWORD PTR [rsp+32], xmm3
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	cvtsd2ss xmm0, QWORD PTR R$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
	cvtsd2ss xmm0, QWORD PTR G$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	cvtsd2ss xmm0, QWORD PTR B$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@NNN@Z ENDP				; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
??0Color@@QEAA@MMM@Z PROC				; Color::Color, COMDAT

; 93   : 	Color(float R, float G, float B)  { r = R; g = G; b = B;  }

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR R$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR G$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR B$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@MMM@Z ENDP				; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Color@@QEAA@XZ PROC					; Color::Color, COMDAT

; 83   : 	Color()  {}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@XZ ENDP					; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?BitMask@BitArray@@AEBA_KH@Z
_TEXT	SEGMENT
tv66 = 0
tv69 = 8
this$ = 32
i$ = 40
?BitMask@BitArray@@AEBA_KH@Z PROC			; BitArray::BitMask, COMDAT

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	cmp	DWORD PTR i$[rsp], 64			; 00000040H
	jge	SHORT $LN3@BitMask
	mov	eax, DWORD PTR i$[rsp]
	mov	ecx, 1
	mov	QWORD PTR tv69[rsp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv69[rsp]
	shl	rax, cl
	mov	QWORD PTR tv66[rsp], rax
	jmp	SHORT $LN4@BitMask
$LN3@BitMask:
	mov	QWORD PTR tv66[rsp], 0
$LN4@BitMask:
	mov	rax, QWORD PTR tv66[rsp]
	add	rsp, 24
	ret	0
?BitMask@BitArray@@AEBA_KH@Z ENDP			; BitArray::BitMask
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?UseLocalBits@BitArray@@AEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?UseLocalBits@BitArray@@AEBA_NXZ PROC			; BitArray::UseLocalBits, COMDAT

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+8], 64			; 00000040H
	jg	SHORT $LN3@UseLocalBi
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN4@UseLocalBi
$LN3@UseLocalBi:
	mov	DWORD PTR tv66[rsp], 0
$LN4@UseLocalBi:
	movzx	eax, BYTE PTR tv66[rsp]
	add	rsp, 24
	ret	0
?UseLocalBits@BitArray@@AEBA_NXZ ENDP			; BitArray::UseLocalBits
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?Set@BitArray@@QEAAXH@Z
_TEXT	SEGMENT
tv93 = 32
tv79 = 40
this$ = 64
i$ = 72
?Set@BitArray@@QEAAXH@Z PROC				; BitArray::Set, COMDAT

; 290  : 	{

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 291  : 		DbgAssert(i>-1 && i<numBits);
; 292  : 		if ((i > -1) && (i < numBits))

	cmp	DWORD PTR i$[rsp], -1
	jle	$LN2@Set
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rsp], eax
	jge	$LN2@Set

; 293  : 		{
; 294  : 			if (UseLocalBits())

	mov	rcx, QWORD PTR this$[rsp]
	call	?UseLocalBits@BitArray@@AEBA_NXZ	; BitArray::UseLocalBits
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Set

; 295  : 			{
; 296  : 				localBits |= BitMask(i);

	mov	edx, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?BitMask@BitArray@@AEBA_KH@Z		; BitArray::BitMask
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	or	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 297  : 			}
; 298  : 			else

	jmp	SHORT $LN4@Set
$LN3@Set:

; 299  : 			{
; 300  : 				bits[i>>NSHIFT] |= BitMask(i&BITS_PER_DWORD_PTR_MASK);

	mov	eax, DWORD PTR i$[rsp]
	sar	eax, 6
	cdqe
	mov	QWORD PTR tv79[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv93[rsp], rcx
	mov	edx, DWORD PTR i$[rsp]
	and	edx, 63					; 0000003fH
	mov	rcx, QWORD PTR this$[rsp]
	call	?BitMask@BitArray@@AEBA_KH@Z		; BitArray::BitMask
	mov	rdx, QWORD PTR tv93[rsp]
	mov	rcx, QWORD PTR tv79[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8]
	or	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR i$[rsp]
	sar	ecx, 6
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rdx+rcx*8], rax
$LN4@Set:
$LN2@Set:

; 301  : 			}
; 302  : 		}
; 303  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?Set@BitArray@@QEAAXH@Z ENDP				; BitArray::Set
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\matrix3.h
;	COMDAT ??0Matrix3@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Matrix3@@QEAA@XZ PROC				; Matrix3::Matrix3, COMDAT

; 172  :    Matrix3(){ flags = 0; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+48], 0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Matrix3@@QEAA@XZ ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Execute@ClassDesc@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
arg1$ = 24
arg2$ = 32
arg3$ = 40
?Execute@ClassDesc@@UEAA_JH_K00@Z PROC			; ClassDesc::Execute, COMDAT

; 1419 : 		virtual INT_PTR Execute(int cmd, ULONG_PTR arg1=0, ULONG_PTR arg2=0, ULONG_PTR arg3=0) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Execute@ClassDesc@@UEAA_JH_K00@Z ENDP			; ClassDesc::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ PROC		; ClassDesc::SubClassID, COMDAT

; 1405 : 		virtual Class_ID		SubClassID() { return Class_ID(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@XZ			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ ENDP		; ClassDesc::SubClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?ClearInterfaces@ClassDesc@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearInterfaces@ClassDesc@@UEAAXXZ PROC		; ClassDesc::ClearInterfaces, COMDAT

; 1396 : 		virtual void			ClearInterfaces() { interfaces.ZeroCount(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ ; Tab<FPInterface * __ptr64>::ZeroCount
	add	rsp, 40					; 00000028H
	ret	0
?ClearInterfaces@ClassDesc@@UEAAXXZ ENDP		; ClassDesc::ClearInterfaces
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z PROC ; ClassDesc::GetInterfaceAt, COMDAT

; 1379 : 		virtual FPInterface*	GetInterfaceAt(int i) { return interfaces[i]; }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ; Tab<FPInterface * __ptr64>::operator[]
	mov	rax, QWORD PTR [rax]
	add	rsp, 40					; 00000028H
	ret	0
?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z ENDP ; ClassDesc::GetInterfaceAt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NumInterfaces@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NumInterfaces@ClassDesc@@UEAAHXZ PROC			; ClassDesc::NumInterfaces, COMDAT

; 1376 : 		virtual int				NumInterfaces() { return interfaces.Count(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ	; Tab<FPInterface * __ptr64>::Count
	add	rsp, 40					; 00000028H
	ret	0
?NumInterfaces@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::NumInterfaces
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z
_TEXT	SEGMENT
this$ = 8
bkColor$ = 16
hDC$ = 24
rect$ = 32
?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z PROC ; ClassDesc::DrawRepresentation, COMDAT

; 1370 : 		virtual bool DrawRepresentation(COLORREF bkColor, HDC hDC, Rect& rect) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z ENDP ; ClassDesc::DrawRepresentation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
pbd$ = 16
?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z PROC ; ClassDesc::GetUserDlgProc, COMDAT

; 1358 : 		virtual ParamMap2UserDlgProc* GetUserDlgProc(ParamBlockDesc2* pbd) { return NULL; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z ENDP ; ClassDesc::GetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
pbd$ = 16
?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z PROC ; ClassDesc::GetParamMap, COMDAT

; 1341 : 		virtual IParamMap2*		GetParamMap(ParamBlockDesc2* pbd) { return NULL; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z ENDP ; ClassDesc::GetParamMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ PROC ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure, COMDAT

; 1263 : 		virtual bool			UseOnlyInternalNameForMAXScriptExposure() { return false; }

	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ ENDP ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?InitialRollupPageState@ClassDesc@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?InitialRollupPageState@ClassDesc@@UEAAKXZ PROC		; ClassDesc::InitialRollupPageState, COMDAT

; 1252 : 		virtual DWORD			InitialRollupPageState() { return 0x7fffffff; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2147483647				; 7fffffffH
	ret	0
?InitialRollupPageState@ClassDesc@@UEAAKXZ ENDP		; ClassDesc::InitialRollupPageState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z
_TEXT	SEGMENT
this$ = 8
iload$ = 16
?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z PROC	; ClassDesc::Load, COMDAT

; 1237 : 		virtual IOResult 		Load(ILoad *iload) { return IO_OK; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z ENDP	; ClassDesc::Load
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z
_TEXT	SEGMENT
this$ = 8
isave$ = 16
?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z PROC	; ClassDesc::Save, COMDAT

; 1230 : 		virtual IOResult 		Save(ISave *isave) { return IO_OK; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z ENDP	; ClassDesc::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NeedsToSave@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NeedsToSave@ClassDesc@@UEAAHXZ PROC			; ClassDesc::NeedsToSave, COMDAT

; 1224 : 		virtual BOOL			NeedsToSave() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NeedsToSave@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::NeedsToSave
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
pNode$ = 16
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z PROC ; ClassDesc::CreateManipulator, COMDAT

; 1215 : 		virtual Manipulator* CreateManipulator(INode* pNode) {return NULL;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z ENDP ; ClassDesc::CreateManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
hTarget$ = 16
pNode$ = 24
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z PROC ; ClassDesc::CreateManipulator, COMDAT

; 1207 : 			INode* pNode) { return NULL; }

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z ENDP ; ClassDesc::CreateManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
pNode$ = 16
?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z PROC	; ClassDesc::CanManipulateNode, COMDAT

; 1189 : 		virtual BOOL CanManipulateNode(INode* pNode) { return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z ENDP	; ClassDesc::CanManipulateNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
hTarget$ = 16
?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z PROC ; ClassDesc::CanManipulate, COMDAT

; 1182 : 		virtual BOOL CanManipulate(ReferenceTarget* hTarget) { return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ClassDesc::CanManipulate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?IsManipulator@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsManipulator@ClassDesc@@UEAAHXZ PROC			; ClassDesc::IsManipulator, COMDAT

; 1173 : 		virtual BOOL IsManipulator() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsManipulator@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::IsManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z PROC ; ClassDesc::GetActionTable, COMDAT

; 1166 : 		virtual ActionTable* GetActionTable(int i) { return NULL; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z ENDP ; ClassDesc::GetActionTable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NumActionTables@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumActionTables@ClassDesc@@UEAAHXZ PROC		; ClassDesc::NumActionTables, COMDAT

; 1159 : 		virtual int NumActionTables() { return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumActionTables@ClassDesc@@UEAAHXZ ENDP		; ClassDesc::NumActionTables
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z
_TEXT	SEGMENT
this$ = 8
hParent$ = 16
?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z PROC	; ClassDesc::EditClassParams, COMDAT

; 1134 : 		virtual void			EditClassParams(HWND hParent) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z ENDP	; ClassDesc::EditClassParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?HasClassParams@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?HasClassParams@ClassDesc@@UEAAHXZ PROC			; ClassDesc::HasClassParams, COMDAT

; 1127 : 		virtual BOOL			HasClassParams() {return FALSE;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?HasClassParams@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::HasClassParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::OkToCreate, COMDAT

; 1051 : 		virtual BOOL			OkToCreate(Interface *i) { return TRUE; }	// return FALSE to disable create button

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::OkToCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::EndCreate, COMDAT

; 1018 : 		virtual int 			EndCreate(Interface *i) {return 0;};

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::EndCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::BeginCreate, COMDAT

; 1008 : 		virtual	int 			BeginCreate(Interface *i) {return 0;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::BeginCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
i$ = 72
??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z PROC ; Tab<FPInterface * __ptr64>::operator[], COMDAT

; 357  : 		T& operator[](const INT_PTR i) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 358  : 			DbgAssert(th);
; 359  : 			DbgAssert(i >= 0);
; 360  : 			DbgAssert(th && i < th->count);
; 361  : 			if (!th || i < 0 || (i >= th->count))

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@operator
	cmp	QWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax]
	cmp	QWORD PTR i$[rsp], rax
	jl	SHORT $LN2@operator
$LN3@operator:

; 362  : 			{
; 363  : 				throw MaxSDK::Util::TabOutOfRangeException(_M("Invalid index passed into a Max SDK Tab::operator[]"));

	lea	rdx, OFFSET FLAT:??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
	lea	rdx, OFFSET FLAT:_TI4?AVTabOutOfRangeException@Util@MaxSDK@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@operator:

; 364  : 			}
; 365  : 			
; 366  : 			return (th->data[i]); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR i$[rsp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
$LN4@operator:

; 367  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ENDP ; Tab<FPInterface * __ptr64>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ PROC	; Tab<FPInterface * __ptr64>::ZeroCount, COMDAT

; 232  : 		{ 

	mov	QWORD PTR [rsp+8], rcx

; 233  : 			if (th) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@ZeroCount

; 234  : 				th->count = 0; 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rax], 0
$LN2@ZeroCount:

; 235  : 			}
; 236  : 		}

	ret	0
?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ ENDP	; Tab<FPInterface * __ptr64>::ZeroCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ PROC		; Tab<FPInterface * __ptr64>::Count, COMDAT

; 220  : 		{ 

	mov	QWORD PTR [rsp+8], rcx

; 221  : 			if (th) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Count

; 222  : 				return (th->count); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	jmp	SHORT $LN1@Count
$LN2@Count:

; 223  : 			}
; 224  : 			return 0; 

	xor	eax, eax
$LN1@Count:

; 225  : 		}  

	ret	0
?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ ENDP		; Tab<FPInterface * __ptr64>::Count
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
text$di	SEGMENT
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ PROC	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId'', COMDAT

; 32   : 		static AssetId kInvalidId;

	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A
	call	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ; MaxSDK::AssetManagement::AssetId::AssetId
	add	rsp, 40					; 00000028H
	ret	0
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ENDP	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
_TEXT	SEGMENT
this$ = 24
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ PROC		; MaxSDK::AssetManagement::AssetId::AssetId, COMDAT

; 29   : 			AssetId() { *static_cast<GUID*>(this) = CLSID_NULL; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	lea	rax, OFFSET FLAT:GUID_NULL
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	pop	rsi
	ret	0
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ENDP		; MaxSDK::AssetManagement::AssetId::AssetId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\point3.h
;	COMDAT ??D@YA?AVPoint3@@AEBV0@M@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
a$ = 72
f$ = 80
??D@YA?AVPoint3@@AEBV0@M@Z PROC				; operator*, COMDAT

; 326  : __forceinline Point3 operator*(const Point3& a, float f) {

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 327  :    return(Point3(a.x*f, a.y*f, a.z*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, DWORD PTR f$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 328  :    }

	add	rsp, 56					; 00000038H
	ret	0
??D@YA?AVPoint3@@AEBV0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\point3.h
;	COMDAT ??D@YA?AVPoint3@@MAEBV0@@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
f$ = 72
a$ = 80
??D@YA?AVPoint3@@MAEBV0@@Z PROC				; operator*, COMDAT

; 320  : __forceinline Point3 operator*(float f, const Point3& a) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 321  :    return(Point3(a.x*f, a.y*f, a.z*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, DWORD PTR f$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 322  :    }

	add	rsp, 56					; 00000038H
	ret	0
??D@YA?AVPoint3@@MAEBV0@@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z PROC ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z PROC ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7TabOutOfRangeException@Util@MaxSDK@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ PROC	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ ENDP	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
_TEXT	SEGMENT
tv75 = 0
this$ = 32
?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ PROC ; MaxSDK::Util::TabOutOfRangeException::What, COMDAT

; 99   : 			{

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 100  : 				return (mMessage) ? mMessage : _M("MaxSDK::Util::TabOutOfRangeException");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@What
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv75[rsp], rax
	jmp	SHORT $LN4@What
$LN3@What:
	lea	rax, OFFSET FLAT:??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@
	mov	QWORD PTR tv75[rsp], rax
$LN4@What:
	mov	rax, QWORD PTR tv75[rsp]

; 101  : 			}

	add	rsp, 24
	ret	0
?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ ENDP ; MaxSDK::Util::TabOutOfRangeException::What
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z PROC ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException, COMDAT

; 96   : 			{

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 95   : 				: MaxSDK::Util::OutOfRangeException(message)

	mov	rdx, QWORD PTR message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	npad	1

; 96   : 			{

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7TabOutOfRangeException@Util@MaxSDK@@6B@
	mov	QWORD PTR [rax], rcx

; 97   : 			}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Interface_ID@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
iid$ = 16
??0Interface_ID@@QEAA@AEBV0@@Z PROC			; Interface_ID::Interface_ID, COMDAT

; 215  : 	Interface_ID(const Interface_ID& iid) { a = iid.a; b = iid.b;	}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR iid$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR iid$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Interface_ID@@QEAA@AEBV0@@Z ENDP			; Interface_ID::Interface_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??8Class_ID@@QEBA_NAEBV0@@Z
_TEXT	SEGMENT
tv70 = 0
this$ = 32
cid$ = 40
??8Class_ID@@QEBA_NAEBV0@@Z PROC			; Class_ID::operator==, COMDAT

; 170  : 	bool operator==(const Class_ID& cid) const { return ((a == cid.a) && (b == cid.b)); }

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR cid$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR cid$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[rsp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv70[rsp]
	add	rsp, 24
	ret	0
??8Class_ID@@QEBA_NAEBV0@@Z ENDP			; Class_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@KK@Z
_TEXT	SEGMENT
this$ = 8
aa$ = 16
bb$ = 24
??0Class_ID@@QEAA@KK@Z PROC				; Class_ID::Class_ID, COMDAT

; 160  : 	Class_ID(ulong aa, ulong bb) { a = aa; b = bb; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR aa$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bb$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@KK@Z ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Class_ID@@QEAA@XZ PROC				; Class_ID::Class_ID, COMDAT

; 145  : 	Class_ID() { a = b = 0xffffffff; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], -1			; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -1			; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@XZ ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

; 934  : }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconnoise.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

; 934  : }

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 56					; 00000038H
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
