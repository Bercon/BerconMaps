; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24231.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA	; BerconGradient::texoutDlg
PUBLIC	WinbaseIsolationAwarePrivateT_UnPgpgk
PUBLIC	IsolationAwarePrivateT_SqbjaYRiRY
PUBLIC	IsolationAwarePrivateT_SAbnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA DQ 01H DUP (?) ; BerconGradient::texoutDlg
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SqbjaYRiRY
_BSS	SEGMENT
IsolationAwarePrivateT_SqbjaYRiRY DD 01H DUP (?)
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SAbnPgpgk
_BSS	SEGMENT
IsolationAwarePrivateT_SAbnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_UnPgpgk
_DATA	SEGMENT
WinbaseIsolationAwarePrivateT_UnPgpgk DQ ffffffffffffffffH
_DATA	ENDS
CONST	SEGMENT
$SG212401 DB	'o', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG212402 DB	'd', 00H, 'i', 00H, 's', 00H, 'O', 00H, 'n', 00H, 00H, 00H
	ORG $+4
$SG212403 DB	'd', 00H, 'i', 00H, 's', 00H, 'S', 00H, 't', 00H, 'r', 00H
	DB	00H, 00H
	ORG $+2
$SG212404 DB	'd', 00H, 'i', 00H, 's', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG212405 DB	'I', 00H, 'O', 00H, 'R', 00H, 00H, 00H
$SG212406 DB	'n', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	'F', 00H, 'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG212407 DB	'n', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 'l', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG212408 DB	'g', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'U', 00H, 'V', 00H, 'W', 00H, 00H, 00H
$SG212409 DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'L', 00H
	DB	'o', 00H, 'o', 00H, 'p', 00H, 00H, 00H
	ORG $+4
$SG212410 DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'M', 00H
	DB	'a', 00H, 'x', 00H, 00H, 00H
	ORG $+6
$SG212411 DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 'M', 00H
	DB	'i', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG212412 DB	'r', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H
	DB	'T', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+2
$SG212413 DB	'r', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H
	DB	'P', 00H, 'a', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG212414 DB	'r', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 00H, 00H
	ORG $+4
$SG212415 DB	'r', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H
	DB	'M', 00H, 'a', 00H, 't', 00H, 00H, 00H
	ORG $+4
$SG212416 DB	's', 00H, 'e', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG212417 DB	'r', 00H, 'e', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H
	DB	'e', 00H, 00H, 00H
$SG212418 DB	'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H
	DB	'o', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 00H, 00H
	ORG $+4
$SG212419 DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG212420 DB	'k', 00H, 'e', 00H, 'y', 00H, 'C', 00H, 'o', 00H, 'l', 00H
	DB	00H, 00H
	ORG $+2
$SG212421 DB	'k', 00H, 'e', 00H, 'y', 00H, 'P', 00H, 'o', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG212422 DB	'k', 00H, 'e', 00H, 'y', 00H, 'N', 00H, 'u', 00H, 'm', 00H
	DB	00H, 00H
	ORG $+2
$SG212423 DB	'k', 00H, 'e', 00H, 'y', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG212424 DB	'p', 00H, 'o', 00H, 's', 00H, 'i', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG212425 DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG212426 DB	's', 00H, 'u', 00H, 'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H
	DB	's', 00H, 00H, 00H
$SG212427 DB	'n', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG212428 DB	'm', 00H, 'a', 00H, 'p', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	00H, 00H
	ORG $+2
$SG212429 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG212439 DB	'c', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'C', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 00H
	DB	00H
	ORG $+6
$SG212440 DB	'e', 00H, 'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H
	DB	'C', 00H, 'u', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 00H, 00H
$SG212441 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	fabsf
PUBLIC	??0Class_ID@@QEAA@XZ				; Class_ID::Class_ID
PUBLIC	??0Class_ID@@QEAA@KK@Z				; Class_ID::Class_ID
PUBLIC	??8Class_ID@@QEBA_NAEBV0@@Z			; Class_ID::operator==
PUBLIC	??0Interface_ID@@QEAA@AEBV0@@Z			; Interface_ID::Interface_ID
PUBLIC	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
PUBLIC	?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ ; MaxSDK::Util::TabOutOfRangeException::What
PUBLIC	??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException
PUBLIC	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
PUBLIC	??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor'
PUBLIC	?acos@@YAMM@Z					; acos
PUBLIC	?fabs@@YAMM@Z					; fabs
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	??D@YA?AVPoint3@@AEBV0@M@Z			; operator*
PUBLIC	?DotProd@@YAMAEBVPoint3@@0@Z			; DotProd
PUBLIC	??0InterfaceServer@@QEAA@XZ			; InterfaceServer::InterfaceServer
PUBLIC	??_GInterfaceServer@@UEAAPEAXI@Z		; InterfaceServer::`scalar deleting destructor'
PUBLIC	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ	; MaxSDK::AssetManagement::AssetId::AssetId
PUBLIC	?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ		; Tab<FPInterface * __ptr64>::Count
PUBLIC	?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ	; Tab<FPInterface * __ptr64>::ZeroCount
PUBLIC	??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ; Tab<FPInterface * __ptr64>::operator[]
PUBLIC	?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::BeginCreate
PUBLIC	?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::EndCreate
PUBLIC	?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::OkToCreate
PUBLIC	?HasClassParams@ClassDesc@@UEAAHXZ		; ClassDesc::HasClassParams
PUBLIC	?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z	; ClassDesc::EditClassParams
PUBLIC	?NumActionTables@ClassDesc@@UEAAHXZ		; ClassDesc::NumActionTables
PUBLIC	?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z ; ClassDesc::GetActionTable
PUBLIC	?IsManipulator@ClassDesc@@UEAAHXZ		; ClassDesc::IsManipulator
PUBLIC	?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z ; ClassDesc::CanManipulate
PUBLIC	?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z ; ClassDesc::CanManipulateNode
PUBLIC	?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z ; ClassDesc::CreateManipulator
PUBLIC	?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z ; ClassDesc::CreateManipulator
PUBLIC	?NeedsToSave@ClassDesc@@UEAAHXZ			; ClassDesc::NeedsToSave
PUBLIC	?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z ; ClassDesc::Save
PUBLIC	?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z ; ClassDesc::Load
PUBLIC	?InitialRollupPageState@ClassDesc@@UEAAKXZ	; ClassDesc::InitialRollupPageState
PUBLIC	?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure
PUBLIC	?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z ; ClassDesc::GetParamMap
PUBLIC	?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z ; ClassDesc::GetUserDlgProc
PUBLIC	?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z ; ClassDesc::DrawRepresentation
PUBLIC	?NumInterfaces@ClassDesc@@UEAAHXZ		; ClassDesc::NumInterfaces
PUBLIC	?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z ; ClassDesc::GetInterfaceAt
PUBLIC	?ClearInterfaces@ClassDesc@@UEAAXXZ		; ClassDesc::ClearInterfaces
PUBLIC	?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ	; ClassDesc::SubClassID
PUBLIC	?Execute@ClassDesc@@UEAA_JH_K00@Z		; ClassDesc::Execute
PUBLIC	??AMatrix3@@QEBAAEBVPoint3@@H@Z			; Matrix3::operator[]
PUBLIC	??0Matrix3@@QEAA@XZ				; Matrix3::Matrix3
PUBLIC	?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z		; Matrix3::GetRow
PUBLIC	?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ		; Matrix3::GetTrans
PUBLIC	?Set@BitArray@@QEAAXH@Z				; BitArray::Set
PUBLIC	?UseLocalBits@BitArray@@AEBA_NXZ		; BitArray::UseLocalBits
PUBLIC	?BitMask@BitArray@@AEBA_KH@Z			; BitArray::BitMask
PUBLIC	??0Color@@QEAA@MMM@Z				; Color::Color
PUBLIC	??0Color@@QEAA@NNN@Z				; Color::Color
PUBLIC	??0AColor@@QEAA@XZ				; AColor::AColor
PUBLIC	??0AColor@@QEAA@MMMM@Z				; AColor::AColor
PUBLIC	??0AColor@@QEAA@AEBV0@@Z			; AColor::AColor
PUBLIC	?Execute@ICustomControl@@UEAA_JH_K00@Z		; ICustomControl::Execute
PUBLIC	??0ICustomControl@@QEAA@XZ			; ICustomControl::ICustomControl
PUBLIC	??1ICustomControl@@UEAA@XZ			; ICustomControl::~ICustomControl
PUBLIC	??_GICustomControl@@UEAAPEAXI@Z			; ICustomControl::`scalar deleting destructor'
PUBLIC	??0Interval@@QEAA@XZ				; Interval::Interval
PUBLIC	?SetEmpty@Interval@@QEAAXXZ			; Interval::SetEmpty
PUBLIC	?SetInfinite@Interval@@QEAAXXZ			; Interval::SetInfinite
PUBLIC	??_4Interval@@QEAAAEAV0@V0@@Z			; Interval::operator&=
PUBLIC	?FreeCaches@Animatable@@UEAAXXZ			; Animatable::FreeCaches
PUBLIC	?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ; Animatable::BeginEditParams
PUBLIC	?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ; Animatable::EndEditParams
PUBLIC	?BypassTreeView@Animatable@@UEAAHXZ		; Animatable::BypassTreeView
PUBLIC	?BypassTrackBar@Animatable@@UEAAHXZ		; Animatable::BypassTrackBar
PUBLIC	?BypassPropertyLevel@Animatable@@UEAAHXZ	; Animatable::BypassPropertyLevel
PUBLIC	?InvisibleProperty@Animatable@@UEAAHXZ		; Animatable::InvisibleProperty
PUBLIC	?AssignController@Animatable@@UEAAHPEAV1@H@Z	; Animatable::AssignController
PUBLIC	?CanAssignController@Animatable@@UEAAHH@Z	; Animatable::CanAssignController
PUBLIC	?CanDeleteSubAnim@Animatable@@UEAAHH@Z		; Animatable::CanDeleteSubAnim
PUBLIC	?DeleteSubAnim@Animatable@@UEAAXH@Z		; Animatable::DeleteSubAnim
PUBLIC	?GetSubAnimCurveColor@Animatable@@UEAAKH@Z	; Animatable::GetSubAnimCurveColor
PUBLIC	?CanCopyAnim@Animatable@@UEAAHXZ		; Animatable::CanCopyAnim
PUBLIC	?CanMakeUnique@Animatable@@UEAAHXZ		; Animatable::CanMakeUnique
PUBLIC	?NumChildren@Animatable@@UEAAHXZ		; Animatable::NumChildren
PUBLIC	?ChildAnim@Animatable@@UEAAPEAV1@H@Z		; Animatable::ChildAnim
PUBLIC	?EditTrack@Animatable@@UEAAXXZ			; Animatable::EditTrack
PUBLIC	?NumKeys@Animatable@@UEAAHXZ			; Animatable::NumKeys
PUBLIC	?GetKeyTime@Animatable@@UEAAHH@Z		; Animatable::GetKeyTime
PUBLIC	?GetKeyIndex@Animatable@@UEAAHH@Z		; Animatable::GetKeyIndex
PUBLIC	?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z	; Animatable::GetNextKeyTime
PUBLIC	?CopyKeysFromTime@Animatable@@UEAAXHHK@Z	; Animatable::CopyKeysFromTime
PUBLIC	?DeleteKeyAtTime@Animatable@@UEAAXH@Z		; Animatable::DeleteKeyAtTime
PUBLIC	?IsKeyAtTime@Animatable@@UEAAHHK@Z		; Animatable::IsKeyAtTime
PUBLIC	?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z ; Animatable::GetKeyTimes
PUBLIC	?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z ; Animatable::GetKeySelState
PUBLIC	?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z	; Animatable::EditTimeRange
PUBLIC	?DeleteTime@Animatable@@UEAAXVInterval@@K@Z	; Animatable::DeleteTime
PUBLIC	?ReverseTime@Animatable@@UEAAXVInterval@@K@Z	; Animatable::ReverseTime
PUBLIC	?ScaleTime@Animatable@@UEAAXVInterval@@M@Z	; Animatable::ScaleTime
PUBLIC	?InsertTime@Animatable@@UEAAXHH@Z		; Animatable::InsertTime
PUBLIC	?SupportTimeOperations@Animatable@@UEAAHXZ	; Animatable::SupportTimeOperations
PUBLIC	?DeleteKeys@Animatable@@UEAAXK@Z		; Animatable::DeleteKeys
PUBLIC	?DeleteKeyByIndex@Animatable@@UEAAXH@Z		; Animatable::DeleteKeyByIndex
PUBLIC	?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z ; Animatable::SelectKeys
PUBLIC	?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z ; Animatable::SelectSubKeys
PUBLIC	?SelectSubCurve@Animatable@@UEAAXHH@Z		; Animatable::SelectSubCurve
PUBLIC	?SelectKeyByIndex@Animatable@@UEAAXHH@Z		; Animatable::SelectKeyByIndex
PUBLIC	?IsKeySelected@Animatable@@UEAAHH@Z		; Animatable::IsKeySelected
PUBLIC	?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z	; Animatable::FlagKey
PUBLIC	?GetFlagKeyIndex@Animatable@@UEAAHXZ		; Animatable::GetFlagKeyIndex
PUBLIC	?NumSelKeys@Animatable@@UEAAHXZ			; Animatable::NumSelKeys
PUBLIC	?CloneSelectedKeys@Animatable@@UEAAXH@Z		; Animatable::CloneSelectedKeys
PUBLIC	?AddNewKey@Animatable@@UEAAXHK@Z		; Animatable::AddNewKey
PUBLIC	?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z ; Animatable::MoveKeys
PUBLIC	?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z ; Animatable::ScaleKeyValues
PUBLIC	?SelectCurve@Animatable@@UEAAXH@Z		; Animatable::SelectCurve
PUBLIC	?IsCurveSelected@Animatable@@UEAAHXZ		; Animatable::IsCurveSelected
PUBLIC	?IsSubCurveSelected@Animatable@@UEAAHH@Z	; Animatable::IsSubCurveSelected
PUBLIC	?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z	; Animatable::GetSelKeyCoords
PUBLIC	?SetSelKeyCoords@Animatable@@UEAAXHMK@Z		; Animatable::SetSelKeyCoords
PUBLIC	?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z ; Animatable::SetSelKeyCoordsExpr
PUBLIC	?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z ; Animatable::AdjustTangents
PUBLIC	?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z ; Animatable::AdjustTangents
PUBLIC	?SetKeyBufferPresent@Animatable@@UEAAHXZ	; Animatable::SetKeyBufferPresent
PUBLIC	?CommitSetKeyBuffer@Animatable@@UEAAXH@Z	; Animatable::CommitSetKeyBuffer
PUBLIC	?RevertSetKeyBuffer@Animatable@@UEAAXXZ		; Animatable::RevertSetKeyBuffer
PUBLIC	?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z	; Animatable::CanCopyTrack
PUBLIC	?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CanPasteTrack
PUBLIC	?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CopyTrack
PUBLIC	?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::PasteTrack
PUBLIC	?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z ; Animatable::CanCopySubTrack
PUBLIC	?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CanPasteSubTrack
PUBLIC	?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z ; Animatable::CopySubTrack
PUBLIC	?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::PasteSubTrack
PUBLIC	?GetTrackVSpace@Animatable@@UEAAHH@Z		; Animatable::GetTrackVSpace
PUBLIC	?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z ; Animatable::HitTestTrack
PUBLIC	?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ; Animatable::PaintTrack
PUBLIC	?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ; Animatable::PaintSubTrack
PUBLIC	?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ; Animatable::PaintFCurves
PUBLIC	?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ; Animatable::HitTestFCurves
PUBLIC	?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ; Animatable::PaintSubFCurves
PUBLIC	?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ; Animatable::HitTestSubFCurves
PUBLIC	?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z ; Animatable::EditTrackParams
PUBLIC	?TrackParamsType@Animatable@@UEAAHXZ		; Animatable::TrackParamsType
PUBLIC	?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z ; Animatable::GetFCurveExtents
PUBLIC	?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z ; Animatable::GetSubFCurveExtents
PUBLIC	?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z ; Animatable::GetParamDimension
PUBLIC	?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z ; Animatable::TrackViewWinProc
PUBLIC	?SelectSubAnim@Animatable@@UEAAHH@Z		; Animatable::SelectSubAnim
PUBLIC	?FreeAllBitmaps@Animatable@@UEAAXXZ		; Animatable::FreeAllBitmaps
PUBLIC	?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z ; Animatable::GetSystemNodes
PUBLIC	?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z	; Animatable::IsSubClassOf
PUBLIC	?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z ; Animatable::IsParamBlockDesc2Used
PUBLIC	?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z ; Animatable::GetMacroRecorderName
PUBLIC	?CanTransferReference@ReferenceMaker@@UEAAHH@Z	; ReferenceMaker::CanTransferReference
PUBLIC	?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z	; ReferenceMaker::RemapRefOnLoad
PUBLIC	?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z ; ReferenceMaker::NotifyDependents
PUBLIC	?IsRefMaker@ReferenceMaker@@UEAAHXZ		; ReferenceMaker::IsRefMaker
PUBLIC	?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ; ReferenceMaker::IsRealDependency
PUBLIC	?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ; ReferenceMaker::ShouldPersistWeakRef
PUBLIC	?IsRefTarget@ReferenceTarget@@UEAAHXZ		; ReferenceTarget::IsRefTarget
PUBLIC	?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z ; ReferenceTarget::RefAddedUndoRedo
PUBLIC	?RefDeleted@ReferenceTarget@@UEAAXXZ		; ReferenceTarget::RefDeleted
PUBLIC	?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ	; ReferenceTarget::RefDeletedUndoRedo
PUBLIC	?NotifyForeground@ReferenceTarget@@UEAAXH@Z	; ReferenceTarget::NotifyForeground
PUBLIC	?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z ; ReferenceTarget::NotifyTarget
PUBLIC	?SubTexmapOn@ISubMap@@UEAAHH@Z			; ISubMap::SubTexmapOn
PUBLIC	?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z ; MtlBase::BuildMaps
PUBLIC	?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z ; MtlBase::LocalMappingsRequired
PUBLIC	?IsMultiMtl@MtlBase@@UEAAHXZ			; MtlBase::IsMultiMtl
PUBLIC	?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ	; MtlBase::SupportsMultiMapsInViewport
PUBLIC	?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z ; MtlBase::SetupGfxMultiMaps
PUBLIC	?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z ; MtlBase::GetInterface
PUBLIC	?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ ; MtlBase::GetRefTarget
PUBLIC	?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z ; MtlBase::GetTransparencyHint
PUBLIC	?HandleOwnViewPerturb@Texmap@@UEAAHXZ		; Texmap::HandleOwnViewPerturb
PUBLIC	?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z	; Texmap::GetUVTransform
PUBLIC	?GetTextureTiling@Texmap@@UEAAHXZ		; Texmap::GetTextureTiling
PUBLIC	?GetUVWSource@Texmap@@UEAAHXZ			; Texmap::GetUVWSource
PUBLIC	?GetMapChannel@Texmap@@UEAAHXZ			; Texmap::GetMapChannel
PUBLIC	?InitSlotType@Texmap@@UEAAXH@Z			; Texmap::InitSlotType
PUBLIC	?MapSlotType@Texmap@@UEAAHH@Z			; Texmap::MapSlotType
PUBLIC	?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ		; Texmap::GetTheUVGen
PUBLIC	?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ	; Texmap::GetTheXYZGen
PUBLIC	?SetOutputLevel@Texmap@@UEAAXHM@Z		; Texmap::SetOutputLevel
PUBLIC	?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z ; Texmap::IsLocalOutputMeaningful
PUBLIC	?LoadMapFiles@Texmap@@UEAAHH@Z			; Texmap::LoadMapFiles
PUBLIC	?IsHighDynamicRange@Texmap@@UEBAHXZ		; Texmap::IsHighDynamicRange
PUBLIC	??1Texmap@@UEAA@XZ				; Texmap::~Texmap
PUBLIC	?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z ; ClassDesc2::SetUserDlgProc
PUBLIC	?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z ; ClassDesc2::CreateQtWidget
PUBLIC	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc
PUBLIC	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z	; ParamBlockDesc2::__autoclassinit2
PUBLIC	??1ParamMap2UserDlgProc@@UEAA@XZ		; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
PUBLIC	?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; ParamMap2UserDlgProc::SetThing
PUBLIC	?Update@ParamMap2UserDlgProc@@UEAAXH@Z		; ParamMap2UserDlgProc::Update
PUBLIC	?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z ; ParamMap2UserDlgProc::SetParamBlock
PUBLIC	?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z ; ParamMap2UserDlgProc::Update
PUBLIC	??0ParamMap2UserDlgProc@@QEAA@XZ		; ParamMap2UserDlgProc::ParamMap2UserDlgProc
PUBLIC	??_GParamMap2UserDlgProc@@UEAAPEAXI@Z		; ParamMap2UserDlgProc::`scalar deleting destructor'
PUBLIC	??4CurvePoint@@QEAAAEAV0@AEBV0@@Z		; CurvePoint::operator=
PUBLIC	?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ; ResourceMakerCallback::SetCustomImageList
PUBLIC	?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ; ResourceMakerCallback::GetToolTip
PUBLIC	?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ; ResourceMakerCallback::ResetCallback
PUBLIC	?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ; ResourceMakerCallback::NewCurveCreatedCallback
PUBLIC	?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z ; ResourceMakerCallback::GetInterface
PUBLIC	??0ResourceMakerCallback@@QEAA@XZ		; ResourceMakerCallback::ResourceMakerCallback
PUBLIC	??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z	; XYZ_Desc::XYZ_Desc
PUBLIC	??1XYZ_Desc@@UEAA@XZ				; XYZ_Desc::~XYZ_Desc
PUBLIC	?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z		; XYZ_Desc::__autoclassinit2
PUBLIC	??_GXYZ_Desc@@UEAAPEAXI@Z			; XYZ_Desc::`scalar deleting destructor'
PUBLIC	??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ; BerconXYZDlgProc::BerconXYZDlgProc
PUBLIC	?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconXYZDlgProc::DlgProc
PUBLIC	?DeleteThis@BerconXYZDlgProc@@UEAAXXZ		; BerconXYZDlgProc::DeleteThis
PUBLIC	?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; BerconXYZDlgProc::SetThing
PUBLIC	??1BerconXYZDlgProc@@UEAA@XZ			; BerconXYZDlgProc::~BerconXYZDlgProc
PUBLIC	?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z	; BerconXYZDlgProc::__autoclassinit2
PUBLIC	??_GBerconXYZDlgProc@@UEAAPEAXI@Z		; BerconXYZDlgProc::`scalar deleting destructor'
PUBLIC	??0BerconXYZ@@QEAA@XZ				; BerconXYZ::BerconXYZ
PUBLIC	?req@BerconXYZ@@QEAAKXZ				; BerconXYZ::req
PUBLIC	?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z		; BerconXYZ::map
PUBLIC	??0GradientMap@@QEAA@XZ				; GradientMap::GradientMap
PUBLIC	??0GradientRamp@@QEAA@PEAVGradientMap@@@Z	; GradientRamp::GradientRamp
PUBLIC	??1GradientRamp@@QEAA@XZ			; GradientRamp::~GradientRamp
PUBLIC	?numKeys@GradientRamp@@QEAAHXZ			; GradientRamp::numKeys
PUBLIC	?__autoclassinit2@GradientRamp@@QEAAX_K@Z	; GradientRamp::__autoclassinit2
PUBLIC	??_GGradientRamp@@QEAAPEAXI@Z			; GradientRamp::`scalar deleting destructor'
PUBLIC	??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z ; IGradient::IGradient
PUBLIC	??1IGradient@@UEAA@XZ				; IGradient::~IGradient
PUBLIC	?setGradient@IGradient@@QEAAXPEAVGradientRamp@@@Z ; IGradient::setGradient
PUBLIC	?Disable@IGradient@@UEAAXXZ			; IGradient::Disable
PUBLIC	?DeleteMe@IGradient@@QEAAXXZ			; IGradient::DeleteMe
PUBLIC	?IsEnabled@IGradient@@UEAAHXZ			; IGradient::IsEnabled
PUBLIC	?Enable@IGradient@@UEAAXH@Z			; IGradient::Enable
PUBLIC	?Enable2@IGradient@@UEAAXH@Z			; IGradient::Enable2
PUBLIC	?GetHwnd@IGradient@@UEAAPEAUHWND__@@XZ		; IGradient::GetHwnd
PUBLIC	?SetTooltip@IGradient@@UEAAX_NPEB_W@Z		; IGradient::SetTooltip
PUBLIC	?Execute@IGradient@@UEAA_JH_K00@Z		; IGradient::Execute
PUBLIC	?__autoclassinit2@IGradient@@QEAAX_K@Z		; IGradient::__autoclassinit2
PUBLIC	??_GIGradient@@UEAAPEAXI@Z			; IGradient::`scalar deleting destructor'
PUBLIC	??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z ; DLSetWindowLongPtr<IGradient * __ptr64>
PUBLIC	??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z	; DLSetWindowLongPtr<int>
PUBLIC	?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z ; BerconGradient::seedRandomGen
PUBLIC	?limitRange@BerconGradient@@QEAAHAEAM@Z		; BerconGradient::limitRange
PUBLIC	?EnableStuff@BerconGradient@@QEAAXXZ		; BerconGradient::EnableStuff
PUBLIC	?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z ; BerconGradient::getGradientValueUVW
PUBLIC	?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValueDist
PUBLIC	?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValueNormal
PUBLIC	?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValue
PUBLIC	?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z	; BerconGradient::setKeyTex
PUBLIC	?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ	; BerconGradient::getKeyTex
PUBLIC	?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z ; BerconGradient::keyColorChanged
PUBLIC	?keyNumChanged@BerconGradient@@QEAAXH@Z		; BerconGradient::keyNumChanged
PUBLIC	?keyPosChanged@BerconGradient@@QEAAXM@Z		; BerconGradient::keyPosChanged
PUBLIC	?countKeys@BerconGradient@@QEAAHXZ		; BerconGradient::countKeys
PUBLIC	?resetKeys@BerconGradient@@QEAAXXZ		; BerconGradient::resetKeys
PUBLIC	?gradAddKey@BerconGradient@@UEAAXM@Z		; BerconGradient::gradAddKey
PUBLIC	?gradMoveKey@BerconGradient@@UEAAXHM@Z		; BerconGradient::gradMoveKey
PUBLIC	?gradDelKey@BerconGradient@@UEAAXH@Z		; BerconGradient::gradDelKey
PUBLIC	?gradSelKey@BerconGradient@@UEAAXXZ		; BerconGradient::gradSelKey
PUBLIC	?gradReset@BerconGradient@@UEAAXXZ		; BerconGradient::gradReset
PUBLIC	?SetCustomImageList@BerconGradient@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ; BerconGradient::SetCustomImageList
PUBLIC	?GetToolTip@BerconGradient@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ; BerconGradient::GetToolTip
PUBLIC	?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z ; BerconGradient::ResetCallback
PUBLIC	?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z ; BerconGradient::NewCurveCreatedCallback
PUBLIC	?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z ; BerconGradient::CreateParamDlg
PUBLIC	?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z ; BerconGradient::SetDlgThing
PUBLIC	?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z	; BerconGradient::Update
PUBLIC	?Reset@BerconGradient@@UEAAXXZ			; BerconGradient::Reset
PUBLIC	?Validity@BerconGradient@@UEAA?AVInterval@@H@Z	; BerconGradient::Validity
PUBLIC	?LocalRequirements@BerconGradient@@UEAAKH@Z	; BerconGradient::LocalRequirements
PUBLIC	?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z ; BerconGradient::MappingsRequired
PUBLIC	?NumSubTexmaps@BerconGradient@@UEAAHXZ		; BerconGradient::NumSubTexmaps
PUBLIC	?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z ; BerconGradient::GetSubTexmap
PUBLIC	?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z ; BerconGradient::SetSubTexmap
PUBLIC	?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z ; BerconGradient::GetSubTexmapSlotName
PUBLIC	?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z ; BerconGradient::EvalColor
PUBLIC	?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z ; BerconGradient::EvalMono
PUBLIC	?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z ; BerconGradient::EvalNormalPerturb
PUBLIC	?SubNumToRefNum@BerconGradient@@UEAAHH@Z	; BerconGradient::SubNumToRefNum
PUBLIC	?DiscardTexHandle@BerconGradient@@QEAAXXZ	; BerconGradient::DiscardTexHandle
PUBLIC	?SupportTexDisplay@BerconGradient@@UEAAHXZ	; BerconGradient::SupportTexDisplay
PUBLIC	?ActivateTexDisplay@BerconGradient@@UEAAXH@Z	; BerconGradient::ActivateTexDisplay
PUBLIC	?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z ; BerconGradient::GetActiveTexHandle
PUBLIC	?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ	; BerconGradient::ClassID
PUBLIC	?SuperClassID@BerconGradient@@UEAAKXZ		; BerconGradient::SuperClassID
PUBLIC	?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z	; BerconGradient::GetClassName
PUBLIC	?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z ; BerconGradient::Clone
PUBLIC	?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z ; BerconGradient::NotifyRefChanged
PUBLIC	?NumSubs@BerconGradient@@UEAAHXZ		; BerconGradient::NumSubs
PUBLIC	?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z ; BerconGradient::SubAnim
PUBLIC	?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z	; BerconGradient::SubAnimName
PUBLIC	?NumRefs@BerconGradient@@UEAAHXZ		; BerconGradient::NumRefs
PUBLIC	?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z ; BerconGradient::GetReference
PUBLIC	?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z ; BerconGradient::SetReference
PUBLIC	?NumParamBlocks@BerconGradient@@UEAAHXZ		; BerconGradient::NumParamBlocks
PUBLIC	?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z ; BerconGradient::GetParamBlock
PUBLIC	?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z ; BerconGradient::GetParamBlockByID
PUBLIC	?RenderBegin@BerconGradient@@UEAAHHK@Z		; BerconGradient::RenderBegin
PUBLIC	?RenderEnd@BerconGradient@@UEAAHH@Z		; BerconGradient::RenderEnd
PUBLIC	?DeleteThis@BerconGradient@@UEAAXXZ		; BerconGradient::DeleteThis
PUBLIC	??0BerconGradient@@QEAA@XZ			; BerconGradient::BerconGradient
PUBLIC	??1BerconGradient@@UEAA@XZ			; BerconGradient::~BerconGradient
PUBLIC	?GetInterface@BerconGradient@@UEAAPEAXK@Z	; BerconGradient::GetInterface
PUBLIC	?__autoclassinit2@BerconGradient@@QEAAX_K@Z	; BerconGradient::__autoclassinit2
PUBLIC	??_GBerconGradient@@UEAAPEAXI@Z			; BerconGradient::`scalar deleting destructor'
PUBLIC	??0BerconGradientClassDesc@@QEAA@XZ		; BerconGradientClassDesc::BerconGradientClassDesc
PUBLIC	??1BerconGradientClassDesc@@UEAA@XZ		; BerconGradientClassDesc::~BerconGradientClassDesc
PUBLIC	?IsPublic@BerconGradientClassDesc@@UEAAHXZ	; BerconGradientClassDesc::IsPublic
PUBLIC	?Create@BerconGradientClassDesc@@UEAAPEAXH@Z	; BerconGradientClassDesc::Create
PUBLIC	?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ	; BerconGradientClassDesc::ClassName
PUBLIC	?SuperClassID@BerconGradientClassDesc@@UEAAKXZ	; BerconGradientClassDesc::SuperClassID
PUBLIC	?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ ; BerconGradientClassDesc::ClassID
PUBLIC	?Category@BerconGradientClassDesc@@UEAAPEB_WXZ	; BerconGradientClassDesc::Category
PUBLIC	?InternalName@BerconGradientClassDesc@@UEAAPEB_WXZ ; BerconGradientClassDesc::InternalName
PUBLIC	?HInstance@BerconGradientClassDesc@@UEAAPEAUHINSTANCE__@@XZ ; BerconGradientClassDesc::HInstance
PUBLIC	?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z ; BerconGradientClassDesc::__autoclassinit2
PUBLIC	??_GBerconGradientClassDesc@@UEAAPEAXI@Z	; BerconGradientClassDesc::`scalar deleting destructor'
PUBLIC	?GetBerconGradientDesc@@YAPEAVClassDesc2@@XZ	; GetBerconGradientDesc
PUBLIC	??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z ; BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT
PUBLIC	?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconCurveDlgProcGRADIENT::DlgProc
PUBLIC	?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ	; BerconCurveDlgProcGRADIENT::DeleteThis
PUBLIC	?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z ; BerconCurveDlgProcGRADIENT::SetThing
PUBLIC	??1BerconCurveDlgProcGRADIENT@@UEAA@XZ		; BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT
PUBLIC	?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z ; BerconCurveDlgProcGRADIENT::__autoclassinit2
PUBLIC	??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z	; BerconCurveDlgProcGRADIENT::`scalar deleting destructor'
PUBLIC	??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z ; BerconGradientDlgProc::BerconGradientDlgProc
PUBLIC	?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconGradientDlgProc::DlgProc
PUBLIC	?DeleteThis@BerconGradientDlgProc@@UEAAXXZ	; BerconGradientDlgProc::DeleteThis
PUBLIC	?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; BerconGradientDlgProc::SetThing
PUBLIC	??1BerconGradientDlgProc@@UEAA@XZ		; BerconGradientDlgProc::~BerconGradientDlgProc
PUBLIC	?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z ; BerconGradientDlgProc::__autoclassinit2
PUBLIC	??_GBerconGradientDlgProc@@UEAAPEAXI@Z		; BerconGradientDlgProc::`scalar deleting destructor'
PUBLIC	??_EBerconGradient@@WEA@EAAPEAXI@Z		; [thunk]:BerconGradient::`vector deleting destructor'
PUBLIC	?GetInterface@BerconGradient@@WJA@EAAPEAXK@Z	; [thunk]:BerconGradient::GetInterface`adjustor{144}'
PUBLIC	??_7TabOutOfRangeException@Util@MaxSDK@@6B@	; MaxSDK::Util::TabOutOfRangeException::`vftable'
PUBLIC	??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@ ; `string'
PUBLIC	??_7InterfaceServer@@6B@			; InterfaceServer::`vftable'
PUBLIC	??_7ICustomControl@@6B@				; ICustomControl::`vftable'
PUBLIC	??_R0?AVClassDesc2@@@8				; ClassDesc2 `RTTI Type Descriptor'
PUBLIC	??_7ParamMap2UserDlgProc@@6B@			; ParamMap2UserDlgProc::`vftable'
PUBLIC	??_R0?AVMaxHeapOperators@@@8			; MaxHeapOperators `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVMaxHeapOperators@@@818
PUBLIC	??_7ResourceMakerCallback@@6B@			; ResourceMakerCallback::`vftable'
PUBLIC	??_7XYZ_Desc@@6B@				; XYZ_Desc::`vftable'
PUBLIC	??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@	; `string'
PUBLIC	??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_7BerconXYZDlgProc@@6B@			; BerconXYZDlgProc::`vftable'
PUBLIC	??_C@_13PHJMHGG@?$AAL?$AA?$AA@			; `string'
PUBLIC	??_7GradientMap@@6B@				; GradientMap::`vftable'
PUBLIC	??_7IGradient@@6B@				; IGradient::`vftable'
PUBLIC	??_7BerconGradient@@6BReferenceTarget@@@	; BerconGradient::`vftable'
PUBLIC	??_7BerconGradient@@6BISubMap@@@		; BerconGradient::`vftable'
PUBLIC	??_7BerconGradient@@6BGradientMap@@@		; BerconGradient::`vftable'
PUBLIC	??_7BerconGradient@@6BResourceMakerCallback@@@	; BerconGradient::`vftable'
PUBLIC	??_7BerconGradientClassDesc@@6B@		; BerconGradientClassDesc::`vftable'
PUBLIC	??_C@_1BO@EFFEGJBE@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAG?$AAr?$AAa?$AAd?$AAi?$AAe?$AAn?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_7BerconCurveDlgProcGRADIENT@@6B@		; BerconCurveDlgProcGRADIENT::`vftable'
PUBLIC	??_7BerconGradientDlgProc@@6B@			; BerconGradientDlgProc::`vftable'
PUBLIC	_TI4?AVTabOutOfRangeException@Util@MaxSDK@@
PUBLIC	_CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
PUBLIC	??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8	; MaxSDK::Util::TabOutOfRangeException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_R0?AVOutOfRangeException@Util@MaxSDK@@@8	; MaxSDK::Util::OutOfRangeException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_R0?AVException@Util@MaxSDK@@@8		; MaxSDK::Util::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@ ; `string'
PUBLIC	??_R4TabOutOfRangeException@Util@MaxSDK@@6B@	; MaxSDK::Util::TabOutOfRangeException::`RTTI Complete Object Locator'
PUBLIC	??_R3TabOutOfRangeException@Util@MaxSDK@@8	; MaxSDK::Util::TabOutOfRangeException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TabOutOfRangeException@Util@MaxSDK@@8	; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3OutOfRangeException@Util@MaxSDK@@8		; MaxSDK::Util::OutOfRangeException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OutOfRangeException@Util@MaxSDK@@8		; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Util@MaxSDK@@8		; MaxSDK::Util::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3Exception@Util@MaxSDK@@8			; MaxSDK::Util::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Util@MaxSDK@@8			; MaxSDK::Util::Exception::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3MaxHeapOperators@@8			; MaxHeapOperators::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MaxHeapOperators@@8			; MaxHeapOperators::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@InterfaceServer@@8		; InterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVInterfaceServer@@@8			; InterfaceServer `RTTI Type Descriptor'
PUBLIC	??_R3InterfaceServer@@8				; InterfaceServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InterfaceServer@@8				; InterfaceServer::`RTTI Base Class Array'
PUBLIC	??_R4InterfaceServer@@6B@			; InterfaceServer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBaseInterfaceServer@@@8			; BaseInterfaceServer `RTTI Type Descriptor'
PUBLIC	??_R3BaseInterfaceServer@@8			; BaseInterfaceServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BaseInterfaceServer@@8			; BaseInterfaceServer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BaseInterfaceServer@@8		; BaseInterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ReferenceTarget@@8		; ReferenceTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReferenceTarget@@@8			; ReferenceTarget `RTTI Type Descriptor'
PUBLIC	??_R3ReferenceTarget@@8				; ReferenceTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferenceTarget@@8				; ReferenceTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReferenceMaker@@8			; ReferenceMaker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReferenceMaker@@@8			; ReferenceMaker `RTTI Type Descriptor'
PUBLIC	??_R3ReferenceMaker@@8				; ReferenceMaker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferenceMaker@@8				; ReferenceMaker::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Animatable@@8			; Animatable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAnimatable@@@8				; Animatable `RTTI Type Descriptor'
PUBLIC	??_R3Animatable@@8				; Animatable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Animatable@@8				; Animatable::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8		; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (9,-1,0,64)'
PUBLIC	??_R0?AVNoncopyable@Util@MaxSDK@@@8		; MaxSDK::Util::Noncopyable `RTTI Type Descriptor'
PUBLIC	??_R3Noncopyable@Util@MaxSDK@@8			; MaxSDK::Util::Noncopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Noncopyable@Util@MaxSDK@@8			; MaxSDK::Util::Noncopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8	; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R18?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (9,-1,0,66)'
PUBLIC	??_R1EI@?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (72,-1,0,66)'
PUBLIC	??_R4ParamMap2UserDlgProc@@6B@			; ParamMap2UserDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParamMap2UserDlgProc@@@8		; ParamMap2UserDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3ParamMap2UserDlgProc@@8			; ParamMap2UserDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParamMap2UserDlgProc@@8			; ParamMap2UserDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParamMap2UserDlgProc@@8		; ParamMap2UserDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVClassDesc@@@8				; ClassDesc `RTTI Type Descriptor'
PUBLIC	??_R3ClassDesc@@8				; ClassDesc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ClassDesc@@8				; ClassDesc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ClassDesc@@8			; ClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ICustomControl@@6B@			; ICustomControl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVICustomControl@@@8			; ICustomControl `RTTI Type Descriptor'
PUBLIC	??_R3ICustomControl@@8				; ICustomControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICustomControl@@8				; ICustomControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ICustomControl@@8			; ICustomControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVISubMap@@@8				; ISubMap `RTTI Type Descriptor'
PUBLIC	??_R3ISubMap@@8					; ISubMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISubMap@@8					; ISubMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISubMap@@8			; ISubMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceMakerCallback@@6B@			; ResourceMakerCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceMakerCallback@@@8		; ResourceMakerCallback `RTTI Type Descriptor'
PUBLIC	??_R3ResourceMakerCallback@@8			; ResourceMakerCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceMakerCallback@@8			; ResourceMakerCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceMakerCallback@@8		; ResourceMakerCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XYZ_Desc@@6B@				; XYZ_Desc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXYZ_Desc@@@8				; XYZ_Desc `RTTI Type Descriptor'
PUBLIC	??_R3XYZ_Desc@@8				; XYZ_Desc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XYZ_Desc@@8				; XYZ_Desc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XYZ_Desc@@8			; XYZ_Desc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ParamBlockDesc2@@8		; ParamBlockDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVParamBlockDesc2@@@8			; ParamBlockDesc2 `RTTI Type Descriptor'
PUBLIC	??_R3ParamBlockDesc2@@8				; ParamBlockDesc2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParamBlockDesc2@@8				; ParamBlockDesc2::`RTTI Base Class Array'
PUBLIC	??_R4BerconXYZDlgProc@@6B@			; BerconXYZDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconXYZDlgProc@@@8			; BerconXYZDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3BerconXYZDlgProc@@8			; BerconXYZDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconXYZDlgProc@@8			; BerconXYZDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconXYZDlgProc@@8		; BerconXYZDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4GradientMap@@6B@				; GradientMap::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGradientMap@@@8				; GradientMap `RTTI Type Descriptor'
PUBLIC	??_R3GradientMap@@8				; GradientMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GradientMap@@8				; GradientMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GradientMap@@8			; GradientMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ClassDesc2@@8			; ClassDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3ClassDesc2@@8				; ClassDesc2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ClassDesc2@@8				; ClassDesc2::`RTTI Base Class Array'
PUBLIC	??_R4IGradient@@6B@				; IGradient::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIGradient@@@8				; IGradient `RTTI Type Descriptor'
PUBLIC	??_R3IGradient@@8				; IGradient::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IGradient@@8				; IGradient::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IGradient@@8			; IGradient::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconGradient@@6BReferenceTarget@@@	; BerconGradient::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconGradient@@@8			; BerconGradient `RTTI Type Descriptor'
PUBLIC	??_R3BerconGradient@@8				; BerconGradient::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconGradient@@8				; BerconGradient::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconGradient@@8			; BerconGradient::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Texmap@@8				; Texmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTexmap@@@8				; Texmap `RTTI Type Descriptor'
PUBLIC	??_R3Texmap@@8					; Texmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Texmap@@8					; Texmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MtlBase@@8			; MtlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVMtlBase@@@8				; MtlBase `RTTI Type Descriptor'
PUBLIC	??_R3MtlBase@@8					; MtlBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MtlBase@@8					; MtlBase::`RTTI Base Class Array'
PUBLIC	??_R1EA@?0A@EA@ISubMap@@8			; ISubMap::`RTTI Base Class Descriptor at (64,-1,0,64)'
PUBLIC	??_R1II@?0A@EA@GradientMap@@8			; GradientMap::`RTTI Base Class Descriptor at (136,-1,0,64)'
PUBLIC	??_R1JA@?0A@EA@ResourceMakerCallback@@8		; ResourceMakerCallback::`RTTI Base Class Descriptor at (144,-1,0,64)'
PUBLIC	??_R1JI@?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (152,-1,0,66)'
PUBLIC	??_R4BerconGradient@@6BISubMap@@@		; BerconGradient::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconGradient@@6BGradientMap@@@		; BerconGradient::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconGradient@@6BResourceMakerCallback@@@	; BerconGradient::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconGradientClassDesc@@6B@		; BerconGradientClassDesc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconGradientClassDesc@@@8		; BerconGradientClassDesc `RTTI Type Descriptor'
PUBLIC	??_R3BerconGradientClassDesc@@8			; BerconGradientClassDesc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconGradientClassDesc@@8			; BerconGradientClassDesc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconGradientClassDesc@@8	; BerconGradientClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconCurveDlgProcGRADIENT@@6B@		; BerconCurveDlgProcGRADIENT::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconCurveDlgProcGRADIENT@@@8		; BerconCurveDlgProcGRADIENT `RTTI Type Descriptor'
PUBLIC	??_R3BerconCurveDlgProcGRADIENT@@8		; BerconCurveDlgProcGRADIENT::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconCurveDlgProcGRADIENT@@8		; BerconCurveDlgProcGRADIENT::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconCurveDlgProcGRADIENT@@8	; BerconCurveDlgProcGRADIENT::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconGradientDlgProc@@6B@			; BerconGradientDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconGradientDlgProc@@@8		; BerconGradientDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3BerconGradientDlgProc@@8			; BerconGradientDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconGradientDlgProc@@8			; BerconGradientDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconGradientDlgProc@@8		; BerconGradientDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3a83126f
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f1a36e2e0000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fcccccd
PUBLIC	__real@3fe921fb54442d18
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff99999a0000000
PUBLIC	__real@40000000
PUBLIC	__real@40400000
PUBLIC	__real@40490fdb
PUBLIC	__real@40800000
PUBLIC	__real@40dfffc000000000
PUBLIC	__real@412e848000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c12e848000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPEAX_K@Z:PROC		; __global_delete
EXTRN	??_V@YAXPEAX@Z:PROC				; operator delete[]
EXTRN	atexit:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_abort:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	__imp_DestroyWindow:PROC
EXTRN	__imp_GetDlgItem:PROC
EXTRN	__imp_SetWindowLongPtrW:PROC
EXTRN	__imp_srand:PROC
EXTRN	__imp_rand:PROC
EXTRN	fabs:PROC
EXTRN	__imp_acosf:PROC
EXTRN	__imp_sqrtf:PROC
EXTRN	__imp_??2MaxHeapOperators@@SAPEAX_K@Z:PROC
EXTRN	__imp_??3MaxHeapOperators@@SAXPEAX@Z:PROC
EXTRN	__imp_??_VMaxHeapOperators@@SAXPEAX@Z:PROC
EXTRN	__imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z:PROC
EXTRN	__imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ:PROC
EXTRN	__imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC
EXTRN	??_ETabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z:PROC ; MaxSDK::Util::TabOutOfRangeException::`vector deleting destructor'
EXTRN	__imp_??0WStr@@QEAA@XZ:PROC
EXTRN	__imp_??0WStr@@QEAA@PEB_W@Z:PROC
EXTRN	__imp_??0WStr@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??1WStr@@QEAA@XZ:PROC
EXTRN	__imp_??4WStr@@QEAAAEAV0@PEB_W@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@XZ:PROC
EXTRN	__imp_??0Point3@@QEAA@MMM@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??APoint3@@QEAAAEAMH@Z:PROC
EXTRN	__imp_??GPoint3@@QEBA?AV0@XZ:PROC
EXTRN	__imp_??GPoint3@@QEBA?AV0@AEBV0@@Z:PROC
EXTRN	__imp_??HPoint3@@QEBA?AV0@AEBV0@@Z:PROC
EXTRN	__imp_?Length@@YAMAEBVPoint3@@@Z:PROC
EXTRN	__imp_?Normalize@@YA?AVPoint3@@AEBV1@@Z:PROC
EXTRN	__imp_?FNormalize@@YA?AVPoint3@@AEBV1@@Z:PROC
EXTRN	__imp_??1InterfaceServer@@UEAA@XZ:PROC
EXTRN	??_EInterfaceServer@@UEAAPEAXI@Z:PROC		; InterfaceServer::`vector deleting destructor'
EXTRN	__imp_?CreateInstance@@YAPEAXKVClass_ID@@@Z:PROC
EXTRN	__imp_?IdentityMatrix@Matrix3@@QEAAXXZ:PROC
EXTRN	??_EICustomControl@@UEAAPEAXI@Z:PROC		; ICustomControl::`vector deleting destructor'
EXTRN	__imp_?GetICustEdit@@YAPEAVICustEdit@@PEAUHWND__@@@Z:PROC
EXTRN	__imp_?ReleaseICustEdit@@YAXPEAVICustEdit@@@Z:PROC
EXTRN	__imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z:PROC
EXTRN	__imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z:PROC
EXTRN	__imp_??0Interval@@QEAA@HH@Z:PROC
EXTRN	__imp_?InInterval@Interval@@QEBAHH@Z:PROC
EXTRN	__imp_??IInterval@@QEBA?AV0@V0@@Z:PROC
EXTRN	__imp_?GetCOREInterface@@YAPEAVInterface@@XZ:PROC
EXTRN	__imp_?DeleteMe@ReferenceMaker@@QEAAXXZ:PROC
EXTRN	__imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z:PROC
EXTRN	__imp_?GetInterface@ReferenceTarget@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC
EXTRN	__imp_?GetSubTexmapTVName@ISubMap@@QEAA?AVWStr@@H@Z:PROC
EXTRN	__imp_??1MtlBase@@UEAA@XZ:PROC
EXTRN	__imp_??4MtlBase@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_?GetInterface@MtlBase@@UEAAPEAXK@Z:PROC
EXTRN	__imp_??0Texmap@@QEAA@XZ:PROC
EXTRN	__imp_?GetNewDefaultTextureOutput@@YAPEAVTextureOutput@@XZ:PROC
EXTRN	__imp_??0ClassDesc2@@QEAA@XZ:PROC
EXTRN	__imp_??1ClassDesc2@@UEAA@XZ:PROC
EXTRN	__imp_?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z:PROC
EXTRN	__imp_?SetUserDlgProc@ClassDesc2@@QEAA_NPEAVParamBlockDesc2@@FPEAVParamMap2UserDlgProc@@@Z:PROC
EXTRN	__imp_?CreateParamDlgs@ClassDesc2@@QEAAPEAVIAutoMParamDlg@@PEAUHWND__@@PEAVIMtlParams@@PEAVReferenceTarget@@@Z:PROC
EXTRN	__imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ:PROC
EXTRN	__imp_??1ParamBlockDesc2@@UEAA@XZ:PROC
EXTRN	__imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z:PROC
EXTRN	__imp_?SetUserDlgProc@ParamBlockDesc2@@QEAAXFPEAVParamMap2UserDlgProc@@@Z:PROC
EXTRN	??_EParamMap2UserDlgProc@@UEAAPEAXI@Z:PROC	; ParamMap2UserDlgProc::`vector deleting destructor'
EXTRN	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z:PROC ; CurveCtrl::update
EXTRN	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z:PROC	; CurveCtrl::disable
EXTRN	?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z:PROC	; CurveCtrl::init
EXTRN	?GetString@@YAPEA_WH@Z:PROC			; GetString
EXTRN	??_EXYZ_Desc@@UEAAPEAXI@Z:PROC			; XYZ_Desc::`vector deleting destructor'
EXTRN	??_EBerconXYZDlgProc@@UEAAPEAXI@Z:PROC		; BerconXYZDlgProc::`vector deleting destructor'
EXTRN	?update@BerconXYZ@@QEAAXPEAVIParamBlock2@@HAEAVInterval@@@Z:PROC ; BerconXYZ::update
EXTRN	?update@BerconXYZ@@QEAAXXZ:PROC			; BerconXYZ::update
EXTRN	?reset@BerconXYZ@@QEAAXPEAVIParamBlock2@@AEAVInterval@@HHHH@Z:PROC ; BerconXYZ::reset
EXTRN	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@@Z:PROC ; BerconXYZ::get
EXTRN	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@PEAV3@@Z:PROC ; BerconXYZ::get
EXTRN	?setHWND@GradientRamp@@QEAAXPEAUHWND__@@@Z:PROC	; GradientRamp::setHWND
EXTRN	?invalidate@GradientRamp@@QEAAXXZ:PROC		; GradientRamp::invalidate
EXTRN	?addKey@GradientRamp@@QEAAXHMVAColor@@PEAVTexmap@@@Z:PROC ; GradientRamp::addKey
EXTRN	?reset@GradientRamp@@QEAAXXZ:PROC		; GradientRamp::reset
EXTRN	?sort@GradientRamp@@QEAAXXZ:PROC		; GradientRamp::sort
EXTRN	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z:PROC ; GradientRamp::getSubtex
EXTRN	?setSubtex@GradientRamp@@QEAAXHPEAVTexmap@@@Z:PROC ; GradientRamp::setSubtex
EXTRN	?setSubtex@GradientRamp@@QEAAXPEAVTexmap@@@Z:PROC ; GradientRamp::setSubtex
EXTRN	?getColor@GradientRamp@@QEAA?AVAColor@@M@Z:PROC	; GradientRamp::getColor
EXTRN	?getColor@GradientRamp@@QEAA?AVAColor@@MAEAVShadeContext@@@Z:PROC ; GradientRamp::getColor
EXTRN	?getBump@GradientRamp@@QEAA?AVPoint3@@MV2@AEAVShadeContext@@@Z:PROC ; GradientRamp::getBump
EXTRN	??_EIGradient@@UEAAPEAXI@Z:PROC			; IGradient::`vector deleting destructor'
EXTRN	??_EBerconGradient@@UEAAPEAXI@Z:PROC		; BerconGradient::`vector deleting destructor'
EXTRN	??_EBerconGradientClassDesc@@UEAAPEAXI@Z:PROC	; BerconGradientClassDesc::`vector deleting destructor'
EXTRN	??_EBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z:PROC ; BerconCurveDlgProcGRADIENT::`vector deleting destructor'
EXTRN	??_EBerconGradientDlgProc@@UEAAPEAXI@Z:PROC	; BerconGradientDlgProc::`vector deleting destructor'
EXTRN	??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC	; MaxSDK::Util::Exception::Exception
EXTRN	??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC ; MaxSDK::Util::OutOfRangeException::OutOfRangeException
EXTRN	?AddInterface@ClassDesc@@UEAAXPEAVFPInterface@@@Z:PROC ; ClassDesc::AddInterface
EXTRN	?AddParamBlockDesc@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z:PROC ; ClassDesc2::AddParamBlockDesc
EXTRN	?AutoDelete@ReferenceTarget@@UEAA?AW4RefResult@@XZ:PROC ; ReferenceTarget::AutoDelete
EXTRN	?BaseClone@MtlBase@@UEAAXPEAVReferenceTarget@@0AEAVRemapDir@@@Z:PROC ; MtlBase::BaseClone
EXTRN	?BeginEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z:PROC ; ClassDesc2::BeginEditParams
EXTRN	?CreatePStamp@MtlBase@@UEAAPEAVPStamp@@HH@Z:PROC ; MtlBase::CreatePStamp
EXTRN	?DeleteAllRefsToMe@ReferenceTarget@@UEAA?AW4RefResult@@XZ:PROC ; ReferenceTarget::DeleteAllRefsToMe
EXTRN	?DiscardPStamp@MtlBase@@UEAAXH@Z:PROC		; MtlBase::DiscardPStamp
EXTRN	?DoEnumDependentsImpl@ReferenceTarget@@MEAAHPEAVDependentEnumProc@@@Z:PROC ; ReferenceTarget::DoEnumDependentsImpl
EXTRN	?EndEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z:PROC ; ClassDesc2::EndEditParams
EXTRN	?EnumAuxFiles@MtlBase@@UEAAXAEAVAssetEnumCallback@@K@Z:PROC ; MtlBase::EnumAuxFiles
EXTRN	?GetFullName@MtlBase@@UEAA?AVWStr@@XZ:PROC	; MtlBase::GetFullName
EXTRN	?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC ; BaseInterfaceServer::GetInterface
EXTRN	?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@PEB_W@Z:PROC ; ClassDesc::GetInterface
EXTRN	?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@VInterface_ID@@@Z:PROC ; ClassDesc::GetInterface
EXTRN	?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC ; InterfaceServer::GetInterface
EXTRN	?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z:PROC ; BaseInterfaceServer::GetInterfaceAt
EXTRN	?GetPStamp@MtlBase@@UEAAPEAVPStamp@@H@Z:PROC	; MtlBase::GetPStamp
EXTRN	?GetParamBlockDesc@ClassDesc2@@UEAAPEAVParamBlockDesc2@@H@Z:PROC ; ClassDesc2::GetParamBlockDesc
EXTRN	?GetParamBlockDescByID@ClassDesc2@@UEAAPEAVParamBlockDesc2@@F@Z:PROC ; ClassDesc2::GetParamBlockDescByID
EXTRN	?GetParamMap@ClassDesc2@@UEAAPEAVIParamMap2@@H@Z:PROC ; ClassDesc2::GetParamMap
EXTRN	?GetProperty@MtlBase@@UEAAPEAXK@Z:PROC		; MtlBase::GetProperty
EXTRN	?GetRsrcString@ClassDesc@@UEAAPEB_W_J@Z:PROC	; ClassDesc::GetRsrcString
EXTRN	?GetTimeRange@Animatable@@UEAA?AVInterval@@K@Z:PROC ; Animatable::GetTimeRange
EXTRN	?GetVPDisplayDIB@Texmap@@UEAAPEAUtagBITMAPINFO@@HAEAVTexHandleMaker@@AEAVInterval@@HHH@Z:PROC ; Texmap::GetVPDisplayDIB
EXTRN	?InvalidateUI@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z:PROC ; ClassDesc2::InvalidateUI
EXTRN	?IsAnimated@Animatable@@UEAAHXZ:PROC		; Animatable::IsAnimated
EXTRN	?IsOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z:PROC ; Texmap::IsOutputMeaningful
EXTRN	?Load@MtlBase@@UEAA?AW4IOResult@@PEAVILoad@@@Z:PROC ; MtlBase::Load
EXTRN	?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z:PROC ; ClassDesc2::MakeAutoParamBlocks
EXTRN	?MapKeys@Animatable@@UEAAXPEAVTimeMap@@K@Z:PROC	; Animatable::MapKeys
EXTRN	?MouseCycleCompleted@Animatable@@UEAAXH@Z:PROC	; Animatable::MouseCycleCompleted
EXTRN	?MouseCycleStarted@Animatable@@UEAAXH@Z:PROC	; Animatable::MouseCycleStarted
EXTRN	?NodeName@Animatable@@UEAA?AVWStr@@XZ:PROC	; Animatable::NodeName
EXTRN	?NotifyDependents@ReferenceTarget@@UEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAV1@W4NotifyDependentsOption@@@Z:PROC ; ReferenceTarget::NotifyDependents
EXTRN	?NumInterfaces@BaseInterfaceServer@@UEBAHXZ:PROC ; BaseInterfaceServer::NumInterfaces
EXTRN	?NumParamBlockDescs@ClassDesc2@@UEAAHXZ:PROC	; ClassDesc2::NumParamBlockDescs
EXTRN	?NumParamMaps@ClassDesc2@@UEAAHXZ:PROC		; ClassDesc2::NumParamMaps
EXTRN	?RefAdded@Texmap@@UEAAXPEAVReferenceMaker@@@Z:PROC ; Texmap::RefAdded
EXTRN	?ReleaseInterface@Animatable@@UEAAXKPEAX@Z:PROC	; Animatable::ReleaseInterface
EXTRN	?RenderBitmap@Texmap@@UEAAXHPEAVBitmap@@MH@Z:PROC ; Texmap::RenderBitmap
EXTRN	?Requirements@MtlBase@@UEAAKH@Z:PROC		; MtlBase::Requirements
EXTRN	?RescaleWorldUnits@ReferenceMaker@@UEAAXM@Z:PROC ; ReferenceMaker::RescaleWorldUnits
EXTRN	?ResetClassParams@ClassDesc2@@UEAAXH@Z:PROC	; ClassDesc2::ResetClassParams
EXTRN	?Save@MtlBase@@UEAA?AW4IOResult@@PEAVISave@@@Z:PROC ; MtlBase::Save
EXTRN	?SaveEnum@ReferenceMaker@@UEAAXAEAVSaveEnumProc@@H@Z:PROC ; ReferenceMaker::SaveEnum
EXTRN	?SetProperty@MtlBase@@UEAAHKPEAX@Z:PROC		; MtlBase::SetProperty
EXTRN	?SpecifySaveReferences@ReferenceMaker@@UEAA_NAEAVReferenceSaveManager@@@Z:PROC ; ReferenceMaker::SpecifySaveReferences
EXTRN	?SubAnimCommitSetKeyBuffer@Animatable@@UEAAXHH@Z:PROC ; Animatable::SubAnimCommitSetKeyBuffer
EXTRN	?SubAnimRevertSetKeyBuffer@Animatable@@UEAAXH@Z:PROC ; Animatable::SubAnimRevertSetKeyBuffer
EXTRN	?SubAnimSetKeyBufferPresent@Animatable@@UEAAHH@Z:PROC ; Animatable::SubAnimSetKeyBufferPresent
EXTRN	?SvCanConcludeLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvCanConcludeLink
EXTRN	?SvCanDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanDetach
EXTRN	?SvCanDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvCanDetachRel
EXTRN	?SvCanInitiateLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanInitiateLink
EXTRN	?SvCanRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanRemoveThis
EXTRN	?SvCanSelect@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvCanSelect
EXTRN	?SvCanSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvCanSetName
EXTRN	?SvDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvDetach
EXTRN	?SvDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvDetachRel
EXTRN	?SvEditProperties@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvEditProperties
EXTRN	?SvGetMultiSelectCallback@MtlBase@@UEAAPEAVMultiSelectCallback@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvGetMultiSelectCallback
EXTRN	?SvGetName@MtlBase@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@_N@Z:PROC ; MtlBase::SvGetName
EXTRN	?SvGetRefTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvGetRefTip
EXTRN	?SvGetRelTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvGetRelTip
EXTRN	?SvGetSwatchColor@Animatable@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvGetSwatchColor
EXTRN	?SvGetTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvGetTip
EXTRN	?SvHandleDoubleClick@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvHandleDoubleClick
EXTRN	?SvHandleRelDoubleClick@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvHandleRelDoubleClick
EXTRN	?SvHighlightColor@MtlBase@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvHighlightColor
EXTRN	?SvIsHighlighted@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvIsHighlighted
EXTRN	?SvIsInactive@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvIsInactive
EXTRN	?SvIsSelected@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvIsSelected
EXTRN	?SvLinkChild@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvLinkChild
EXTRN	?SvRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvRemoveThis
EXTRN	?SvSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@AEBVWStr@@@Z:PROC ; MtlBase::SvSetName
EXTRN	?SvTraverseAnimGraph@Texmap@@UEAA?AVSvGraphNodeReference@@PEAVIGraphObjectManager@@PEAVAnimatable@@HK@Z:PROC ; Texmap::SvTraverseAnimGraph
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	GUID_NULL:BYTE
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?defaultDim@@3PEAVParamDimension@@EA:QWORD
EXTRN	__imp_?TEXMAP_CAT_3D@@3PA_WA:BYTE
EXTRN	?hInstance@@3PEAUHINSTANCE__@@EA:QWORD		; hInstance
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	_tls_index:DWORD
_BSS	SEGMENT
?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A DB 010H DUP (?) ; MaxSDK::AssetManagement::kInvalidId
?kTriObjNormalXTCID@@3VClass_ID@@B DQ 01H DUP (?)	; kTriObjNormalXTCID
?intvalid@@3VInterval@@A DQ 01H DUP (?)			; intvalid
?BerconGradientDesc@@3VBerconGradientClassDesc@@A DB 038H DUP (?) ; BerconGradientDesc
?xyz_blk@@3VXYZ_Desc@@A DB 080H DUP (?)			; xyz_blk
?gradientmap_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; gradientmap_param_blk
?BerconCurve_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; BerconCurve_param_blk
_BSS	ENDS
;	COMDAT ?intkeyg@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4VInterval@@A
_BSS	SEGMENT
?intkeyg@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::keyColorChanged'::`2'::intkeyg
_BSS	ENDS
;	COMDAT ?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::eyColorChanged,XVAColor * __ptr64 const>
_BSS	ENDS
;	COMDAT ?intkeyn@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4VInterval@@A
_BSS	SEGMENT
?intkeyn@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::keyNumChanged'::`2'::intkeyn
_BSS	ENDS
;	COMDAT ?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::eyNumChanged, ?? :: ?? ::HA::Z::Z::XH * __ptr64 const>
_BSS	ENDS
;	COMDAT ?intkeypc@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4VInterval@@A
_BSS	SEGMENT
?intkeypc@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::keyPosChanged'::`2'::intkeypc
_BSS	ENDS
;	COMDAT ?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::eyPosChanged, ?? :: ?? ::HA::Z::Z::XM * __ptr64 const>
_BSS	ENDS
;	COMDAT ?intkeygm@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4VInterval@@A
_BSS	SEGMENT
?intkeygm@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::gradMoveKey'::`2'::intkeygm
_BSS	ENDS
;	COMDAT ?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::radMoveKey, ?? :: ?? ::HA::Z::Z::EAAXHM>
_BSS	ENDS
;	COMDAT ?intkeyga@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4VInterval@@A
_BSS	SEGMENT
?intkeyga@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::gradAddKey'::`2'::intkeyga
_BSS	ENDS
;	COMDAT ?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::radAddKey, ?? :: ?? ::HA::Z::Z::EAAXM>
_BSS	ENDS
;	COMDAT ?intkeydk@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4VInterval@@A
_BSS	SEGMENT
?intkeydk@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::gradDelKey'::`2'::intkeydk
_BSS	ENDS
;	COMDAT ?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::radDelKey, ?? :: ?? ::HA::Z::Z::EAAXH>
_BSS	ENDS
;	COMDAT ?intkeygsk@?1??gradSelKey@BerconGradient@@UEAAXXZ@4VInterval@@A
_BSS	SEGMENT
?intkeygsk@?1??gradSelKey@BerconGradient@@UEAAXXZ@4VInterval@@A DQ 01H DUP (?) ; `BerconGradient::gradSelKey'::`2'::intkeygsk
_BSS	ENDS
;	COMDAT ?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA
_BSS	SEGMENT
?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA DD 01H DUP (?) ; TSS0<`template-parameter-2',BerconGradient::radSelKey,int, ?? &>
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fabsf DD	imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$fabsf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8Class_ID@@QEBA_NAEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$??8Class_ID@@QEBA_NAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA DD imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?acos@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?acos@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fabs@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?fabs@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sqrt@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?sqrt@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVPoint3@@AEBV0@M@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??D@YA?AVPoint3@@AEBV0@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInterfaceServer@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$??_GInterfaceServer@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
	DD	imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ+21
	DD	imagerel $unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NumInterfaces@ClassDesc@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?NumInterfaces@ClassDesc@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearInterfaces@ClassDesc@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?ClearInterfaces@ClassDesc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Set@BitArray@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+188
	DD	imagerel $unwind$?Set@BitArray@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UseLocalBits@BitArray@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$?UseLocalBits@BitArray@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BitMask@BitArray@@AEBA_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?BitMask@BitArray@@AEBA_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ICustomControl@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??0ICustomControl@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ICustomControl@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1ICustomControl@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GICustomControl@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GICustomControl@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Interval@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0Interval@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_4Interval@@QEAAAEAV0@V0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??_4Interval@@QEAAAEAV0@V0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BypassTrackBar@Animatable@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?BypassTrackBar@Animatable@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyForeground@ReferenceTarget@@UEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?NotifyForeground@ReferenceTarget@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Texmap@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1Texmap@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkTriObjNormalXTCID@@YAXXZ DD imagerel ??__EkTriObjNormalXTCID@@YAXXZ
	DD	imagerel ??__EkTriObjNormalXTCID@@YAXXZ+32
	DD	imagerel $unwind$??__EkTriObjNormalXTCID@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eintvalid@@YAXXZ DD imagerel ??__Eintvalid@@YAXXZ
	DD	imagerel ??__Eintvalid@@YAXXZ+33
	DD	imagerel $unwind$??__Eintvalid@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD imagerel $LN4
	DD	imagerel $LN4+5732
	DD	imagerel $unwind$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA DD imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
	DD	imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1XYZ_Desc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1XYZ_Desc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GXYZ_Desc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GXYZ_Desc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN8
	DD	imagerel $LN8+1507
	DD	imagerel $unwind$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconXYZDlgProc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconXYZDlgProc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconXYZDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconXYZDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconXYZ@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??0BerconXYZ@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0GradientRamp@@QEAA@PEAVGradientMap@@@Z DD imagerel $LN3
	DD	imagerel $LN3+158
	DD	imagerel $unwind$??0GradientRamp@@QEAA@PEAVGradientMap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1GradientRamp@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??1GradientRamp@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@GradientRamp@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@GradientRamp@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GGradientRamp@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_GGradientRamp@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z DD imagerel $LN4
	DD	imagerel $LN4+148
	DD	imagerel $unwind$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA DD imagerel ?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1IGradient@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??1IGradient@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1IGradient@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1IGradient@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1IGradient@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1IGradient@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteMe@IGradient@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteMe@IGradient@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@IGradient@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@IGradient@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GIGradient@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GIGradient@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z DD imagerel $LN12
	DD	imagerel $LN12+624
	DD	imagerel $unwind$?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?limitRange@BerconGradient@@QEAAHAEAM@Z DD imagerel $LN15
	DD	imagerel $LN15+404
	DD	imagerel $unwind$?limitRange@BerconGradient@@QEAAHAEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnableStuff@BerconGradient@@QEAAXXZ DD imagerel $LN39
	DD	imagerel $LN39+1809
	DD	imagerel $unwind$?EnableStuff@BerconGradient@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z DD imagerel $LN26
	DD	imagerel $LN26+1800
	DD	imagerel $unwind$?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z DD imagerel $LN22
	DD	imagerel $LN22+1708
	DD	imagerel $unwind$?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z DD imagerel $LN22
	DD	imagerel $LN22+1856
	DD	imagerel $unwind$?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z DD imagerel $LN27
	DD	imagerel $LN27+1412
	DD	imagerel $unwind$?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z DD imagerel $LN5
	DD	imagerel $LN5+247
	DD	imagerel $unwind$?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z DD imagerel $LN7
	DD	imagerel $LN7+422
	DD	imagerel $unwind$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA DD imagerel ?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
	DD	imagerel ?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?keyNumChanged@BerconGradient@@QEAAXH@Z DD imagerel $LN10
	DD	imagerel $LN10+338
	DD	imagerel $unwind$?keyNumChanged@BerconGradient@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA DD imagerel ?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?keyPosChanged@BerconGradient@@QEAAXM@Z DD imagerel $LN7
	DD	imagerel $LN7+424
	DD	imagerel $unwind$?keyPosChanged@BerconGradient@@QEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA DD imagerel ?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
	DD	imagerel ?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?countKeys@BerconGradient@@QEAAHXZ DD imagerel $LN6
	DD	imagerel $LN6+247
	DD	imagerel $unwind$?countKeys@BerconGradient@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resetKeys@BerconGradient@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+419
	DD	imagerel $unwind$?resetKeys@BerconGradient@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?gradAddKey@BerconGradient@@UEAAXM@Z DD imagerel $LN5
	DD	imagerel $LN5+464
	DD	imagerel $unwind$?gradAddKey@BerconGradient@@UEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA DD imagerel ?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
	DD	imagerel ?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?gradMoveKey@BerconGradient@@UEAAXHM@Z DD imagerel $LN6
	DD	imagerel $LN6+326
	DD	imagerel $unwind$?gradMoveKey@BerconGradient@@UEAAXHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA DD imagerel ?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
	DD	imagerel ?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?gradDelKey@BerconGradient@@UEAAXH@Z DD imagerel $LN8
	DD	imagerel $LN8+386
	DD	imagerel $unwind$?gradDelKey@BerconGradient@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA DD imagerel ?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?gradSelKey@BerconGradient@@UEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+267
	DD	imagerel $unwind$?gradSelKey@BerconGradient@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA DD imagerel ?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?gradReset@BerconGradient@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?gradReset@BerconGradient@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z DD imagerel $LN3
	DD	imagerel $LN3+492
	DD	imagerel $unwind$?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD imagerel $LN12
	DD	imagerel $LN12+484
	DD	imagerel $unwind$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z DD imagerel $LN18
	DD	imagerel $LN18+4751
	DD	imagerel $unwind$?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Reset@BerconGradient@@UEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+1436
	DD	imagerel $unwind$?Reset@BerconGradient@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Validity@BerconGradient@@UEAA?AVInterval@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?Validity@BerconGradient@@UEAA?AVInterval@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LocalRequirements@BerconGradient@@UEAAKH@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?LocalRequirements@BerconGradient@@UEAAKH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NumSubTexmaps@BerconGradient@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?NumSubTexmaps@BerconGradient@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z DD imagerel $LN9
	DD	imagerel $LN9+118
	DD	imagerel $unwind$?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z DD imagerel $LN9
	DD	imagerel $LN9+202
	DD	imagerel $unwind$?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z DD imagerel $LN9
	DD	imagerel $LN9+278
	DD	imagerel $unwind$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD imagerel $LN14
	DD	imagerel $LN14+1191
	DD	imagerel $unwind$?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD imagerel $LN19
	DD	imagerel $LN19+2482
	DD	imagerel $unwind$?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DiscardTexHandle@BerconGradient@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$?DiscardTexHandle@BerconGradient@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ActivateTexDisplay@BerconGradient@@UEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$?ActivateTexDisplay@BerconGradient@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z DD imagerel $LN6
	DD	imagerel $LN6+260
	DD	imagerel $unwind$?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD imagerel $LN9
	DD	imagerel $LN9+720
	DD	imagerel $unwind$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA DD imagerel ?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z DD imagerel $LN14
	DD	imagerel $LN14+383
	DD	imagerel $unwind$?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NumSubs@BerconGradient@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?NumSubs@BerconGradient@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z DD imagerel $LN16
	DD	imagerel $LN16+276
	DD	imagerel $unwind$?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z DD imagerel $LN13
	DD	imagerel $LN13+369
	DD	imagerel $unwind$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NumRefs@BerconGradient@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?NumRefs@BerconGradient@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z DD imagerel $LN16
	DD	imagerel $LN16+268
	DD	imagerel $unwind$?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z DD imagerel $LN16
	DD	imagerel $LN16+384
	DD	imagerel $unwind$?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z DD imagerel $LN8
	DD	imagerel $LN8+89
	DD	imagerel $unwind$?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z DD imagerel $LN6
	DD	imagerel $LN6+192
	DD	imagerel $unwind$?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconGradient@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconGradient@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconGradient@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+557
	DD	imagerel $unwind$??0BerconGradient@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA+29
	DD	imagerel $unwind$?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconGradient@@UEAA@XZ DD imagerel $LN7
	DD	imagerel $LN7+196
	DD	imagerel $unwind$??1BerconGradient@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@BerconGradient@@UEAAPEAXK@Z DD imagerel $LN7
	DD	imagerel $LN7+87
	DD	imagerel $unwind$?GetInterface@BerconGradient@@UEAAPEAXK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconGradient@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconGradient@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconGradient@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconGradient@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconGradientClassDesc@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??0BerconGradientClassDesc@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconGradientClassDesc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1BerconGradientClassDesc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+107
	DD	imagerel $unwind$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA DD imagerel ?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconGradientClassDesc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconGradientClassDesc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconGradientDesc@@YAXXZ DD imagerel ??__EBerconGradientDesc@@YAXXZ
	DD	imagerel ??__EBerconGradientDesc@@YAXXZ+50
	DD	imagerel $unwind$??__EBerconGradientDesc@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconGradientDesc@@YAXXZ DD imagerel ??__FBerconGradientDesc@@YAXXZ
	DD	imagerel ??__FBerconGradientDesc@@YAXXZ+21
	DD	imagerel $unwind$??__FBerconGradientDesc@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Exyz_blk@@YAXXZ DD imagerel ??__Exyz_blk@@YAXXZ
	DD	imagerel ??__Exyz_blk@@YAXXZ+103
	DD	imagerel $unwind$??__Exyz_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fxyz_blk@@YAXXZ DD imagerel ??__Fxyz_blk@@YAXXZ
	DD	imagerel ??__Fxyz_blk@@YAXXZ+21
	DD	imagerel $unwind$??__Fxyz_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Egradientmap_param_blk@@YAXXZ DD imagerel ??__Egradientmap_param_blk@@YAXXZ
	DD	imagerel ??__Egradientmap_param_blk@@YAXXZ+4244
	DD	imagerel $unwind$??__Egradientmap_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fgradientmap_param_blk@@YAXXZ DD imagerel ??__Fgradientmap_param_blk@@YAXXZ
	DD	imagerel ??__Fgradientmap_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__Fgradientmap_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconCurve_param_blk@@YAXXZ DD imagerel ??__EBerconCurve_param_blk@@YAXXZ
	DD	imagerel ??__EBerconCurve_param_blk@@YAXXZ+360
	DD	imagerel $unwind$??__EBerconCurve_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconCurve_param_blk@@YAXXZ DD imagerel ??__FBerconCurve_param_blk@@YAXXZ
	DD	imagerel ??__FBerconCurve_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__FBerconCurve_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN9
	DD	imagerel $LN9+266
	DD	imagerel $unwind$?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z DD imagerel $LN4
	DD	imagerel $LN4+86
	DD	imagerel $unwind$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN31
	DD	imagerel $LN31+4290
	DD	imagerel $unwind$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA DD imagerel ?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA
	DD	imagerel ?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconGradientDlgProc@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconGradientDlgProc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z DD imagerel $LN3
	DD	imagerel $LN3+252
	DD	imagerel $unwind$?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconGradientDlgProc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconGradientDlgProc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconGradientDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconGradientDlgProc@@UEAAPEAXI@Z
pdata	ENDS
CRT$XCU	SEGMENT
?kInvalidId$initializer$@AssetManagement@MaxSDK@@3P6AXXZEA DQ FLAT:??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ; MaxSDK::AssetManagement::kInvalidId$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c12e848000000000
CONST	SEGMENT
__real@c12e848000000000 DQ 0c12e848000000000r	; -1e+06
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+06
CONST	ENDS
;	COMDAT __real@40dfffc000000000
CONST	SEGMENT
__real@40dfffc000000000 DQ 040dfffc000000000r	; 32767
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff99999a0000000
CONST	SEGMENT
__real@3ff99999a0000000 DQ 03ff99999a0000000r	; 1.6
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe921fb54442d18
CONST	SEGMENT
__real@3fe921fb54442d18 DQ 03fe921fb54442d18r	; 0.785398
CONST	ENDS
;	COMDAT __real@3fcccccd
CONST	SEGMENT
__real@3fcccccd DD 03fcccccdr			; 1.6
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f1a36e2e0000000
CONST	SEGMENT
__real@3f1a36e2e0000000 DQ 03f1a36e2e0000000r	; 0.0001
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconGradientDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconGradientDlgProc@@8 DD imagerel ??_R0?AVBerconGradientDlgProc@@@8 ; BerconGradientDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconGradientDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconGradientDlgProc@@8
rdata$r	SEGMENT
??_R2BerconGradientDlgProc@@8 DD imagerel ??_R1A@?0A@EA@BerconGradientDlgProc@@8 ; BerconGradientDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconGradientDlgProc@@8
rdata$r	SEGMENT
??_R3BerconGradientDlgProc@@8 DD 00H			; BerconGradientDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconGradientDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconGradientDlgProc@@@8
data$r	SEGMENT
??_R0?AVBerconGradientDlgProc@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconGradientDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconGradientDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconGradientDlgProc@@6B@
rdata$r	SEGMENT
??_R4BerconGradientDlgProc@@6B@ DD 01H			; BerconGradientDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconGradientDlgProc@@@8
	DD	imagerel ??_R3BerconGradientDlgProc@@8
	DD	imagerel ??_R4BerconGradientDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconCurveDlgProcGRADIENT@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconCurveDlgProcGRADIENT@@8 DD imagerel ??_R0?AVBerconCurveDlgProcGRADIENT@@@8 ; BerconCurveDlgProcGRADIENT::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconCurveDlgProcGRADIENT@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconCurveDlgProcGRADIENT@@8
rdata$r	SEGMENT
??_R2BerconCurveDlgProcGRADIENT@@8 DD imagerel ??_R1A@?0A@EA@BerconCurveDlgProcGRADIENT@@8 ; BerconCurveDlgProcGRADIENT::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconCurveDlgProcGRADIENT@@8
rdata$r	SEGMENT
??_R3BerconCurveDlgProcGRADIENT@@8 DD 00H		; BerconCurveDlgProcGRADIENT::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconCurveDlgProcGRADIENT@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconCurveDlgProcGRADIENT@@@8
data$r	SEGMENT
??_R0?AVBerconCurveDlgProcGRADIENT@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconCurveDlgProcGRADIENT `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconCurveDlgProcGRADIENT@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconCurveDlgProcGRADIENT@@6B@
rdata$r	SEGMENT
??_R4BerconCurveDlgProcGRADIENT@@6B@ DD 01H		; BerconCurveDlgProcGRADIENT::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconCurveDlgProcGRADIENT@@@8
	DD	imagerel ??_R3BerconCurveDlgProcGRADIENT@@8
	DD	imagerel ??_R4BerconCurveDlgProcGRADIENT@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconGradientClassDesc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconGradientClassDesc@@8 DD imagerel ??_R0?AVBerconGradientClassDesc@@@8 ; BerconGradientClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconGradientClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconGradientClassDesc@@8
rdata$r	SEGMENT
??_R2BerconGradientClassDesc@@8 DD imagerel ??_R1A@?0A@EA@BerconGradientClassDesc@@8 ; BerconGradientClassDesc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ClassDesc2@@8
	DD	imagerel ??_R1A@?0A@EA@ClassDesc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconGradientClassDesc@@8
rdata$r	SEGMENT
??_R3BerconGradientClassDesc@@8 DD 00H			; BerconGradientClassDesc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2BerconGradientClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconGradientClassDesc@@@8
data$r	SEGMENT
??_R0?AVBerconGradientClassDesc@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconGradientClassDesc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconGradientClassDesc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconGradientClassDesc@@6B@
rdata$r	SEGMENT
??_R4BerconGradientClassDesc@@6B@ DD 01H		; BerconGradientClassDesc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconGradientClassDesc@@@8
	DD	imagerel ??_R3BerconGradientClassDesc@@8
	DD	imagerel ??_R4BerconGradientClassDesc@@6B@
rdata$r	ENDS
;	COMDAT ??_R4BerconGradient@@6BResourceMakerCallback@@@
rdata$r	SEGMENT
??_R4BerconGradient@@6BResourceMakerCallback@@@ DD 01H	; BerconGradient::`RTTI Complete Object Locator'
	DD	090H
	DD	00H
	DD	imagerel ??_R0?AVBerconGradient@@@8
	DD	imagerel ??_R3BerconGradient@@8
	DD	imagerel ??_R4BerconGradient@@6BResourceMakerCallback@@@
rdata$r	ENDS
;	COMDAT ??_R4BerconGradient@@6BGradientMap@@@
rdata$r	SEGMENT
??_R4BerconGradient@@6BGradientMap@@@ DD 01H		; BerconGradient::`RTTI Complete Object Locator'
	DD	088H
	DD	00H
	DD	imagerel ??_R0?AVBerconGradient@@@8
	DD	imagerel ??_R3BerconGradient@@8
	DD	imagerel ??_R4BerconGradient@@6BGradientMap@@@
rdata$r	ENDS
;	COMDAT ??_R4BerconGradient@@6BISubMap@@@
rdata$r	SEGMENT
??_R4BerconGradient@@6BISubMap@@@ DD 01H		; BerconGradient::`RTTI Complete Object Locator'
	DD	040H
	DD	00H
	DD	imagerel ??_R0?AVBerconGradient@@@8
	DD	imagerel ??_R3BerconGradient@@8
	DD	imagerel ??_R4BerconGradient@@6BISubMap@@@
rdata$r	ENDS
;	COMDAT ??_R1JI@?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1JI@?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (152,-1,0,66)'
	DD	00H
	DD	098H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R1JA@?0A@EA@ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R1JA@?0A@EA@ResourceMakerCallback@@8 DD imagerel ??_R0?AVResourceMakerCallback@@@8 ; ResourceMakerCallback::`RTTI Base Class Descriptor at (144,-1,0,64)'
	DD	01H
	DD	090H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1II@?0A@EA@GradientMap@@8
rdata$r	SEGMENT
??_R1II@?0A@EA@GradientMap@@8 DD imagerel ??_R0?AVGradientMap@@@8 ; GradientMap::`RTTI Base Class Descriptor at (136,-1,0,64)'
	DD	00H
	DD	088H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3GradientMap@@8
rdata$r	ENDS
;	COMDAT ??_R1EA@?0A@EA@ISubMap@@8
rdata$r	SEGMENT
??_R1EA@?0A@EA@ISubMap@@8 DD imagerel ??_R0?AVISubMap@@@8 ; ISubMap::`RTTI Base Class Descriptor at (64,-1,0,64)'
	DD	01H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R2MtlBase@@8
rdata$r	SEGMENT
??_R2MtlBase@@8 DD imagerel ??_R1A@?0A@EA@MtlBase@@8	; MtlBase::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3MtlBase@@8
rdata$r	SEGMENT
??_R3MtlBase@@8 DD 00H					; MtlBase::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	imagerel ??_R2MtlBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMtlBase@@@8
data$r	SEGMENT
??_R0?AVMtlBase@@@8 DQ FLAT:??_7type_info@@6B@		; MtlBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVMtlBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MtlBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MtlBase@@8 DD imagerel ??_R0?AVMtlBase@@@8 ; MtlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MtlBase@@8
rdata$r	ENDS
;	COMDAT ??_R2Texmap@@8
rdata$r	SEGMENT
??_R2Texmap@@8 DD imagerel ??_R1A@?0A@EA@Texmap@@8	; Texmap::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@MtlBase@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Texmap@@8
rdata$r	SEGMENT
??_R3Texmap@@8 DD 00H					; Texmap::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	imagerel ??_R2Texmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTexmap@@@8
data$r	SEGMENT
??_R0?AVTexmap@@@8 DQ FLAT:??_7type_info@@6B@		; Texmap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVTexmap@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Texmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Texmap@@8 DD imagerel ??_R0?AVTexmap@@@8	; Texmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Texmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconGradient@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconGradient@@8 DD imagerel ??_R0?AVBerconGradient@@@8 ; BerconGradient::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0eH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconGradient@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconGradient@@8
rdata$r	SEGMENT
??_R2BerconGradient@@8 DD imagerel ??_R1A@?0A@EA@BerconGradient@@8 ; BerconGradient::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Texmap@@8
	DD	imagerel ??_R1A@?0A@EA@MtlBase@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1II@?0A@EA@GradientMap@@8
	DD	imagerel ??_R1JA@?0A@EA@ResourceMakerCallback@@8
	DD	imagerel ??_R1JI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconGradient@@8
rdata$r	SEGMENT
??_R3BerconGradient@@8 DD 00H				; BerconGradient::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0fH
	DD	imagerel ??_R2BerconGradient@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconGradient@@@8
data$r	SEGMENT
??_R0?AVBerconGradient@@@8 DQ FLAT:??_7type_info@@6B@	; BerconGradient `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconGradient@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconGradient@@6BReferenceTarget@@@
rdata$r	SEGMENT
??_R4BerconGradient@@6BReferenceTarget@@@ DD 01H	; BerconGradient::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconGradient@@@8
	DD	imagerel ??_R3BerconGradient@@8
	DD	imagerel ??_R4BerconGradient@@6BReferenceTarget@@@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IGradient@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IGradient@@8 DD imagerel ??_R0?AVIGradient@@@8 ; IGradient::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3IGradient@@8
rdata$r	ENDS
;	COMDAT ??_R2IGradient@@8
rdata$r	SEGMENT
??_R2IGradient@@8 DD imagerel ??_R1A@?0A@EA@IGradient@@8 ; IGradient::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ICustomControl@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3IGradient@@8
rdata$r	SEGMENT
??_R3IGradient@@8 DD 00H				; IGradient::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2IGradient@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIGradient@@@8
data$r	SEGMENT
??_R0?AVIGradient@@@8 DQ FLAT:??_7type_info@@6B@	; IGradient `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVIGradient@@', 00H
data$r	ENDS
;	COMDAT ??_R4IGradient@@6B@
rdata$r	SEGMENT
??_R4IGradient@@6B@ DD 01H				; IGradient::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVIGradient@@@8
	DD	imagerel ??_R3IGradient@@8
	DD	imagerel ??_R4IGradient@@6B@
rdata$r	ENDS
;	COMDAT ??_R2ClassDesc2@@8
rdata$r	SEGMENT
??_R2ClassDesc2@@8 DD imagerel ??_R1A@?0A@EA@ClassDesc2@@8 ; ClassDesc2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ClassDesc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ClassDesc2@@8
rdata$r	SEGMENT
??_R3ClassDesc2@@8 DD 00H				; ClassDesc2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ClassDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ClassDesc2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ClassDesc2@@8 DD imagerel ??_R0?AVClassDesc2@@@8 ; ClassDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ClassDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@GradientMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GradientMap@@8 DD imagerel ??_R0?AVGradientMap@@@8 ; GradientMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3GradientMap@@8
rdata$r	ENDS
;	COMDAT ??_R2GradientMap@@8
rdata$r	SEGMENT
??_R2GradientMap@@8 DD imagerel ??_R1A@?0A@EA@GradientMap@@8 ; GradientMap::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3GradientMap@@8
rdata$r	SEGMENT
??_R3GradientMap@@8 DD 00H				; GradientMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2GradientMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGradientMap@@@8
data$r	SEGMENT
??_R0?AVGradientMap@@@8 DQ FLAT:??_7type_info@@6B@	; GradientMap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVGradientMap@@', 00H
data$r	ENDS
;	COMDAT ??_R4GradientMap@@6B@
rdata$r	SEGMENT
??_R4GradientMap@@6B@ DD 01H				; GradientMap::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVGradientMap@@@8
	DD	imagerel ??_R3GradientMap@@8
	DD	imagerel ??_R4GradientMap@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconXYZDlgProc@@8 DD imagerel ??_R0?AVBerconXYZDlgProc@@@8 ; BerconXYZDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconXYZDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R2BerconXYZDlgProc@@8 DD imagerel ??_R1A@?0A@EA@BerconXYZDlgProc@@8 ; BerconXYZDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R3BerconXYZDlgProc@@8 DD 00H				; BerconXYZDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconXYZDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconXYZDlgProc@@@8
data$r	SEGMENT
??_R0?AVBerconXYZDlgProc@@@8 DQ FLAT:??_7type_info@@6B@	; BerconXYZDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconXYZDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconXYZDlgProc@@6B@
rdata$r	SEGMENT
??_R4BerconXYZDlgProc@@6B@ DD 01H			; BerconXYZDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconXYZDlgProc@@@8
	DD	imagerel ??_R3BerconXYZDlgProc@@8
	DD	imagerel ??_R4BerconXYZDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R2ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R2ParamBlockDesc2@@8 DD imagerel ??_R1A@?0A@EA@ParamBlockDesc2@@8 ; ParamBlockDesc2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R3ParamBlockDesc2@@8 DD 00H				; ParamBlockDesc2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2ParamBlockDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParamBlockDesc2@@@8
data$r	SEGMENT
??_R0?AVParamBlockDesc2@@@8 DQ FLAT:??_7type_info@@6B@	; ParamBlockDesc2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVParamBlockDesc2@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParamBlockDesc2@@8 DD imagerel ??_R0?AVParamBlockDesc2@@@8 ; ParamBlockDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ParamBlockDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XYZ_Desc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XYZ_Desc@@8 DD imagerel ??_R0?AVXYZ_Desc@@@8 ; XYZ_Desc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3XYZ_Desc@@8
rdata$r	ENDS
;	COMDAT ??_R2XYZ_Desc@@8
rdata$r	SEGMENT
??_R2XYZ_Desc@@8 DD imagerel ??_R1A@?0A@EA@XYZ_Desc@@8	; XYZ_Desc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamBlockDesc2@@8
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3XYZ_Desc@@8
rdata$r	SEGMENT
??_R3XYZ_Desc@@8 DD 00H					; XYZ_Desc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2XYZ_Desc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXYZ_Desc@@@8
data$r	SEGMENT
??_R0?AVXYZ_Desc@@@8 DQ FLAT:??_7type_info@@6B@		; XYZ_Desc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVXYZ_Desc@@', 00H
data$r	ENDS
;	COMDAT ??_R4XYZ_Desc@@6B@
rdata$r	SEGMENT
??_R4XYZ_Desc@@6B@ DD 01H				; XYZ_Desc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVXYZ_Desc@@@8
	DD	imagerel ??_R3XYZ_Desc@@8
	DD	imagerel ??_R4XYZ_Desc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceMakerCallback@@8 DD imagerel ??_R0?AVResourceMakerCallback@@@8 ; ResourceMakerCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R2ResourceMakerCallback@@8 DD imagerel ??_R1A@?0A@EA@ResourceMakerCallback@@8 ; ResourceMakerCallback::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R3ResourceMakerCallback@@8 DD 00H			; ResourceMakerCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceMakerCallback@@@8
data$r	SEGMENT
??_R0?AVResourceMakerCallback@@@8 DQ FLAT:??_7type_info@@6B@ ; ResourceMakerCallback `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVResourceMakerCallback@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceMakerCallback@@6B@
rdata$r	SEGMENT
??_R4ResourceMakerCallback@@6B@ DD 01H			; ResourceMakerCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVResourceMakerCallback@@@8
	DD	imagerel ??_R3ResourceMakerCallback@@8
	DD	imagerel ??_R4ResourceMakerCallback@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISubMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISubMap@@8 DD imagerel ??_R0?AVISubMap@@@8 ; ISubMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R2ISubMap@@8
rdata$r	SEGMENT
??_R2ISubMap@@8 DD imagerel ??_R1A@?0A@EA@ISubMap@@8	; ISubMap::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ISubMap@@8
rdata$r	SEGMENT
??_R3ISubMap@@8 DD 00H					; ISubMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISubMap@@@8
data$r	SEGMENT
??_R0?AVISubMap@@@8 DQ FLAT:??_7type_info@@6B@		; ISubMap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVISubMap@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ICustomControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICustomControl@@8 DD imagerel ??_R0?AVICustomControl@@@8 ; ICustomControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ICustomControl@@8
rdata$r	ENDS
;	COMDAT ??_R2ICustomControl@@8
rdata$r	SEGMENT
??_R2ICustomControl@@8 DD imagerel ??_R1A@?0A@EA@ICustomControl@@8 ; ICustomControl::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ICustomControl@@8
rdata$r	SEGMENT
??_R3ICustomControl@@8 DD 00H				; ICustomControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ICustomControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVICustomControl@@@8
data$r	SEGMENT
??_R0?AVICustomControl@@@8 DQ FLAT:??_7type_info@@6B@	; ICustomControl `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVICustomControl@@', 00H
data$r	ENDS
;	COMDAT ??_R4ICustomControl@@6B@
rdata$r	SEGMENT
??_R4ICustomControl@@6B@ DD 01H				; ICustomControl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVICustomControl@@@8
	DD	imagerel ??_R3ICustomControl@@8
	DD	imagerel ??_R4ICustomControl@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ClassDesc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ClassDesc@@8 DD imagerel ??_R0?AVClassDesc@@@8 ; ClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R2ClassDesc@@8
rdata$r	SEGMENT
??_R2ClassDesc@@8 DD imagerel ??_R1A@?0A@EA@ClassDesc@@8 ; ClassDesc::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ClassDesc@@8
rdata$r	SEGMENT
??_R3ClassDesc@@8 DD 00H				; ClassDesc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVClassDesc@@@8
data$r	SEGMENT
??_R0?AVClassDesc@@@8 DQ FLAT:??_7type_info@@6B@	; ClassDesc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVClassDesc@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParamMap2UserDlgProc@@8 DD imagerel ??_R0?AVParamMap2UserDlgProc@@@8 ; ParamMap2UserDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ParamMap2UserDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R2ParamMap2UserDlgProc@@8 DD imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8 ; ParamMap2UserDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R3ParamMap2UserDlgProc@@8 DD 00H			; ParamMap2UserDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ParamMap2UserDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParamMap2UserDlgProc@@@8
data$r	SEGMENT
??_R0?AVParamMap2UserDlgProc@@@8 DQ FLAT:??_7type_info@@6B@ ; ParamMap2UserDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVParamMap2UserDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4ParamMap2UserDlgProc@@6B@
rdata$r	SEGMENT
??_R4ParamMap2UserDlgProc@@6B@ DD 01H			; ParamMap2UserDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVParamMap2UserDlgProc@@@8
	DD	imagerel ??_R3ParamMap2UserDlgProc@@8
	DD	imagerel ??_R4ParamMap2UserDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1EI@?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1EI@?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (72,-1,0,66)'
	DD	00H
	DD	048H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R18?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R18?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (9,-1,0,66)'
	DD	00H
	DD	09H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R0?AVNoncopyable@Util@MaxSDK@@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3Noncopyable@Util@MaxSDK@@8 DD 00H			; MaxSDK::Util::Noncopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNoncopyable@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVNoncopyable@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::Noncopyable `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVNoncopyable@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R0?AVNoncopyable@Util@MaxSDK@@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (9,-1,0,64)'
	DD	01H
	DD	09H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R17?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2Animatable@@8
rdata$r	SEGMENT
??_R2Animatable@@8 DD imagerel ??_R1A@?0A@EA@Animatable@@8 ; Animatable::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Animatable@@8
rdata$r	SEGMENT
??_R3Animatable@@8 DD 00H				; Animatable::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	05H
	DD	imagerel ??_R2Animatable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAnimatable@@@8
data$r	SEGMENT
??_R0?AVAnimatable@@@8 DQ FLAT:??_7type_info@@6B@	; Animatable `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAnimatable@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Animatable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Animatable@@8 DD imagerel ??_R0?AVAnimatable@@@8 ; Animatable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Animatable@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferenceMaker@@8
rdata$r	SEGMENT
??_R2ReferenceMaker@@8 DD imagerel ??_R1A@?0A@EA@ReferenceMaker@@8 ; ReferenceMaker::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReferenceMaker@@8
rdata$r	SEGMENT
??_R3ReferenceMaker@@8 DD 00H				; ReferenceMaker::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	imagerel ??_R2ReferenceMaker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferenceMaker@@@8
data$r	SEGMENT
??_R0?AVReferenceMaker@@@8 DQ FLAT:??_7type_info@@6B@	; ReferenceMaker `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReferenceMaker@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferenceMaker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferenceMaker@@8 DD imagerel ??_R0?AVReferenceMaker@@@8 ; ReferenceMaker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReferenceMaker@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferenceTarget@@8
rdata$r	SEGMENT
??_R2ReferenceTarget@@8 DD imagerel ??_R1A@?0A@EA@ReferenceTarget@@8 ; ReferenceTarget::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReferenceTarget@@8
rdata$r	SEGMENT
??_R3ReferenceTarget@@8 DD 00H				; ReferenceTarget::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	imagerel ??_R2ReferenceTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferenceTarget@@@8
data$r	SEGMENT
??_R0?AVReferenceTarget@@@8 DQ FLAT:??_7type_info@@6B@	; ReferenceTarget `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReferenceTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferenceTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferenceTarget@@8 DD imagerel ??_R0?AVReferenceTarget@@@8 ; ReferenceTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReferenceTarget@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BaseInterfaceServer@@8 DD imagerel ??_R0?AVBaseInterfaceServer@@@8 ; BaseInterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BaseInterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R2BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R2BaseInterfaceServer@@8 DD imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8 ; BaseInterfaceServer::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R3BaseInterfaceServer@@8 DD 00H			; BaseInterfaceServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BaseInterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBaseInterfaceServer@@@8
data$r	SEGMENT
??_R0?AVBaseInterfaceServer@@@8 DQ FLAT:??_7type_info@@6B@ ; BaseInterfaceServer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBaseInterfaceServer@@', 00H
data$r	ENDS
;	COMDAT ??_R4InterfaceServer@@6B@
rdata$r	SEGMENT
??_R4InterfaceServer@@6B@ DD 01H			; InterfaceServer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInterfaceServer@@@8
	DD	imagerel ??_R3InterfaceServer@@8
	DD	imagerel ??_R4InterfaceServer@@6B@
rdata$r	ENDS
;	COMDAT ??_R2InterfaceServer@@8
rdata$r	SEGMENT
??_R2InterfaceServer@@8 DD imagerel ??_R1A@?0A@EA@InterfaceServer@@8 ; InterfaceServer::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InterfaceServer@@8
rdata$r	SEGMENT
??_R3InterfaceServer@@8 DD 00H				; InterfaceServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2InterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVInterfaceServer@@@8
data$r	SEGMENT
??_R0?AVInterfaceServer@@@8 DQ FLAT:??_7type_info@@6B@	; InterfaceServer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInterfaceServer@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InterfaceServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InterfaceServer@@8 DD imagerel ??_R0?AVInterfaceServer@@@8 ; InterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2MaxHeapOperators@@8
rdata$r	SEGMENT
??_R2MaxHeapOperators@@8 DD imagerel ??_R1A@?0A@EA@MaxHeapOperators@@8 ; MaxHeapOperators::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3MaxHeapOperators@@8
rdata$r	SEGMENT
??_R3MaxHeapOperators@@8 DD 00H				; MaxHeapOperators::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R17?0A@EA@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2Exception@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8 ; MaxSDK::Util::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3Exception@Util@MaxSDK@@8 DD 00H			; MaxSDK::Util::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Util@MaxSDK@@8 DD imagerel ??_R0?AVException@Util@MaxSDK@@@8 ; MaxSDK::Util::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2OutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3OutOfRangeException@Util@MaxSDK@@8 DD 00H		; MaxSDK::Util::OutOfRangeException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2OutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3OutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2TabOutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8
	DD	imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3TabOutOfRangeException@Util@MaxSDK@@8 DD 00H	; MaxSDK::Util::TabOutOfRangeException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R4TabOutOfRangeException@Util@MaxSDK@@6B@
rdata$r	SEGMENT
??_R4TabOutOfRangeException@Util@MaxSDK@@6B@ DD 01H	; MaxSDK::Util::TabOutOfRangeException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
	DD	imagerel ??_R3TabOutOfRangeException@Util@MaxSDK@@8
	DD	imagerel ??_R4TabOutOfRangeException@Util@MaxSDK@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@
CONST	SEGMENT
??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' '
	DB	00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'a'
	DB	00H, ' ', 00H, 'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'S', 00H
	DB	'D', 00H, 'K', 00H, ' ', 00H, 'T', 00H, 'a', 00H, 'b', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel __imp_??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVOutOfRangeException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::OutOfRangeException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVOutOfRangeException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::TabOutOfRangeException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVTabOutOfRangeException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	SEGMENT
_CTA4?AVTabOutOfRangeException@Util@MaxSDK@@ DD 04H
	DD	imagerel _CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVMaxHeapOperators@@@818
xdata$x	ENDS
;	COMDAT _TI4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	SEGMENT
_TI4?AVTabOutOfRangeException@Util@MaxSDK@@ DD 00H
	DD	imagerel ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	ENDS
;	COMDAT ?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA
_DATA	SEGMENT
?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA DD 03f800000r ; 1 ; `BerconGradient::getGradientValue'::`11'::n1
_DATA	ENDS
;	COMDAT ??_7BerconGradientDlgProc@@6B@
CONST	SEGMENT
??_7BerconGradientDlgProc@@6B@ DQ FLAT:??_R4BerconGradientDlgProc@@6B@ ; BerconGradientDlgProc::`vftable'
	DQ	FLAT:??_EBerconGradientDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconGradientDlgProc@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_7BerconCurveDlgProcGRADIENT@@6B@
CONST	SEGMENT
??_7BerconCurveDlgProcGRADIENT@@6B@ DQ FLAT:??_R4BerconCurveDlgProcGRADIENT@@6B@ ; BerconCurveDlgProcGRADIENT::`vftable'
	DQ	FLAT:??_EBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_C@_1BO@EFFEGJBE@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAG?$AAr?$AAa?$AAd?$AAi?$AAe?$AAn?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@EFFEGJBE@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAG?$AAr?$AAa?$AAd?$AAi?$AAe?$AAn?$AAt?$AA?$AA@ DB 'B'
	DB	00H, 'e', 00H, 'r', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'G', 00H
	DB	'r', 00H, 'a', 00H, 'd', 00H, 'i', 00H, 'e', 00H, 'n', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_7BerconGradientClassDesc@@6B@
CONST	SEGMENT
??_7BerconGradientClassDesc@@6B@ DQ FLAT:??_R4BerconGradientClassDesc@@6B@ ; BerconGradientClassDesc::`vftable'
	DQ	FLAT:??_EBerconGradientClassDesc@@UEAAPEAXI@Z
	DQ	FLAT:?IsPublic@BerconGradientClassDesc@@UEAAHXZ
	DQ	FLAT:?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
	DQ	FLAT:?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?SuperClassID@BerconGradientClassDesc@@UEAAKXZ
	DQ	FLAT:?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?Category@BerconGradientClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?HasClassParams@ClassDesc@@UEAAHXZ
	DQ	FLAT:?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z
	DQ	FLAT:?ResetClassParams@ClassDesc2@@UEAAXH@Z
	DQ	FLAT:?NumActionTables@ClassDesc@@UEAAHXZ
	DQ	FLAT:?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z
	DQ	FLAT:?IsManipulator@ClassDesc@@UEAAHXZ
	DQ	FLAT:?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z
	DQ	FLAT:?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z
	DQ	FLAT:?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z
	DQ	FLAT:?NeedsToSave@ClassDesc@@UEAAHXZ
	DQ	FLAT:?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z
	DQ	FLAT:?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z
	DQ	FLAT:?InitialRollupPageState@ClassDesc@@UEAAKXZ
	DQ	FLAT:?InternalName@BerconGradientClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ
	DQ	FLAT:?HInstance@BerconGradientClassDesc@@UEAAPEAUHINSTANCE__@@XZ
	DQ	FLAT:?NumParamBlockDescs@ClassDesc2@@UEAAHXZ
	DQ	FLAT:?GetParamBlockDesc@ClassDesc2@@UEAAPEAVParamBlockDesc2@@H@Z
	DQ	FLAT:?GetParamBlockDescByID@ClassDesc2@@UEAAPEAVParamBlockDesc2@@F@Z
	DQ	FLAT:?AddParamBlockDesc@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?BeginEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z
	DQ	FLAT:?EndEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z
	DQ	FLAT:?InvalidateUI@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetRsrcString@ClassDesc@@UEAAPEB_W_J@Z
	DQ	FLAT:?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?NumParamMaps@ClassDesc2@@UEAAHXZ
	DQ	FLAT:?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetParamMap@ClassDesc2@@UEAAPEAVIParamMap2@@H@Z
	DQ	FLAT:?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
	DQ	FLAT:?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z
	DQ	FLAT:?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z
	DQ	FLAT:?NumInterfaces@ClassDesc@@UEAAHXZ
	DQ	FLAT:?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
	DQ	FLAT:?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@PEB_W@Z
	DQ	FLAT:?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@VInterface_ID@@@Z
	DQ	FLAT:?AddInterface@ClassDesc@@UEAAXPEAVFPInterface@@@Z
	DQ	FLAT:?ClearInterfaces@ClassDesc@@UEAAXXZ
	DQ	FLAT:?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?Execute@ClassDesc@@UEAA_JH_K00@Z
	DQ	FLAT:?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z
CONST	ENDS
;	COMDAT ??_7BerconGradient@@6BResourceMakerCallback@@@
CONST	SEGMENT
??_7BerconGradient@@6BResourceMakerCallback@@@ DQ FLAT:??_R4BerconGradient@@6BResourceMakerCallback@@@ ; BerconGradient::`vftable'
	DQ	FLAT:?SetCustomImageList@BerconGradient@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
	DQ	FLAT:?GetToolTip@BerconGradient@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
	DQ	FLAT:?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?GetInterface@BerconGradient@@WJA@EAAPEAXK@Z
CONST	ENDS
;	COMDAT ??_7BerconGradient@@6BGradientMap@@@
CONST	SEGMENT
??_7BerconGradient@@6BGradientMap@@@ DQ FLAT:??_R4BerconGradient@@6BGradientMap@@@ ; BerconGradient::`vftable'
	DQ	FLAT:?gradAddKey@BerconGradient@@UEAAXM@Z
	DQ	FLAT:?gradMoveKey@BerconGradient@@UEAAXHM@Z
	DQ	FLAT:?gradDelKey@BerconGradient@@UEAAXH@Z
	DQ	FLAT:?gradSelKey@BerconGradient@@UEAAXXZ
	DQ	FLAT:?gradReset@BerconGradient@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_7BerconGradient@@6BISubMap@@@
CONST	SEGMENT
??_7BerconGradient@@6BISubMap@@@ DQ FLAT:??_R4BerconGradient@@6BISubMap@@@ ; BerconGradient::`vftable'
	DQ	FLAT:??_EBerconGradient@@WEA@EAAPEAXI@Z
	DQ	FLAT:?NumSubTexmaps@BerconGradient@@UEAAHXZ
	DQ	FLAT:?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z
	DQ	FLAT:?MapSlotType@Texmap@@UEAAHH@Z
	DQ	FLAT:?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z
	DQ	FLAT:?SubTexmapOn@ISubMap@@UEAAHH@Z
	DQ	FLAT:?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
	DQ	FLAT:?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z
	DQ	FLAT:?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ
CONST	ENDS
;	COMDAT ??_7BerconGradient@@6BReferenceTarget@@@
CONST	SEGMENT
??_7BerconGradient@@6BReferenceTarget@@@ DQ FLAT:??_R4BerconGradient@@6BReferenceTarget@@@ ; BerconGradient::`vftable'
	DQ	FLAT:??_EBerconGradient@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?DeleteThis@BerconGradient@@UEAAXXZ
	DQ	FLAT:?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z
	DQ	FLAT:?SuperClassID@BerconGradient@@UEAAKXZ
	DQ	FLAT:?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?FreeCaches@Animatable@@UEAAXXZ
	DQ	FLAT:?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
	DQ	FLAT:?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
	DQ	FLAT:?GetInterface@BerconGradient@@UEAAPEAXK@Z
	DQ	FLAT:?ReleaseInterface@Animatable@@UEAAXKPEAX@Z
	DQ	FLAT:?SetProperty@MtlBase@@UEAAHKPEAX@Z
	DQ	FLAT:?GetProperty@MtlBase@@UEAAPEAXK@Z
	DQ	FLAT:?NumSubs@BerconGradient@@UEAAHXZ
	DQ	FLAT:?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z
	DQ	FLAT:?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
	DQ	FLAT:?BypassTreeView@Animatable@@UEAAHXZ
	DQ	FLAT:?BypassTrackBar@Animatable@@UEAAHXZ
	DQ	FLAT:?BypassPropertyLevel@Animatable@@UEAAHXZ
	DQ	FLAT:?InvisibleProperty@Animatable@@UEAAHXZ
	DQ	FLAT:?AssignController@Animatable@@UEAAHPEAV1@H@Z
	DQ	FLAT:?CanAssignController@Animatable@@UEAAHH@Z
	DQ	FLAT:?CanDeleteSubAnim@Animatable@@UEAAHH@Z
	DQ	FLAT:?DeleteSubAnim@Animatable@@UEAAXH@Z
	DQ	FLAT:?GetSubAnimCurveColor@Animatable@@UEAAKH@Z
	DQ	FLAT:?SubNumToRefNum@BerconGradient@@UEAAHH@Z
	DQ	FLAT:?CanCopyAnim@Animatable@@UEAAHXZ
	DQ	FLAT:?CanMakeUnique@Animatable@@UEAAHXZ
	DQ	FLAT:?NumChildren@Animatable@@UEAAHXZ
	DQ	FLAT:?ChildAnim@Animatable@@UEAAPEAV1@H@Z
	DQ	FLAT:?NodeName@Animatable@@UEAA?AVWStr@@XZ
	DQ	FLAT:?RenderBegin@BerconGradient@@UEAAHHK@Z
	DQ	FLAT:?RenderEnd@BerconGradient@@UEAAHH@Z
	DQ	FLAT:?EditTrack@Animatable@@UEAAXXZ
	DQ	FLAT:?NumKeys@Animatable@@UEAAHXZ
	DQ	FLAT:?GetKeyTime@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetKeyIndex@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z
	DQ	FLAT:?CopyKeysFromTime@Animatable@@UEAAXHHK@Z
	DQ	FLAT:?DeleteKeyAtTime@Animatable@@UEAAXH@Z
	DQ	FLAT:?IsKeyAtTime@Animatable@@UEAAHHK@Z
	DQ	FLAT:?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z
	DQ	FLAT:?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z
	DQ	FLAT:?GetTimeRange@Animatable@@UEAA?AVInterval@@K@Z
	DQ	FLAT:?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?DeleteTime@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?ReverseTime@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?ScaleTime@Animatable@@UEAAXVInterval@@M@Z
	DQ	FLAT:?InsertTime@Animatable@@UEAAXHH@Z
	DQ	FLAT:?SupportTimeOperations@Animatable@@UEAAHXZ
	DQ	FLAT:?MapKeys@Animatable@@UEAAXPEAVTimeMap@@K@Z
	DQ	FLAT:?DeleteKeys@Animatable@@UEAAXK@Z
	DQ	FLAT:?DeleteKeyByIndex@Animatable@@UEAAXH@Z
	DQ	FLAT:?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z
	DQ	FLAT:?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z
	DQ	FLAT:?SelectSubCurve@Animatable@@UEAAXHH@Z
	DQ	FLAT:?SelectKeyByIndex@Animatable@@UEAAXHH@Z
	DQ	FLAT:?IsKeySelected@Animatable@@UEAAHH@Z
	DQ	FLAT:?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z
	DQ	FLAT:?GetFlagKeyIndex@Animatable@@UEAAHXZ
	DQ	FLAT:?NumSelKeys@Animatable@@UEAAHXZ
	DQ	FLAT:?CloneSelectedKeys@Animatable@@UEAAXH@Z
	DQ	FLAT:?AddNewKey@Animatable@@UEAAXHK@Z
	DQ	FLAT:?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z
	DQ	FLAT:?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z
	DQ	FLAT:?SelectCurve@Animatable@@UEAAXH@Z
	DQ	FLAT:?IsCurveSelected@Animatable@@UEAAHXZ
	DQ	FLAT:?IsSubCurveSelected@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z
	DQ	FLAT:?SetSelKeyCoords@Animatable@@UEAAXHMK@Z
	DQ	FLAT:?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z
	DQ	FLAT:?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z
	DQ	FLAT:?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z
	DQ	FLAT:?SubAnimSetKeyBufferPresent@Animatable@@UEAAHH@Z
	DQ	FLAT:?SetKeyBufferPresent@Animatable@@UEAAHXZ
	DQ	FLAT:?SubAnimCommitSetKeyBuffer@Animatable@@UEAAXHH@Z
	DQ	FLAT:?CommitSetKeyBuffer@Animatable@@UEAAXH@Z
	DQ	FLAT:?SubAnimRevertSetKeyBuffer@Animatable@@UEAAXH@Z
	DQ	FLAT:?RevertSetKeyBuffer@Animatable@@UEAAXXZ
	DQ	FLAT:?IsAnimated@Animatable@@UEAAHXZ
	DQ	FLAT:?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z
	DQ	FLAT:?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z
	DQ	FLAT:?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z
	DQ	FLAT:?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?GetTrackVSpace@Animatable@@UEAAHH@Z
	DQ	FLAT:?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z
	DQ	FLAT:?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
	DQ	FLAT:?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
	DQ	FLAT:?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z
	DQ	FLAT:?TrackParamsType@Animatable@@UEAAHXZ
	DQ	FLAT:?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z
	DQ	FLAT:?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z
	DQ	FLAT:?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z
	DQ	FLAT:?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z
	DQ	FLAT:?SelectSubAnim@Animatable@@UEAAHH@Z
	DQ	FLAT:?EnumAuxFiles@MtlBase@@UEAAXAEAVAssetEnumCallback@@K@Z
	DQ	FLAT:?FreeAllBitmaps@Animatable@@UEAAXXZ
	DQ	FLAT:?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z
	DQ	FLAT:?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
	DQ	FLAT:?IsRefMaker@ReferenceMaker@@UEAAHXZ
	DQ	FLAT:?MouseCycleCompleted@Animatable@@UEAAXH@Z
	DQ	FLAT:?MouseCycleStarted@Animatable@@UEAAXH@Z
	DQ	FLAT:?NumParamBlocks@BerconGradient@@UEAAHXZ
	DQ	FLAT:?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z
	DQ	FLAT:?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z
	DQ	FLAT:?SvTraverseAnimGraph@Texmap@@UEAA?AVSvGraphNodeReference@@PEAVIGraphObjectManager@@PEAVAnimatable@@HK@Z
	DQ	FLAT:?SvCanInitiateLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvCanConcludeLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvGetName@MtlBase@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@_N@Z
	DQ	FLAT:?SvCanSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@AEBVWStr@@@Z
	DQ	FLAT:?SvCanRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsSelected@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsHighlighted@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvHighlightColor@MtlBase@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetSwatchColor@Animatable@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsInactive@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvLinkChild@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvHandleDoubleClick@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetMultiSelectCallback@MtlBase@@UEAAPEAVMultiSelectCallback@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvCanSelect@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvEditProperties@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetRefTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvCanDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetRelTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvCanDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvHandleRelDoubleClick@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z
	DQ	FLAT:?DeleteAllRefsToMe@ReferenceTarget@@UEAA?AW4RefResult@@XZ
	DQ	FLAT:?CanTransferReference@ReferenceMaker@@UEAAHH@Z
	DQ	FLAT:?NumRefs@BerconGradient@@UEAAHXZ
	DQ	FLAT:?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z
	DQ	FLAT:?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z
	DQ	FLAT:?Save@MtlBase@@UEAA?AW4IOResult@@PEAVISave@@@Z
	DQ	FLAT:?Load@MtlBase@@UEAA?AW4IOResult@@PEAVILoad@@@Z
	DQ	FLAT:?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z
	DQ	FLAT:?RescaleWorldUnits@ReferenceMaker@@UEAAXM@Z
	DQ	FLAT:?NotifyDependents@ReferenceTarget@@UEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAV1@W4NotifyDependentsOption@@@Z
	DQ	FLAT:?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z
	DQ	FLAT:?SaveEnum@ReferenceMaker@@UEAAXAEAVSaveEnumProc@@H@Z
	DQ	FLAT:?SpecifySaveReferences@ReferenceMaker@@UEAA_NAEAVReferenceSaveManager@@@Z
	DQ	FLAT:?DoEnumDependentsImpl@ReferenceTarget@@MEAAHPEAVDependentEnumProc@@@Z
	DQ	FLAT:?IsRefTarget@ReferenceTarget@@UEAAHXZ
	DQ	FLAT:?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
	DQ	FLAT:?AutoDelete@ReferenceTarget@@UEAA?AW4RefResult@@XZ
	DQ	FLAT:?RefAdded@Texmap@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?RefDeleted@ReferenceTarget@@UEAAXXZ
	DQ	FLAT:?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ
	DQ	FLAT:?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DQ	FLAT:?BaseClone@MtlBase@@UEAAXPEAVReferenceTarget@@0AEAVRemapDir@@@Z
	DQ	FLAT:?NotifyForeground@ReferenceTarget@@UEAAXH@Z
	DQ	FLAT:?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z
	DQ	FLAT:?GetFullName@MtlBase@@UEAA?AVWStr@@XZ
	DQ	FLAT:?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z
	DQ	FLAT:?Requirements@MtlBase@@UEAAKH@Z
	DQ	FLAT:?LocalRequirements@BerconGradient@@UEAAKH@Z
	DQ	FLAT:?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z
	DQ	FLAT:?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z
	DQ	FLAT:?IsMultiMtl@MtlBase@@UEAAHXZ
	DQ	FLAT:?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z
	DQ	FLAT:?Reset@BerconGradient@@UEAAXXZ
	DQ	FLAT:?Validity@BerconGradient@@UEAA?AVInterval@@H@Z
	DQ	FLAT:?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DQ	FLAT:?GetPStamp@MtlBase@@UEAAPEAVPStamp@@H@Z
	DQ	FLAT:?CreatePStamp@MtlBase@@UEAAPEAVPStamp@@HH@Z
	DQ	FLAT:?DiscardPStamp@MtlBase@@UEAAXH@Z
	DQ	FLAT:?SupportTexDisplay@BerconGradient@@UEAAHXZ
	DQ	FLAT:?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z
	DQ	FLAT:?ActivateTexDisplay@BerconGradient@@UEAAXH@Z
	DQ	FLAT:?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ
	DQ	FLAT:?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z
	DQ	FLAT:?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z
	DQ	FLAT:?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DQ	FLAT:?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z
	DQ	FLAT:?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DQ	FLAT:?HandleOwnViewPerturb@Texmap@@UEAAHXZ
	DQ	FLAT:?GetVPDisplayDIB@Texmap@@UEAAPEAUtagBITMAPINFO@@HAEAVTexHandleMaker@@AEAVInterval@@HHH@Z
	DQ	FLAT:?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
	DQ	FLAT:?GetTextureTiling@Texmap@@UEAAHXZ
	DQ	FLAT:?GetUVWSource@Texmap@@UEAAHXZ
	DQ	FLAT:?GetMapChannel@Texmap@@UEAAHXZ
	DQ	FLAT:?InitSlotType@Texmap@@UEAAXH@Z
	DQ	FLAT:?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ
	DQ	FLAT:?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ
	DQ	FLAT:?SetOutputLevel@Texmap@@UEAAXHM@Z
	DQ	FLAT:?IsOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
	DQ	FLAT:?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
	DQ	FLAT:?LoadMapFiles@Texmap@@UEAAHH@Z
	DQ	FLAT:?RenderBitmap@Texmap@@UEAAXHPEAVBitmap@@MH@Z
	DQ	FLAT:?IsHighDynamicRange@Texmap@@UEBAHXZ
CONST	ENDS
;	COMDAT ??_7IGradient@@6B@
CONST	SEGMENT
??_7IGradient@@6B@ DQ FLAT:??_R4IGradient@@6B@		; IGradient::`vftable'
	DQ	FLAT:??_EIGradient@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?GetHwnd@IGradient@@UEAAPEAUHWND__@@XZ
	DQ	FLAT:?Enable@IGradient@@UEAAXH@Z
	DQ	FLAT:?Disable@IGradient@@UEAAXXZ
	DQ	FLAT:?IsEnabled@IGradient@@UEAAHXZ
	DQ	FLAT:?Enable2@IGradient@@UEAAXH@Z
	DQ	FLAT:?Execute@IGradient@@UEAA_JH_K00@Z
	DQ	FLAT:?SetTooltip@IGradient@@UEAAX_NPEB_W@Z
CONST	ENDS
;	COMDAT ??_7GradientMap@@6B@
CONST	SEGMENT
??_7GradientMap@@6B@ DQ FLAT:??_R4GradientMap@@6B@	; GradientMap::`vftable'
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_C@_13PHJMHGG@?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_13PHJMHGG@?$AAL?$AA?$AA@ DB 'L', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7BerconXYZDlgProc@@6B@
CONST	SEGMENT
??_7BerconXYZDlgProc@@6B@ DQ FLAT:??_R4BerconXYZDlgProc@@6B@ ; BerconXYZDlgProc::`vftable'
	DQ	FLAT:??_EBerconXYZDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@ DB 'M', 00H
	DB	'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@ DB 'x', 00H
	DB	'y', 00H, 'z', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'n', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@ DB 's', 00H, 'e', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'O', 00H
	DB	'b', 00H, 'j', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7XYZ_Desc@@6B@
CONST	SEGMENT
??_7XYZ_Desc@@6B@ DQ FLAT:??_R4XYZ_Desc@@6B@		; XYZ_Desc::`vftable'
	DQ	FLAT:??_EXYZ_Desc@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?NumInterfaces@BaseInterfaceServer@@UEBAHXZ
	DQ	FLAT:?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z
CONST	ENDS
;	COMDAT ??_7ResourceMakerCallback@@6B@
CONST	SEGMENT
??_7ResourceMakerCallback@@6B@ DQ FLAT:??_R4ResourceMakerCallback@@6B@ ; ResourceMakerCallback::`vftable'
	DQ	FLAT:?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
	DQ	FLAT:?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
	DQ	FLAT:?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z
CONST	ENDS
;	COMDAT _CT??_R0?AVMaxHeapOperators@@@818
xdata$x	SEGMENT
_CT??_R0?AVMaxHeapOperators@@@818 DD 00H
	DD	imagerel ??_R0?AVMaxHeapOperators@@@8
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVMaxHeapOperators@@@8
data$r	SEGMENT
??_R0?AVMaxHeapOperators@@@8 DQ FLAT:??_7type_info@@6B@	; MaxHeapOperators `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVMaxHeapOperators@@', 00H
data$r	ENDS
;	COMDAT ??_7ParamMap2UserDlgProc@@6B@
CONST	SEGMENT
??_7ParamMap2UserDlgProc@@6B@ DQ FLAT:??_R4ParamMap2UserDlgProc@@6B@ ; ParamMap2UserDlgProc::`vftable'
	DQ	FLAT:??_EParamMap2UserDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_R0?AVClassDesc2@@@8
data$r	SEGMENT
??_R0?AVClassDesc2@@@8 DQ FLAT:??_7type_info@@6B@	; ClassDesc2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVClassDesc2@@', 00H
data$r	ENDS
;	COMDAT ??_7ICustomControl@@6B@
CONST	SEGMENT
??_7ICustomControl@@6B@ DQ FLAT:??_R4ICustomControl@@6B@ ; ICustomControl::`vftable'
	DQ	FLAT:??_EICustomControl@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?Execute@ICustomControl@@UEAA_JH_K00@Z
	DQ	FLAT:_purecall
CONST	ENDS
;	COMDAT ??_7InterfaceServer@@6B@
CONST	SEGMENT
??_7InterfaceServer@@6B@ DQ FLAT:??_R4InterfaceServer@@6B@ ; InterfaceServer::`vftable'
	DQ	FLAT:??_EInterfaceServer@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
CONST	ENDS
;	COMDAT ??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@
CONST	SEGMENT
??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@ DB 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'S', 00H, 'D', 00H, 'K', 00H, ':', 00H
	DB	':', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, ':', 00H, ':'
	DB	00H, 'T', 00H, 'a', 00H, 'b', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'O', 00H, 'f', 00H, 'R', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7TabOutOfRangeException@Util@MaxSDK@@6B@
CONST	SEGMENT
??_7TabOutOfRangeException@Util@MaxSDK@@6B@ DQ FLAT:??_R4TabOutOfRangeException@Util@MaxSDK@@6B@ ; MaxSDK::Util::TabOutOfRangeException::`vftable'
	DQ	FLAT:??_ETabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
	DQ	FLAT:?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconGradientDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconGradientDlgProc@@UEAA@XZ DD imagerel ??1BerconGradientDlgProc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconGradientDlgProc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconGradientDlgProc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconGradientDlgProc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconGradientDlgProc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconGradientDlgProc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconGradientDlgProc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconGradientDlgProc@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel ?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DD	0ffffffffH
	DD	imagerel ?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z+223
	DD	00H
	DD	imagerel ?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z+342
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DD	0140H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 023819H
	DD	02f011aH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DD	0162H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z DD imagerel ??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z+34
	DD	00H
	DD	imagerel ??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z+76
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ DD imagerel ??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 011701H
	DD	06217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z DD imagerel ??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z+34
	DD	00H
	DD	imagerel ??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconCurve_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconCurve_param_blk@@YAXXZ DD 020701H
	DD	0210107H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fgradientmap_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Egradientmap_param_blk@@YAXXZ DD 040a01H
	DD	016b010aH
	DD	060027003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fxyz_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Exyz_blk@@YAXXZ DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconGradientDesc@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconGradientDesc@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconGradientClassDesc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z DD imagerel ?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
	DD	0ffffffffH
	DD	imagerel ?Create@BerconGradientClassDesc@@UEAAPEAXH@Z+38
	DD	00H
	DD	imagerel ?Create@BerconGradientClassDesc@@UEAAPEAXH@Z+97
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
	DD	038H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z DD 011611H
	DD	0820dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconGradientClassDesc@@UEAA@XZ DD imagerel ??1BerconGradientClassDesc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconGradientClassDesc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconGradientClassDesc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconGradientClassDesc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconGradientClassDesc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconGradientClassDesc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconGradientClassDesc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconGradientClassDesc@@QEAA@XZ DD imagerel ??0BerconGradientClassDesc@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BerconGradientClassDesc@@QEAA@XZ+30
	DD	00H
	DD	imagerel ??0BerconGradientClassDesc@@QEAA@XZ+45
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconGradientClassDesc@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconGradientClassDesc@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconGradientClassDesc@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconGradientClassDesc@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconGradientClassDesc@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconGradientClassDesc@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconGradient@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconGradient@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@BerconGradient@@UEAAPEAXK@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconGradient@@UEAA@XZ DD imagerel ??1BerconGradient@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1BerconGradient@@UEAA@XZ+87
	DD	00H
	DD	imagerel ??1BerconGradient@@UEAA@XZ+180
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconGradient@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconGradient@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconGradient@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1BerconGradient@@UEAA@XZ
	DD	038H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconGradient@@UEAA@XZ DD 011219H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconGradient@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconGradient@@QEAA@XZ DD imagerel ??0BerconGradient@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BerconGradient@@QEAA@XZ+30
	DD	00H
	DD	imagerel ??0BerconGradient@@QEAA@XZ+387
	DD	01H
	DD	imagerel ??0BerconGradient@@QEAA@XZ+486
	DD	00H
	DD	imagerel ??0BerconGradient@@QEAA@XZ+547
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconGradient@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconGradient@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0BerconGradient@@QEAA@XZ
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$??0BerconGradient@@QEAA@XZ
	DD	040H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconGradient@@QEAA@XZ DD 011211H
	DD	0a209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconGradient@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconGradient@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z DD 011201H
	DD	08212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NumRefs@BerconGradient@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z DD imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+117
	DD	00H
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+138
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+163
	DD	00H
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+184
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+209
	DD	00H
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+230
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+255
	DD	00H
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+273
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+298
	DD	00H
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+316
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z+347
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	00H
	DD	00H
	DD	0cH
	DD	imagerel $ip2state$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NumSubs@BerconGradient@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD imagerel ?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z+53
	DD	00H
	DD	imagerel ?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z+112
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	050H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 011711H
	DD	0c20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z DD 011201H
	DD	0a212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ActivateTexDisplay@BerconGradient@@UEAAXH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DiscardTexHandle@BerconGradient@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD 042a19H
	DD	0510118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck
	DD	0278H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD 042a19H
	DD	01f0118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z DD imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+83
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+104
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+136
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+154
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+186
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+204
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+216
	DD	01H
	DD	imagerel ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z+243
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	00H
	DD	00H
	DD	09H
	DD	imagerel $ip2state$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z DD 012b19H
	DD	08213H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NumSubTexmaps@BerconGradient@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LocalRequirements@BerconGradient@@UEAAKH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Validity@BerconGradient@@UEAA?AVInterval@@H@Z DD 012219H
	DD	06213H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Reset@BerconGradient@@UEAAXXZ DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z DD 022719H
	DD	0530115H
	DD	imagerel __GSHandlerCheck
	DD	0280H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+174
	DD	00H
	DD	imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+241
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+274
	DD	01H
	DD	imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+341
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+374
	DD	02H
	DD	imagerel ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+441
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	00H
	DD	00H
	DD	07H
	DD	imagerel $ip2state$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	070H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 021f11H
	DD	0110116H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z DD 022719H
	DD	0170115H
	DD	imagerel __GSHandlerCheck
	DD	0a8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z DD 011201H
	DD	06212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?gradReset@BerconGradient@@UEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?gradSelKey@BerconGradient@@UEAAXXZ DD imagerel ?gradSelKey@BerconGradient@@UEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?gradSelKey@BerconGradient@@UEAAXXZ+76
	DD	00H
	DD	imagerel ?gradSelKey@BerconGradient@@UEAAXXZ+89
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?gradSelKey@BerconGradient@@UEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?gradSelKey@BerconGradient@@UEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?gradSelKey@BerconGradient@@UEAAXXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?gradSelKey@BerconGradient@@UEAAXXZ
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?gradSelKey@BerconGradient@@UEAAXXZ DD 011211H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?gradSelKey@BerconGradient@@UEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?gradDelKey@BerconGradient@@UEAAXH@Z DD imagerel ?gradDelKey@BerconGradient@@UEAAXH@Z
	DD	0ffffffffH
	DD	imagerel ?gradDelKey@BerconGradient@@UEAAXH@Z+80
	DD	00H
	DD	imagerel ?gradDelKey@BerconGradient@@UEAAXH@Z+93
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?gradDelKey@BerconGradient@@UEAAXH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?gradDelKey@BerconGradient@@UEAAXH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?gradDelKey@BerconGradient@@UEAAXH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?gradDelKey@BerconGradient@@UEAAXH@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?gradDelKey@BerconGradient@@UEAAXH@Z DD 011611H
	DD	0820dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?gradDelKey@BerconGradient@@UEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?gradMoveKey@BerconGradient@@UEAAXHM@Z DD imagerel ?gradMoveKey@BerconGradient@@UEAAXHM@Z
	DD	0ffffffffH
	DD	imagerel ?gradMoveKey@BerconGradient@@UEAAXHM@Z+86
	DD	00H
	DD	imagerel ?gradMoveKey@BerconGradient@@UEAAXHM@Z+99
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?gradMoveKey@BerconGradient@@UEAAXHM@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?gradMoveKey@BerconGradient@@UEAAXHM@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?gradMoveKey@BerconGradient@@UEAAXHM@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?gradMoveKey@BerconGradient@@UEAAXHM@Z
	DD	050H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?gradMoveKey@BerconGradient@@UEAAXHM@Z DD 011c11H
	DD	0c213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?gradMoveKey@BerconGradient@@UEAAXHM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?gradAddKey@BerconGradient@@UEAAXM@Z DD imagerel ?gradAddKey@BerconGradient@@UEAAXM@Z
	DD	0ffffffffH
	DD	imagerel ?gradAddKey@BerconGradient@@UEAAXM@Z+97
	DD	00H
	DD	imagerel ?gradAddKey@BerconGradient@@UEAAXM@Z+110
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?gradAddKey@BerconGradient@@UEAAXM@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?gradAddKey@BerconGradient@@UEAAXM@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?gradAddKey@BerconGradient@@UEAAXM@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?gradAddKey@BerconGradient@@UEAAXM@Z
	DD	040H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?gradAddKey@BerconGradient@@UEAAXM@Z DD 012719H
	DD	0e20fH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?gradAddKey@BerconGradient@@UEAAXM@Z
	DD	06aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resetKeys@BerconGradient@@QEAAXXZ DD 021b19H
	DD	011010cH
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?countKeys@BerconGradient@@QEAAHXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?keyPosChanged@BerconGradient@@QEAAXM@Z DD imagerel ?keyPosChanged@BerconGradient@@QEAAXM@Z
	DD	0ffffffffH
	DD	imagerel ?keyPosChanged@BerconGradient@@QEAAXM@Z+82
	DD	00H
	DD	imagerel ?keyPosChanged@BerconGradient@@QEAAXM@Z+95
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?keyPosChanged@BerconGradient@@QEAAXM@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?keyPosChanged@BerconGradient@@QEAAXM@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?keyPosChanged@BerconGradient@@QEAAXM@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?keyPosChanged@BerconGradient@@QEAAXM@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?keyPosChanged@BerconGradient@@QEAAXM@Z DD 011811H
	DD	0e20fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?keyPosChanged@BerconGradient@@QEAAXM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?keyNumChanged@BerconGradient@@QEAAXH@Z DD imagerel ?keyNumChanged@BerconGradient@@QEAAXH@Z
	DD	0ffffffffH
	DD	imagerel ?keyNumChanged@BerconGradient@@QEAAXH@Z+80
	DD	00H
	DD	imagerel ?keyNumChanged@BerconGradient@@QEAAXH@Z+93
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?keyNumChanged@BerconGradient@@QEAAXH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?keyNumChanged@BerconGradient@@QEAAXH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?keyNumChanged@BerconGradient@@QEAAXH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?keyNumChanged@BerconGradient@@QEAAXH@Z
	DD	040H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?keyNumChanged@BerconGradient@@QEAAXH@Z DD 011611H
	DD	0a20dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?keyNumChanged@BerconGradient@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z DD imagerel ?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z
	DD	0ffffffffH
	DD	imagerel ?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z+81
	DD	00H
	DD	imagerel ?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z+94
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z DD 011711H
	DD	0e20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z DD 010e01H
	DD	0c20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z DD 021101H
	DD	0170111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z DD 021101H
	DD	0590111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z DD 022319H
	DD	04d0111H
	DD	imagerel __GSHandlerCheck
	DD	0250H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z DD 031001H
	DD	0700cc210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnableStuff@BerconGradient@@QEAAXXZ DD 020c01H
	DD	01b010cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?limitRange@BerconGradient@@QEAAHAEAM@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z DD 010e01H
	DD	0e20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GIGradient@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@IGradient@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteMe@IGradient@@QEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1IGradient@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1IGradient@@UEAA@XZ DD imagerel ??1IGradient@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1IGradient@@UEAA@XZ+33
	DD	00H
	DD	imagerel ??1IGradient@@UEAA@XZ+98
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1IGradient@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1IGradient@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1IGradient@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1IGradient@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1IGradient@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1IGradient@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1IGradient@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z DD imagerel ??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z
	DD	0ffffffffH
	DD	imagerel ??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z+39
	DD	00H
	DD	imagerel ??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z+138
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z DD 011c11H
	DD	08213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GGradientRamp@@QEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@GradientRamp@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1GradientRamp@@QEAA@XZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0GradientRamp@@QEAA@PEAVGradientMap@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconXYZ@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconXYZDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconXYZDlgProc@@UEAA@XZ DD imagerel ??1BerconXYZDlgProc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconXYZDlgProc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconXYZDlgProc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconXYZDlgProc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconXYZDlgProc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconXYZDlgProc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconXYZDlgProc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 022c19H
	DD	015011aH
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z+34
	DD	00H
	DD	imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GXYZ_Desc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1XYZ_Desc@@UEAA@XZ DD imagerel ??1XYZ_Desc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1XYZ_Desc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1XYZ_Desc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1XYZ_Desc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1XYZ_Desc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1XYZ_Desc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1XYZ_Desc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	0ffffffffH
	DD	imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z+5698
	DD	00H
	DD	imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z+5716
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	0e70H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 022711H
	DD	01d1011bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eintvalid@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkTriObjNormalXTCID@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Texmap@@UEAA@XZ DD imagerel ??1Texmap@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Texmap@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Texmap@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Texmap@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Texmap@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Texmap@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Texmap@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyForeground@ReferenceTarget@@UEAAXH@Z DD 010d01H
	DD	0a20dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BypassTrackBar@Animatable@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_4Interval@@QEAAAEAV0@V0@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Interval@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GICustomControl@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ICustomControl@@UEAA@XZ DD imagerel ??1ICustomControl@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ICustomControl@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ICustomControl@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1ICustomControl@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ICustomControl@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ICustomControl@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ICustomControl@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ICustomControl@@QEAA@XZ DD imagerel ??0ICustomControl@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0ICustomControl@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0ICustomControl@@QEAA@XZ+44
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ICustomControl@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ICustomControl@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ICustomControl@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ICustomControl@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ICustomControl@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ICustomControl@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BitMask@BitArray@@AEBA_KH@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UseLocalBits@BitArray@@AEBA_NXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Set@BitArray@@QEAAXH@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearInterfaces@ClassDesc@@UEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NumInterfaces@ClassDesc@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD 020701H
	DD	060067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInterfaceServer@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVPoint3@@AEBV0@M@Z DD 011401H
	DD	06214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?sqrt@@YAMM@Z DD imagerel ?sqrt@@YAMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?sqrt@@YAMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?sqrt@@YAMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sqrt@@YAMM@Z DD 011319H
	DD	0620aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?sqrt@@YAMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?fabs@@YAMM@Z DD imagerel ?fabs@@YAMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?fabs@@YAMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?fabs@@YAMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fabs@@YAMM@Z DD 011319H
	DD	0620aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?fabs@@YAMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?acos@@YAMM@Z DD imagerel ?acos@@YAMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?acos@@YAMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?acos@@YAMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?acos@@YAMM@Z DD 011319H
	DD	0620aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?acos@@YAMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	0ffffffffH
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z+40
	DD	00H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z+55
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD imagerel ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z+40
	DD	00H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z+55
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8Class_ID@@QEBA_NAEBV0@@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fabsf DD 010a01H
	DD	0420aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 011801H
	DD	06218H
xdata	ENDS
CRT$XCU	SEGMENT
?kTriObjNormalXTCID$initializer$@@3P6AXXZEA DQ FLAT:??__EkTriObjNormalXTCID@@YAXXZ ; kTriObjNormalXTCID$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?intvalid$initializer$@@3P6AXXZEA DQ FLAT:??__Eintvalid@@YAXXZ ; intvalid$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconGradientDesc$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconGradientDesc@@YAXXZ ; BerconGradientDesc$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?xyz_blk$initializer$@@3P6AXXZEA DQ FLAT:??__Exyz_blk@@YAXXZ ; xyz_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?gradientmap_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__Egradientmap_param_blk@@YAXXZ ; gradientmap_param_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconCurve_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconCurve_param_blk@@YAXXZ ; BerconCurve_param_blk$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ?GetInterface@BerconGradient@@WJA@EAAPEAXK@Z
_TEXT	SEGMENT
?GetInterface@BerconGradient@@WJA@EAAPEAXK@Z PROC	; [thunk]:BerconGradient::GetInterface`adjustor{144}', COMDAT
	sub	rcx, 144				; 00000090H
	jmp	?GetInterface@BerconGradient@@UEAAPEAXK@Z ; BerconGradient::GetInterface
?GetInterface@BerconGradient@@WJA@EAAPEAXK@Z ENDP	; [thunk]:BerconGradient::GetInterface`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_EBerconGradient@@WEA@EAAPEAXI@Z
_TEXT	SEGMENT
??_EBerconGradient@@WEA@EAAPEAXI@Z PROC			; [thunk]:BerconGradient::`vector deleting destructor', COMDAT
	sub	rcx, 64					; 00000040H
	jmp	??_EBerconGradient@@UEAAPEAXI@Z
??_EBerconGradient@@WEA@EAAPEAXI@Z ENDP			; [thunk]:BerconGradient::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconGradientDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconGradientDlgProc@@UEAAPEAXI@Z PROC		; BerconGradientDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconGradientDlgProc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconGradientDlgProc@@UEAAPEAXI@Z ENDP		; BerconGradientDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z PROC	; BerconGradientDlgProc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z ENDP	; BerconGradientDlgProc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconGradientDlgProc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconGradientDlgProc@@UEAA@XZ PROC			; BerconGradientDlgProc::~BerconGradientDlgProc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconGradientDlgProc@@UEAA@XZ ENDP			; BerconGradientDlgProc::~BerconGradientDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA PROC	; `BerconGradientDlgProc::~BerconGradientDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA ENDP	; `BerconGradientDlgProc::~BerconGradientDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA PROC	; `BerconGradientDlgProc::~BerconGradientDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconGradientDlgProc@@UEAA@XZ@4HA ENDP	; `BerconGradientDlgProc::~BerconGradientDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
gradUI$ = 32
this$ = 64
m$ = 72
?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconGradientDlgProc::SetThing, COMDAT

; 334  : 		void SetThing(ReferenceTarget *m) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 335  : 			IGradient* gradUI = parentMap->gradientUI; // Take old control

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+464]
	mov	QWORD PTR gradUI$[rsp], rax

; 336  : 			parentMap->gradientUI = NULL; // Remove control from old map

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rax+464], 0

; 337  : 			parentMap->gradient->setHWND(NULL); // Remove control from old maps gradient

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	xor	edx, edx
	mov	rcx, QWORD PTR [rax+456]
	call	?setHWND@GradientRamp@@QEAAXPEAUHWND__@@@Z ; GradientRamp::setHWND

; 338  : 
; 339  : 			parentMap = (BerconGradient*)m; // Switch maps			

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 340  : 
; 341  : 			parentMap->gradientUI = gradUI; // Replace new maps control

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR gradUI$[rsp]
	mov	QWORD PTR [rax+464], rcx

; 342  : 			parentMap->gradient->setHWND(parentMap->gradientUI->GetHwnd()); // Set new maps gradients HWND

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+464]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx+464]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, rax
	mov	rcx, QWORD PTR [rcx+456]
	call	?setHWND@GradientRamp@@QEAAXPEAUHWND__@@@Z ; GradientRamp::setHWND

; 343  : 			parentMap->gradientUI->setGradient(parentMap->gradient); // Set new maps controls gradient

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR [rcx+464]
	call	?setGradient@IGradient@@QEAAXPEAVGradientRamp@@@Z ; IGradient::setGradient

; 344  : 			parentMap->gradient->invalidate(); // Redraw

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rax+456]
	call	?invalidate@GradientRamp@@QEAAXXZ	; GradientRamp::invalidate

; 345  : 
; 346  : 			parentMap->EnableStuff();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?EnableStuff@BerconGradient@@QEAAXXZ	; BerconGradient::EnableStuff

; 347  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?SetThing@BerconGradientDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconGradientDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?DeleteThis@BerconGradientDlgProc@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconGradientDlgProc@@UEAAXXZ PROC		; BerconGradientDlgProc::DeleteThis, COMDAT

; 333  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconGradientDlgProc@@UEAAXXZ ENDP		; BerconGradientDlgProc::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwndMap$1 = 48
tv64 = 56
custEdit$2 = 64
tv679 = 72
tv702 = 76
$T3 = 80
tv660 = 88
tv597 = 96
tv618 = 104
tv92 = 112
tv408 = 120
tv429 = 128
tv450 = 136
tv471 = 144
tv492 = 152
tv513 = 160
tv534 = 168
tv555 = 176
tv576 = 184
tv639 = 192
tv757 = 200
$T4 = 208
tv418 = 216
tv439 = 224
tv460 = 232
tv481 = 240
tv502 = 248
tv523 = 256
tv544 = 264
tv565 = 272
tv586 = 280
tv607 = 288
tv628 = 296
tv649 = 304
$T5 = 312
$T6 = 320
$T7 = 328
curIndex$8 = 344
curIndex$9 = 348
__$ArrayPad$ = 352
this$ = 384
t$ = 392
map$ = 400
hWnd$ = 408
msg$ = 416
wParam$ = 424
lParam$ = 432
?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconGradientDlgProc::DlgProc, COMDAT

; 350  : INT_PTR BerconGradientDlgProc::DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam) {	

$LN31:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 376				; 00000178H
	mov	QWORD PTR $T6[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 351  : 	switch (msg) {	

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 1624		; 00000658H
	ja	SHORT $LN29@DlgProc
	cmp	DWORD PTR tv64[rsp], 1624		; 00000658H
	je	$LN21@DlgProc
	cmp	DWORD PTR tv64[rsp], 2
	je	$LN12@DlgProc
	cmp	DWORD PTR tv64[rsp], 24
	je	$LN11@DlgProc
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN10@DlgProc
	jmp	$LN25@DlgProc
$LN29@DlgProc:
	cmp	DWORD PTR tv64[rsp], 1627		; 0000065bH
	je	$LN13@DlgProc
	cmp	DWORD PTR tv64[rsp], 1709		; 000006adH
	je	$LN16@DlgProc
	jmp	$LN25@DlgProc
$LN10@DlgProc:

; 352  : 		case WM_INITDIALOG: {			
; 353  : 			// Initialize gradient			
; 354  : 			parentMap->gradient->setHWND(GetDlgItem(hWnd,IDC_GRADIENT));

	mov	edx, 1040				; 00000410H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, rax
	mov	rcx, QWORD PTR [rcx+456]
	call	?setHWND@GradientRamp@@QEAAXPEAUHWND__@@@Z ; GradientRamp::setHWND

; 355  : 			igrad = new IGradient(GetDlgItem(hWnd,IDC_GRADIENT), parentMap->gradient);

	mov	ecx, 24
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T3[rsp], rax
	cmp	QWORD PTR $T3[rsp], 0
	je	SHORT $LN27@DlgProc
	mov	edx, 24
	mov	rcx, QWORD PTR $T3[rsp]
	call	?__autoclassinit2@IGradient@@QEAAX_K@Z
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv757[rsp], rax
	mov	edx, 1040				; 00000410H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR tv757[rsp]
	mov	r8, QWORD PTR [rcx+456]
	mov	rdx, rax
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z ; IGradient::IGradient
	mov	QWORD PTR tv92[rsp], rax
	jmp	SHORT $LN28@DlgProc
$LN27@DlgProc:
	mov	QWORD PTR tv92[rsp], 0
$LN28@DlgProc:
	mov	rax, QWORD PTR tv92[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	mov	QWORD PTR [rax+16], rcx

; 356  : 			parentMap->gradientUI = igrad;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+464], rcx

; 357  : 			
; 358  : 			// Dropdown values
; 359  : 			HWND hwndMap = GetDlgItem(hWnd, IDC_GRADIENT_TYPE);  

	mov	edx, 1050				; 0000041aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 360  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_UVW));

	mov	ecx, 169				; 000000a9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 361  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_NORMAL));

	mov	ecx, 172				; 000000acH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 362  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_DISTANCE));

	mov	ecx, 173				; 000000adH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 363  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_LIGHT));

	mov	ecx, 170				; 000000aaH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 364  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_MAP));

	mov	ecx, 171				; 000000abH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 365  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_RANDOM));

	mov	ecx, 147				; 00000093H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 366  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_AGE));

	mov	ecx, 148				; 00000094H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 367  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_SPEED));

	mov	ecx, 149				; 00000095H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 368  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADTYPE_SIZE));			

	mov	ecx, 150				; 00000096H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 369  : 
; 370  : 			hwndMap = GetDlgItem(hWnd, IDC_GRADIENT_INT);  

	mov	edx, 1054				; 0000041eH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 371  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADINT_LINEAR));

	mov	ecx, 151				; 00000097H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 372  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADINT_SMOOTH));

	mov	ecx, 152				; 00000098H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 373  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADINT_SOLIDNEAR));

	mov	ecx, 153				; 00000099H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 374  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADINT_SOLIDLEFT));

	mov	ecx, 154				; 0000009aH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 375  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADINT_SOLIDRIGHT));

	mov	ecx, 155				; 0000009bH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 376  : 
; 377  : 			hwndMap = GetDlgItem(hWnd, IDC_GRADIENT_UVW);  

	mov	edx, 1058				; 00000422H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 378  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_LINEAR));

	mov	ecx, 174				; 000000aeH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 379  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_RADIAL));

	mov	ecx, 175				; 000000afH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 380  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_RECTANGLE));

	mov	ecx, 176				; 000000b0H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 381  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_DIAGONAL));

	mov	ecx, 177				; 000000b1H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 382  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_PONG));

	mov	ecx, 183				; 000000b7H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 383  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_SPIRAL));

	mov	ecx, 178				; 000000b2H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 384  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_SWEEP));

	mov	ecx, 179				; 000000b3H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 385  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_TARTAN));

	mov	ecx, 180				; 000000b4H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 386  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_SPHERICAL));

	mov	ecx, 181				; 000000b5H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 387  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_GRADUVW_BOX));

	mov	ecx, 182				; 000000b6H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 388  : 
; 389  : 			hwndMap = GetDlgItem(hWnd, IDC_GRADIENT_NORMAL);  

	mov	edx, 1059				; 00000423H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 390  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_VIEW));

	mov	ecx, 188				; 000000bcH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 391  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_LOCALX));

	mov	ecx, 189				; 000000bdH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 392  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_LOCALY));

	mov	ecx, 190				; 000000beH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 393  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_LOCALZ));

	mov	ecx, 191				; 000000bfH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 394  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_WORLDX));

	mov	ecx, 192				; 000000c0H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 395  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_WORLDY));

	mov	ecx, 193				; 000000c1H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 396  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_WORLDZ));

	mov	ecx, 194				; 000000c2H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 397  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_CAMERAX));

	mov	ecx, 195				; 000000c3H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 398  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_CAMERAY));

	mov	ecx, 196				; 000000c4H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 399  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_CAMERAZ));

	mov	ecx, 197				; 000000c5H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 400  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_TOOBJECT));

	mov	ecx, 198				; 000000c6H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 401  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_OBJECTZ));

	mov	ecx, 199				; 000000c7H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 402  : 
; 403  : 			hwndMap = GetDlgItem(hWnd, IDC_GRADIENT_NORMAL2);  

	mov	edx, 1060				; 00000424H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 404  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_PARALLEL));

	mov	ecx, 200				; 000000c8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 405  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_TOWARDS));

	mov	ecx, 201				; 000000c9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 406  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_NORMAL_FRESNEL));

	mov	ecx, 202				; 000000caH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 407  : 						
; 408  : 			hwndMap = GetDlgItem(hWnd, IDC_RANGELOOP);  

	mov	edx, 1077				; 00000435H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 409  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 410  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 411  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 412  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 413  : 
; 414  : 			// Set correct dropdown value
; 415  : 			int curIndex;
; 416  : 			map->GetParamBlock()->GetValue(pb_type, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv408[rsp], rax
	mov	rax, QWORD PTR tv408[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	mov	rcx, QWORD PTR tv408[rsp]
	call	QWORD PTR [rax+1704]

; 417  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$9[rsp]
	mov	QWORD PTR tv418[rsp], rax
	mov	edx, 1050				; 0000041aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv418[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 418  : 			map->GetParamBlock()->GetValue(pb_interpolation, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv429[rsp], rax
	mov	rax, QWORD PTR tv429[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 8
	mov	rcx, QWORD PTR tv429[rsp]
	call	QWORD PTR [rax+1704]

; 419  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_INT), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$9[rsp]
	mov	QWORD PTR tv439[rsp], rax
	mov	edx, 1054				; 0000041eH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv439[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 420  : 			map->GetParamBlock()->GetValue(pb_gradient_uvw, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv450[rsp], rax
	mov	rax, QWORD PTR tv450[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	mov	rcx, QWORD PTR tv450[rsp]
	call	QWORD PTR [rax+1704]

; 421  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_UVW), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$9[rsp]
	mov	QWORD PTR tv460[rsp], rax
	mov	edx, 1058				; 00000422H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv460[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 422  : 			map->GetParamBlock()->GetValue(pb_gradient_normal, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv471[rsp], rax
	mov	rax, QWORD PTR tv471[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	mov	rcx, QWORD PTR tv471[rsp]
	call	QWORD PTR [rax+1704]

; 423  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_NORMAL), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$9[rsp]
	mov	QWORD PTR tv481[rsp], rax
	mov	edx, 1059				; 00000423H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv481[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 424  : 			map->GetParamBlock()->GetValue(pb_gradient_normal2, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv492[rsp], rax
	mov	rax, QWORD PTR tv492[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rcx, QWORD PTR tv492[rsp]
	call	QWORD PTR [rax+1704]

; 425  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_NORMAL2), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$9[rsp]
	mov	QWORD PTR tv502[rsp], rax
	mov	edx, 1060				; 00000424H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv502[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 426  : 			map->GetParamBlock()->GetValue(pb_range_loop, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv513[rsp], rax
	mov	rax, QWORD PTR tv513[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	mov	rcx, QWORD PTR tv513[rsp]
	call	QWORD PTR [rax+1704]

; 427  : 			SendMessage(GetDlgItem(hWnd, IDC_RANGELOOP), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$9[rsp]
	mov	QWORD PTR tv523[rsp], rax
	mov	edx, 1077				; 00000435H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv523[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 428  : 			break;

	jmp	$LN2@DlgProc
$LN11@DlgProc:

; 429  : 		}		
; 430  : 		case WM_SHOWWINDOW:	{
; 431  : 			// Set correct dropdown value
; 432  : 			int curIndex;
; 433  : 			map->GetParamBlock()->GetValue(pb_type, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv534[rsp], rax
	mov	rax, QWORD PTR tv534[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$8[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	mov	rcx, QWORD PTR tv534[rsp]
	call	QWORD PTR [rax+1704]

; 434  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$8[rsp]
	mov	QWORD PTR tv544[rsp], rax
	mov	edx, 1050				; 0000041aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv544[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 435  : 			map->GetParamBlock()->GetValue(pb_interpolation, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv555[rsp], rax
	mov	rax, QWORD PTR tv555[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$8[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 8
	mov	rcx, QWORD PTR tv555[rsp]
	call	QWORD PTR [rax+1704]

; 436  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_INT), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$8[rsp]
	mov	QWORD PTR tv565[rsp], rax
	mov	edx, 1054				; 0000041eH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv565[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 437  : 			map->GetParamBlock()->GetValue(pb_gradient_uvw, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv576[rsp], rax
	mov	rax, QWORD PTR tv576[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$8[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	mov	rcx, QWORD PTR tv576[rsp]
	call	QWORD PTR [rax+1704]

; 438  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_UVW), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$8[rsp]
	mov	QWORD PTR tv586[rsp], rax
	mov	edx, 1058				; 00000422H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv586[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 439  : 			map->GetParamBlock()->GetValue(pb_gradient_normal, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv597[rsp], rax
	mov	rax, QWORD PTR tv597[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$8[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	mov	rcx, QWORD PTR tv597[rsp]
	call	QWORD PTR [rax+1704]

; 440  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_NORMAL), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$8[rsp]
	mov	QWORD PTR tv607[rsp], rax
	mov	edx, 1059				; 00000423H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv607[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 441  : 			map->GetParamBlock()->GetValue(pb_gradient_normal2, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv618[rsp], rax
	mov	rax, QWORD PTR tv618[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$8[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rcx, QWORD PTR tv618[rsp]
	call	QWORD PTR [rax+1704]

; 442  : 			SendMessage(GetDlgItem(hWnd, IDC_GRADIENT_NORMAL2), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$8[rsp]
	mov	QWORD PTR tv628[rsp], rax
	mov	edx, 1060				; 00000424H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv628[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 443  : 			map->GetParamBlock()->GetValue(pb_range_loop, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv639[rsp], rax
	mov	rax, QWORD PTR tv639[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$8[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	mov	rcx, QWORD PTR tv639[rsp]
	call	QWORD PTR [rax+1704]

; 444  : 			SendMessage(GetDlgItem(hWnd, IDC_RANGELOOP), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$8[rsp]
	mov	QWORD PTR tv649[rsp], rax
	mov	edx, 1077				; 00000435H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv649[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 445  : 			break;

	jmp	$LN2@DlgProc
$LN12@DlgProc:

; 446  : 		}
; 447  : 		case WM_DESTROY: {						
; 448  : 			// Delete gradient
; 449  : 			igrad->DeleteMe();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+16]
	call	?DeleteMe@IGradient@@QEAAXXZ		; IGradient::DeleteMe

; 450  : 			break;

	jmp	$LN2@DlgProc
$LN13@DlgProc:

; 451  : 		}
; 452  : 		case CC_COLOR_CHANGE: {
; 453  : 			switch (LOWORD(wParam)) {

	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR tv660[rsp], eax
	cmp	DWORD PTR tv660[rsp], 1045		; 00000415H
	je	SHORT $LN14@DlgProc
	jmp	SHORT $LN15@DlgProc
$LN14@DlgProc:

; 454  : 				case IDC_KEYCOL:					
; 455  : 					parentMap->keyColorChanged(((IColorSwatch*)lParam)->GetAColor());

	lea	rax, QWORD PTR $T7[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	rax, QWORD PTR lParam$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR lParam$[rsp]
	call	QWORD PTR [rax+144]
	mov	rdx, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z ; BerconGradient::keyColorChanged
$LN15@DlgProc:

; 456  : 				default:
; 457  : 					break;
; 458  : 			}
; 459  : 			break;

	jmp	$LN2@DlgProc
$LN16@DlgProc:

; 460  : 		}
; 461  : 		case WM_CUSTEDIT_ENTER: {
; 462  : 			// Unlike the other messages here lParam is the HWND of the custom edit and not a pointer to it
; 463  : 			ICustEdit* custEdit=GetICustEdit(reinterpret_cast<HWND>(lParam));

	mov	rcx, QWORD PTR lParam$[rsp]
	call	QWORD PTR __imp_?GetICustEdit@@YAPEAVICustEdit@@PEAUHWND__@@@Z
	mov	QWORD PTR custEdit$2[rsp], rax

; 464  : 			if (custEdit) {

	cmp	QWORD PTR custEdit$2[rsp], 0
	je	$LN17@DlgProc

; 465  : 				switch (LOWORD(wParam)) {

	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR tv679[rsp], eax
	cmp	DWORD PTR tv679[rsp], 1046		; 00000416H
	je	SHORT $LN19@DlgProc
	cmp	DWORD PTR tv679[rsp], 1048		; 00000418H
	je	SHORT $LN18@DlgProc
	jmp	SHORT $LN6@DlgProc
$LN18@DlgProc:

; 466  : 					case IDC_KEYNUM_EDIT:
; 467  : 						parentMap->keyNumChanged(custEdit->GetInt()); break;

	mov	rax, QWORD PTR custEdit$2[rsp]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	mov	rcx, QWORD PTR custEdit$2[rsp]
	call	QWORD PTR [rax+120]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?keyNumChanged@BerconGradient@@QEAAXH@Z	; BerconGradient::keyNumChanged
	jmp	SHORT $LN6@DlgProc
$LN19@DlgProc:

; 468  : 					case IDC_KEYPOS_EDIT:
; 469  : 						parentMap->keyPosChanged(custEdit->GetFloat()); break;

	mov	rax, QWORD PTR custEdit$2[rsp]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	mov	rcx, QWORD PTR custEdit$2[rsp]
	call	QWORD PTR [rax+128]
	movaps	xmm1, xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?keyPosChanged@BerconGradient@@QEAAXM@Z	; BerconGradient::keyPosChanged
$LN6@DlgProc:

; 470  : 					default: break;
; 471  : 				}
; 472  : 				ReleaseICustEdit(custEdit);

	mov	rcx, QWORD PTR custEdit$2[rsp]
	call	QWORD PTR __imp_?ReleaseICustEdit@@YAXPEAVICustEdit@@@Z
$LN17@DlgProc:

; 473  : 			}
; 474  : 			break;

	jmp	$LN2@DlgProc
$LN21@DlgProc:

; 475  : 		}
; 476  : 		case CC_SPINNER_CHANGE: {
; 477  : 			switch (LOWORD(wParam)) {

	mov	rax, QWORD PTR wParam$[rsp]
	and	rax, 65535				; 0000ffffH
	movzx	eax, ax
	mov	DWORD PTR tv702[rsp], eax
	cmp	DWORD PTR tv702[rsp], 1047		; 00000417H
	je	SHORT $LN23@DlgProc
	cmp	DWORD PTR tv702[rsp], 1049		; 00000419H
	je	SHORT $LN22@DlgProc
	jmp	SHORT $LN8@DlgProc
$LN22@DlgProc:

; 478  : 				case IDC_KEYNUM_SPIN:
; 479  : 					parentMap->keyNumChanged(((ISpinnerControl*)lParam)->GetIVal()); break;

	mov	rax, QWORD PTR lParam$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR lParam$[rsp]
	call	QWORD PTR [rax+80]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?keyNumChanged@BerconGradient@@QEAAXH@Z	; BerconGradient::keyNumChanged
	jmp	SHORT $LN8@DlgProc
$LN23@DlgProc:

; 480  : 				case IDC_KEYPOS_SPIN:
; 481  : 					parentMap->keyPosChanged(((ISpinnerControl*)lParam)->GetFVal()); break;

	mov	rax, QWORD PTR lParam$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR lParam$[rsp]
	call	QWORD PTR [rax+72]
	movaps	xmm1, xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?keyPosChanged@BerconGradient@@QEAAXM@Z	; BerconGradient::keyPosChanged
$LN8@DlgProc:

; 482  : 				default: break;
; 483  : 			}
; 484  : 			break;

	jmp	SHORT $LN2@DlgProc
$LN25@DlgProc:

; 485  : 		}
; 486  : 		default: return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@DlgProc
$LN2@DlgProc:

; 487  : 	}
; 488  : 	return TRUE;

	mov	eax, 1
$LN1@DlgProc:

; 489  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 376				; 00000178H
	ret	0
?DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconGradientDlgProc::DlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
hwndMap$1 = 48
tv64 = 56
custEdit$2 = 64
tv679 = 72
tv702 = 76
$T3 = 80
tv660 = 88
tv597 = 96
tv618 = 104
tv92 = 112
tv408 = 120
tv429 = 128
tv450 = 136
tv471 = 144
tv492 = 152
tv513 = 160
tv534 = 168
tv555 = 176
tv576 = 184
tv639 = 192
tv757 = 200
$T4 = 208
tv418 = 216
tv439 = 224
tv460 = 232
tv481 = 240
tv502 = 248
tv523 = 256
tv544 = 264
tv565 = 272
tv586 = 280
tv607 = 288
tv628 = 296
tv649 = 304
$T5 = 312
$T6 = 320
$T7 = 328
curIndex$8 = 344
curIndex$9 = 348
__$ArrayPad$ = 352
this$ = 384
t$ = 392
map$ = 400
hWnd$ = 408
msg$ = 416
wParam$ = 424
lParam$ = 432
?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA PROC ; `BerconGradientDlgProc::DlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA ENDP ; `BerconGradientDlgProc::DlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
hwndMap$1 = 48
tv64 = 56
custEdit$2 = 64
tv679 = 72
tv702 = 76
$T3 = 80
tv660 = 88
tv597 = 96
tv618 = 104
tv92 = 112
tv408 = 120
tv429 = 128
tv450 = 136
tv471 = 144
tv492 = 152
tv513 = 160
tv534 = 168
tv555 = 176
tv576 = 184
tv639 = 192
tv757 = 200
$T4 = 208
tv418 = 216
tv439 = 224
tv460 = 232
tv481 = 240
tv502 = 248
tv523 = 256
tv544 = 264
tv565 = 272
tv586 = 280
tv607 = 288
tv628 = 296
tv649 = 304
$T5 = 312
$T6 = 320
$T7 = 328
curIndex$8 = 344
curIndex$9 = 348
__$ArrayPad$ = 352
this$ = 384
t$ = 392
map$ = 400
hWnd$ = 408
msg$ = 416
wParam$ = 424
lParam$ = 432
?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA PROC ; `BerconGradientDlgProc::DlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??DlgProc@BerconGradientDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z@4HA ENDP ; `BerconGradientDlgProc::DlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z PROC ; BerconGradientDlgProc::BerconGradientDlgProc, COMDAT

; 331  : 		BerconGradientDlgProc(BerconGradient *m) {parentMap = m; igrad = NULL;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradientDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z ENDP ; BerconGradientDlgProc::BerconGradientDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA PROC ; `BerconGradientDlgProc::BerconGradientDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA ENDP ; `BerconGradientDlgProc::BerconGradientDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA PROC ; `BerconGradientDlgProc::BerconGradientDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z@4HA ENDP ; `BerconGradientDlgProc::BerconGradientDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z PROC	; BerconCurveDlgProcGRADIENT::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconCurveDlgProcGRADIENT@@UEAAPEAXI@Z ENDP	; BerconCurveDlgProcGRADIENT::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z PROC ; BerconCurveDlgProcGRADIENT::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z ENDP ; BerconCurveDlgProcGRADIENT::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconCurveDlgProcGRADIENT@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconCurveDlgProcGRADIENT@@UEAA@XZ PROC		; BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconCurveDlgProcGRADIENT@@UEAA@XZ ENDP		; BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA PROC ; `BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA ENDP ; `BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA PROC ; `BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconCurveDlgProcGRADIENT@@UEAA@XZ@4HA ENDP ; `BerconCurveDlgProcGRADIENT::~BerconCurveDlgProcGRADIENT'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 48
m$ = 56
?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconCurveDlgProcGRADIENT::SetThing, COMDAT

; 321  : 		void SetThing(ReferenceTarget *m) { 

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 322  : 			CurveCtrl::disable(parentMap->curve); // Disable previously used curve

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rax+568]
	call	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z ; CurveCtrl::disable

; 323  : 			parentMap = (BerconGradient*)m;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 324  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?SetThing@BerconCurveDlgProcGRADIENT@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconCurveDlgProcGRADIENT::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ PROC	; BerconCurveDlgProcGRADIENT::DeleteThis, COMDAT

; 320  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconCurveDlgProcGRADIENT@@UEAAXXZ ENDP	; BerconCurveDlgProcGRADIENT::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
tv91 = 32
tv73 = 40
this$ = 64
t$ = 72
map$ = 80
hWnd$ = 88
msg$ = 96
wParam$ = 104
lParam$ = 112
?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconCurveDlgProcGRADIENT::DlgProc, COMDAT

; 305  : 		INT_PTR DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam) {

$LN9:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 306  : 			if (parentMap->curve->GetHWND() != GetDlgItem(hWnd, IDC_CURVE))

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rax, QWORD PTR [rax+568]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rcx, QWORD PTR [rcx+568]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1360]
	mov	QWORD PTR tv73[rsp], rax
	mov	edx, 1008				; 000003f0H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR tv73[rsp]
	cmp	rcx, rax
	je	SHORT $LN4@DlgProc

; 307  : 				CurveCtrl::update(parentMap->curve, GetDlgItem(hWnd, IDC_CURVE), static_cast<ReferenceMaker*>(parentMap)); // Force update curve

	mov	edx, 1008				; 000003f0H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rdx+8]
	mov	rdx, rax
	mov	rcx, QWORD PTR [rcx+568]
	call	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z ; CurveCtrl::update
$LN4@DlgProc:

; 308  : 			switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv91[rsp], eax
	cmp	DWORD PTR tv91[rsp], 2
	je	SHORT $LN6@DlgProc
	cmp	DWORD PTR tv91[rsp], 24
	je	SHORT $LN5@DlgProc
	cmp	DWORD PTR tv91[rsp], 272		; 00000110H
	je	SHORT $LN5@DlgProc
	jmp	SHORT $LN7@DlgProc
$LN5@DlgProc:

; 309  : 				case WM_INITDIALOG:
; 310  : 				case WM_SHOWWINDOW:
; 311  : 					CurveCtrl::update(parentMap->curve, GetDlgItem(hWnd, IDC_CURVE), static_cast<ReferenceMaker*>(parentMap));					

	mov	edx, 1008				; 000003f0H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rdx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rdx+8]
	mov	rdx, rax
	mov	rcx, QWORD PTR [rcx+568]
	call	?update@CurveCtrl@@SAXPEAVICurveCtl@@PEAUHWND__@@PEAVReferenceMaker@@@Z ; CurveCtrl::update

; 312  : 					break;

	jmp	SHORT $LN2@DlgProc
$LN6@DlgProc:

; 313  : 				case WM_DESTROY:
; 314  : 					CurveCtrl::disable(parentMap->curve);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR [rax+568]
	call	?disable@CurveCtrl@@SAXPEAVICurveCtl@@@Z ; CurveCtrl::disable

; 315  : 					break;

	jmp	SHORT $LN2@DlgProc
$LN7@DlgProc:

; 316  : 				default: return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@DlgProc
$LN2@DlgProc:

; 317  : 			}
; 318  : 			return TRUE;

	mov	eax, 1
$LN1@DlgProc:

; 319  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?DlgProc@BerconCurveDlgProcGRADIENT@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconCurveDlgProcGRADIENT::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z PROC ; BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT, COMDAT

; 304  : 		BerconCurveDlgProcGRADIENT(BerconGradient *m) {parentMap = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconCurveDlgProcGRADIENT@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z ENDP ; BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA PROC ; `BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA ENDP ; `BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA PROC ; `BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z@4HA ENDP ; `BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconCurve_param_blk@@YAXXZ
text$yd	SEGMENT
??__FBerconCurve_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconCurve_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconCurve_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconCurve_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??__EBerconCurve_param_blk@@YAXXZ
text$di	SEGMENT
??__EBerconCurve_param_blk@@YAXXZ PROC			; `dynamic initializer for 'BerconCurve_param_blk'', COMDAT

; 299  : );	    

	sub	rsp, 264				; 00000108H

; 284  : static ParamBlockDesc2 BerconCurve_param_blk ( BerconCurve_params, _T("params"),  0, &BerconGradientDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	mov	DWORD PTR [rsp+248], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+240], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+232], 3
	mov	DWORD PTR [rsp+224], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+216], 51			; 00000033H
	mov	DWORD PTR [rsp+208], 512		; 00000200H
	mov	DWORD PTR [rsp+200], 18
	lea	rax, OFFSET FLAT:$SG212439
	mov	QWORD PTR [rsp+192], rax
	mov	DWORD PTR [rsp+184], 1
	mov	DWORD PTR [rsp+176], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+168], 1032		; 00000408H
	mov	DWORD PTR [rsp+160], 2
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+144], 0
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+128], 1067		; 0000042bH
	mov	QWORD PTR [rsp+120], 0
	mov	DWORD PTR [rsp+112], 4
	lea	rax, OFFSET FLAT:$SG212440
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	DWORD PTR [rsp+80], 1
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 67			; 00000043H
	mov	DWORD PTR [rsp+56], 104			; 00000068H
	mov	DWORD PTR [rsp+48], 4
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG212441
	mov	edx, 2
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__FBerconCurve_param_blk@@YAXXZ ; `dynamic atexit destructor for 'BerconCurve_param_blk''
	call	atexit
	add	rsp, 264				; 00000108H
	ret	0
??__EBerconCurve_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'BerconCurve_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Fgradientmap_param_blk@@YAXXZ
text$yd	SEGMENT
??__Fgradientmap_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'gradientmap_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fgradientmap_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'gradientmap_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??__Egradientmap_param_blk@@YAXXZ
text$di	SEGMENT
$T1 = 2864
$T2 = 2880
??__Egradientmap_param_blk@@YAXXZ PROC			; `dynamic initializer for 'gradientmap_param_blk'', COMDAT

; 282  : );

	push	rsi
	push	rdi
	sub	rsp, 2904				; 00000b58H

; 116  : static ParamBlockDesc2 gradientmap_param_blk ( gradientmap_params, _T("params"),  0, &BerconGradientDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T2[rsp]
	call	??0Color@@QEAA@NNN@Z			; Color::Color
	lea	rcx, QWORD PTR $T1[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	DWORD PTR [rsp+2856], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2848], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2840], 2
	mov	DWORD PTR [rsp+2832], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2824], 8
	mov	DWORD PTR [rsp+2816], 512		; 00000200H
	mov	DWORD PTR [rsp+2808], 18
	lea	rax, OFFSET FLAT:$SG212401
	mov	QWORD PTR [rsp+2800], rax
	mov	DWORD PTR [rsp+2792], 27
	mov	DWORD PTR [rsp+2784], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2776], 1063		; 00000427H
	mov	DWORD PTR [rsp+2768], 2
	mov	DWORD PTR [rsp+2760], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2752], 0
	mov	DWORD PTR [rsp+2744], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2736], 211		; 000000d3H
	mov	DWORD PTR [rsp+2728], 1
	mov	DWORD PTR [rsp+2720], 4
	lea	rax, OFFSET FLAT:$SG212402
	mov	QWORD PTR [rsp+2712], rax
	mov	DWORD PTR [rsp+2704], 26
	mov	DWORD PTR [rsp+2696], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2688], xmm0
	mov	DWORD PTR [rsp+2680], 1062		; 00000426H
	mov	DWORD PTR [rsp+2672], 1020		; 000003fcH
	mov	DWORD PTR [rsp+2664], 1
	mov	QWORD PTR [rsp+2656], 0
	mov	DWORD PTR [rsp+2648], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2640], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2632], xmm0
	mov	DWORD PTR [rsp+2624], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2616], xmm0
	mov	DWORD PTR [rsp+2608], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2600], 12
	mov	DWORD PTR [rsp+2592], 1
	mov	QWORD PTR [rsp+2584], 0
	lea	rax, OFFSET FLAT:$SG212403
	mov	QWORD PTR [rsp+2576], rax
	mov	DWORD PTR [rsp+2568], 25
	mov	DWORD PTR [rsp+2560], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2552], 1061		; 00000425H
	mov	DWORD PTR [rsp+2544], 8
	mov	DWORD PTR [rsp+2536], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2528], 2
	mov	DWORD PTR [rsp+2520], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+2512], 7
	mov	DWORD PTR [rsp+2504], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+2496], 13
	mov	DWORD PTR [rsp+2488], 512		; 00000200H
	mov	DWORD PTR [rsp+2480], 15
	lea	rax, OFFSET FLAT:$SG212404
	mov	QWORD PTR [rsp+2472], rax
	mov	DWORD PTR [rsp+2464], 24
	mov	DWORD PTR [rsp+2456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2448], xmm0
	mov	DWORD PTR [rsp+2440], 1055		; 0000041fH
	mov	DWORD PTR [rsp+2432], 1019		; 000003fbH
	mov	DWORD PTR [rsp+2424], 1
	mov	QWORD PTR [rsp+2416], 0
	mov	DWORD PTR [rsp+2408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2400], xmm0
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+2392], xmm0
	mov	DWORD PTR [rsp+2384], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff99999a0000000
	movsd	QWORD PTR [rsp+2376], xmm0
	mov	DWORD PTR [rsp+2368], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2360], 210		; 000000d2H
	mov	DWORD PTR [rsp+2352], 1
	mov	QWORD PTR [rsp+2344], 0
	lea	rax, OFFSET FLAT:$SG212405
	mov	QWORD PTR [rsp+2336], rax
	mov	DWORD PTR [rsp+2328], 21
	mov	DWORD PTR [rsp+2320], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2312], 0
	mov	DWORD PTR [rsp+2304], 1060		; 00000424H
	mov	DWORD PTR [rsp+2296], 13
	mov	DWORD PTR [rsp+2288], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2280], 0
	mov	DWORD PTR [rsp+2272], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2264], 209		; 000000d1H
	mov	DWORD PTR [rsp+2256], 1
	mov	DWORD PTR [rsp+2248], 1
	lea	rax, OFFSET FLAT:$SG212406
	mov	QWORD PTR [rsp+2240], rax
	mov	DWORD PTR [rsp+2232], 20
	mov	DWORD PTR [rsp+2224], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2216], 0
	mov	DWORD PTR [rsp+2208], 1059		; 00000423H
	mov	DWORD PTR [rsp+2200], 13
	mov	DWORD PTR [rsp+2192], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2184], 0
	mov	DWORD PTR [rsp+2176], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2168], 208		; 000000d0H
	mov	DWORD PTR [rsp+2160], 1
	mov	DWORD PTR [rsp+2152], 1
	lea	rax, OFFSET FLAT:$SG212407
	mov	QWORD PTR [rsp+2144], rax
	mov	DWORD PTR [rsp+2136], 19
	mov	DWORD PTR [rsp+2128], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2120], 0
	mov	DWORD PTR [rsp+2112], 1058		; 00000422H
	mov	DWORD PTR [rsp+2104], 13
	mov	DWORD PTR [rsp+2096], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2088], 0
	mov	DWORD PTR [rsp+2080], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2072], 207		; 000000cfH
	mov	DWORD PTR [rsp+2064], 1
	mov	DWORD PTR [rsp+2056], 1
	lea	rax, OFFSET FLAT:$SG212408
	mov	QWORD PTR [rsp+2048], rax
	mov	DWORD PTR [rsp+2040], 18
	mov	DWORD PTR [rsp+2032], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2024], 0
	mov	DWORD PTR [rsp+2016], 1077		; 00000435H
	mov	DWORD PTR [rsp+2008], 13
	mov	DWORD PTR [rsp+2000], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+1992], 0
	mov	DWORD PTR [rsp+1984], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1976], 206		; 000000ceH
	mov	DWORD PTR [rsp+1968], 1
	mov	DWORD PTR [rsp+1960], 1
	lea	rax, OFFSET FLAT:$SG212409
	mov	QWORD PTR [rsp+1952], rax
	mov	DWORD PTR [rsp+1944], 17
	mov	DWORD PTR [rsp+1936], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1928], xmm0
	mov	DWORD PTR [rsp+1920], 1053		; 0000041dH
	mov	DWORD PTR [rsp+1912], 1018		; 000003faH
	mov	DWORD PTR [rsp+1904], 1
	mov	QWORD PTR [rsp+1896], 0
	mov	DWORD PTR [rsp+1888], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1880], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1872], xmm0
	mov	DWORD PTR [rsp+1864], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+1856], xmm0
	mov	DWORD PTR [rsp+1848], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1840], 168		; 000000a8H
	mov	DWORD PTR [rsp+1832], 1
	mov	QWORD PTR [rsp+1824], 0
	lea	rax, OFFSET FLAT:$SG212410
	mov	QWORD PTR [rsp+1816], rax
	mov	DWORD PTR [rsp+1808], 16
	mov	DWORD PTR [rsp+1800], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1792], xmm0
	mov	DWORD PTR [rsp+1784], 1052		; 0000041cH
	mov	DWORD PTR [rsp+1776], 1016		; 000003f8H
	mov	DWORD PTR [rsp+1768], 1
	mov	QWORD PTR [rsp+1760], 0
	mov	DWORD PTR [rsp+1752], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1744], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1736], xmm0
	mov	DWORD PTR [rsp+1728], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1720], xmm0
	mov	DWORD PTR [rsp+1712], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1704], 167		; 000000a7H
	mov	DWORD PTR [rsp+1696], 1
	mov	QWORD PTR [rsp+1688], 0
	lea	rax, OFFSET FLAT:$SG212411
	mov	QWORD PTR [rsp+1680], rax
	mov	DWORD PTR [rsp+1672], 15
	mov	DWORD PTR [rsp+1664], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1656], 1035		; 0000040bH
	mov	DWORD PTR [rsp+1648], 2
	mov	DWORD PTR [rsp+1640], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1632], 1
	mov	DWORD PTR [rsp+1624], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1616], 166		; 000000a6H
	mov	DWORD PTR [rsp+1608], 1
	mov	DWORD PTR [rsp+1600], 4
	lea	rax, OFFSET FLAT:$SG212412
	mov	QWORD PTR [rsp+1592], rax
	mov	DWORD PTR [rsp+1584], 14
	mov	DWORD PTR [rsp+1576], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1568], 1034		; 0000040aH
	mov	DWORD PTR [rsp+1560], 2
	mov	DWORD PTR [rsp+1552], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1544], 1
	mov	DWORD PTR [rsp+1536], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1528], 166		; 000000a6H
	mov	DWORD PTR [rsp+1520], 1
	mov	DWORD PTR [rsp+1512], 4
	lea	rax, OFFSET FLAT:$SG212413
	mov	QWORD PTR [rsp+1504], rax
	mov	DWORD PTR [rsp+1496], 13
	mov	DWORD PTR [rsp+1488], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1480], 1033		; 00000409H
	mov	DWORD PTR [rsp+1472], 2
	mov	DWORD PTR [rsp+1464], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1456], 1
	mov	DWORD PTR [rsp+1448], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1440], 165		; 000000a5H
	mov	DWORD PTR [rsp+1432], 1
	mov	DWORD PTR [rsp+1424], 4
	lea	rax, OFFSET FLAT:$SG212414
	mov	QWORD PTR [rsp+1416], rax
	mov	DWORD PTR [rsp+1408], 12
	mov	DWORD PTR [rsp+1400], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1392], 1051		; 0000041bH
	mov	DWORD PTR [rsp+1384], 2
	mov	DWORD PTR [rsp+1376], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1368], 1
	mov	DWORD PTR [rsp+1360], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1352], 164		; 000000a4H
	mov	DWORD PTR [rsp+1344], 1
	mov	DWORD PTR [rsp+1336], 4
	lea	rax, OFFSET FLAT:$SG212415
	mov	QWORD PTR [rsp+1328], rax
	mov	DWORD PTR [rsp+1320], 11
	mov	DWORD PTR [rsp+1312], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1304], xmm0
	mov	DWORD PTR [rsp+1296], 1017		; 000003f9H
	mov	DWORD PTR [rsp+1288], 1015		; 000003f7H
	mov	QWORD PTR [rsp+1280], 0
	mov	QWORD PTR [rsp+1272], 0
	mov	DWORD PTR [rsp+1264], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1256], 99999		; 0001869fH
	mov	DWORD PTR [rsp+1248], 1
	mov	DWORD PTR [rsp+1240], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+1232], 12345		; 00003039H
	mov	DWORD PTR [rsp+1224], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1216], 50		; 00000032H
	mov	DWORD PTR [rsp+1208], 1
	mov	DWORD PTR [rsp+1200], 1
	lea	rax, OFFSET FLAT:$SG212416
	mov	QWORD PTR [rsp+1192], rax
	mov	DWORD PTR [rsp+1184], 10
	mov	DWORD PTR [rsp+1176], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1168], 1076		; 00000434H
	mov	DWORD PTR [rsp+1160], 2
	mov	DWORD PTR [rsp+1152], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+1144], 0
	mov	DWORD PTR [rsp+1136], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1128], 205		; 000000cdH
	mov	DWORD PTR [rsp+1120], 1
	mov	DWORD PTR [rsp+1112], 4
	lea	rax, OFFSET FLAT:$SG212417
	mov	QWORD PTR [rsp+1104], rax
	mov	DWORD PTR [rsp+1096], 9
	mov	DWORD PTR [rsp+1088], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1080], 0
	mov	DWORD PTR [rsp+1072], 1054		; 0000041eH
	mov	DWORD PTR [rsp+1064], 13
	mov	DWORD PTR [rsp+1056], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+1048], 0
	mov	DWORD PTR [rsp+1040], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1032], 163		; 000000a3H
	mov	DWORD PTR [rsp+1024], 1
	mov	DWORD PTR [rsp+1016], 1
	lea	rax, OFFSET FLAT:$SG212418
	mov	QWORD PTR [rsp+1008], rax
	mov	DWORD PTR [rsp+1000], 8
	mov	DWORD PTR [rsp+992], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+984], 0
	mov	DWORD PTR [rsp+976], 1050		; 0000041aH
	mov	DWORD PTR [rsp+968], 13
	mov	DWORD PTR [rsp+960], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+952], 0
	mov	DWORD PTR [rsp+944], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+936], 162		; 000000a2H
	mov	DWORD PTR [rsp+928], 1
	mov	DWORD PTR [rsp+920], 1
	lea	rax, OFFSET FLAT:$SG212419
	mov	QWORD PTR [rsp+912], rax
	mov	DWORD PTR [rsp+904], 7
	mov	DWORD PTR [rsp+896], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+888], 1045		; 00000415H
	mov	DWORD PTR [rsp+880], 4
	mov	DWORD PTR [rsp+872], -1073741821	; ffffffffc0000003H
	lea	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+864], rax
	mov	DWORD PTR [rsp+856], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+848], 161		; 000000a1H
	mov	DWORD PTR [rsp+840], 2
	mov	DWORD PTR [rsp+832], 2
	lea	rax, OFFSET FLAT:$SG212420
	mov	QWORD PTR [rsp+824], rax
	mov	DWORD PTR [rsp+816], 4
	mov	DWORD PTR [rsp+808], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+800], xmm0
	mov	DWORD PTR [rsp+792], 1047		; 00000417H
	mov	DWORD PTR [rsp+784], 1046		; 00000416H
	mov	DWORD PTR [rsp+776], 1
	mov	QWORD PTR [rsp+768], 0
	mov	DWORD PTR [rsp+760], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+752], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+744], xmm0
	mov	DWORD PTR [rsp+736], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+728], xmm0
	mov	DWORD PTR [rsp+720], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+712], 160		; 000000a0H
	mov	DWORD PTR [rsp+704], 2
	mov	QWORD PTR [rsp+696], 0
	lea	rax, OFFSET FLAT:$SG212421
	mov	QWORD PTR [rsp+688], rax
	mov	DWORD PTR [rsp+680], 5
	mov	DWORD PTR [rsp+672], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+664], xmm0
	mov	DWORD PTR [rsp+656], 1049		; 00000419H
	mov	DWORD PTR [rsp+648], 1048		; 00000418H
	mov	QWORD PTR [rsp+640], 0
	mov	QWORD PTR [rsp+632], 0
	mov	DWORD PTR [rsp+624], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+616], 100000		; 000186a0H
	mov	QWORD PTR [rsp+608], 0
	mov	DWORD PTR [rsp+600], -1073741822	; ffffffffc0000002H
	mov	QWORD PTR [rsp+592], 0
	mov	DWORD PTR [rsp+584], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+576], 159		; 0000009fH
	mov	DWORD PTR [rsp+568], 2
	mov	DWORD PTR [rsp+560], 1
	lea	rax, OFFSET FLAT:$SG212422
	mov	QWORD PTR [rsp+552], rax
	mov	DWORD PTR [rsp+544], 6
	mov	DWORD PTR [rsp+536], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+528], 1044		; 00000414H
	mov	DWORD PTR [rsp+520], 8
	mov	DWORD PTR [rsp+512], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+504], 1
	mov	DWORD PTR [rsp+496], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+488], 6
	mov	DWORD PTR [rsp+480], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+472], 158		; 0000009eH
	mov	DWORD PTR [rsp+464], 530		; 00000212H
	mov	DWORD PTR [rsp+456], 15
	lea	rax, OFFSET FLAT:$SG212423
	mov	QWORD PTR [rsp+448], rax
	mov	DWORD PTR [rsp+440], 3
	mov	DWORD PTR [rsp+432], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+424], 157		; 0000009dH
	mov	DWORD PTR [rsp+416], 4097		; 00001001H
	mov	QWORD PTR [rsp+408], 0
	mov	DWORD PTR [rsp+400], 2048		; 00000800H
	lea	rax, OFFSET FLAT:$SG212424
	mov	QWORD PTR [rsp+392], rax
	mov	DWORD PTR [rsp+384], 2
	mov	DWORD PTR [rsp+376], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+368], 156		; 0000009cH
	mov	DWORD PTR [rsp+360], 4097		; 00001001H
	mov	QWORD PTR [rsp+352], 0
	mov	DWORD PTR [rsp+344], 2071		; 00000817H
	lea	rax, OFFSET FLAT:$SG212425
	mov	QWORD PTR [rsp+336], rax
	mov	DWORD PTR [rsp+328], 1
	mov	DWORD PTR [rsp+320], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+312], 146		; 00000092H
	mov	DWORD PTR [rsp+304], 4160		; 00001040H
	mov	QWORD PTR [rsp+296], 0
	mov	DWORD PTR [rsp+288], 2063		; 0000080fH
	lea	rax, OFFSET FLAT:$SG212426
	mov	QWORD PTR [rsp+280], rax
	mov	QWORD PTR [rsp+272], 0
	mov	DWORD PTR [rsp+264], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+256], 1057		; 00000421H
	mov	DWORD PTR [rsp+248], 7
	mov	DWORD PTR [rsp+240], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+232], 204		; 000000ccH
	mov	QWORD PTR [rsp+224], 0
	mov	DWORD PTR [rsp+216], 17
	lea	rax, OFFSET FLAT:$SG212427
	mov	QWORD PTR [rsp+208], rax
	mov	DWORD PTR [rsp+200], 22
	mov	DWORD PTR [rsp+192], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+184], 1056		; 00000420H
	mov	DWORD PTR [rsp+176], 8
	mov	DWORD PTR [rsp+168], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+160], 0
	mov	DWORD PTR [rsp+152], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+144], 5
	mov	DWORD PTR [rsp+136], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+128], 203		; 000000cbH
	mov	DWORD PTR [rsp+120], 512		; 00000200H
	mov	DWORD PTR [rsp+112], 15
	lea	rax, OFFSET FLAT:$SG212428
	mov	QWORD PTR [rsp+104], rax
	mov	DWORD PTR [rsp+96], 23
	mov	QWORD PTR [rsp+88], 0
	mov	QWORD PTR [rsp+80], 0
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 4
	mov	DWORD PTR [rsp+56], 109			; 0000006dH
	mov	DWORD PTR [rsp+48], 1
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG212429
	mov	edx, 1
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__Fgradientmap_param_blk@@YAXXZ ; `dynamic atexit destructor for 'gradientmap_param_blk''
	call	atexit
	add	rsp, 2904				; 00000b58H
	pop	rdi
	pop	rsi
	ret	0
??__Egradientmap_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'gradientmap_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Fxyz_blk@@YAXXZ
text$yd	SEGMENT
??__Fxyz_blk@@YAXXZ PROC				; `dynamic atexit destructor for 'xyz_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	??1XYZ_Desc@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fxyz_blk@@YAXXZ ENDP				; `dynamic atexit destructor for 'xyz_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??__Exyz_blk@@YAXXZ
text$di	SEGMENT
??__Exyz_blk@@YAXXZ PROC				; `dynamic initializer for 'xyz_blk'', COMDAT

; 48   : static XYZ_Desc xyz_blk(&BerconGradientDesc, COORD_REF, xyz_params, 0, 1, 1, 1);

	sub	rsp, 88					; 00000058H
	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
	mov	DWORD PTR [rsp+64], 1
	mov	DWORD PTR [rsp+56], 1
	mov	DWORD PTR [rsp+48], 1
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z ; XYZ_Desc::XYZ_Desc
	lea	rcx, OFFSET FLAT:??__Fxyz_blk@@YAXXZ	; `dynamic atexit destructor for 'xyz_blk''
	call	atexit
	add	rsp, 88					; 00000058H
	ret	0
??__Exyz_blk@@YAXXZ ENDP				; `dynamic initializer for 'xyz_blk''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?GetBerconGradientDesc@@YAPEAVClassDesc2@@XZ
_TEXT	SEGMENT
?GetBerconGradientDesc@@YAPEAVClassDesc2@@XZ PROC	; GetBerconGradientDesc, COMDAT

; 40   : ClassDesc2* GetBerconGradientDesc() { return &BerconGradientDesc; }

	lea	rax, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	ret	0
?GetBerconGradientDesc@@YAPEAVClassDesc2@@XZ ENDP	; GetBerconGradientDesc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconGradientDesc@@YAXXZ
text$yd	SEGMENT
??__FBerconGradientDesc@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconGradientDesc'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	call	??1BerconGradientClassDesc@@UEAA@XZ	; BerconGradientClassDesc::~BerconGradientClassDesc
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconGradientDesc@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconGradientDesc''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??__EBerconGradientDesc@@YAXXZ
text$di	SEGMENT
??__EBerconGradientDesc@@YAXXZ PROC			; `dynamic initializer for 'BerconGradientDesc'', COMDAT

; 39   : static BerconGradientClassDesc BerconGradientDesc;

	sub	rsp, 40					; 00000028H
	mov	edx, 56					; 00000038H
	lea	rcx, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	call	?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z
	lea	rcx, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	call	??0BerconGradientClassDesc@@QEAA@XZ	; BerconGradientClassDesc::BerconGradientClassDesc
	lea	rcx, OFFSET FLAT:??__FBerconGradientDesc@@YAXXZ ; `dynamic atexit destructor for 'BerconGradientDesc''
	call	atexit
	add	rsp, 40					; 00000028H
	ret	0
??__EBerconGradientDesc@@YAXXZ ENDP			; `dynamic initializer for 'BerconGradientDesc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconGradientClassDesc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconGradientClassDesc@@UEAAPEAXI@Z PROC		; BerconGradientClassDesc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconGradientClassDesc@@UEAA@XZ	; BerconGradientClassDesc::~BerconGradientClassDesc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 56					; 00000038H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconGradientClassDesc@@UEAAPEAXI@Z ENDP		; BerconGradientClassDesc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z PROC ; BerconGradientClassDesc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconGradientClassDesc@@QEAAX_K@Z ENDP ; BerconGradientClassDesc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?HInstance@BerconGradientClassDesc@@UEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 8
?HInstance@BerconGradientClassDesc@@UEAAPEAUHINSTANCE__@@XZ PROC ; BerconGradientClassDesc::HInstance, COMDAT

; 194  : 	virtual HINSTANCE HInstance() 					{ return hInstance; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR ?hInstance@@3PEAUHINSTANCE__@@EA ; hInstance
	ret	0
?HInstance@BerconGradientClassDesc@@UEAAPEAUHINSTANCE__@@XZ ENDP ; BerconGradientClassDesc::HInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?InternalName@BerconGradientClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?InternalName@BerconGradientClassDesc@@UEAAPEB_WXZ PROC	; BerconGradientClassDesc::InternalName, COMDAT

; 193  : 	virtual const TCHAR* InternalName() 			{ return _T("BerconGradient"); } // scripter-visible name

	mov	QWORD PTR [rsp+8], rcx
	lea	rax, OFFSET FLAT:??_C@_1BO@EFFEGJBE@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAG?$AAr?$AAa?$AAd?$AAi?$AAe?$AAn?$AAt?$AA?$AA@
	ret	0
?InternalName@BerconGradientClassDesc@@UEAAPEB_WXZ ENDP	; BerconGradientClassDesc::InternalName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?Category@BerconGradientClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?Category@BerconGradientClassDesc@@UEAAPEB_WXZ PROC	; BerconGradientClassDesc::Category, COMDAT

; 192  : 	virtual const TCHAR* Category() 				{ return TEXMAP_CAT_3D; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR __imp_?TEXMAP_CAT_3D@@3PA_WA
	ret	0
?Category@BerconGradientClassDesc@@UEAAPEB_WXZ ENDP	; BerconGradientClassDesc::Category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ PROC ; BerconGradientClassDesc::ClassID, COMDAT

; 191  : 	virtual Class_ID ClassID() 						{ return BerconGradient_CLASS_ID; }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 1355780343				; 50cf90f7H
	mov	edx, 856603678				; 330ebc1eH
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconGradientClassDesc@@UEAA?AVClass_ID@@XZ ENDP ; BerconGradientClassDesc::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?SuperClassID@BerconGradientClassDesc@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?SuperClassID@BerconGradientClassDesc@@UEAAKXZ PROC	; BerconGradientClassDesc::SuperClassID, COMDAT

; 190  : 	virtual SClass_ID SuperClassID() 				{ return TEXMAP_CLASS_ID; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3088				; 00000c10H
	ret	0
?SuperClassID@BerconGradientClassDesc@@UEAAKXZ ENDP	; BerconGradientClassDesc::SuperClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ PROC	; BerconGradientClassDesc::ClassName, COMDAT

; 189  : 	virtual const TCHAR *	ClassName() 			{ return GetString(IDS_BERCON_COLOR); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	ecx, 145				; 00000091H
	call	?GetString@@YAPEA_WH@Z			; GetString
	add	rsp, 40					; 00000028H
	ret	0
?ClassName@BerconGradientClassDesc@@UEAAPEB_WXZ ENDP	; BerconGradientClassDesc::ClassName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?Create@BerconGradientClassDesc@@UEAAPEAXH@Z
_TEXT	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?Create@BerconGradientClassDesc@@UEAAPEAXH@Z PROC	; BerconGradientClassDesc::Create, COMDAT

; 188  : 	virtual void* Create(BOOL /*loading = FALSE*/) 	{ return new BerconGradient(); }

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T3[rsp], -2
	mov	ecx, 600				; 00000258H
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@Create
	mov	edx, 600				; 00000258H
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@BerconGradient@@QEAAX_K@Z
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0BerconGradient@@QEAA@XZ		; BerconGradient::BerconGradient
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN4@Create
$LN3@Create:
	mov	QWORD PTR tv76[rsp], 0
$LN4@Create:
	mov	rax, QWORD PTR tv76[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	add	rsp, 72					; 00000048H
	ret	0
?Create@BerconGradientClassDesc@@UEAAPEAXH@Z ENDP	; BerconGradientClassDesc::Create
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA PROC ; `BerconGradientClassDesc::Create'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA ENDP ; `BerconGradientClassDesc::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA PROC ; `BerconGradientClassDesc::Create'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Create@BerconGradientClassDesc@@UEAAPEAXH@Z@4HA ENDP ; `BerconGradientClassDesc::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?IsPublic@BerconGradientClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsPublic@BerconGradientClassDesc@@UEAAHXZ PROC		; BerconGradientClassDesc::IsPublic, COMDAT

; 187  : 	virtual int IsPublic() 							{ return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsPublic@BerconGradientClassDesc@@UEAAHXZ ENDP		; BerconGradientClassDesc::IsPublic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ??1BerconGradientClassDesc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconGradientClassDesc@@UEAA@XZ PROC		; BerconGradientClassDesc::~BerconGradientClassDesc, COMDAT

; 186  : 	virtual ~BerconGradientClassDesc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradientClassDesc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconGradientClassDesc@@UEAA@XZ ENDP		; BerconGradientClassDesc::~BerconGradientClassDesc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA PROC	; `BerconGradientClassDesc::~BerconGradientClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA ENDP	; `BerconGradientClassDesc::~BerconGradientClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA PROC	; `BerconGradientClassDesc::~BerconGradientClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconGradientClassDesc@@UEAA@XZ@4HA ENDP	; `BerconGradientClassDesc::~BerconGradientClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ??0BerconGradientClassDesc@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0BerconGradientClassDesc@@QEAA@XZ PROC		; BerconGradientClassDesc::BerconGradientClassDesc, COMDAT

; 185  : 	BerconGradientClassDesc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0ClassDesc2@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradientClassDesc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconGradientClassDesc@@QEAA@XZ ENDP		; BerconGradientClassDesc::BerconGradientClassDesc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA PROC	; `BerconGradientClassDesc::BerconGradientClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA ENDP	; `BerconGradientClassDesc::BerconGradientClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA PROC	; `BerconGradientClassDesc::BerconGradientClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconGradientClassDesc@@QEAA@XZ@4HA ENDP	; `BerconGradientClassDesc::BerconGradientClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconGradient@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconGradient@@UEAAPEAXI@Z PROC			; BerconGradient::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconGradient@@UEAA@XZ		; BerconGradient::~BerconGradient
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 600				; 00000258H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconGradient@@UEAAPEAXI@Z ENDP			; BerconGradient::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconGradient@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconGradient@@QEAAX_K@Z PROC	; BerconGradient::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconGradient@@QEAAX_K@Z ENDP	; BerconGradient::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?GetInterface@BerconGradient@@UEAAPEAXK@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
id$ = 72
?GetInterface@BerconGradient@@UEAAPEAXK@Z PROC		; BerconGradient::GetInterface, COMDAT

; 175  : 		void* GetInterface(ULONG id) {

$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 176  : 			if(id == I_RESMAKER_INTERFACE)

	cmp	DWORD PTR id$[rsp], 611595082		; 2474334aH
	jne	SHORT $LN2@GetInterfa

; 177  : 				return (void *) (ResourceMakerCallback*) this;

	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN5@GetInterfa
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 144				; 00000090H
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN6@GetInterfa
$LN5@GetInterfa:
	mov	QWORD PTR tv69[rsp], 0
$LN6@GetInterfa:
	mov	rax, QWORD PTR tv69[rsp]
	jmp	SHORT $LN1@GetInterfa

; 178  : 			else

	jmp	SHORT $LN3@GetInterfa
$LN2@GetInterfa:

; 179  : 				return Texmap::GetInterface(id);

	mov	edx, DWORD PTR id$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?GetInterface@MtlBase@@UEAAPEAXK@Z
$LN3@GetInterfa:
$LN1@GetInterfa:

; 180  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?GetInterface@BerconGradient@@UEAAPEAXK@Z ENDP		; BerconGradient::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??1BerconGradient@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv128 = 48
$T3 = 56
this$ = 80
??1BerconGradient@@UEAA@XZ PROC				; BerconGradient::~BerconGradient, COMDAT

; 510  : BerconGradient::~BerconGradient() {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T3[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BReferenceTarget@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BISubMap@@@
	mov	QWORD PTR [rax+64], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BGradientMap@@@
	mov	QWORD PTR [rax+136], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BResourceMakerCallback@@@
	mov	QWORD PTR [rax+144], rcx

; 511  : 	if (gradient) delete gradient;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+456], 0
	je	SHORT $LN2@BerconGrad
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN4@BerconGrad
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	??_GGradientRamp@@QEAAPEAXI@Z
	npad	1
	mov	QWORD PTR tv128[rsp], rax
	jmp	SHORT $LN2@BerconGrad
$LN4@BerconGrad:
	mov	QWORD PTR tv128[rsp], 0
$LN2@BerconGrad:

; 512  : 	DiscardTexHandle();

	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconGradient@@QEAAXXZ ; BerconGradient::DiscardTexHandle
	npad	1

; 513  : }

	mov	rcx, QWORD PTR this$[rsp]
	call	??1Texmap@@UEAA@XZ
	npad	1
	add	rsp, 72					; 00000048H
	ret	0
??1BerconGradient@@UEAA@XZ ENDP				; BerconGradient::~BerconGradient
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv128 = 48
$T3 = 56
this$ = 80
?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA PROC		; `BerconGradient::~BerconGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA ENDP		; `BerconGradient::~BerconGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv128 = 48
$T3 = 56
this$ = 80
?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA PROC		; `BerconGradient::~BerconGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconGradient@@UEAA@XZ@4HA ENDP		; `BerconGradient::~BerconGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ??0BerconGradient@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
tv173 = 40
tv176 = 48
$T2 = 56
$T3 = 64
this$ = 96
??0BerconGradient@@QEAA@XZ PROC				; BerconGradient::BerconGradient, COMDAT

; 491  : BerconGradient::BerconGradient() {

$LN9:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	mov	QWORD PTR $T3[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0Texmap@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	rcx, rax
	call	??0GradientMap@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 144				; 00000090H
	mov	rcx, rax
	call	??0ResourceMakerCallback@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BReferenceTarget@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BISubMap@@@
	mov	QWORD PTR [rax+64], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BGradientMap@@@
	mov	QWORD PTR [rax+136], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconGradient@@6BResourceMakerCallback@@@
	mov	QWORD PTR [rax+144], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 176				; 000000b0H
	mov	rcx, rax
	call	??0BerconXYZ@@QEAA@XZ			; BerconXYZ::BerconXYZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 592				; 00000250H
	mov	rcx, rax
	call	??0Interval@@QEAA@XZ			; Interval::Interval

; 492  : 	texHandle = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+584], 0

; 493  : 	previewMatIDMode = TRUE;	

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+540], 1

; 494  : 	pblock = NULL;	

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+152], 0

; 495  : 	pbXYZ = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+168], 0

; 496  : 	//xyzGen = NULL;
; 497  : 	texout = NULL;	

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+440], 0

; 498  : 	pbCurve = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+160], 0

; 499  : 	curve = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+568], 0

; 500  : 	p_maptex = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+544], 0

; 501  : 	p_distex = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+552], 0

; 502  : 	p_node = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+560], 0

; 503  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 504  : 	gradient = new GradientRamp(this);	

	mov	ecx, 72					; 00000048H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN5@BerconGrad
	mov	edx, 72					; 00000048H
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@GradientRamp@@QEAAX_K@Z
	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN3@BerconGrad
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 136				; 00000088H
	mov	QWORD PTR tv173[rsp], rax
	jmp	SHORT $LN4@BerconGrad
$LN3@BerconGrad:
	mov	QWORD PTR tv173[rsp], 0
$LN4@BerconGrad:
	mov	rdx, QWORD PTR tv173[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0GradientRamp@@QEAA@PEAVGradientMap@@@Z ; GradientRamp::GradientRamp
	mov	QWORD PTR tv176[rsp], rax
	jmp	SHORT $LN6@BerconGrad
$LN5@BerconGrad:
	mov	QWORD PTR tv176[rsp], 0
$LN6@BerconGrad:
	mov	rax, QWORD PTR tv176[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rax+456], rcx

; 505  : 	BerconGradientDesc.MakeAutoParamBlocks(this);

	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	call	QWORD PTR __imp_?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z

; 506  : 	berconXYZ.mode2D = TRUE;

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+436], 1

; 507  : 	Reset();	

	mov	rcx, QWORD PTR this$[rsp]
	call	?Reset@BerconGradient@@UEAAXXZ		; BerconGradient::Reset
	npad	1

; 508  : }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 88					; 00000058H
	ret	0
??0BerconGradient@@QEAA@XZ ENDP				; BerconGradient::BerconGradient
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv173 = 40
tv176 = 48
$T2 = 56
$T3 = 64
this$ = 96
?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA PROC		; `BerconGradient::BerconGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA ENDP		; `BerconGradient::BerconGradient'::`1'::dtor$0
$T1 = 32
tv173 = 40
tv176 = 48
$T2 = 56
$T3 = 64
this$ = 96
?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA PROC		; `BerconGradient::BerconGradient'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 72					; 00000048H
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA ENDP		; `BerconGradient::BerconGradient'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv173 = 40
tv176 = 48
$T2 = 56
$T3 = 64
this$ = 96
?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA PROC		; `BerconGradient::BerconGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconGradient@@QEAA@XZ@4HA ENDP		; `BerconGradient::BerconGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv173 = 40
tv176 = 48
$T2 = 56
$T3 = 64
this$ = 96
?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA PROC		; `BerconGradient::BerconGradient'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	edx, 72					; 00000048H
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0BerconGradient@@QEAA@XZ@4HA ENDP		; `BerconGradient::BerconGradient'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?DeleteThis@BerconGradient@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconGradient@@UEAAXXZ PROC		; BerconGradient::DeleteThis, COMDAT

; 170  : 		void DeleteThis() { delete this; }		

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconGradient@@UEAAXXZ ENDP		; BerconGradient::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?RenderEnd@BerconGradient@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?RenderEnd@BerconGradient@@UEAAHH@Z PROC		; BerconGradient::RenderEnd, COMDAT

; 168  : 		int RenderEnd(TimeValue t) { previewMatIDMode = TRUE; return 1; }				

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+540], 1
	mov	eax, 1
	ret	0
?RenderEnd@BerconGradient@@UEAAHH@Z ENDP		; BerconGradient::RenderEnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?RenderBegin@BerconGradient@@UEAAHHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?RenderBegin@BerconGradient@@UEAAHHK@Z PROC		; BerconGradient::RenderBegin, COMDAT

; 167  : 		int RenderBegin(TimeValue t, ULONG flags = 0) { if (!flags) previewMatIDMode = FALSE; return 1; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	cmp	DWORD PTR flags$[rsp], 0
	jne	SHORT $LN2@RenderBegi
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+540], 0
$LN2@RenderBegi:
	mov	eax, 1
	ret	0
?RenderBegin@BerconGradient@@UEAAHHK@Z ENDP		; BerconGradient::RenderBegin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z
_TEXT	SEGMENT
this$ = 48
id$ = 56
?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z PROC ; BerconGradient::GetParamBlockByID, COMDAT

; 160  : 		IParamBlock2* GetParamBlockByID(BlockID id) { 

$LN6:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 161  : 			if (pblock->ID() == id) return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN2@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	jmp	SHORT $LN1@GetParamBl
$LN2@GetParamBl:

; 162  : 			if (pbCurve->ID() == id) return pbCurve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+160]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN3@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	jmp	SHORT $LN1@GetParamBl
$LN3@GetParamBl:

; 163  : 			if (pbXYZ->ID() == id) return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+168]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN4@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	jmp	SHORT $LN1@GetParamBl
$LN4@GetParamBl:

; 164  : 			return NULL;

	xor	eax, eax
$LN1@GetParamBl:

; 165  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?GetParamBlockByID@BerconGradient@@UEAAPEAVIParamBlock2@@F@Z ENDP ; BerconGradient::GetParamBlockByID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z PROC ; BerconGradient::GetParamBlock, COMDAT

; 159  : 		IParamBlock2* GetParamBlock(int i) { switch (i) { case 0: return pblock; case 1: return pbCurve; case 2: return pbXYZ; } return NULL; }

$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@GetParamBl
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@GetParamBl
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN6@GetParamBl
	jmp	SHORT $LN2@GetParamBl
$LN4@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	jmp	SHORT $LN1@GetParamBl
$LN5@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	jmp	SHORT $LN1@GetParamBl
$LN6@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	jmp	SHORT $LN1@GetParamBl
$LN2@GetParamBl:
	xor	eax, eax
$LN1@GetParamBl:
	add	rsp, 24
	ret	0
?GetParamBlock@BerconGradient@@UEAAPEAVIParamBlock2@@H@Z ENDP ; BerconGradient::GetParamBlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?NumParamBlocks@BerconGradient@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumParamBlocks@BerconGradient@@UEAAHXZ PROC		; BerconGradient::NumParamBlocks, COMDAT

; 158  : 		int	NumParamBlocks() { return 3; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3
	ret	0
?NumParamBlocks@BerconGradient@@UEAAHXZ ENDP		; BerconGradient::NumParamBlocks
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
k$1 = 48
tv64 = 52
this$ = 80
i$ = 88
rtarg$ = 96
?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z PROC ; BerconGradient::SetReference, COMDAT

; 935  : void BerconGradient::SetReference(int i, RefTargetHandle rtarg) {

$LN16:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 936  : 	switch(i) {		

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 7
	ja	$LN12@SetReferen
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN15@SetReferen[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@SetReferen:

; 937  : 		case COORD_REF: pbXYZ = (IParamBlock2 *)rtarg; break;			

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+168], rcx
	jmp	$LN2@SetReferen
$LN5@SetReferen:

; 938  : 		case PBLOCK_REF: pblock = (IParamBlock2 *)rtarg; break;		

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+152], rcx
	jmp	$LN2@SetReferen
$LN6@SetReferen:

; 939  : 		case OUTPUT_REF: texout = (TextureOutput *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+440], rcx
	jmp	$LN2@SetReferen
$LN7@SetReferen:

; 940  : 		case CURVE_REF: curve = (ICurveCtl *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+568], rcx
	jmp	$LN2@SetReferen
$LN8@SetReferen:

; 941  : 		case CURVEPB_REF: pbCurve = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+160], rcx
	jmp	$LN2@SetReferen
$LN9@SetReferen:

; 942  : 		case MAPTEX_REF: p_maptex = (Texmap *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+544], rcx
	jmp	$LN2@SetReferen
$LN10@SetReferen:

; 943  : 		case DISTEX_REF: p_distex = (Texmap *)rtarg; break;		

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+552], rcx
	jmp	$LN2@SetReferen
$LN11@SetReferen:

; 944  : 		case KEYTEX_REF: setKeyTex((Texmap *)rtarg); break;		

	mov	rdx, QWORD PTR rtarg$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z ; BerconGradient::setKeyTex
	jmp	SHORT $LN2@SetReferen
$LN12@SetReferen:

; 945  : 		default:
; 946  : 			int k = i-REF_OFFSET-SUBMAPCOUNT;

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 8
	mov	DWORD PTR k$1[rsp], eax

; 947  : 			if (k >= gradient->numKeys()) return;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	cmp	DWORD PTR k$1[rsp], eax
	jl	SHORT $LN13@SetReferen
	jmp	SHORT $LN1@SetReferen
$LN13@SetReferen:

; 948  : 			gradient->setSubtex(k, (Texmap *)rtarg);

	mov	r8, QWORD PTR rtarg$[rsp]
	mov	edx, DWORD PTR k$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?setSubtex@GradientRamp@@QEAAXHPEAVTexmap@@@Z ; GradientRamp::setSubtex

; 949  : 			pblock->SetValue(pb_submaps, 0, (Texmap *)rtarg, k);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR k$1[rsp]
	mov	DWORD PTR [rsp+32], edx
	mov	r9, QWORD PTR rtarg$[rsp]
	xor	r8d, r8d
	xor	edx, edx
	call	QWORD PTR [rax+1512]
$LN2@SetReferen:
$LN1@SetReferen:

; 950  : 			break;
; 951  : 	}
; 952  : }

	add	rsp, 72					; 00000048H
	ret	0
	npad	2
$LN15@SetReferen:
	DD	$LN4@SetReferen
	DD	$LN5@SetReferen
	DD	$LN6@SetReferen
	DD	$LN7@SetReferen
	DD	$LN8@SetReferen
	DD	$LN9@SetReferen
	DD	$LN11@SetReferen
	DD	$LN10@SetReferen
?SetReference@BerconGradient@@UEAAXHPEAVReferenceTarget@@@Z ENDP ; BerconGradient::SetReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z
_TEXT	SEGMENT
tv64 = 32
k$1 = 36
this$ = 64
i$ = 72
?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z PROC ; BerconGradient::GetReference, COMDAT

; 918  : RefTargetHandle BerconGradient::GetReference(int i) {

$LN16:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 919  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 7
	ja	$LN12@GetReferen
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN15@GetReferen[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@GetReferen:

; 920  : 	case COORD_REF: return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	jmp	$LN1@GetReferen
$LN5@GetReferen:

; 921  : 	case PBLOCK_REF: return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	jmp	$LN1@GetReferen
$LN6@GetReferen:

; 922  : 	case OUTPUT_REF: return texout;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+440]
	jmp	SHORT $LN1@GetReferen
$LN7@GetReferen:

; 923  : 	case CURVE_REF: return curve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+568]
	jmp	SHORT $LN1@GetReferen
$LN8@GetReferen:

; 924  : 	case CURVEPB_REF: return pbCurve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	jmp	SHORT $LN1@GetReferen
$LN9@GetReferen:

; 925  : 	case MAPTEX_REF: return p_maptex;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+544]
	jmp	SHORT $LN1@GetReferen
$LN10@GetReferen:

; 926  : 	case DISTEX_REF: return p_distex;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+552]
	jmp	SHORT $LN1@GetReferen
$LN11@GetReferen:

; 927  : 	case KEYTEX_REF: return getKeyTex();

	mov	rcx, QWORD PTR this$[rsp]
	call	?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ ; BerconGradient::getKeyTex
	jmp	SHORT $LN1@GetReferen
$LN12@GetReferen:

; 928  : 	default:
; 929  : 		int k = i - REF_OFFSET - SUBMAPCOUNT;

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 8
	mov	DWORD PTR k$1[rsp], eax

; 930  : 		if (k >= gradient->numKeys()) return NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	cmp	DWORD PTR k$1[rsp], eax
	jl	SHORT $LN13@GetReferen
	xor	eax, eax
	jmp	SHORT $LN1@GetReferen
$LN13@GetReferen:

; 931  : 		return gradient->getSubtex(k);

	mov	edx, DWORD PTR k$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex
$LN1@GetReferen:

; 932  : 	}
; 933  : }

	add	rsp, 56					; 00000038H
	ret	0
$LN15@GetReferen:
	DD	$LN4@GetReferen
	DD	$LN5@GetReferen
	DD	$LN6@GetReferen
	DD	$LN7@GetReferen
	DD	$LN8@GetReferen
	DD	$LN9@GetReferen
	DD	$LN11@GetReferen
	DD	$LN10@GetReferen
?GetReference@BerconGradient@@UEAAPEAVReferenceTarget@@H@Z ENDP ; BerconGradient::GetReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?NumRefs@BerconGradient@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NumRefs@BerconGradient@@UEAAHXZ PROC			; BerconGradient::NumRefs, COMDAT

; 154  : 		int NumRefs() { return 8+gradient->numKeys(); } // !! Update submap count !!

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	add	eax, 8
	add	rsp, 40					; 00000028H
	ret	0
?NumRefs@BerconGradient@@UEAAHXZ ENDP			; BerconGradient::NumRefs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z
_TEXT	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z PROC	; BerconGradient::SubAnimName, COMDAT

; 997  : TSTR BerconGradient::SubAnimName(int i) {

$LN13:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 998  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN5@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN4@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN6@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 3
	je	$LN7@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 4
	je	$LN8@SubAnimNam
	jmp	$LN9@SubAnimNam
$LN4@SubAnimNam:

; 999  : 		case PBLOCK_REF: return GetString(IDS_PARAMS);

	mov	ecx, 4
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN5@SubAnimNam:

; 1000 : 		case COORD_REF: return GetString(IDS_COORDS);				

	mov	ecx, 7
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN6@SubAnimNam:

; 1001 : 		case OUTPUT_REF: return GetString(IDS_OUTPUT);	

	mov	ecx, 8
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN7@SubAnimNam:

; 1002 : 		case CURVE_REF: return GetString(IDS_CURVE);

	mov	ecx, 51					; 00000033H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@SubAnimNam
$LN8@SubAnimNam:

; 1003 : 		case CURVEPB_REF: return GetString(IDS_CURVEPB);

	mov	ecx, 66					; 00000042H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@SubAnimNam
$LN9@SubAnimNam:

; 1004 : 		default: return GetSubTexmapTVName(i-REF_OFFSET);

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 5
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 64					; 00000040H
	mov	r8d, eax
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_?GetSubTexmapTVName@ISubMap@@QEAA?AVWStr@@H@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@SubAnimNam:

; 1005 : 	}									  
; 1006 : }

	add	rsp, 56					; 00000038H
	ret	0
	int	3
?SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z ENDP	; BerconGradient::SubAnimName
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconGradient::SubAnimName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN12@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN12@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconGradient::SubAnimName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconGradient::SubAnimName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN12@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN12@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??SubAnimName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconGradient::SubAnimName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z
_TEXT	SEGMENT
tv64 = 32
k$1 = 36
this$ = 64
i$ = 72
?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z PROC	; BerconGradient::SubAnim, COMDAT

; 979  : Animatable* BerconGradient::SubAnim(int i) {

$LN16:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 980  : 	switch (i) {		

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 7
	ja	$LN12@SubAnim
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN15@SubAnim[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@SubAnim:

; 981  : 		case PBLOCK_REF: return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	jmp	$LN1@SubAnim
$LN5@SubAnim:

; 982  : 		case COORD_REF: return pbXYZ;		

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	jmp	$LN1@SubAnim
$LN6@SubAnim:

; 983  : 		case OUTPUT_REF: return texout;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+440]
	jmp	$LN1@SubAnim
$LN7@SubAnim:

; 984  : 		case CURVE_REF: return curve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+568]
	jmp	SHORT $LN1@SubAnim
$LN8@SubAnim:

; 985  : 		case CURVEPB_REF: return pbCurve;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	jmp	SHORT $LN1@SubAnim
$LN9@SubAnim:

; 986  : 		case MAPTEX_REF: return p_maptex;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+544]
	jmp	SHORT $LN1@SubAnim
$LN10@SubAnim:

; 987  : 		case DISTEX_REF: return p_distex;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+552]
	jmp	SHORT $LN1@SubAnim
$LN11@SubAnim:

; 988  : 		case KEYTEX_REF: return getKeyTex();		

	mov	rcx, QWORD PTR this$[rsp]
	call	?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ ; BerconGradient::getKeyTex
	jmp	SHORT $LN1@SubAnim
$LN12@SubAnim:

; 989  : 		default:
; 990  : 			int k = i-REF_OFFSET-SUBMAPCOUNT;

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 8
	mov	DWORD PTR k$1[rsp], eax

; 991  : 			if (k >= gradient->numKeys()) return NULL;		

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	cmp	DWORD PTR k$1[rsp], eax
	jl	SHORT $LN13@SubAnim
	xor	eax, eax
	jmp	SHORT $LN1@SubAnim
$LN13@SubAnim:

; 992  : 			return gradient->getSubtex(k);

	mov	edx, DWORD PTR k$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex
	jmp	SHORT $LN1@SubAnim

; 993  : 	}
; 994  : 	return NULL;

	xor	eax, eax
$LN1@SubAnim:

; 995  : }

	add	rsp, 56					; 00000038H
	ret	0
	npad	1
$LN15@SubAnim:
	DD	$LN5@SubAnim
	DD	$LN4@SubAnim
	DD	$LN6@SubAnim
	DD	$LN7@SubAnim
	DD	$LN8@SubAnim
	DD	$LN9@SubAnim
	DD	$LN11@SubAnim
	DD	$LN10@SubAnim
?SubAnim@BerconGradient@@UEAAPEAVAnimatable@@H@Z ENDP	; BerconGradient::SubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?NumSubs@BerconGradient@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NumSubs@BerconGradient@@UEAAHXZ PROC			; BerconGradient::NumSubs, COMDAT

; 150  : 		int NumSubs() { return 8+gradient->numKeys(); } // !! Update submap count !!

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	add	eax, 8
	add	rsp, 40					; 00000028H
	ret	0
?NumSubs@BerconGradient@@UEAAHXZ ENDP			; BerconGradient::NumSubs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
_TEXT	SEGMENT
changing_param$1 = 32
changing_param$2 = 36
changing_param$3 = 40
tv64 = 44
this$ = 64
changeInt$ = 72
hTarget$ = 80
partID$ = 88
message$ = 96
propagate$ = 104
?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z PROC ; BerconGradient::NotifyRefChanged, COMDAT

; 1008 : RefResult BerconGradient::NotifyRefChanged(NOTIFY_REF_CHANGED_ARGS) {	

$LN14:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1009 : 	switch (message) {

	mov	eax, DWORD PTR message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 80			; 00000050H
	je	SHORT $LN4@NotifyRefC
	jmp	$LN2@NotifyRefC
$LN4@NotifyRefC:

; 1010 : 		case REFMSG_CHANGE:
; 1011 : 			ivalid.SetEmpty();			

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 1012 : 			if (hTarget == pblock) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN5@NotifyRefC

; 1013 : 				ParamID changing_param = pblock->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$1[rsp], ax

; 1014 : 				gradientmap_param_blk.InvalidateUI(changing_param);

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$1[rsp]
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 1015 : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$1[rsp]
	cmp	eax, -1
	je	SHORT $LN7@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconGradient@@QEAAXXZ ; BerconGradient::DiscardTexHandle
$LN7@NotifyRefC:

; 1016 : 			}  else if (hTarget == pbCurve) {

	jmp	$LN6@NotifyRefC
$LN5@NotifyRefC:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN8@NotifyRefC

; 1017 : 				ParamID changing_param = pbCurve->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+160]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$2[rsp], ax

; 1018 : 				BerconCurve_param_blk.InvalidateUI(changing_param);

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$2[rsp]
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 1019 : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$2[rsp]
	cmp	eax, -1
	je	SHORT $LN10@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconGradient@@QEAAXXZ ; BerconGradient::DiscardTexHandle
$LN10@NotifyRefC:

; 1020 : 			} else if (hTarget == pbXYZ) {

	jmp	SHORT $LN9@NotifyRefC
$LN8@NotifyRefC:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN11@NotifyRefC

; 1021 : 				ParamID changing_param = pbXYZ->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+168]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+168]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$3[rsp], ax

; 1022 : 				xyz_blk.InvalidateUI(changing_param);

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$3[rsp]
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 1023 : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$3[rsp]
	cmp	eax, -1
	je	SHORT $LN12@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconGradient@@QEAAXXZ ; BerconGradient::DiscardTexHandle
$LN12@NotifyRefC:
$LN11@NotifyRefC:
$LN9@NotifyRefC:
$LN6@NotifyRefC:
$LN2@NotifyRefC:

; 1024 : 			}
; 1025 : 			break;
; 1026 : 		}	
; 1027 : 	return(REF_SUCCEED);

	mov	eax, 1

; 1028 : }

	add	rsp, 56					; 00000038H
	ret	0
?NotifyRefChanged@BerconGradient@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z ENDP ; BerconGradient::NotifyRefChanged
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
_TEXT	SEGMENT
i$1 = 32
keys$ = 36
mnew$ = 40
$T2 = 48
tv78 = 56
$T3 = 64
tv313 = 72
$T4 = 80
this$ = 112
remap$ = 120
?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z PROC ; BerconGradient::Clone, COMDAT

; 954  : RefTargetHandle BerconGradient::Clone(RemapDir &remap) {	

$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	QWORD PTR $T4[rsp], -2

; 955  : 	int keys = countKeys();

	mov	rcx, QWORD PTR this$[rsp]
	call	?countKeys@BerconGradient@@QEAAHXZ	; BerconGradient::countKeys
	mov	DWORD PTR keys$[rsp], eax

; 956  : 
; 957  : 	BerconGradient *mnew = new BerconGradient();

	mov	ecx, 600				; 00000258H
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN6@Clone
	mov	edx, 600				; 00000258H
	mov	rcx, QWORD PTR $T2[rsp]
	call	?__autoclassinit2@BerconGradient@@QEAAX_K@Z
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0BerconGradient@@QEAA@XZ		; BerconGradient::BerconGradient
	mov	QWORD PTR tv78[rsp], rax
	jmp	SHORT $LN7@Clone
$LN6@Clone:
	mov	QWORD PTR tv78[rsp], 0
$LN7@Clone:
	mov	rax, QWORD PTR tv78[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR mnew$[rsp], rax

; 958  : 	*((MtlBase*)mnew) = *((MtlBase*)this);	

	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_??4MtlBase@@QEAAAEAV0@AEBV0@@Z

; 959  : 
; 960  : 	mnew->pblock->SetCount(pb_submaps, keys);		

	mov	rax, QWORD PTR mnew$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR mnew$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR keys$[rsp]
	xor	edx, edx
	call	QWORD PTR [rax+1880]

; 961  : 	for (int i = 0; i<keys; i++) {		

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Clone
$LN2@Clone:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Clone:
	mov	eax, DWORD PTR keys$[rsp]
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@Clone

; 962  : 		mnew->ReplaceReference(i+REF_OFFSET+SUBMAPCOUNT, remap.CloneRef(gradient->getSubtex(i)));

	mov	edx, DWORD PTR i$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex
	mov	rcx, QWORD PTR remap$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv313[rsp], rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR tv313[rsp]
	call	QWORD PTR [rax+8]
	mov	ecx, DWORD PTR i$1[rsp]
	add	ecx, 8
	mov	r9d, 1
	mov	r8, rax
	mov	edx, ecx
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 963  : 	}

	jmp	SHORT $LN2@Clone
$LN3@Clone:

; 964  : 
; 965  : 	mnew->ReplaceReference(MAPTEX_REF, remap.CloneRef(p_maptex));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+544]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 5
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 966  : 	mnew->ReplaceReference(DISTEX_REF, remap.CloneRef(p_distex));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+552]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 7
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 967  : 
; 968  : 	mnew->ivalid.SetEmpty();

	mov	rax, QWORD PTR mnew$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 969  : 	mnew->ReplaceReference(PBLOCK_REF,remap.CloneRef(pblock));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+152]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 1
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 970  : 	mnew->ReplaceReference(COORD_REF,remap.CloneRef(pbXYZ));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+168]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 971  : 	mnew->ReplaceReference(OUTPUT_REF,remap.CloneRef(texout));	

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+440]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 2
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 972  : 	mnew->ReplaceReference(CURVE_REF,remap.CloneRef(curve));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+568]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 3
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 973  : 	mnew->ReplaceReference(CURVEPB_REF,remap.CloneRef(pbCurve));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+160]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 4
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 974  : 
; 975  : 	BaseClone(this, mnew, remap);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR remap$[rsp]
	mov	r8, QWORD PTR mnew$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1320]

; 976  : 	return (RefTargetHandle)mnew;

	mov	rax, QWORD PTR mnew$[rsp]

; 977  : }

	add	rsp, 104				; 00000068H
	ret	0
?Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z ENDP ; BerconGradient::Clone
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
keys$ = 36
mnew$ = 40
$T2 = 48
tv78 = 56
$T3 = 64
tv313 = 72
$T4 = 80
this$ = 112
remap$ = 120
?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA PROC ; `BerconGradient::Clone'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA ENDP ; `BerconGradient::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
keys$ = 36
mnew$ = 40
$T2 = 48
tv78 = 56
$T3 = 64
tv313 = 72
$T4 = 80
this$ = 112
remap$ = 120
?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA PROC ; `BerconGradient::Clone'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Clone@BerconGradient@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA ENDP ; `BerconGradient::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z
_TEXT	SEGMENT
this$ = 48
s$ = 56
?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z PROC	; BerconGradient::GetClassName, COMDAT

; 145  : 		void GetClassName(TSTR& s) {s = GetString(IDS_BERCON_COLOR);}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	ecx, 145				; 00000091H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR s$[rsp]
	call	QWORD PTR __imp_??4WStr@@QEAAAEAV0@PEB_W@Z
	add	rsp, 40					; 00000028H
	ret	0
?GetClassName@BerconGradient@@UEAAXAEAVWStr@@@Z ENDP	; BerconGradient::GetClassName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?SuperClassID@BerconGradient@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?SuperClassID@BerconGradient@@UEAAKXZ PROC		; BerconGradient::SuperClassID, COMDAT

; 144  : 		SClass_ID SuperClassID() { return TEXMAP_CLASS_ID; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3088				; 00000c10H
	ret	0
?SuperClassID@BerconGradient@@UEAAKXZ ENDP		; BerconGradient::SuperClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ PROC	; BerconGradient::ClassID, COMDAT

; 143  : 		Class_ID ClassID() {return BerconGradient_CLASS_ID;}		

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 1355780343				; 50cf90f7H
	mov	edx, 856603678				; 330ebc1eH
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconGradient@@UEAA?AVClass_ID@@XZ ENDP	; BerconGradient::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z
_TEXT	SEGMENT
tv143 = 64
tv142 = 72
this$ = 96
t$ = 104
thmaker$ = 112
?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z PROC ; BerconGradient::GetActiveTexHandle, COMDAT

; 686  : DWORD_PTR BerconGradient::GetActiveTexHandle(TimeValue t, TexHandleMaker& thmaker) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 687  : 	if (texHandle) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+584], 0
	je	SHORT $LN2@GetActiveT

; 688  : 		if (texHandleValid.InInterval(t))

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 592				; 00000250H
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?InInterval@Interval@@QEBAHH@Z
	test	eax, eax
	je	SHORT $LN3@GetActiveT

; 689  : 			return texHandle->GetHandle();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+584]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+584]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
	jmp	$LN1@GetActiveT
	jmp	SHORT $LN4@GetActiveT
$LN3@GetActiveT:

; 690  : 		else DiscardTexHandle();

	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconGradient@@QEAAXXZ ; BerconGradient::DiscardTexHandle
$LN4@GetActiveT:
$LN2@GetActiveT:

; 691  : 	}
; 692  : 	texHandle = thmaker.MakeHandle(GetVPDisplayDIB(t,thmaker,texHandleValid));

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 592				; 00000250H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv143[rsp], rcx
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8, QWORD PTR thmaker$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv143[rsp]
	call	QWORD PTR [rax+1536]
	mov	rcx, QWORD PTR thmaker$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv142[rsp], rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR thmaker$[rsp]
	mov	rax, QWORD PTR tv142[rsp]
	call	QWORD PTR [rax+32]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+584], rax

; 693  : 	return texHandle->GetHandle();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+584]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+584]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
$LN1@GetActiveT:

; 694  : }

	add	rsp, 88					; 00000058H
	ret	0
?GetActiveTexHandle@BerconGradient@@UEAA_KHAEAVTexHandleMaker@@@Z ENDP ; BerconGradient::GetActiveTexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?ActivateTexDisplay@BerconGradient@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 48
onoff$ = 56
?ActivateTexDisplay@BerconGradient@@UEAAXH@Z PROC	; BerconGradient::ActivateTexDisplay, COMDAT

; 139  : 		void ActivateTexDisplay(BOOL onoff) { if (!onoff) DiscardTexHandle(); }

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	cmp	DWORD PTR onoff$[rsp], 0
	jne	SHORT $LN2@ActivateTe
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconGradient@@QEAAXXZ ; BerconGradient::DiscardTexHandle
$LN2@ActivateTe:
	add	rsp, 40					; 00000028H
	ret	0
?ActivateTexDisplay@BerconGradient@@UEAAXH@Z ENDP	; BerconGradient::ActivateTexDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?SupportTexDisplay@BerconGradient@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportTexDisplay@BerconGradient@@UEAAHXZ PROC		; BerconGradient::SupportTexDisplay, COMDAT

; 138  : 		BOOL SupportTexDisplay() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SupportTexDisplay@BerconGradient@@UEAAHXZ ENDP		; BerconGradient::SupportTexDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?DiscardTexHandle@BerconGradient@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?DiscardTexHandle@BerconGradient@@QEAAXXZ PROC		; BerconGradient::DiscardTexHandle, COMDAT

; 137  : 		void DiscardTexHandle() { if (texHandle) { texHandle->DeleteThis(); texHandle = NULL; } }

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+584], 0
	je	SHORT $LN2@DiscardTex
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+584]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+584]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+584], 0
$LN2@DiscardTex:
	add	rsp, 40					; 00000028H
	ret	0
?DiscardTexHandle@BerconGradient@@QEAAXXZ ENDP		; BerconGradient::DiscardTexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?SubNumToRefNum@BerconGradient@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?SubNumToRefNum@BerconGradient@@UEAAHH@Z PROC		; BerconGradient::SubNumToRefNum, COMDAT

; 130  : 		int SubNumToRefNum(int subNum) { return subNum; }		

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, DWORD PTR subNum$[rsp]
	ret	0
?SubNumToRefNum@BerconGradient@@UEAAHH@Z ENDP		; BerconGradient::SubNumToRefNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
i$1 = 48
dist$ = 52
tv395 = 56
tv264 = 60
tv290 = 64
tv309 = 68
tv327 = 72
tv407 = 80
tv191 = 88
tv287 = 96
tv443 = 104
$T2 = 112
tv448 = 120
tv197 = 128
tv447 = 136
$T3 = 144
tv445 = 152
tv293 = 160
tv298 = 168
tv444 = 176
tv336 = 184
tv346 = 192
$T4 = 200
$T5 = 208
$T6 = 216
tv418 = 224
$T7 = 232
$T8 = 240
$T9 = 248
$T10 = 264
$T11 = 276
$T12 = 288
$T13 = 304
$T14 = 320
$T15 = 332
$T16 = 344
$T17 = 356
$T18 = 368
$T19 = 384
$T20 = 400
$T21 = 412
$T22 = 424
$T23 = 440
$T24 = 456
$T25 = 468
$T26 = 484
d$ = 500
normal$ = 504
res$ = 520
p$ = 536
MP$ = 552
M$ = 592
__$ArrayPad$ = 632
this$ = 672
__$ReturnUdt$ = 680
sc$ = 688
?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z PROC ; BerconGradient::EvalNormalPerturb, COMDAT

; 1392 : Point3 BerconGradient::EvalNormalPerturb(ShadeContext& sc) {

$LN19:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 648				; 00000288H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1393 : 	// Returned vector
; 1394 : 	Point3 res(0.0f,0.0f,0.0f);

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR res$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z

; 1395 : 	if (p_type != 0) return res; // Bump only works for UVW, otherwise we don't really know the derivative of the gradient

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 0
	je	SHORT $LN5@EvalNormal
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN5@EvalNormal:

; 1396 : 	
; 1397 : 	// Use cache
; 1398 : 	if (sc.GetCache(this,res)) 

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR res$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+488]
	test	eax, eax
	je	SHORT $LN6@EvalNormal

; 1399 : 		return res;

	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN6@EvalNormal:

; 1400 : 	if (gbufID) sc.SetGBufferID(gbufID);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN7@EvalNormal
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rcx+120]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+464]
$LN7@EvalNormal:

; 1401 : 
; 1402 : 	// UVW
; 1403 : 	Point3 p;

	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 1404 : 	Point3 M[3];

	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	lea	rcx, QWORD PTR M$[rsp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 1405 : 
; 1406 : 	if (!berconXYZ.get(sc, p, M)) return res;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 176				; 000000b0H
	lea	r9, QWORD PTR M$[rsp]
	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, rax
	call	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@PEAV3@@Z ; BerconXYZ::get
	test	eax, eax
	jne	SHORT $LN8@EvalNormal
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN8@EvalNormal:

; 1407 : 	
; 1408 : 	// Distortion
; 1409 : 	float dist = 0.f;

	xorps	xmm0, xmm0
	movss	DWORD PTR dist$[rsp], xmm0

; 1410 : 	if (p_disOn && p_distex) dist = (1.f - p_distex->EvalMono(sc) * 2.f) * p_disStr;

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+532], 0
	je	SHORT $LN9@EvalNormal
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+552], 0
	je	SHORT $LN9@EvalNormal
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+552]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+552]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+536]
	movss	DWORD PTR dist$[rsp], xmm0
$LN9@EvalNormal:

; 1411 : 	
; 1412 : 	// Origin
; 1413 : 	float d = getGradientValueUVW(p) + dist;	

	lea	rax, QWORD PTR $T9[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z ; BerconGradient::getGradientValueUVW
	addss	xmm0, DWORD PTR dist$[rsp]
	movss	DWORD PTR d$[rsp], xmm0

; 1414 : 	if (!limitRange(d)) return res;

	lea	rdx, QWORD PTR d$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?limitRange@BerconGradient@@QEAAHAEAM@Z	; BerconGradient::limitRange
	test	eax, eax
	jne	SHORT $LN10@EvalNormal
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN10@EvalNormal:

; 1415 : 	if (p_curveOn) d = curve->GetControlCurve(0)->GetValue(sc.CurTime(), d);		

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+576], 0
	je	$LN11@EvalNormal
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+568]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+568]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv191[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T7[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv197[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv448[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv448[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR tv191[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv447[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv197[rsp]
	mov	r9, rdx
	movss	xmm2, DWORD PTR d$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR tv191[rsp]
	mov	rax, QWORD PTR tv447[rsp]
	call	QWORD PTR [rax+1376]
	movss	DWORD PTR d$[rsp], xmm0
$LN11@EvalNormal:

; 1416 : 	d = Intens(gradient->getColor(d, sc));

	mov	r9, QWORD PTR sc$[rsp]
	movss	xmm2, DWORD PTR d$[rsp]
	lea	rdx, QWORD PTR $T25[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getColor@GradientRamp@@QEAA?AVAColor@@MAEAVShadeContext@@@Z ; GradientRamp::getColor
	mov	rcx, rax
	call	?Intens@@YAMAEBVAColor@@@Z		; Intens
	movss	DWORD PTR d$[rsp], xmm0

; 1417 : 
; 1418 : 	// Deltas
; 1419 : 	Point3 normal;

	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 1420 : 
; 1421 : 	/*if (berconXYZ.req()) {		
; 1422 : 		Point3 MP[3];
; 1423 : 		MP[0] = Point3(DELTA,0.f,0.f); MP[1] = Point3(0.f,DELTA,0.f); MP[2] = Point3(0.f,DELTA,0.f);
; 1424 : 		for (int i=0; i<3; i++) {
; 1425 : 			normal[i] = getGradientValueUVW(p+DELTA*M[i]) + dist;
; 1426 : 			if (!limitRange(normal[i])) return res;
; 1427 : 			if (p_curveOn) 
; 1428 : 				normal[i] = curve->GetControlCurve(0)->GetValue(sc.CurTime(), normal[i]);
; 1429 : 			normal[i] = (normal[i] - d) / DELTA;
; 1430 : 		}
; 1431 : 		normal = M[0]*normal.x + M[1]*normal.y + M[2]*normal.z;
; 1432 : 	} else {*/
; 1433 : 		Point3 MP[3];

	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	lea	rcx, QWORD PTR MP$[rsp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 1434 : 		MP[0] = Point3(DELTA,0.f,0.f); MP[1] = Point3(0.f,DELTA,0.f); MP[2] = Point3(0.f,DELTA,0.f);

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T10[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	ecx, 12
	imul	rcx, rcx, 0
	lea	rdi, QWORD PTR MP$[rsp+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3a83126f
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T11[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	ecx, 12
	imul	rcx, rcx, 1
	lea	rdi, QWORD PTR MP$[rsp+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3a83126f
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T12[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	ecx, 12
	imul	rcx, rcx, 2
	lea	rdi, QWORD PTR MP$[rsp+rcx]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1435 : 		for (int i=0; i<3; i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@EvalNormal
$LN2@EvalNormal:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@EvalNormal:
	cmp	DWORD PTR i$1[rsp], 3
	jge	$LN3@EvalNormal

; 1436 : 			normal[i] = getGradientValueUVW(p+MP[i]) + dist;

	lea	rax, QWORD PTR $T13[rsp]
	mov	QWORD PTR $T3[rsp], rax
	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, rax, 12
	lea	rax, QWORD PTR MP$[rsp+rax]
	mov	r8, rax
	mov	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z ; BerconGradient::getGradientValueUVW
	addss	xmm0, DWORD PTR dist$[rsp]
	movss	DWORD PTR tv264[rsp], xmm0
	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	movss	xmm0, DWORD PTR tv264[rsp]
	movss	DWORD PTR [rax], xmm0

; 1437 : 			if (!limitRange(normal[i])) return res;

	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?limitRange@BerconGradient@@QEAAHAEAM@Z	; BerconGradient::limitRange
	test	eax, eax
	jne	SHORT $LN12@EvalNormal
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN12@EvalNormal:

; 1438 : 			if (p_curveOn) 

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+576], 0
	je	$LN13@EvalNormal

; 1439 : 				normal[i] = curve->GetControlCurve(0)->GetValue(sc.CurTime(), normal[i]);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+568]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+568]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv287[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T8[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv293[rsp], rax
	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	mov	QWORD PTR tv298[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv445[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv445[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR tv287[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv444[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv293[rsp]
	mov	r9, rdx
	mov	rdx, QWORD PTR tv298[rsp]
	movss	xmm2, DWORD PTR [rdx]
	mov	edx, eax
	mov	rcx, QWORD PTR tv287[rsp]
	mov	rax, QWORD PTR tv444[rsp]
	call	QWORD PTR [rax+1376]
	movss	DWORD PTR tv290[rsp], xmm0
	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	movss	xmm0, DWORD PTR tv290[rsp]
	movss	DWORD PTR [rax], xmm0
$LN13@EvalNormal:

; 1440 : 			normal[i] = Intens(gradient->getColor(normal[i], sc));

	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	mov	r9, QWORD PTR sc$[rsp]
	movss	xmm2, DWORD PTR [rax]
	lea	rdx, QWORD PTR $T26[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getColor@GradientRamp@@QEAA?AVAColor@@MAEAVShadeContext@@@Z ; GradientRamp::getColor
	mov	rcx, rax
	call	?Intens@@YAMAEBVAColor@@@Z		; Intens
	movss	DWORD PTR tv309[rsp], xmm0
	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	movss	xmm0, DWORD PTR tv309[rsp]
	movss	DWORD PTR [rax], xmm0

; 1441 : 			normal[i] = (normal[i] - d) / DELTA;

	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR tv327[rsp], xmm0
	mov	edx, DWORD PTR i$1[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??APoint3@@QEAAAEAMH@Z
	movss	xmm0, DWORD PTR tv327[rsp]
	movss	DWORD PTR [rax], xmm0

; 1442 : 		}		

	jmp	$LN2@EvalNormal
$LN3@EvalNormal:

; 1443 : 		normal = M[0]*normal.x + M[1]*normal.y + M[2]*normal.z;

	mov	eax, 12
	imul	rax, rax, 2
	lea	rax, QWORD PTR M$[rsp+rax]
	movss	xmm2, DWORD PTR normal$[rsp+8]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T14[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	QWORD PTR tv346[rsp], rax
	mov	ecx, 12
	imul	rcx, rcx, 1
	lea	rcx, QWORD PTR M$[rsp+rcx]
	movss	xmm2, DWORD PTR normal$[rsp+4]
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T15[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	QWORD PTR tv336[rsp], rax
	mov	ecx, 12
	imul	rcx, rcx, 0
	lea	rcx, QWORD PTR M$[rsp+rcx]
	movss	xmm2, DWORD PTR normal$[rsp]
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T16[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	rcx, QWORD PTR tv336[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T17[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	mov	rcx, QWORD PTR tv346[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T18[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rcx, QWORD PTR normal$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1444 : 		
; 1445 : 		//normal = sc.VectorFromNoScale(normal, REF_OBJECT);		
; 1446 : 		
; 1447 : 	//}
; 1448 : 
; 1449 : 	// Compute maps and proper bump vector
; 1450 : 	res = gradient->getBump(p_reverse?1.f-d:d, p_reverse?normal:-normal, sc);

	lea	rax, QWORD PTR $T19[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+516], 0
	je	SHORT $LN15@EvalNormal
	lea	rdx, QWORD PTR normal$[rsp]
	lea	rcx, QWORD PTR $T20[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv407[rsp], rax
	jmp	SHORT $LN16@EvalNormal
$LN15@EvalNormal:
	lea	rdx, QWORD PTR $T21[rsp]
	lea	rcx, QWORD PTR normal$[rsp]
	call	QWORD PTR __imp_??GPoint3@@QEBA?AV0@XZ
	mov	QWORD PTR tv407[rsp], rax
$LN16@EvalNormal:
	mov	rax, QWORD PTR tv407[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+516], 0
	je	SHORT $LN17@EvalNormal
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR tv395[rsp], xmm0
	jmp	SHORT $LN18@EvalNormal
$LN17@EvalNormal:
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR tv395[rsp], xmm0
$LN18@EvalNormal:
	mov	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR $T5[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR sc$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, rax
	movss	xmm2, DWORD PTR tv395[rsp]
	lea	rdx, QWORD PTR $T22[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getBump@GradientRamp@@QEAA?AVPoint3@@MV2@AEAVShadeContext@@@Z ; GradientRamp::getBump
	lea	rcx, QWORD PTR res$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1451 : 
; 1452 : 	// Output
; 1453 : 	res = texout->Filter(res);

	lea	rax, QWORD PTR $T23[rsp]
	mov	QWORD PTR $T6[rsp], rax
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR $T6[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+440]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+440]
	mov	QWORD PTR tv418[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv443[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR $T24[rsp]
	mov	rax, QWORD PTR tv418[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv443[rsp]
	call	QWORD PTR [rax+1504]
	lea	rcx, QWORD PTR res$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1454 : 
; 1455 : 	// Shading ready, return results	
; 1456 : 	sc.PutCache(this,res);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR res$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+512]

; 1457 : 	return res;

	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalNormal:

; 1458 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 648				; 00000288H
	pop	rdi
	pop	rsi
	ret	0
?EvalNormalPerturb@BerconGradient@@UEAA?AVPoint3@@AEAVShadeContext@@@Z ENDP ; BerconGradient::EvalNormalPerturb
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
sc$ = 72
?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z PROC ; BerconGradient::EvalMono, COMDAT

; 1386 : float BerconGradient::EvalMono(ShadeContext& sc) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1387 : 	return Intens(EvalColor(sc));

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1504]
	mov	rcx, rax
	call	?Intens@@YAMAEBVAColor@@@Z		; Intens

; 1388 : }

	add	rsp, 56					; 00000038H
	ret	0
?EvalMono@BerconGradient@@UEAAMAEAVShadeContext@@@Z ENDP ; BerconGradient::EvalMono
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
tv215 = 48
tv192 = 56
$T1 = 64
tv250 = 72
tv198 = 80
tv249 = 88
$T2 = 96
tv223 = 104
tv248 = 112
$T3 = 120
$T4 = 128
$T5 = 144
$T6 = 160
$T7 = 176
d$ = 192
res$ = 200
p$8 = 216
__$ArrayPad$ = 232
this$ = 272
__$ReturnUdt$ = 280
sc$ = 288
?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z PROC ; BerconGradient::EvalColor, COMDAT

; 1344 : AColor BerconGradient::EvalColor(ShadeContext& sc) {

$LN14:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 248				; 000000f8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1345 : 	// Initialize returned color
; 1346 : 	AColor res(0.0f,0.0f,0.0f,0.0f);

	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR res$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor

; 1347 : 	if (!sc.doMaps) return res;

	mov	rax, QWORD PTR sc$[rsp]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN2@EvalColor
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN2@EvalColor:

; 1348 : 
; 1349 : 	// Use cache
; 1350 : 	if (sc.GetCache(this,res)) 

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR res$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+504]
	test	eax, eax
	je	SHORT $LN3@EvalColor

; 1351 : 		return res; 	

	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN3@EvalColor:

; 1352 : 	if (gbufID) sc.SetGBufferID(gbufID);		

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN4@EvalColor
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rcx+120]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+464]
$LN4@EvalColor:

; 1353 : 	
; 1354 : 	// Function type
; 1355 : 	float d;
; 1356 : 	if (p_type == 0) {// UVW

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 0
	jne	$LN5@EvalColor

; 1357 : 		Point3 p;

	lea	rcx, QWORD PTR p$8[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 1358 : 		if (!berconXYZ.get(sc, p)) return res;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 176				; 000000b0H
	lea	r8, QWORD PTR p$8[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, rax
	call	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@@Z ; BerconXYZ::get
	test	eax, eax
	jne	SHORT $LN7@EvalColor
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN7@EvalColor:

; 1359 : 		d = getGradientValueUVW(p);

	lea	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR p$8[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z ; BerconGradient::getGradientValueUVW
	movss	DWORD PTR d$[rsp], xmm0

; 1360 : 	} else { // Others

	jmp	SHORT $LN6@EvalColor
$LN5@EvalColor:

; 1361 : 		d = getGradientValue(sc);

	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValue
	movss	DWORD PTR d$[rsp], xmm0
$LN6@EvalColor:

; 1362 : 	}		 
; 1363 : 
; 1364 : 	// Distortion
; 1365 : 	if (p_disOn && p_distex) d += (1.f - p_distex->EvalMono(sc) * 2.f) * p_disStr;

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+532], 0
	je	$LN8@EvalColor
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+552], 0
	je	SHORT $LN8@EvalColor
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+552]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+552]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+536]
	movss	xmm1, DWORD PTR d$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR d$[rsp], xmm0
$LN8@EvalColor:

; 1366 : 
; 1367 : 	// Limit range
; 1368 : 	if (!limitRange(d)) return res;

	lea	rdx, QWORD PTR d$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?limitRange@BerconGradient@@QEAAHAEAM@Z	; BerconGradient::limitRange
	test	eax, eax
	jne	SHORT $LN9@EvalColor
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN9@EvalColor:

; 1369 : 
; 1370 : 	// Curve
; 1371 : 	if (p_curveOn) d = curve->GetControlCurve(0)->GetValue(sc.CurTime(), d);		

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+576], 0
	je	$LN10@EvalColor
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+568]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+568]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR tv192[rsp], rax
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T3[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	QWORD PTR tv198[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv250[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv250[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR tv192[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv249[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	rdx, QWORD PTR tv198[rsp]
	mov	r9, rdx
	movss	xmm2, DWORD PTR d$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR tv192[rsp]
	mov	rax, QWORD PTR tv249[rsp]
	call	QWORD PTR [rax+1376]
	movss	DWORD PTR d$[rsp], xmm0
$LN10@EvalColor:

; 1372 : 
; 1373 : 	// Get color from gradient
; 1374 : 	res = gradient->getColor(p_reverse?1.f-d:d, sc);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+516], 0
	je	SHORT $LN12@EvalColor
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR tv215[rsp], xmm0
	jmp	SHORT $LN13@EvalColor
$LN12@EvalColor:
	movss	xmm0, DWORD PTR d$[rsp]
	movss	DWORD PTR tv215[rsp], xmm0
$LN13@EvalColor:
	mov	r9, QWORD PTR sc$[rsp]
	movss	xmm2, DWORD PTR tv215[rsp]
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getColor@GradientRamp@@QEAA?AVAColor@@MAEAVShadeContext@@@Z ; GradientRamp::getColor
	lea	rcx, QWORD PTR res$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 1375 : 
; 1376 : 	// Output
; 1377 : 	res = texout->Filter(res);

	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+440]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+440]
	mov	QWORD PTR tv223[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv248[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rax, QWORD PTR tv223[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv248[rsp]
	call	QWORD PTR [rax+1520]
	lea	rcx, QWORD PTR res$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 1378 : 
; 1379 : 	// Shading ready, return results
; 1380 : 	sc.PutCache(this,res);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR res$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+528]

; 1381 : 	return res;

	lea	rdx, QWORD PTR res$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalColor:

; 1382 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 248				; 000000f8H
	pop	rdi
	pop	rsi
	ret	0
?EvalColor@BerconGradient@@UEAA?AVAColor@@AEAVShadeContext@@@Z ENDP ; BerconGradient::EvalColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
n$ = 48
__$ArrayPad$ = 56
this$ = 80
__$ReturnUdt$ = 88
i$ = 96
?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z PROC ; BerconGradient::GetSubTexmapSlotName, COMDAT

; 885  : TSTR BerconGradient::GetSubTexmapSlotName(int i) {		

$LN9:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
	mov	DWORD PTR $T1[rsp], 0

; 886  : 	if (i == MAPTEX_NUM)

	cmp	DWORD PTR i$[rsp], 0
	jne	SHORT $LN2@GetSubTexm

; 887  : 		return TSTR(GetString(IDS_MAP)); 

	mov	ecx, 203				; 000000cbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN2@GetSubTexm:

; 888  : 	if (i == DISTEX_NUM)

	cmp	DWORD PTR i$[rsp], 2
	jne	SHORT $LN3@GetSubTexm

; 889  : 		return TSTR(GetString(IDS_DISTORTION_MAP)); 

	mov	ecx, 13
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN3@GetSubTexm:

; 890  : 	if (i == KEYTEX_NUM)

	cmp	DWORD PTR i$[rsp], 1
	jne	SHORT $LN4@GetSubTexm

; 891  : 		return TSTR(GetString(IDS_KEYTEX)); 

	mov	ecx, 158				; 0000009eH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN4@GetSubTexm:

; 892  : 	
; 893  : 	/*
; 894  : 	TSTR s;
; 895  : 	TCHAR* name = NULL;
; 896  : 	Interval iv;
; 897  : 
; 898  : 	int j = FindSubMtl(i);
; 899  : 	if (j>=0) {
; 900  : 		pblock->GetValue(multi_names,0,name,iv,j);
; 901  : 	if (name) 
; 902  : 		s.
; 903  : 		("(%d) %s",i+1,name);
; 904  : 	else 
; 905  : 		s.printf("(%d)",i+1);
; 906  : 	}
; 907  : 
; 908  : 	else 
; 909  : 	s.printf("(%d)",i+1);
; 910  : 	return s;
; 911  : 	}*/
; 912  : 
; 913  : 	TSTR n;

	lea	rcx, QWORD PTR n$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@XZ
	npad	1

; 914  : //	n.printf("Key #%d", i-3);
; 915  : 	return n;	

	lea	rdx, QWORD PTR n$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@AEBV0@@Z
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	lea	rcx, QWORD PTR n$[rsp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@GetSubTexm:

; 916  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
	int	3
?GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z ENDP ; BerconGradient::GetSubTexmapSlotName
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
n$ = 48
__$ArrayPad$ = 56
this$ = 80
__$ReturnUdt$ = 88
i$ = 96
?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$0
$T1 = 32
$T2 = 40
n$ = 48
__$ArrayPad$ = 56
this$ = 80
__$ReturnUdt$ = 88
i$ = 96
?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR n$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
n$ = 48
__$ArrayPad$ = 56
this$ = 80
__$ReturnUdt$ = 88
i$ = 96
?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN7@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN7@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
n$ = 48
__$ArrayPad$ = 56
this$ = 80
__$ReturnUdt$ = 88
i$ = 96
?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR n$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??GetSubTexmapSlotName@BerconGradient@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconGradient::GetSubTexmapSlotName'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
m$ = 64
?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z PROC	; BerconGradient::SetSubTexmap, COMDAT

; 873  : void BerconGradient::SetSubTexmap(int i, Texmap *m) {	

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 874  : 	if (i >= SUBMAPCOUNT+gradient->numKeys()) return;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+392]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	add	eax, 3
	cmp	DWORD PTR i$[rsp], eax
	jl	SHORT $LN2@SetSubTexm
	jmp	$LN1@SetSubTexm
$LN2@SetSubTexm:

; 875  : 	ReplaceReference(i+REF_OFFSET, m);		

	mov	eax, DWORD PTR i$[rsp]
	add	eax, 5
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 64					; 00000040H
	mov	r9d, 1
	mov	r8, QWORD PTR m$[rsp]
	mov	edx, eax
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 876  : 	if (i == MAPTEX_NUM)

	cmp	DWORD PTR i$[rsp], 0
	jne	SHORT $LN3@SetSubTexm

; 877  : 		gradientmap_param_blk.InvalidateUI(pb_maptex);

	mov	r8d, -1
	mov	dx, 23
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z
	jmp	SHORT $LN4@SetSubTexm
$LN3@SetSubTexm:

; 878  : 	else if (i == KEYTEX_NUM)

	cmp	DWORD PTR i$[rsp], 1
	jne	SHORT $LN5@SetSubTexm

; 879  : 		gradientmap_param_blk.InvalidateUI(pb_keyTex);

	mov	r8d, -1
	mov	dx, 3
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z
	jmp	SHORT $LN6@SetSubTexm
$LN5@SetSubTexm:

; 880  : 	else if (i == DISTEX_NUM)

	cmp	DWORD PTR i$[rsp], 2
	jne	SHORT $LN7@SetSubTexm

; 881  : 		gradientmap_param_blk.InvalidateUI(pb_distex);

	mov	r8d, -1
	mov	dx, 24
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z
$LN7@SetSubTexm:
$LN6@SetSubTexm:
$LN4@SetSubTexm:

; 882  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 384				; 00000180H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
$LN1@SetSubTexm:

; 883  : }

	add	rsp, 40					; 00000028H
	ret	0
?SetSubTexmap@BerconGradient@@UEAAXHPEAVTexmap@@@Z ENDP	; BerconGradient::SetSubTexmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z PROC	; BerconGradient::GetSubTexmap, COMDAT

; 862  : Texmap* BerconGradient::GetSubTexmap(int i) {	

$LN9:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 863  : 	if (i == MAPTEX_NUM)

	cmp	DWORD PTR i$[rsp], 0
	jne	SHORT $LN2@GetSubTexm

; 864  : 		return p_maptex;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+480]
	jmp	SHORT $LN1@GetSubTexm
	jmp	SHORT $LN3@GetSubTexm
$LN2@GetSubTexm:

; 865  : 	else if (i == DISTEX_NUM)

	cmp	DWORD PTR i$[rsp], 2
	jne	SHORT $LN4@GetSubTexm

; 866  : 		return p_distex;	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+488]
	jmp	SHORT $LN1@GetSubTexm
	jmp	SHORT $LN5@GetSubTexm
$LN4@GetSubTexm:

; 867  : 	else if (i == KEYTEX_NUM)

	cmp	DWORD PTR i$[rsp], 1
	jne	SHORT $LN6@GetSubTexm

; 868  : 		return getKeyTex();	

	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 64					; 00000040H
	mov	rcx, rax
	call	?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ ; BerconGradient::getKeyTex
	jmp	SHORT $LN1@GetSubTexm

; 869  : 	else

	jmp	SHORT $LN7@GetSubTexm
$LN6@GetSubTexm:

; 870  : 		return gradient->getSubtex(i-SUBMAPCOUNT);

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 3
	mov	edx, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+392]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex
$LN7@GetSubTexm:
$LN5@GetSubTexm:
$LN3@GetSubTexm:
$LN1@GetSubTexm:

; 871  : }

	add	rsp, 40					; 00000028H
	ret	0
?GetSubTexmap@BerconGradient@@UEAAPEAVTexmap@@H@Z ENDP	; BerconGradient::GetSubTexmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?NumSubTexmaps@BerconGradient@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NumSubTexmaps@BerconGradient@@UEAAHXZ PROC		; BerconGradient::NumSubTexmaps, COMDAT

; 121  : 		int NumSubTexmaps() { return 3 + gradient->numKeys(); } // !! Update submap count !!

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+392]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	add	eax, 3
	add	rsp, 40					; 00000028H
	ret	0
?NumSubTexmaps@BerconGradient@@UEAAHXZ ENDP		; BerconGradient::NumSubTexmaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
mapreq$ = 64
bumpreq$ = 72
?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z PROC ; BerconGradient::MappingsRequired, COMDAT

; 119  : 		void MappingsRequired(int subMtlNum, BitArray& mapreq, BitArray& bumpreq) { berconXYZ.map(subMtlNum, mapreq, bumpreq); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 176				; 000000b0H
	mov	r9, QWORD PTR bumpreq$[rsp]
	mov	r8, QWORD PTR mapreq$[rsp]
	mov	edx, DWORD PTR subMtlNum$[rsp]
	mov	rcx, rax
	call	?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z	; BerconXYZ::map
	add	rsp, 40					; 00000028H
	ret	0
?MappingsRequired@BerconGradient@@UEAAXHAEAVBitArray@@0@Z ENDP ; BerconGradient::MappingsRequired
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?LocalRequirements@BerconGradient@@UEAAKH@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
?LocalRequirements@BerconGradient@@UEAAKH@Z PROC	; BerconGradient::LocalRequirements, COMDAT

; 118  : 		ULONG LocalRequirements(int subMtlNum) { return berconXYZ.req(); }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 176				; 000000b0H
	mov	rcx, rax
	call	?req@BerconXYZ@@QEAAKXZ			; BerconXYZ::req
	add	rsp, 40					; 00000028H
	ret	0
?LocalRequirements@BerconGradient@@UEAAKH@Z ENDP	; BerconGradient::LocalRequirements
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?Validity@BerconGradient@@UEAA?AVInterval@@H@Z
_TEXT	SEGMENT
v$ = 32
__$ArrayPad$ = 40
this$ = 64
__$ReturnUdt$ = 72
t$ = 80
?Validity@BerconGradient@@UEAA?AVInterval@@H@Z PROC	; BerconGradient::Validity, COMDAT

; 680  : Interval BerconGradient::Validity(TimeValue t) {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 681  : 	Interval v;

	lea	rcx, QWORD PTR v$[rsp]
	call	??0Interval@@QEAA@XZ			; Interval::Interval

; 682  : 	Update(t,v);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR v$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1400]

; 683  : 	return ivalid;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+448]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 684  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?Validity@BerconGradient@@UEAA?AVInterval@@H@Z ENDP	; BerconGradient::Validity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?Reset@BerconGradient@@UEAAXXZ
_TEXT	SEGMENT
t$ = 64
tv66 = 72
$T1 = 80
$T2 = 88
this$ = 112
?Reset@BerconGradient@@UEAAXXZ PROC			; BerconGradient::Reset, COMDAT

; 515  : void BerconGradient::Reset() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H

; 516  : 	TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR tv66[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv66[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 517  : 		
; 518  : 	//if (xyzGen) xyzGen->Reset();
; 519  : 	//else ReplaceReference( COORD_REF, GetNewDefaultXYZGen());	
; 520  : 	if (texout) texout->Reset();

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+440], 0
	je	SHORT $LN2@Reset
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+440]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+440]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1408]
	jmp	SHORT $LN3@Reset
$LN2@Reset:

; 521  : 	else ReplaceReference( OUTPUT_REF, GetNewDefaultTextureOutput());

	call	QWORD PTR __imp_?GetNewDefaultTextureOutput@@YAPEAVTextureOutput@@XZ
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z
$LN3@Reset:

; 522  : 	
; 523  : 	if (curve) curve->DeleteMe();

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+568], 0
	je	SHORT $LN4@Reset
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+568]
	call	QWORD PTR __imp_?DeleteMe@ReferenceMaker@@QEAAXXZ
$LN4@Reset:

; 524  : 	curve = (ICurveCtl *) CreateInstance(REF_MAKER_CLASS_ID,CURVE_CONTROL_CLASS_ID);

	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	r8d, 1211792847				; 483a7dcfH
	mov	edx, 341333875				; 14585773H
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rdx, rax
	mov	ecx, 256				; 00000100H
	call	QWORD PTR __imp_?CreateInstance@@YAPEAXKVClass_ID@@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+568], rax

; 525  : #if MAX_RELEASE >= 18900
; 526  : 	curve->RegisterResourceMaker(static_cast<ReferenceTarget*>(this));

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+568]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+568]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1424]

; 527  : #else
; 528  : 	curve->RegisterResourceMaker(static_cast<ReferenceMaker*>(this));
; 529  : #endif
; 530  : 	CurveCtrl::init(curve);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+568]
	call	?init@CurveCtrl@@SAXPEAVICurveCtl@@@Z	; CurveCtrl::init

; 531  : 	pbCurve->SetValue( pb_curve_on, t, FALSE);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+160]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+160]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	call	QWORD PTR [rax+1576]

; 532  : 
; 533  : 	pblock->SetValue( pb_type,				t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	call	QWORD PTR [rax+1576]

; 534  : 	pblock->SetValue( pb_interpolation,		t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 8
	call	QWORD PTR [rax+1576]

; 535  : 	pblock->SetValue( pb_seed,				t, 12345);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 12345				; 00003039H
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	call	QWORD PTR [rax+1576]

; 536  : 	pblock->SetValue( pb_rand_mat,			t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	call	QWORD PTR [rax+1576]

; 537  : 	pblock->SetValue( pb_rand_obj,			t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	call	QWORD PTR [rax+1576]

; 538  : 	pblock->SetValue( pb_rand_par,			t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	call	QWORD PTR [rax+1576]

; 539  : 	pblock->SetValue( pb_rand_tile,			t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	call	QWORD PTR [rax+1576]

; 540  : 	pblock->SetValue( pb_range_min,			t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 15
	call	QWORD PTR [rax+1584]

; 541  : 	pblock->SetValue( pb_range_max,			t, 1.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3f800000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 16
	call	QWORD PTR [rax+1584]

; 542  : 	pblock->SetValue( p_rangeLoop,			t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	movzx	edx, WORD PTR [rdx+508]
	call	QWORD PTR [rax+1576]

; 543  : 	pblock->SetValue( p_reverse,			t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	movzx	edx, WORD PTR [rdx+516]
	call	QWORD PTR [rax+1576]

; 544  : 	pblock->SetValue( pb_dison,				t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 26
	call	QWORD PTR [rax+1576]

; 545  : 	pblock->SetValue( pb_disstr,			t, 0.05f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3d4ccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 25
	call	QWORD PTR [rax+1584]

; 546  : 	pblock->SetValue( pb_gradient_uvw,		t, 0);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	call	QWORD PTR [rax+1576]

; 547  : 	pblock->SetValue( pb_gradient_normal,	t, 0);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	call	QWORD PTR [rax+1576]

; 548  : 	pblock->SetValue( pb_gradient_normal2,	t, 0);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	call	QWORD PTR [rax+1576]

; 549  : 	pblock->SetValue( pb_ior,				t, 1.6f);		

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3fcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 21
	call	QWORD PTR [rax+1584]

; 550  : 
; 551  : 	p_maptex = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+544], 0

; 552  : 	p_distex = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+552], 0

; 553  : 	p_node = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+560], 0

; 554  : 
; 555  : 	gradient->reset();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?reset@GradientRamp@@QEAAXXZ		; GradientRamp::reset

; 556  : 	resetKeys();

	mov	rcx, QWORD PTR this$[rsp]
	call	?resetKeys@BerconGradient@@QEAAXXZ	; BerconGradient::resetKeys

; 557  : 
; 558  : 	berconXYZ.reset(pbXYZ, ivalid, 0, 1, 1, 1);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 176				; 000000b0H
	mov	DWORD PTR [rsp+48], 1
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+168]
	call	?reset@BerconXYZ@@QEAAXPEAVIParamBlock2@@AEAVInterval@@HHHH@Z ; BerconXYZ::reset

; 559  : 
; 560  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 561  : }

	add	rsp, 104				; 00000068H
	ret	0
?Reset@BerconGradient@@UEAAXXZ ENDP			; BerconGradient::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z
_TEXT	SEGMENT
i$1 = 48
keys$2 = 52
f$3 = 56
tv375 = 64
tv613 = 72
tv680 = 80
tv95 = 88
tv677 = 96
tv140 = 104
tv676 = 112
tv156 = 120
tv674 = 128
tv178 = 136
tv672 = 144
tv234 = 152
tv667 = 160
tv250 = 168
tv666 = 176
tv266 = 184
tv665 = 192
tv276 = 200
tv664 = 208
tv294 = 216
tv662 = 224
tv312 = 232
tv661 = 240
tv325 = 248
tv660 = 256
tv338 = 264
tv659 = 272
$T4 = 280
tv639 = 288
tv658 = 296
tv389 = 304
tv657 = 312
tv403 = 320
tv656 = 328
tv417 = 336
tv655 = 344
tv431 = 352
tv654 = 360
tv445 = 368
tv653 = 376
tv459 = 384
tv652 = 392
tv473 = 400
tv651 = 408
tv487 = 416
tv650 = 424
tv501 = 432
tv649 = 440
tv515 = 448
tv648 = 456
tv529 = 464
tv647 = 472
tv543 = 480
tv646 = 488
tv557 = 496
tv645 = 504
tv571 = 512
tv644 = 520
tv585 = 528
tv643 = 536
tv599 = 544
tv642 = 552
$T5 = 560
$T6 = 576
tex$7 = 592
currentKeyColor$8 = 600
pos$9 = 616
col$10 = 624
__$ArrayPad$ = 640
this$ = 672
t$ = 680
valid$ = 688
?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z PROC	; BerconGradient::Update, COMDAT

; 563  : void BerconGradient::Update(TimeValue t, Interval& valid) {	

$LN18:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 664				; 00000298H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 564  : //CharStream *out = thread_local(current_stdout);			
; 565  : 
; 566  : 	if (pblock == NULL || gradient == NULL) return;	

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	je	SHORT $LN6@Update
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+456], 0
	jne	SHORT $LN5@Update
$LN6@Update:
	jmp	$LN1@Update
$LN5@Update:

; 567  : 	if (!ivalid.InInterval(t)) {

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?InInterval@Interval@@QEBAHH@Z
	test	eax, eax
	jne	$LN7@Update

; 568  : 				
; 569  : 		// Set key information		
; 570  : 		if (gradient->selected >= 0 && gradient->selected < countKeys() && pblock->GetMap() != NULL) {			

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], 0
	jl	$LN8@Update
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	QWORD PTR tv680[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?countKeys@BerconGradient@@QEAAHXZ	; BerconGradient::countKeys
	mov	rcx, QWORD PTR tv680[rsp]
	cmp	DWORD PTR [rcx+64], eax
	jge	$LN8@Update
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+2328]
	test	rax, rax
	je	$LN8@Update

; 571  : 			AColor currentKeyColor = pblock->GetAColor(pb_colors, t, gradient->selected);						

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv95[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv677[rsp], rcx
	mov	eax, DWORD PTR [rax+64]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR t$[rsp]
	mov	r8w, 1
	lea	rdx, QWORD PTR currentKeyColor$8[rsp]
	mov	rax, QWORD PTR tv95[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv677[rsp]
	call	QWORD PTR [rax+1728]

; 572  : 			pblock->SetValue(pb_keyCol, t, Color(currentKeyColor.r, currentKeyColor.g, currentKeyColor.b));	

	movss	xmm3, DWORD PTR currentKeyColor$8[rsp+8]
	movss	xmm2, DWORD PTR currentKeyColor$8[rsp+4]
	movss	xmm1, DWORD PTR currentKeyColor$8[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv140[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv676[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 4
	mov	rax, QWORD PTR tv140[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv676[rsp]
	call	QWORD PTR [rax+1544]

; 573  : 			pblock->SetValue(pb_keyNum, t, gradient->selected);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv156[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv674[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, DWORD PTR [rax+64]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 6
	mov	rax, QWORD PTR tv156[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv674[rsp]
	call	QWORD PTR [rax+1576]

; 574  : 			pblock->SetValue(pb_keyPos, t, pblock->GetFloat(pb_positions, t, gradient->selected));				

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv178[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv672[rsp], rcx
	mov	r9d, DWORD PTR [rax+64]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	mov	rax, QWORD PTR tv178[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv672[rsp]
	call	QWORD PTR [rax+1768]
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movaps	xmm3, xmm0
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 5
	call	QWORD PTR [rax+1584]

; 575  : 			pblock->GetDesc()->InvalidateUI(pb_keyCol);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1400]
	mov	r8d, -1
	mov	dx, 4
	mov	rcx, rax
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 576  : 			pblock->GetDesc()->InvalidateUI(pb_keyNum);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1400]
	mov	r8d, -1
	mov	dx, 6
	mov	rcx, rax
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 577  : 			pblock->GetDesc()->InvalidateUI(pb_keyPos);			

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1400]
	mov	r8d, -1
	mov	dx, 5
	mov	rcx, rax
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z
$LN8@Update:

; 578  : 		}
; 579  : 
; 580  : 		ivalid.SetInfinite(); // Start from infinite interval

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	?SetInfinite@Interval@@QEAAXXZ		; Interval::SetInfinite

; 581  : 				
; 582  : 		if (p_maptex) p_maptex->Update(t,ivalid);	

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+544], 0
	je	SHORT $LN9@Update
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+544]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+544]
	mov	QWORD PTR tv234[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv667[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv234[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv667[rsp]
	call	QWORD PTR [rax+1400]
$LN9@Update:

; 583  : 		if (p_distex) p_distex->Update(t,ivalid);			

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+552], 0
	je	SHORT $LN10@Update
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+552]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+552]
	mov	QWORD PTR tv250[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv666[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv250[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv666[rsp]
	call	QWORD PTR [rax+1400]
$LN10@Update:

; 584  : 
; 585  : 		//if (xyzGen != NULL)
; 586  : 			//xyzGen->Update(t,ivalid);
; 587  : 		if (texout != NULL)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+440], 0
	je	SHORT $LN11@Update

; 588  : 			texout->Update(t,ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+440]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+440]
	mov	QWORD PTR tv266[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv665[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv266[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv665[rsp]
	call	QWORD PTR [rax+1400]
$LN11@Update:

; 589  : 
; 590  : 		pbCurve->GetValue(pb_curve_on, t, p_curveOn, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 576				; 00000240H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+160]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+160]
	mov	QWORD PTR tv276[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv664[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR tv276[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv664[rsp]
	call	QWORD PTR [rax+1704]

; 591  : 
; 592  : 		// Load gradient					
; 593  : 		int keys = countKeys();

	mov	rcx, QWORD PTR this$[rsp]
	call	?countKeys@BerconGradient@@QEAAHXZ	; BerconGradient::countKeys
	mov	DWORD PTR keys$2[rsp], eax

; 594  : 		gradient->reset();	

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?reset@GradientRamp@@QEAAXXZ		; GradientRamp::reset

; 595  : 		pblockGetValue(pb_interpolation,gradient->interpolation);	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+456]
	add	rcx, 68					; 00000044H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv294[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv662[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 8
	mov	rax, QWORD PTR tv294[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv662[rsp]
	call	QWORD PTR [rax+1704]

; 596  : 		for (int i=0;i<keys;i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Update
$LN2@Update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Update:
	mov	eax, DWORD PTR keys$2[rsp]
	cmp	DWORD PTR i$1[rsp], eax
	jge	$LN3@Update

; 597  : 			float pos; AColor col; Texmap* tex;

	lea	rcx, QWORD PTR col$10[rsp]
	call	??0AColor@@QEAA@XZ			; AColor::AColor

; 598  : 			pblock->GetValue(pb_positions, t, pos, ivalid, i);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv312[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv661[rsp], rcx
	mov	r8d, DWORD PTR i$1[rsp]
	mov	DWORD PTR [rsp+40], r8d
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR pos$9[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	mov	rax, QWORD PTR tv312[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv661[rsp]
	call	QWORD PTR [rax+1712]

; 599  : 			pblock->GetValue(pb_submaps, t, tex, ivalid, i);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv325[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv660[rsp], rcx
	mov	r8d, DWORD PTR i$1[rsp]
	mov	DWORD PTR [rsp+40], r8d
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR tex$7[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR tv325[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv660[rsp]
	call	QWORD PTR [rax+1640]

; 600  : 			pblock->GetValue(pb_colors, t, col, ivalid, i);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv338[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv659[rsp], rcx
	mov	r8d, DWORD PTR i$1[rsp]
	mov	DWORD PTR [rsp+40], r8d
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR col$10[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 1
	mov	rax, QWORD PTR tv338[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv659[rsp]
	call	QWORD PTR [rax+1664]

; 601  : 			if (i == 0)

	cmp	DWORD PTR i$1[rsp], 0
	jne	SHORT $LN12@Update

; 602  : 				pos = 0.f;

	xorps	xmm0, xmm0
	movss	DWORD PTR pos$9[rsp], xmm0
	jmp	SHORT $LN13@Update
$LN12@Update:

; 603  : 			else if (i == 1)

	cmp	DWORD PTR i$1[rsp], 1
	jne	SHORT $LN14@Update

; 604  : 				pos = 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR pos$9[rsp], xmm0
$LN14@Update:
$LN13@Update:

; 605  : 			gradient->addKey(i,pos,col,tex);

	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR col$10[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rcx, QWORD PTR tex$7[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, rax
	movss	xmm2, DWORD PTR pos$9[rsp]
	mov	edx, DWORD PTR i$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?addKey@GradientRamp@@QEAAXHMVAColor@@PEAVTexmap@@@Z ; GradientRamp::addKey

; 606  : 			if (gradient->getSubtex(i))

	mov	edx, DWORD PTR i$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex
	test	rax, rax
	je	SHORT $LN15@Update

; 607  : 				gradient->getSubtex(i)->Update(t,ivalid);

	mov	edx, DWORD PTR i$1[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex
	mov	QWORD PTR tv375[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR tv375[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv658[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR tv375[rsp]
	mov	rax, QWORD PTR tv658[rsp]
	call	QWORD PTR [rax+1400]
$LN15@Update:

; 608  : 		}	

	jmp	$LN2@Update
$LN3@Update:

; 609  : 		gradient->sort();

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?sort@GradientRamp@@QEAAXXZ		; GradientRamp::sort

; 610  : 		gradient->invalidate();	

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?invalidate@GradientRamp@@QEAAXXZ	; GradientRamp::invalidate

; 611  : 
; 612  : 		// General stuff
; 613  : 		pblockGetValue(pb_seed,				p_seed);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 476				; 000001dcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv389[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv657[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	mov	rax, QWORD PTR tv389[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv657[rsp]
	call	QWORD PTR [rax+1704]

; 614  : 		pblockGetValue(pb_type,				p_type);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 480				; 000001e0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv403[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv656[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	mov	rax, QWORD PTR tv403[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv656[rsp]
	call	QWORD PTR [rax+1704]

; 615  : 		pblockGetValue(pb_rand_obj,			p_randObj);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 484				; 000001e4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv417[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv655[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rax, QWORD PTR tv417[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv655[rsp]
	call	QWORD PTR [rax+1704]

; 616  : 		pblockGetValue(pb_rand_mat,			p_randMat);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 488				; 000001e8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv431[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv654[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	mov	rax, QWORD PTR tv431[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv654[rsp]
	call	QWORD PTR [rax+1704]

; 617  : 		pblockGetValue(pb_rand_par,			p_randPar);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 492				; 000001ecH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv445[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv653[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rax, QWORD PTR tv445[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv653[rsp]
	call	QWORD PTR [rax+1704]

; 618  : 		pblockGetValue(pb_rand_tile,		p_randTile);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 496				; 000001f0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv459[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv652[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	mov	rax, QWORD PTR tv459[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv652[rsp]
	call	QWORD PTR [rax+1704]

; 619  : 		pblockGetValue(pb_range_min,		p_rangeMin);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 500				; 000001f4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv473[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv651[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 15
	mov	rax, QWORD PTR tv473[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv651[rsp]
	call	QWORD PTR [rax+1712]

; 620  : 		pblockGetValue(pb_range_max,		p_rangeMax);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 504				; 000001f8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv487[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv650[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 16
	mov	rax, QWORD PTR tv487[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv650[rsp]
	call	QWORD PTR [rax+1712]

; 621  : 		pblockGetValue(pb_gradient_uvw,		p_uvwType);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 512				; 00000200H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv501[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv649[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	mov	rax, QWORD PTR tv501[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv649[rsp]
	call	QWORD PTR [rax+1704]

; 622  : 		pblockGetValue(pb_gradient_normal,	p_normalType);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 520				; 00000208H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv515[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv648[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	mov	rax, QWORD PTR tv515[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv648[rsp]
	call	QWORD PTR [rax+1704]

; 623  : 		pblockGetValue(pb_gradient_normal2,	p_normalFunction);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 524				; 0000020cH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv529[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv647[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rax, QWORD PTR tv529[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv647[rsp]
	call	QWORD PTR [rax+1704]

; 624  : 		pblockGetValue(pb_ior,				p_ior);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 528				; 00000210H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv543[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv646[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 21
	mov	rax, QWORD PTR tv543[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv646[rsp]
	call	QWORD PTR [rax+1712]

; 625  : 
; 626  : 		pblockGetValue(pb_dison,			p_disOn);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 532				; 00000214H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv557[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv645[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 26
	mov	rax, QWORD PTR tv557[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv645[rsp]
	call	QWORD PTR [rax+1704]

; 627  : 		pblockGetValue(pb_disstr,			p_disStr);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 536				; 00000218H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv571[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv644[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 25
	mov	rax, QWORD PTR tv571[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv644[rsp]
	call	QWORD PTR [rax+1712]

; 628  : 
; 629  : 		pblockGetValue(pb_reverse,			p_reverse);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 516				; 00000204H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv585[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv643[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 9
	mov	rax, QWORD PTR tv585[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv643[rsp]
	call	QWORD PTR [rax+1704]

; 630  : 		pblockGetValue(pb_range_loop,		p_rangeLoop);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 508				; 000001fcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv599[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv642[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	mov	rax, QWORD PTR tv599[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv642[rsp]
	call	QWORD PTR [rax+1704]

; 631  : 		
; 632  : 		pblockGetValue(pb_node,				p_node);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 560				; 00000230H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv613[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv639[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 22
	mov	rax, QWORD PTR tv613[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv639[rsp]
	call	QWORD PTR [rax+1624]

; 633  : 
; 634  : 		if (p_rangeMin > p_rangeMax) // Switch so rangeMax is always bigger

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+504]
	comiss	xmm0, DWORD PTR [rcx+500]
	jae	SHORT $LN16@Update

; 635  : 			{ float f = p_rangeMin; p_rangeMax = p_rangeMin; p_rangeMin = f; }	

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+500]
	movss	DWORD PTR f$3[rsp], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+500]
	movss	DWORD PTR [rax+504], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR f$3[rsp]
	movss	DWORD PTR [rax+500], xmm0
$LN16@Update:

; 636  : 		
; 637  : 		EnableStuff();

	mov	rcx, QWORD PTR this$[rsp]
	call	?EnableStuff@BerconGradient@@QEAAXXZ	; BerconGradient::EnableStuff

; 638  : 
; 639  : 		berconXYZ.update(pbXYZ, t, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 176				; 000000b0H
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+168]
	call	?update@BerconXYZ@@QEAAXPEAVIParamBlock2@@HAEAVInterval@@@Z ; BerconXYZ::update
$LN7@Update:

; 640  : 	}
; 641  : 	
; 642  : 	valid &= ivalid;

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+448]
	mov	rcx, QWORD PTR valid$[rsp]
	call	??_4Interval@@QEAAAEAV0@V0@@Z		; Interval::operator&=
$LN1@Update:

; 643  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 664				; 00000298H
	ret	0
?Update@BerconGradient@@UEAAXHAEAVInterval@@@Z ENDP	; BerconGradient::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z
_TEXT	SEGMENT
this$ = 48
dlg$ = 56
?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z PROC	; BerconGradient::SetDlgThing, COMDAT

; 852  : BOOL BerconGradient::SetDlgThing(ParamDlg* dlg) {	

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 853  : 	/*if (dlg == xyzGenDlg)
; 854  : 		xyzGenDlg->SetThing(xyzGen);
; 855  : 	else*/ if (dlg == texoutDlg)

	mov	rax, QWORD PTR ?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA ; BerconGradient::texoutDlg
	cmp	QWORD PTR dlg$[rsp], rax
	jne	SHORT $LN2@SetDlgThin

; 856  : 		texoutDlg->SetThing(texout);

	mov	rax, QWORD PTR ?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA ; BerconGradient::texoutDlg
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+376]
	mov	rcx, QWORD PTR ?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA ; BerconGradient::texoutDlg
	call	QWORD PTR [rax+24]

; 857  : 	else 

	jmp	SHORT $LN3@SetDlgThin
$LN2@SetDlgThin:

; 858  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@SetDlgThin
$LN3@SetDlgThin:

; 859  : 	return TRUE;

	mov	eax, 1
$LN1@SetDlgThin:

; 860  : }

	add	rsp, 40					; 00000028H
	ret	0
?SetDlgThing@BerconGradient@@UEAAHPEAVParamDlg@@@Z ENDP	; BerconGradient::SetDlgThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z PROC ; BerconGradient::CreateParamDlg, COMDAT

; 839  : ParamDlg* BerconGradient::CreateParamDlg(HWND hwMtlEdit, IMtlParams *imp) {

$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H
	mov	QWORD PTR $T7[rsp], -2

; 840  : 	//xyzGenDlg = xyzGen->CreateParamDlg(hwMtlEdit, imp);
; 841  : 	IAutoMParamDlg* masterDlg = BerconGradientDesc.CreateParamDlgs(hwMtlEdit, imp, this);

	mov	r9, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR imp$[rsp]
	mov	rdx, QWORD PTR hwMtlEdit$[rsp]
	lea	rcx, OFFSET FLAT:?BerconGradientDesc@@3VBerconGradientClassDesc@@A
	call	QWORD PTR __imp_?CreateParamDlgs@ClassDesc2@@QEAAPEAVIAutoMParamDlg@@PEAUHWND__@@PEAVIMtlParams@@PEAVReferenceTarget@@@Z
	mov	QWORD PTR masterDlg$[rsp], rax

; 842  : 	texoutDlg = texout->CreateParamDlg(hwMtlEdit, imp);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+440]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+440]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR imp$[rsp]
	mov	rdx, QWORD PTR hwMtlEdit$[rsp]
	call	QWORD PTR [rax+1424]
	mov	QWORD PTR ?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA, rax ; BerconGradient::texoutDlg

; 843  : 	//masterDlg->AddDlg(xyzGenDlg);	
; 844  : 	masterDlg->AddDlg(texoutDlg);

	mov	rax, QWORD PTR masterDlg$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR ?texoutDlg@BerconGradient@@2PEAVParamDlg@@EA ; BerconGradient::texoutDlg
	mov	rcx, QWORD PTR masterDlg$[rsp]
	call	QWORD PTR [rax+120]

; 845  : 	gradientmap_param_blk.SetUserDlgProc(new BerconGradientDlgProc(this));

	mov	ecx, 24
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@CreatePara
	mov	edx, 24
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@BerconGradientDlgProc@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0BerconGradientDlgProc@@QEAA@PEAVBerconGradient@@@Z ; BerconGradientDlgProc::BerconGradientDlgProc
	mov	QWORD PTR tv144[rsp], rax
	jmp	SHORT $LN4@CreatePara
$LN3@CreatePara:
	mov	QWORD PTR tv144[rsp], 0
$LN4@CreatePara:
	mov	rax, QWORD PTR tv144[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rdx, QWORD PTR $T4[rsp]
	lea	rcx, OFFSET FLAT:?gradientmap_param_blk@@3VParamBlockDesc2@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 846  : 	BerconCurve_param_blk.SetUserDlgProc(new BerconCurveDlgProcGRADIENT(this));

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN5@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rsp]
	call	?__autoclassinit2@BerconCurveDlgProcGRADIENT@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0BerconCurveDlgProcGRADIENT@@QEAA@PEAVBerconGradient@@@Z ; BerconCurveDlgProcGRADIENT::BerconCurveDlgProcGRADIENT
	mov	QWORD PTR tv163[rsp], rax
	jmp	SHORT $LN6@CreatePara
$LN5@CreatePara:
	mov	QWORD PTR tv163[rsp], 0
$LN6@CreatePara:
	mov	rax, QWORD PTR tv163[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	rdx, QWORD PTR $T5[rsp]
	lea	rcx, OFFSET FLAT:?BerconCurve_param_blk@@3VParamBlockDesc2@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 847  : 	xyz_blk.SetUserDlgProc(new BerconXYZDlgProc(this));

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T3[rsp], rax
	cmp	QWORD PTR $T3[rsp], 0
	je	SHORT $LN7@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T3[rsp]
	call	?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ; BerconXYZDlgProc::BerconXYZDlgProc
	mov	QWORD PTR tv190[rsp], rax
	jmp	SHORT $LN8@CreatePara
$LN7@CreatePara:
	mov	QWORD PTR tv190[rsp], 0
$LN8@CreatePara:
	mov	rax, QWORD PTR tv190[rsp]
	mov	QWORD PTR $T6[rsp], rax
	mov	rdx, QWORD PTR $T6[rsp]
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 848  : 	EnableStuff();

	mov	rcx, QWORD PTR this$[rsp]
	call	?EnableStuff@BerconGradient@@QEAAXXZ	; BerconGradient::EnableStuff

; 849  : 	return masterDlg;

	mov	rax, QWORD PTR masterDlg$[rsp]

; 850  : }						

	add	rsp, 136				; 00000088H
	ret	0
?CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z ENDP ; BerconGradient::CreateParamDlg
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconGradient::CreateParamDlg'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconGradient::CreateParamDlg'::`1'::dtor$0
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconGradient::CreateParamDlg'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconGradient::CreateParamDlg'::`1'::dtor$1
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconGradient::CreateParamDlg'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconGradient::CreateParamDlg'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconGradient::CreateParamDlg'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconGradient::CreateParamDlg'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconGradient::CreateParamDlg'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconGradient::CreateParamDlg'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
masterDlg$ = 56
tv144 = 64
tv163 = 72
tv190 = 80
$T4 = 88
$T5 = 96
$T6 = 104
$T7 = 112
this$ = 144
hwMtlEdit$ = 152
imp$ = 160
?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconGradient::CreateParamDlg'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??CreateParamDlg@BerconGradient@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconGradient::CreateParamDlg'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
pCurve$ = 48
t$ = 56
tv71 = 64
tv165 = 72
tv161 = 80
$T1 = 88
$T2 = 96
$T3 = 104
pt$ = 136
__$ArrayPad$ = 168
this$ = 192
curvenum$ = 200
pCCtl$ = 208
?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z PROC ; BerconGradient::NewCurveCreatedCallback, COMDAT

; 104  : 		void NewCurveCreatedCallback(int curvenum, ICurveCtl *pCCtl) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 184				; 000000b8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 105  : 			ICurve *pCurve = NULL; pCurve = pCCtl->GetControlCurve(curvenum); TimeValue t = GetCOREInterface()->GetTime();

	mov	QWORD PTR pCurve$[rsp], 0
	mov	rax, QWORD PTR pCCtl$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR curvenum$[rsp]
	mov	rcx, QWORD PTR pCCtl$[rsp]
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR pCurve$[rsp], rax
	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv71[rsp], rax
	mov	rax, QWORD PTR tv71[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 106  : 			CurvePoint pt = pCurve->GetPoint(t,0); pt.p.y = 0.f; pCurve->SetPoint(t,0,&pt);

	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv165[rsp], rcx
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	lea	rdx, QWORD PTR pt$[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR tv165[rsp]
	call	QWORD PTR [rax+1448]
	xorps	xmm0, xmm0
	movss	DWORD PTR pt$[rsp+4], xmm0
	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	lea	r9, QWORD PTR pt$[rsp]
	xor	r8d, r8d
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1440]

; 107  : 			pCurve->SetPenProperty( RGB(0,0,0)); pCurve->SetDisabledPenProperty( RGB(128,128,128));		

	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1344]
	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 8421504				; 00808080H
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1360]

; 108  : 			pt = pCurve->GetPoint(t,1); pt.p.y = 1.f; pCurve->SetPoint(t,1,&pt);

	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv161[rsp], rcx
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR tv161[rsp]
	call	QWORD PTR [rax+1448]
	mov	rdx, rax
	lea	rcx, QWORD PTR pt$[rsp]
	call	??4CurvePoint@@QEAAAEAV0@AEBV0@@Z	; CurvePoint::operator=
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR pt$[rsp+4], xmm0
	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], 1
	lea	r9, QWORD PTR pt$[rsp]
	mov	r8d, 1
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1440]

; 109  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 184				; 000000b8H
	ret	0
?NewCurveCreatedCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z ENDP ; BerconGradient::NewCurveCreatedCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
pCurve$ = 32
tv86 = 40
this$ = 64
curvenum$ = 72
pCCtl$ = 80
?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z PROC ; BerconGradient::ResetCallback, COMDAT

; 103  : 		void ResetCallback(int curvenum, ICurveCtl *pCCtl) { ICurve *pCurve = NULL; pCurve = pCCtl->GetControlCurve(curvenum); if(pCurve) { pCurve->SetNumPts(2); NewCurveCreatedCallback(curvenum, pCCtl); }}

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR pCurve$[rsp], 0
	mov	rax, QWORD PTR pCCtl$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR curvenum$[rsp]
	mov	rcx, QWORD PTR pCCtl$[rsp]
	call	QWORD PTR [rax+1480]
	mov	QWORD PTR pCurve$[rsp], rax
	cmp	QWORD PTR pCurve$[rsp], 0
	je	SHORT $LN2@ResetCallb
	mov	rax, QWORD PTR pCurve$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 2
	mov	rcx, QWORD PTR pCurve$[rsp]
	call	QWORD PTR [rax+1416]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv86[rsp], rcx
	mov	r8, QWORD PTR pCCtl$[rsp]
	mov	edx, DWORD PTR curvenum$[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv86[rsp]
	call	QWORD PTR [rax+24]
$LN2@ResetCallb:
	add	rsp, 56					; 00000038H
	ret	0
?ResetCallback@BerconGradient@@UEAAXHPEAVICurveCtl@@@Z ENDP ; BerconGradient::ResetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?GetToolTip@BerconGradient@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
iButton$ = 16
ToolTip$ = 24
pCCtl$ = 32
?GetToolTip@BerconGradient@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z PROC ; BerconGradient::GetToolTip, COMDAT

; 102  : 		BOOL GetToolTip(int iButton, TSTR &ToolTip,ICurveCtl *pCCtl) { return TRUE; };

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetToolTip@BerconGradient@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ENDP ; BerconGradient::GetToolTip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?SetCustomImageList@BerconGradient@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
hCTools$ = 16
pCCtl$ = 24
?SetCustomImageList@BerconGradient@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z PROC ; BerconGradient::SetCustomImageList, COMDAT

; 101  : 		BOOL SetCustomImageList(HIMAGELIST &hCTools,ICurveCtl *pCCtl) { return TRUE; };

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SetCustomImageList@BerconGradient@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ENDP ; BerconGradient::SetCustomImageList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.h
;	COMDAT ?gradReset@BerconGradient@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?gradReset@BerconGradient@@UEAAXXZ PROC			; BerconGradient::gradReset, COMDAT

; 95   : 		void gradReset() { resetKeys(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	rcx, rax
	call	?resetKeys@BerconGradient@@QEAAXXZ	; BerconGradient::resetKeys
	add	rsp, 40					; 00000028H
	ret	0
?gradReset@BerconGradient@@UEAAXXZ ENDP			; BerconGradient::gradReset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?gradSelKey@BerconGradient@@UEAAXXZ
_TEXT	SEGMENT
tv94 = 32
tv146 = 40
$T1 = 48
this$ = 80
?gradSelKey@BerconGradient@@UEAAXXZ PROC		; BerconGradient::gradSelKey, COMDAT

; 827  : void BerconGradient::gradSelKey() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 828  : 	static Interval intkeygsk = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA, eax
	jle	SHORT $LN2@gradSelKey
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA, -1
	jne	SHORT $LN2@gradSelKey
	lea	rcx, OFFSET FLAT:?intkeygsk@?1??gradSelKey@BerconGradient@@UEAAXXZ@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA
	call	_Init_thread_footer
$LN2@gradSelKey:

; 829  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN3@gradSelKey
	jmp	$LN1@gradSelKey
$LN3@gradSelKey:

; 830  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 831  : 	Update(GetCOREInterface()->GetTime(),intkeygsk);		

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv94[rsp], rax
	mov	rax, QWORD PTR tv94[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv94[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 136				; 00000088H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx-136]
	mov	QWORD PTR tv146[rsp], rdx
	lea	r8, OFFSET FLAT:?intkeygsk@?1??gradSelKey@BerconGradient@@UEAAXXZ@4VInterval@@A
	mov	edx, eax
	mov	rax, QWORD PTR tv146[rsp]
	call	QWORD PTR [rax+1400]

; 832  : 	pblock->GetDesc()->InvalidateUI(pb_keyTex);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1400]
	mov	r8d, -1
	mov	dx, 3
	mov	rcx, rax
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z
$LN1@gradSelKey:

; 833  : }

	add	rsp, 72					; 00000048H
	ret	0
?gradSelKey@BerconGradient@@UEAAXXZ ENDP		; BerconGradient::gradSelKey
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv94 = 32
tv146 = 40
$T1 = 48
this$ = 80
?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA PROC	; `BerconGradient::gradSelKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA ENDP	; `BerconGradient::gradSelKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv94 = 32
tv146 = 40
$T1 = 48
this$ = 80
?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA PROC	; `BerconGradient::gradSelKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradSelKey@BerconGradient@@UEAAXXZ@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradSelKey@BerconGradient@@UEAAXXZ@4HA ENDP	; `BerconGradient::gradSelKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?gradDelKey@BerconGradient@@UEAAXH@Z
_TEXT	SEGMENT
tv167 = 32
tv173 = 40
$T1 = 48
this$ = 80
n$ = 88
?gradDelKey@BerconGradient@@UEAAXH@Z PROC		; BerconGradient::gradDelKey, COMDAT

; 801  : void BerconGradient::gradDelKey(int n) {

$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 802  : 	static Interval intkeydk = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA, eax
	jle	SHORT $LN2@gradDelKey
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA, -1
	jne	SHORT $LN2@gradDelKey
	lea	rcx, OFFSET FLAT:?intkeydk@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
	call	_Init_thread_footer
$LN2@gradDelKey:

; 803  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN3@gradDelKey
	jmp	$LN1@gradDelKey
$LN3@gradDelKey:

; 804  : 	if (n <= 1) return; // Don't delete keys 0 and 1

	cmp	DWORD PTR n$[rsp], 1
	jg	SHORT $LN4@gradDelKey
	jmp	$LN1@gradDelKey
$LN4@gradDelKey:

; 805  : 	if (n < countKeys()) {

	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	rcx, rax
	call	?countKeys@BerconGradient@@QEAAHXZ	; BerconGradient::countKeys
	cmp	DWORD PTR n$[rsp], eax
	jge	SHORT $LN5@gradDelKey

; 806  : 		pblock->Delete(pb_submaps, n, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	r9d, 1
	mov	r8d, DWORD PTR n$[rsp]
	xor	edx, edx
	call	QWORD PTR [rax+1888]

; 807  : 		pblock->Delete(pb_colors, n, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	r9d, 1
	mov	r8d, DWORD PTR n$[rsp]
	mov	dx, 1
	call	QWORD PTR [rax+1888]

; 808  : 		pblock->Delete(pb_positions, n, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	r9d, 1
	mov	r8d, DWORD PTR n$[rsp]
	mov	dx, 2
	call	QWORD PTR [rax+1888]
$LN5@gradDelKey:

; 809  : 	}
; 810  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 811  : 	Update(GetCOREInterface()->GetTime(),intkeydk);

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv167[rsp], rax
	mov	rax, QWORD PTR tv167[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv167[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 136				; 00000088H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx-136]
	mov	QWORD PTR tv173[rsp], rdx
	lea	r8, OFFSET FLAT:?intkeydk@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4VInterval@@A
	mov	edx, eax
	mov	rax, QWORD PTR tv173[rsp]
	call	QWORD PTR [rax+1400]
$LN1@gradDelKey:

; 812  : }

	add	rsp, 72					; 00000048H
	ret	0
?gradDelKey@BerconGradient@@UEAAXH@Z ENDP		; BerconGradient::gradDelKey
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv167 = 32
tv173 = 40
$T1 = 48
this$ = 80
n$ = 88
?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA PROC ; `BerconGradient::gradDelKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA ENDP ; `BerconGradient::gradDelKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv167 = 32
tv173 = 40
$T1 = 48
this$ = 80
n$ = 88
?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA PROC ; `BerconGradient::gradDelKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradDelKey@BerconGradient@@UEAAXH@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradDelKey@BerconGradient@@UEAAXH@Z@4HA ENDP ; `BerconGradient::gradDelKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?gradMoveKey@BerconGradient@@UEAAXHM@Z
_TEXT	SEGMENT
t$ = 48
tv78 = 56
tv146 = 64
tv152 = 72
$T1 = 80
this$ = 112
n$ = 120
pos$ = 128
?gradMoveKey@BerconGradient@@UEAAXHM@Z PROC		; BerconGradient::gradMoveKey, COMDAT

; 780  : void BerconGradient::gradMoveKey(int n, float pos) {

$LN6:
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	QWORD PTR $T1[rsp], -2

; 781  : 	static Interval intkeygm = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA, eax
	jle	SHORT $LN2@gradMoveKe
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA, -1
	jne	SHORT $LN2@gradMoveKe
	lea	rcx, OFFSET FLAT:?intkeygm@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
	call	_Init_thread_footer
$LN2@gradMoveKe:

; 782  : 	TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv78[rsp], rax
	mov	rax, QWORD PTR tv78[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv78[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 783  : 	if (n < countKeys())

	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 136				; 00000088H
	mov	rcx, rax
	call	?countKeys@BerconGradient@@QEAAHXZ	; BerconGradient::countKeys
	cmp	DWORD PTR n$[rsp], eax
	jge	SHORT $LN3@gradMoveKe

; 784  : 		pblock->SetValue(pb_positions, t, pos, n);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR n$[rsp]
	mov	DWORD PTR [rsp+32], edx
	movss	xmm3, DWORD PTR pos$[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	call	QWORD PTR [rax+1584]
$LN3@gradMoveKe:

; 785  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 786  : 	Update(GetCOREInterface()->GetTime(),intkeygm);

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv146[rsp], rax
	mov	rax, QWORD PTR tv146[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv146[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 136				; 00000088H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx-136]
	mov	QWORD PTR tv152[rsp], rdx
	lea	r8, OFFSET FLAT:?intkeygm@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4VInterval@@A
	mov	edx, eax
	mov	rax, QWORD PTR tv152[rsp]
	call	QWORD PTR [rax+1400]

; 787  : }

	add	rsp, 104				; 00000068H
	ret	0
?gradMoveKey@BerconGradient@@UEAAXHM@Z ENDP		; BerconGradient::gradMoveKey
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
t$ = 48
tv78 = 56
tv146 = 64
tv152 = 72
$T1 = 80
this$ = 112
n$ = 120
pos$ = 128
?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA PROC ; `BerconGradient::gradMoveKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA ENDP ; `BerconGradient::gradMoveKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
t$ = 48
tv78 = 56
tv146 = 64
tv152 = 72
$T1 = 80
this$ = 112
n$ = 120
pos$ = 128
?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA PROC ; `BerconGradient::gradMoveKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradMoveKey@BerconGradient@@UEAAXHM@Z@4HA ENDP ; `BerconGradient::gradMoveKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?gradAddKey@BerconGradient@@UEAAXM@Z
_TEXT	SEGMENT
tv168 = 48
tv174 = 56
$T1 = 64
$T2 = 72
sub$ = 88
col$ = 96
__$ArrayPad$ = 104
this$ = 128
pos$ = 136
?gradAddKey@BerconGradient@@UEAAXM@Z PROC		; BerconGradient::gradAddKey, COMDAT

; 790  : void BerconGradient::gradAddKey(float pos) {

$LN5:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 791  : 	static Interval intkeyga = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA, eax
	jle	SHORT $LN2@gradAddKey
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA, -1
	jne	SHORT $LN2@gradAddKey
	lea	rcx, OFFSET FLAT:?intkeyga@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
	call	_Init_thread_footer
$LN2@gradAddKey:

; 792  : 	AColor* col = &gradient->getColor(pos);			// this makes absolutely no sense to me, What is this supposed to do??

	movss	xmm2, DWORD PTR pos$[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+320]
	call	?getColor@GradientRamp@@QEAA?AVAColor@@M@Z ; GradientRamp::getColor
	mov	QWORD PTR col$[rsp], rax

; 793  : 	Texmap* sub = NULL;

	mov	QWORD PTR sub$[rsp], 0

; 794  : 	pblock->Append(pb_submaps, 1, &sub);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR sub$[rsp]
	mov	r8d, 1
	xor	edx, edx
	call	QWORD PTR [rax+2088]

; 795  : 	pblock->Append(pb_colors, 1, &col);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR col$[rsp]
	mov	r8d, 1
	mov	dx, 1
	call	QWORD PTR [rax+2128]

; 796  : 	pblock->Append(pb_positions, 1, &pos);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR pos$[rsp]
	mov	r8d, 1
	mov	dx, 2
	call	QWORD PTR [rax+2168]

; 797  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 798  : 	Update(GetCOREInterface()->GetTime(),intkeyga);

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv168[rsp], rax
	mov	rax, QWORD PTR tv168[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv168[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 136				; 00000088H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx-136]
	mov	QWORD PTR tv174[rsp], rdx
	lea	r8, OFFSET FLAT:?intkeyga@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4VInterval@@A
	mov	edx, eax
	mov	rax, QWORD PTR tv174[rsp]
	call	QWORD PTR [rax+1400]

; 799  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	ret	0
?gradAddKey@BerconGradient@@UEAAXM@Z ENDP		; BerconGradient::gradAddKey
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv168 = 48
tv174 = 56
$T1 = 64
$T2 = 72
sub$ = 88
col$ = 96
__$ArrayPad$ = 104
this$ = 128
pos$ = 136
?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA PROC ; `BerconGradient::gradAddKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA ENDP ; `BerconGradient::gradAddKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv168 = 48
tv174 = 56
$T1 = 64
$T2 = 72
sub$ = 88
col$ = 96
__$ArrayPad$ = 104
this$ = 128
pos$ = 136
?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA PROC ; `BerconGradient::gradAddKey'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??gradAddKey@BerconGradient@@UEAAXM@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??gradAddKey@BerconGradient@@UEAAXM@Z@4HA ENDP ; `BerconGradient::gradAddKey'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?resetKeys@BerconGradient@@QEAAXXZ
_TEXT	SEGMENT
col1$ = 48
col2$ = 64
floats$ = 80
nullMaps$ = 88
colors$ = 104
__$ArrayPad$ = 120
this$ = 144
?resetKeys@BerconGradient@@QEAAXXZ PROC			; BerconGradient::resetKeys, COMDAT

; 754  : void BerconGradient::resetKeys() {	

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 755  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	jne	SHORT $LN2@resetKeys
	jmp	$LN1@resetKeys
$LN2@resetKeys:

; 756  : 
; 757  : 	//pblock->SetCount(pb_submaps, 2);
; 758  : 	//pblock->SetCount(pb_colors, 2);
; 759  : 	//pblock->SetCount(pb_positions, 2);
; 760  : 	/*
; 761  : 	pblock->SetValue(pb_submaps, t, NULL, 0);
; 762  : 	pblock->SetValue(pb_submaps, t, NULL, 1);
; 763  : 	pblock->SetValue(pb_colors, t, AColor(0.f,0.f,0.f,1.f), 0);
; 764  : 	pblock->SetValue(pb_colors, t, AColor(1.f,1.f,1.f,1.f), 1);
; 765  : 	pblock->SetValue(pb_positions, t, 0.f, 0);
; 766  : 	pblock->SetValue(pb_positions, t, 1.f, 1);
; 767  : */
; 768  : 	Texmap* nullMaps[2] = {NULL, NULL};

	mov	QWORD PTR nullMaps$[rsp], 0
	mov	QWORD PTR nullMaps$[rsp+8], 0

; 769  : 	pblock->Append(pb_submaps, 2, nullMaps);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR nullMaps$[rsp]
	mov	r8d, 2
	xor	edx, edx
	call	QWORD PTR [rax+2088]

; 770  : 	AColor col1 = AColor(0.f,0.f,0.f,1.f); AColor col2 = AColor(1.f,1.f,1.f,1.f);

	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR col1$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR col2$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor

; 771  : 	AColor* colors[2] = {&col1, &col2};

	lea	rax, QWORD PTR col1$[rsp]
	mov	QWORD PTR colors$[rsp], rax
	lea	rax, QWORD PTR col2$[rsp]
	mov	QWORD PTR colors$[rsp+8], rax

; 772  : 	pblock->Append(pb_colors, 2, colors);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR colors$[rsp]
	mov	r8d, 2
	mov	dx, 1
	call	QWORD PTR [rax+2128]

; 773  : 	float floats[2] = {0.f, 1.f};

	xorps	xmm0, xmm0
	movss	DWORD PTR floats$[rsp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR floats$[rsp+4], xmm0

; 774  : 	pblock->Append(pb_positions, 2, floats);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR floats$[rsp]
	mov	r8d, 2
	mov	dx, 2
	call	QWORD PTR [rax+2168]

; 775  : 
; 776  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
$LN1@resetKeys:

; 777  : 	//Update(GetCOREInterface()->GetTime(),Interval());
; 778  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	ret	0
?resetKeys@BerconGradient@@QEAAXXZ ENDP			; BerconGradient::resetKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?countKeys@BerconGradient@@QEAAHXZ
_TEXT	SEGMENT
smallest$ = 32
this$ = 64
?countKeys@BerconGradient@@QEAAHXZ PROC			; BerconGradient::countKeys, COMDAT

; 735  : int BerconGradient::countKeys() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 736  : 	if (!pblock) return 0;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	jne	SHORT $LN2@countKeys
	xor	eax, eax
	jmp	$LN1@countKeys
$LN2@countKeys:

; 737  : 	int smallest = pblock->Count(pb_submaps);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+1864]
	mov	DWORD PTR smallest$[rsp], eax

; 738  : 	if (smallest > pblock->Count(pb_colors)) smallest = pblock->Count(pb_colors);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	dx, 1
	call	QWORD PTR [rax+1864]
	cmp	DWORD PTR smallest$[rsp], eax
	jle	SHORT $LN3@countKeys
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	dx, 1
	call	QWORD PTR [rax+1864]
	mov	DWORD PTR smallest$[rsp], eax
$LN3@countKeys:

; 739  : 	if (smallest > pblock->Count(pb_positions)) smallest = pblock->Count(pb_positions);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	dx, 2
	call	QWORD PTR [rax+1864]
	cmp	DWORD PTR smallest$[rsp], eax
	jle	SHORT $LN4@countKeys
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	mov	dx, 2
	call	QWORD PTR [rax+1864]
	mov	DWORD PTR smallest$[rsp], eax
$LN4@countKeys:

; 740  : 	return smallest;

	mov	eax, DWORD PTR smallest$[rsp]
$LN1@countKeys:

; 741  : }

	add	rsp, 56					; 00000038H
	ret	0
?countKeys@BerconGradient@@QEAAHXZ ENDP			; BerconGradient::countKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?keyPosChanged@BerconGradient@@QEAAXM@Z
_TEXT	SEGMENT
t$1 = 48
tv89 = 56
tv148 = 64
tv159 = 72
tv129 = 80
tv156 = 88
tv154 = 96
$T2 = 104
this$ = 128
pos$ = 136
?keyPosChanged@BerconGradient@@QEAAXM@Z PROC		; BerconGradient::keyPosChanged, COMDAT

; 725  : void BerconGradient::keyPosChanged(float pos) {

$LN7:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T2[rsp], -2

; 726  : 	static Interval intkeypc = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA, eax
	jle	SHORT $LN2@keyPosChan
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA, -1
	jne	SHORT $LN2@keyPosChan
	lea	rcx, OFFSET FLAT:?intkeypc@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
	call	_Init_thread_footer
$LN2@keyPosChan:

; 727  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	jne	SHORT $LN3@keyPosChan
	jmp	$LN1@keyPosChan
$LN3@keyPosChan:

; 728  : 	if (gradient->selected >= 0 && gradient->selected < gradient->numKeys()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], 0
	jl	$LN1@keyPosChan
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	QWORD PTR tv159[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	mov	rcx, QWORD PTR tv159[rsp]
	cmp	DWORD PTR [rcx+64], eax
	jge	$LN1@keyPosChan

; 729  : 		TimeValue t = GetCOREInterface()->GetTime();		

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv89[rsp], rax
	mov	rax, QWORD PTR tv89[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv89[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$1[rsp], eax

; 730  : 		pblock->SetValue(pb_positions, t, pos, gradient->selected);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv129[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv156[rsp], rcx
	mov	eax, DWORD PTR [rax+64]
	mov	DWORD PTR [rsp+32], eax
	movss	xmm3, DWORD PTR pos$[rsp]
	mov	r8d, DWORD PTR t$1[rsp]
	mov	dx, 2
	mov	rax, QWORD PTR tv129[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv156[rsp]
	call	QWORD PTR [rax+1584]

; 731  : 		Update(GetCOREInterface()->GetTime(),intkeypc);

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv148[rsp], rax
	mov	rax, QWORD PTR tv148[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv148[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv154[rsp], rcx
	lea	r8, OFFSET FLAT:?intkeypc@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4VInterval@@A
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv154[rsp]
	call	QWORD PTR [rax+1400]
$LN1@keyPosChan:

; 732  : 	}
; 733  : }

	add	rsp, 120				; 00000078H
	ret	0
?keyPosChanged@BerconGradient@@QEAAXM@Z ENDP		; BerconGradient::keyPosChanged
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
t$1 = 48
tv89 = 56
tv148 = 64
tv159 = 72
tv129 = 80
tv156 = 88
tv154 = 96
$T2 = 104
this$ = 128
pos$ = 136
?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA PROC ; `BerconGradient::keyPosChanged'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA ENDP ; `BerconGradient::keyPosChanged'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
t$1 = 48
tv89 = 56
tv148 = 64
tv159 = 72
tv129 = 80
tv156 = 88
tv154 = 96
$T2 = 104
this$ = 128
pos$ = 136
?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA PROC ; `BerconGradient::keyPosChanged'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??keyPosChanged@BerconGradient@@QEAAXM@Z@4HA ENDP ; `BerconGradient::keyPosChanged'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?keyNumChanged@BerconGradient@@QEAAXH@Z
_TEXT	SEGMENT
t$ = 32
tv80 = 40
tv141 = 48
tv147 = 56
$T1 = 64
this$ = 96
num$ = 104
?keyNumChanged@BerconGradient@@QEAAXH@Z PROC		; BerconGradient::keyNumChanged, COMDAT

; 711  : {

$LN10:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	mov	QWORD PTR $T1[rsp], -2

; 712  : 	static Interval intkeyn = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA, eax
	jle	SHORT $LN2@keyNumChan
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA, -1
	jne	SHORT $LN2@keyNumChan
	lea	rcx, OFFSET FLAT:?intkeyn@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
	call	_Init_thread_footer
$LN2@keyNumChan:

; 713  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	jne	SHORT $LN3@keyNumChan
	jmp	$LN1@keyNumChan
$LN3@keyNumChan:

; 714  : 	TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv80[rsp], rax
	mov	rax, QWORD PTR tv80[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv80[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 715  : 	if (num >= gradient->numKeys())

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	cmp	DWORD PTR num$[rsp], eax
	jl	SHORT $LN4@keyNumChan

; 716  : 		gradient->selected = gradient->numKeys() - 1;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	dec	eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+456]
	mov	DWORD PTR [rcx+64], eax
	jmp	SHORT $LN5@keyNumChan
$LN4@keyNumChan:

; 717  : 	else if (num < 0)

	cmp	DWORD PTR num$[rsp], 0
	jge	SHORT $LN6@keyNumChan

; 718  : 		gradient->selected = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	DWORD PTR [rax+64], 0

; 719  : 	else

	jmp	SHORT $LN5@keyNumChan
$LN6@keyNumChan:

; 720  : 		gradient->selected = num;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	ecx, DWORD PTR num$[rsp]
	mov	DWORD PTR [rax+64], ecx
$LN5@keyNumChan:

; 721  : 	Update(GetCOREInterface()->GetTime(), intkeyn);

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv141[rsp], rax
	mov	rax, QWORD PTR tv141[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv141[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv147[rsp], rcx
	lea	r8, OFFSET FLAT:?intkeyn@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4VInterval@@A
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv147[rsp]
	call	QWORD PTR [rax+1400]
$LN1@keyNumChan:

; 722  : }

	add	rsp, 88					; 00000058H
	ret	0
?keyNumChanged@BerconGradient@@QEAAXH@Z ENDP		; BerconGradient::keyNumChanged
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
t$ = 32
tv80 = 40
tv141 = 48
tv147 = 56
$T1 = 64
this$ = 96
num$ = 104
?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA PROC ; `BerconGradient::keyNumChanged'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA ENDP ; `BerconGradient::keyNumChanged'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
t$ = 32
tv80 = 40
tv141 = 48
tv147 = 56
$T1 = 64
this$ = 96
num$ = 104
?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA PROC ; `BerconGradient::keyNumChanged'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??keyNumChanged@BerconGradient@@QEAAXH@Z@4HA ENDP ; `BerconGradient::keyNumChanged'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z
_TEXT	SEGMENT
t$1 = 48
tv89 = 56
tv148 = 64
tv159 = 72
tv129 = 80
tv156 = 88
tv154 = 96
$T2 = 104
this$ = 128
col$ = 136
?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z PROC	; BerconGradient::keyColorChanged, COMDAT

; 700  : void BerconGradient::keyColorChanged(AColor col) {

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T2[rsp], -2

; 701  : 	static Interval intkeyg = Interval();

	mov	eax, OFFSET FLAT:_Init_thread_epoch
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	cmp	DWORD PTR ?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA, eax
	jle	SHORT $LN2@keyColorCh
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
	call	_Init_thread_header
	cmp	DWORD PTR ?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA, -1
	jne	SHORT $LN2@keyColorCh
	lea	rcx, OFFSET FLAT:?intkeyg@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4VInterval@@A
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	npad	1
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
	call	_Init_thread_footer
$LN2@keyColorCh:

; 702  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	jne	SHORT $LN3@keyColorCh
	jmp	$LN1@keyColorCh
$LN3@keyColorCh:

; 703  : 	if (gradient->selected >= 0 && gradient->selected < gradient->numKeys()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], 0
	jl	$LN1@keyColorCh
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	QWORD PTR tv159[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	mov	rcx, QWORD PTR tv159[rsp]
	cmp	DWORD PTR [rcx+64], eax
	jge	$LN1@keyColorCh

; 704  : 		TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv89[rsp], rax
	mov	rax, QWORD PTR tv89[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv89[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$1[rsp], eax

; 705  : 		pblock->SetValue(pb_colors, t, col, gradient->selected);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv129[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv156[rsp], rcx
	mov	eax, DWORD PTR [rax+64]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR col$[rsp]
	mov	r8d, DWORD PTR t$1[rsp]
	mov	dx, 1
	mov	rax, QWORD PTR tv129[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv156[rsp]
	call	QWORD PTR [rax+1536]

; 706  : 		Update(GetCOREInterface()->GetTime(),intkeyg);

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv148[rsp], rax
	mov	rax, QWORD PTR tv148[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv148[rsp]
	call	QWORD PTR [rax+1448]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv154[rsp], rcx
	lea	r8, OFFSET FLAT:?intkeyg@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4VInterval@@A
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv154[rsp]
	call	QWORD PTR [rax+1400]
$LN1@keyColorCh:

; 707  : 	}
; 708  : }

	add	rsp, 120				; 00000078H
	ret	0
?keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z ENDP	; BerconGradient::keyColorChanged
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
t$1 = 48
tv89 = 56
tv148 = 64
tv159 = 72
tv129 = 80
tv156 = 88
tv154 = 96
$T2 = 104
this$ = 128
col$ = 136
?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA PROC ; `BerconGradient::keyColorChanged'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA ENDP ; `BerconGradient::keyColorChanged'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
t$1 = 48
tv89 = 56
tv148 = 64
tv159 = 72
tv129 = 80
tv156 = 88
tv154 = 96
$T2 = 104
this$ = 128
col$ = 136
?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA PROC ; `BerconGradient::keyColorChanged'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, OFFSET FLAT:?$TSS0@?1??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA
	call	_Init_thread_abort
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??keyColorChanged@BerconGradient@@QEAAXVAColor@@@Z@4HA ENDP ; `BerconGradient::keyColorChanged'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ
_TEXT	SEGMENT
this$ = 48
?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ PROC	; BerconGradient::getKeyTex, COMDAT

; 823  : Texmap* BerconGradient::getKeyTex() {	

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 824  : 	return gradient->getSubtex();

	mov	edx, -1
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?getSubtex@GradientRamp@@QEAAPEAVTexmap@@H@Z ; GradientRamp::getSubtex

; 825  : }

	add	rsp, 40					; 00000028H
	ret	0
?getKeyTex@BerconGradient@@QEAAPEAVTexmap@@XZ ENDP	; BerconGradient::getKeyTex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z
_TEXT	SEGMENT
t$1 = 48
tv75 = 56
tv132 = 64
tv88 = 72
tv91 = 80
this$ = 112
m$ = 120
?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z PROC	; BerconGradient::setKeyTex, COMDAT

; 814  : void BerconGradient::setKeyTex(Texmap* m) {		

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H

; 815  : 	if (gradient->selected >= 0 && gradient->selected < gradient->numKeys()) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], 0
	jl	$LN2@setKeyTex
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	QWORD PTR tv132[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+456]
	call	?numKeys@GradientRamp@@QEAAHXZ		; GradientRamp::numKeys
	mov	rcx, QWORD PTR tv132[rsp]
	cmp	DWORD PTR [rcx+64], eax
	jge	$LN2@setKeyTex

; 816  : 		TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv75[rsp], rax
	mov	rax, QWORD PTR tv75[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv75[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$1[rsp], eax

; 817  : 		gradient->setSubtex(m);		

	mov	rdx, QWORD PTR m$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+456]
	call	?setSubtex@GradientRamp@@QEAAXPEAVTexmap@@@Z ; GradientRamp::setSubtex

; 818  : 		if (pblock) // Max deletes pblock and starts assigining NULL materials, to prevent crash check if pblock still exists

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	je	SHORT $LN3@setKeyTex

; 819  : 			pblock->SetValue(pb_submaps, t, m, gradient->selected);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	QWORD PTR tv88[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv91[rsp], rcx
	mov	eax, DWORD PTR [rax+64]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR m$[rsp]
	mov	r8d, DWORD PTR t$1[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR tv88[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv91[rsp]
	call	QWORD PTR [rax+1512]
$LN3@setKeyTex:
$LN2@setKeyTex:

; 820  : 	}
; 821  : }

	add	rsp, 104				; 00000068H
	ret	0
?setKeyTex@BerconGradient@@QEAAXPEAVTexmap@@@Z ENDP	; BerconGradient::setKeyTex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z
_TEXT	SEGMENT
cti$1 = 32
tv65 = 36
ctt$2 = 40
rs$3 = 44
rp$4 = 48
tv67 = 52
stt$5 = 56
tv173 = 60
t$6 = 64
age$7 = 68
life$8 = 72
ob$9 = 80
obj$10 = 88
ob$11 = 96
ob$12 = 104
tv84 = 112
obj$13 = 120
obj$14 = 128
tv277 = 136
tv273 = 144
$T15 = 152
$T16 = 164
this$ = 192
sc$ = 200
?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z PROC ; BerconGradient::getGradientValue, COMDAT

; 1252 : float BerconGradient::getGradientValue(ShadeContext& sc) {

$LN27:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 184				; 000000b8H

; 1253 : 	switch (p_type) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+480]
	mov	DWORD PTR tv65[rsp], eax
	mov	eax, DWORD PTR tv65[rsp]
	dec	eax
	mov	DWORD PTR tv65[rsp], eax
	cmp	DWORD PTR tv65[rsp], 7
	ja	$LN22@getGradien
	movsxd	rax, DWORD PTR tv65[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN26@getGradien[rcx+rax*4]
	add	rax, rcx
	jmp	rax

; 1254 : 		case 0: { // UVW
; 1255 : 			break; // Handled in main evaluation

	jmp	$LN2@getGradien
$LN7@getGradien:

; 1256 : 		}
; 1257 : 		case 1: { // Normal
; 1258 : 			switch (p_normalFunction) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+524]
	mov	DWORD PTR tv67[rsp], eax
	cmp	DWORD PTR tv67[rsp], 0
	je	SHORT $LN8@getGradien
	cmp	DWORD PTR tv67[rsp], 1
	je	SHORT $LN9@getGradien
	cmp	DWORD PTR tv67[rsp], 2
	je	SHORT $LN10@getGradien
	jmp	$LN4@getGradien
$LN8@getGradien:

; 1259 : 				case 0: { // Perpendicular / Parallel
; 1260 : 					return fabs(getGradientValueNormal(sc));

	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValueNormal
	call	?fabs@@YAMM@Z				; fabs
	jmp	$LN1@getGradien
$LN9@getGradien:

; 1261 : 				}
; 1262 : 				case 1: { // Towards / Away
; 1263 : 					return (getGradientValueNormal(sc) + 1.f) / 2.f;	

	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValueNormal
	addss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR __real@40000000
	jmp	$LN1@getGradien
$LN10@getGradien:

; 1264 : 				}
; 1265 : 				case 2: { // Fresnel
; 1266 : 					// NOTE: Should this get IOR from sc.GetIOR()?
; 1267 : 					//		 I think not since its just a map, not material.
; 1268 : 					//		 You get more predictable behaviour with constant 1.f.
; 1269 : 					static float n1 = 1.0f;								
; 1270 : 					float cti = fabs(getGradientValueNormal(sc));					

	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValueNormal
	call	?fabs@@YAMM@Z				; fabs
	movss	DWORD PTR cti$1[rsp], xmm0

; 1271 : 					float stt = (n1 / p_ior) * sqrt(1 - cti * cti);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR ?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA
	divss	xmm0, DWORD PTR [rax+528]
	movss	DWORD PTR tv84[rsp], xmm0
	movss	xmm1, DWORD PTR cti$1[rsp]
	mulss	xmm1, DWORD PTR cti$1[rsp]
	movss	xmm2, DWORD PTR __real@3f800000
	subss	xmm2, xmm1
	movaps	xmm1, xmm2
	movaps	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	xmm1, DWORD PTR tv84[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR stt$5[rsp], xmm0

; 1272 : 					float ctt = sqrt(1 - stt * stt);

	movss	xmm0, DWORD PTR stt$5[rsp]
	mulss	xmm0, DWORD PTR stt$5[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	movss	DWORD PTR ctt$2[rsp], xmm0

; 1273 : 					float rs = (p_ior * ctt - n1 * cti ) / (p_ior * ctt + n1 * cti);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+528]
	mulss	xmm0, DWORD PTR ctt$2[rsp]
	movss	xmm1, DWORD PTR ?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA
	mulss	xmm1, DWORD PTR cti$1[rsp]
	subss	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+528]
	mulss	xmm1, DWORD PTR ctt$2[rsp]
	movss	xmm2, DWORD PTR ?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA
	mulss	xmm2, DWORD PTR cti$1[rsp]
	addss	xmm1, xmm2
	divss	xmm0, xmm1
	movss	DWORD PTR rs$3[rsp], xmm0

; 1274 : 					rs = rs * rs;

	movss	xmm0, DWORD PTR rs$3[rsp]
	mulss	xmm0, DWORD PTR rs$3[rsp]
	movss	DWORD PTR rs$3[rsp], xmm0

; 1275 : 					float rp = (n1 * ctt - p_ior * cti ) / (n1 * ctt + p_ior * cti);

	movss	xmm0, DWORD PTR ?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA
	mulss	xmm0, DWORD PTR ctt$2[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+528]
	mulss	xmm1, DWORD PTR cti$1[rsp]
	subss	xmm0, xmm1
	movss	xmm1, DWORD PTR ?n1@?L@??getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z@4MA
	mulss	xmm1, DWORD PTR ctt$2[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rax+528]
	mulss	xmm2, DWORD PTR cti$1[rsp]
	addss	xmm1, xmm2
	divss	xmm0, xmm1
	movss	DWORD PTR rp$4[rsp], xmm0

; 1276 : 					rp = rp * rp;

	movss	xmm0, DWORD PTR rp$4[rsp]
	mulss	xmm0, DWORD PTR rp$4[rsp]
	movss	DWORD PTR rp$4[rsp], xmm0

; 1277 : 					return 1.f - 0.5f * (rs + rp);				

	movss	xmm0, DWORD PTR rs$3[rsp]
	addss	xmm0, DWORD PTR rp$4[rsp]
	movss	xmm1, DWORD PTR __real@3f000000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN4@getGradien:
$LN11@getGradien:

; 1278 : 				}
; 1279 : 			}
; 1280 : 		}
; 1281 : 		case 2: { // Distance
; 1282 : 			return getGradientValueDist(sc);		

	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z ; BerconGradient::getGradientValueDist
	jmp	$LN1@getGradien
$LN12@getGradien:

; 1283 : 		}
; 1284 : 		case 3: { // Light
; 1285 : 			return Intens(sc.DiffuseIllum());

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T15[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+568]
	mov	rcx, rax
	call	?Intens@@YAMAEBVColor@@@Z		; Intens
	jmp	$LN1@getGradien
$LN13@getGradien:

; 1286 : 		}
; 1287 : 		case 4: { // Map			
; 1288 : 			return p_maptex?p_maptex->EvalMono(sc):0.f; // TODO: Evaluate submaps color, bump is tougher DELTA shift with BerconSC?

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+544], 0
	je	SHORT $LN24@getGradien
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+544]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+544]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	movss	DWORD PTR tv173[rsp], xmm0
	jmp	SHORT $LN25@getGradien
$LN24@getGradien:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv173[rsp], xmm0
$LN25@getGradien:
	movss	xmm0, DWORD PTR tv173[rsp]
	jmp	$LN1@getGradien
$LN14@getGradien:

; 1289 : 		}
; 1290 : 		case 5: { // Random
; 1291 : 			seedRandomGen(sc);

	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z ; BerconGradient::seedRandomGen

; 1292 : 			return (float)sfrand();		

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	cvtsd2ss xmm0, xmm0
	jmp	$LN1@getGradien
$LN15@getGradien:

; 1293 : 		}
; 1294 : 		case 6: { // Particle age
; 1295 : 			Object *ob = sc.GetEvalObject();		

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+80]
	mov	QWORD PTR ob$9[rsp], rax

; 1296 : 			if (ob && ob->IsParticleSystem()) {				

	cmp	QWORD PTR ob$9[rsp], 0
	je	$LN16@getGradien
	mov	rax, QWORD PTR ob$9[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR ob$9[rsp]
	call	QWORD PTR [rax+1896]
	test	eax, eax
	je	$LN16@getGradien

; 1297 : 				ParticleObject *obj = (ParticleObject*)ob;

	mov	rax, QWORD PTR ob$9[rsp]
	mov	QWORD PTR obj$10[rsp], rax

; 1298 : 				TimeValue t = sc.CurTime();

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	DWORD PTR t$6[rsp], eax

; 1299 : 				TimeValue age  = obj->ParticleAge(t,sc.mtlNum);

	mov	rax, QWORD PTR obj$10[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8d, DWORD PTR [rcx+28]
	mov	edx, DWORD PTR t$6[rsp]
	mov	rcx, QWORD PTR obj$10[rsp]
	call	QWORD PTR [rax+2464]
	mov	DWORD PTR age$7[rsp], eax

; 1300 : 				TimeValue life = obj->ParticleLife(t,sc.mtlNum);

	mov	rax, QWORD PTR obj$10[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8d, DWORD PTR [rcx+28]
	mov	edx, DWORD PTR t$6[rsp]
	mov	rcx, QWORD PTR obj$10[rsp]
	call	QWORD PTR [rax+2472]
	mov	DWORD PTR life$8[rsp], eax

; 1301 : 				if (age>=0 && life>=0) 

	cmp	DWORD PTR age$7[rsp], 0
	jl	SHORT $LN17@getGradien
	cmp	DWORD PTR life$8[rsp], 0
	jl	SHORT $LN17@getGradien

; 1302 : 					return float(age)/float(life);

	cvtsi2ss xmm0, DWORD PTR age$7[rsp]
	cvtsi2ss xmm1, DWORD PTR life$8[rsp]
	divss	xmm0, xmm1
	jmp	$LN1@getGradien
$LN17@getGradien:
$LN16@getGradien:

; 1303 : 			}
; 1304 : 			break;

	jmp	$LN2@getGradien
$LN18@getGradien:

; 1305 : 		}
; 1306 : 		case 7: { // Particle speed
; 1307 : 			Object *ob = sc.GetEvalObject();		

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+80]
	mov	QWORD PTR ob$11[rsp], rax

; 1308 : 			if (ob && ob->IsParticleSystem()) {

	cmp	QWORD PTR ob$11[rsp], 0
	je	SHORT $LN19@getGradien
	mov	rax, QWORD PTR ob$11[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR ob$11[rsp]
	call	QWORD PTR [rax+1896]
	test	eax, eax
	je	SHORT $LN19@getGradien

; 1309 : 				ParticleObject *obj = (ParticleObject*)ob; 

	mov	rax, QWORD PTR ob$11[rsp]
	mov	QWORD PTR obj$13[rsp], rax

; 1310 : 				/*IChkMtlAPI* chkMtlAPI = static_cast<IChkMtlAPI*>(obj->GetInterface(I_NEWMTLINTERFACE));
; 1311 : 				if ((chkMtlAPI&&chkMtlAPI->SupportsParticleIDbyFace()))
; 1312 : 					return (Length(obj->ParticleVelocity(sc.CurTime(),chkMtlAPI->GetParticleFromFace(sc.FaceNumber()))) - p_rangeMin) / (p_rangeMax - p_rangeMin);
; 1313 : 				else*/
; 1314 : 					return Length(obj->ParticleVelocity(sc.CurTime(),sc.mtlNum));

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR obj$13[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv277[rsp], rcx
	mov	rdx, QWORD PTR sc$[rsp]
	mov	r9d, DWORD PTR [rdx+28]
	mov	r8d, eax
	lea	rdx, QWORD PTR $T16[rsp]
	mov	rcx, QWORD PTR obj$13[rsp]
	mov	rax, QWORD PTR tv277[rsp]
	call	QWORD PTR [rax+2440]
	mov	rcx, rax
	call	QWORD PTR __imp_?Length@@YAMAEBVPoint3@@@Z
	jmp	$LN1@getGradien
$LN19@getGradien:

; 1315 : 			}									
; 1316 : 			break;

	jmp	$LN2@getGradien
$LN20@getGradien:

; 1317 : 		}
; 1318 : 		case 8: { // Particle size
; 1319 : 			Object *ob = sc.GetEvalObject();		

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+80]
	mov	QWORD PTR ob$12[rsp], rax

; 1320 : 			if (ob && ob->IsParticleSystem()) {

	cmp	QWORD PTR ob$12[rsp], 0
	je	SHORT $LN21@getGradien
	mov	rax, QWORD PTR ob$12[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR ob$12[rsp]
	call	QWORD PTR [rax+1896]
	test	eax, eax
	je	SHORT $LN21@getGradien

; 1321 : 				ParticleObject *obj = (ParticleObject*)ob;

	mov	rax, QWORD PTR ob$12[rsp]
	mov	QWORD PTR obj$14[rsp], rax

; 1322 : 				return obj->ParticleSize(sc.CurTime(),sc.mtlNum);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR obj$14[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv273[rsp], rcx
	mov	rdx, QWORD PTR sc$[rsp]
	mov	r8d, DWORD PTR [rdx+28]
	mov	edx, eax
	mov	rcx, QWORD PTR obj$14[rsp]
	mov	rax, QWORD PTR tv273[rsp]
	call	QWORD PTR [rax+2448]
	jmp	SHORT $LN1@getGradien
$LN21@getGradien:
$LN22@getGradien:
$LN2@getGradien:

; 1323 : 			}									
; 1324 : 			break;
; 1325 : 		}
; 1326 : 		default:
; 1327 : 			break;
; 1328 : 	}
; 1329 : 	return 0.f;

	xorps	xmm0, xmm0
$LN1@getGradien:

; 1330 : }

	add	rsp, 184				; 000000b8H
	ret	0
$LN26@getGradien:
	DD	$LN7@getGradien
	DD	$LN11@getGradien
	DD	$LN12@getGradien
	DD	$LN13@getGradien
	DD	$LN14@getGradien
	DD	$LN15@getGradien
	DD	$LN18@getGradien
	DD	$LN20@getGradien
?getGradientValue@BerconGradient@@QEAAMAEAVShadeContext@@@Z ENDP ; BerconGradient::getGradientValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z
_TEXT	SEGMENT
tv65 = 32
tv394 = 40
tv70 = 48
tv392 = 56
tv390 = 64
tv388 = 72
tv386 = 80
tv384 = 88
tv350 = 96
tv344 = 104
tv219 = 112
tv342 = 120
tv240 = 128
tv341 = 136
tv340 = 144
tv260 = 152
tv339 = 160
tv230 = 168
tv336 = 176
tv284 = 184
tv305 = 192
tv334 = 200
tv333 = 208
tv332 = 216
tv295 = 224
$T1 = 232
$T2 = 244
$T3 = 256
$T4 = 268
$T5 = 280
$T6 = 292
$T7 = 304
$T8 = 316
$T9 = 328
$T10 = 340
$T11 = 352
$T12 = 364
$T13 = 376
$T14 = 388
$T15 = 400
$T16 = 412
$T17 = 424
$T18 = 436
$T19 = 448
$T20 = 460
$T21 = 472
$T22 = 484
$T23 = 496
$T24 = 508
$T25 = 520
$T26 = 532
$T27 = 544
$T28 = 556
$T29 = 568
$T30 = 580
$T31 = 592
$T32 = 648
this$ = 720
sc$ = 728
?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z PROC ; BerconGradient::getGradientValueNormal, COMDAT

; 1205 : float BerconGradient::getGradientValueNormal(ShadeContext& sc) {

$LN22:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 712				; 000002c8H

; 1206 : 	switch (p_normalType) {	 

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+520]
	mov	DWORD PTR tv65[rsp], eax
	cmp	DWORD PTR tv65[rsp], 11
	ja	$LN2@getGradien
	movsxd	rax, DWORD PTR tv65[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN21@getGradien[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@getGradien:

; 1207 : 		case 0: { // View			 
; 1208 : 			return -DotProd(sc.Normal(), sc.V());

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+144]
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv394[rsp], rcx
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8, QWORD PTR tv394[rsp]
	call	QWORD PTR [r8+104]
	mov	rcx, QWORD PTR tv70[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?DotProd@@YAMAEBVPoint3@@0@Z		; DotProd
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN5@getGradien:

; 1209 : 		}
; 1210 : 		case 1: { // Local X
; 1211 : 			return (sc.VectorTo(sc.Normal(), REF_OBJECT)).x;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv392[rsp], rcx
	mov	r9d, 2
	mov	r8, rax
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv392[rsp]
	call	QWORD PTR [rax+432]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN6@getGradien:

; 1212 : 		}
; 1213 : 		case 2: { // Local Y
; 1214 : 			return (sc.VectorTo(sc.Normal(), REF_OBJECT)).y;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv390[rsp], rcx
	mov	r9d, 2
	mov	r8, rax
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv390[rsp]
	call	QWORD PTR [rax+432]
	movss	xmm0, DWORD PTR [rax+4]
	jmp	$LN1@getGradien
$LN7@getGradien:

; 1215 : 		}
; 1216 : 		case 3: { // Local Z
; 1217 : 			return (sc.VectorTo(sc.Normal(), REF_OBJECT)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv388[rsp], rcx
	mov	r9d, 2
	mov	r8, rax
	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv388[rsp]
	call	QWORD PTR [rax+432]
	movss	xmm0, DWORD PTR [rax+8]
	jmp	$LN1@getGradien
$LN8@getGradien:

; 1218 : 		}
; 1219 : 		case 4: { // World X
; 1220 : 			return (sc.VectorTo(sc.Normal(), REF_WORLD)).x;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv386[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T10[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv386[rsp]
	call	QWORD PTR [rax+432]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN9@getGradien:

; 1221 : 		}
; 1222 : 		case 5: { // World Y
; 1223 : 			return (sc.VectorTo(sc.Normal(), REF_WORLD)).y;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T11[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv384[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T12[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv384[rsp]
	call	QWORD PTR [rax+432]
	movss	xmm0, DWORD PTR [rax+4]
	jmp	$LN1@getGradien
$LN10@getGradien:

; 1224 : 		}
; 1225 : 		case 6: { // World Z
; 1226 : 			return (sc.VectorTo(sc.Normal(), REF_WORLD)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T13[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv350[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T14[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv350[rsp]
	call	QWORD PTR [rax+432]
	movss	xmm0, DWORD PTR [rax+8]
	jmp	$LN1@getGradien
$LN11@getGradien:

; 1227 : 		}
; 1228 : 		case 7: { // Camera X
; 1229 : 			return sc.Normal().x; //(sc.VectorTo(sc.Normal(), REF_CAMERA)).x;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T15[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN12@getGradien:

; 1230 : 		}
; 1231 : 		case 8: { // Camera Y
; 1232 : 			return sc.Normal().y; //(sc.VectorTo(sc.Normal(), REF_CAMERA)).y;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T16[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	movss	xmm0, DWORD PTR [rax+4]
	jmp	$LN1@getGradien
$LN13@getGradien:

; 1233 : 		}
; 1234 : 		case 9: { // Camera Z
; 1235 : 			return sc.Normal().z; //(sc.VectorTo(sc.Normal(), REF_CAMERA)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T17[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+104]
	movss	xmm0, DWORD PTR [rax+8]
	jmp	$LN1@getGradien
$LN14@getGradien:

; 1236 : 		}
; 1237 : 		case 10: { // To Object
; 1238 : 			if (sc.InMtlEditor() || !p_node)

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	SHORT $LN16@getGradien
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+560], 0
	jne	SHORT $LN15@getGradien
$LN16@getGradien:

; 1239 : 				return -DotProd(sc.Normal(), sc.V());												

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T18[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+144]
	mov	QWORD PTR tv219[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv344[rsp], rcx
	lea	rdx, QWORD PTR $T19[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8, QWORD PTR tv344[rsp]
	call	QWORD PTR [r8+104]
	mov	rcx, QWORD PTR tv219[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?DotProd@@YAMAEBVPoint3@@0@Z		; DotProd
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN15@getGradien:

; 1240 : 			return DotProd(sc.Normal(), FNormalize(sc.PointFrom((p_node->GetNodeTM(sc.CurTime())).GetTrans(),REF_WORLD) - sc.P()));							

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T20[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	QWORD PTR tv260[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv342[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv342[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+560]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+560]
	mov	QWORD PTR tv240[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv341[rsp], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, QWORD PTR $T31[rsp]
	mov	rax, QWORD PTR tv240[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv341[rsp]
	call	QWORD PTR [rax+1376]
	mov	rcx, rax
	call	?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ	; Matrix3::GetTrans
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv340[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T21[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv340[rsp]
	call	QWORD PTR [rax+424]
	mov	rcx, QWORD PTR tv260[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T22[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??GPoint3@@QEBA?AV0@AEBV0@@Z
	mov	rdx, rax
	lea	rcx, QWORD PTR $T23[rsp]
	call	QWORD PTR __imp_?FNormalize@@YA?AVPoint3@@AEBV1@@Z
	mov	QWORD PTR tv230[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv339[rsp], rcx
	lea	rdx, QWORD PTR $T24[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8, QWORD PTR tv339[rsp]
	call	QWORD PTR [r8+104]
	mov	rcx, QWORD PTR tv230[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?DotProd@@YAMAEBVPoint3@@0@Z		; DotProd
	jmp	$LN1@getGradien
$LN17@getGradien:

; 1241 : 		}
; 1242 : 		case 11: { // Object Z			
; 1243 : 			if (sc.InMtlEditor() || !p_node)

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	SHORT $LN19@getGradien
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+560], 0
	jne	SHORT $LN18@getGradien
$LN19@getGradien:

; 1244 : 				return -DotProd(sc.Normal(), sc.V());				

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T25[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+144]
	mov	QWORD PTR tv284[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv336[rsp], rcx
	lea	rdx, QWORD PTR $T26[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8, QWORD PTR tv336[rsp]
	call	QWORD PTR [r8+104]
	mov	rcx, QWORD PTR tv284[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?DotProd@@YAMAEBVPoint3@@0@Z		; DotProd
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN18@getGradien:

; 1245 : 			return DotProd(sc.Normal(), FNormalize(sc.VectorFrom(p_node->GetNodeTM(sc.CurTime()).GetRow(2),REF_WORLD)));			

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+560]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+560]
	mov	QWORD PTR tv305[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv334[rsp], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, QWORD PTR $T32[rsp]
	mov	rax, QWORD PTR tv305[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv334[rsp]
	call	QWORD PTR [rax+1376]
	mov	r8d, 2
	lea	rdx, QWORD PTR $T27[rsp]
	mov	rcx, rax
	call	?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z	; Matrix3::GetRow
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv333[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T28[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv333[rsp]
	call	QWORD PTR [rax+440]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T29[rsp]
	call	QWORD PTR __imp_?FNormalize@@YA?AVPoint3@@AEBV1@@Z
	mov	QWORD PTR tv295[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv332[rsp], rcx
	lea	rdx, QWORD PTR $T30[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	r8, QWORD PTR tv332[rsp]
	call	QWORD PTR [r8+104]
	mov	rcx, QWORD PTR tv295[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?DotProd@@YAMAEBVPoint3@@0@Z		; DotProd
	jmp	SHORT $LN1@getGradien
$LN2@getGradien:

; 1246 : 		}
; 1247 : 	}
; 1248 : 	return 0.f;

	xorps	xmm0, xmm0
$LN1@getGradien:

; 1249 : }

	add	rsp, 712				; 000002c8H
	ret	0
	npad	3
$LN21@getGradien:
	DD	$LN4@getGradien
	DD	$LN5@getGradien
	DD	$LN6@getGradien
	DD	$LN7@getGradien
	DD	$LN8@getGradien
	DD	$LN9@getGradien
	DD	$LN10@getGradien
	DD	$LN11@getGradien
	DD	$LN12@getGradien
	DD	$LN13@getGradien
	DD	$LN14@getGradien
	DD	$LN17@getGradien
?getGradientValueNormal@BerconGradient@@QEAAMAEAVShadeContext@@@Z ENDP ; BerconGradient::getGradientValueNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z
_TEXT	SEGMENT
tv65 = 32
tv305 = 36
tv336 = 40
tv334 = 48
tv332 = 56
tv330 = 64
tv328 = 72
tv326 = 80
tv319 = 88
tv318 = 96
tv221 = 104
tv317 = 112
tv239 = 120
tv269 = 128
tv313 = 136
tv311 = 144
tv286 = 152
$T1 = 160
$T2 = 172
$T3 = 184
$T4 = 196
$T5 = 208
$T6 = 220
$T7 = 232
$T8 = 244
$T9 = 256
$T10 = 268
$T11 = 280
$T12 = 292
$T13 = 304
$T14 = 316
$T15 = 328
$T16 = 340
$T17 = 352
$T18 = 364
$T19 = 376
$T20 = 388
$T21 = 400
$T22 = 412
$T23 = 424
$T24 = 436
$T25 = 448
b$26 = 504
a$27 = 520
tm$28 = 536
__$ArrayPad$ = 592
this$ = 624
sc$ = 632
?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z PROC ; BerconGradient::getGradientValueDist, COMDAT

; 1156 : float BerconGradient::getGradientValueDist(ShadeContext& sc) {

$LN22:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 616				; 00000268H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1157 : 	switch (p_normalType) {	 

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+520]
	mov	DWORD PTR tv65[rsp], eax
	cmp	DWORD PTR tv65[rsp], 11
	ja	$LN2@getGradien
	movsxd	rax, DWORD PTR tv65[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN21@getGradien[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@getGradien:

; 1158 : 		case 0: { // View			 
; 1159 : 			return -sc.P().z; //Length(sc.OrigView()); //(sc.PointTo(sc.P(), REF_CAMERA)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	movss	xmm0, DWORD PTR [rax+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN5@getGradien:

; 1160 : 		}
; 1161 : 		case 1: { // Local X
; 1162 : 			return (sc.PointTo(sc.P(), REF_OBJECT)).x;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv336[rsp], rcx
	mov	r9d, 2
	mov	r8, rax
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv336[rsp]
	call	QWORD PTR [rax+416]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN6@getGradien:

; 1163 : 		}
; 1164 : 		case 2: { // Local Y
; 1165 : 			return (sc.PointTo(sc.P(), REF_OBJECT)).y;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv334[rsp], rcx
	mov	r9d, 2
	mov	r8, rax
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv334[rsp]
	call	QWORD PTR [rax+416]
	movss	xmm0, DWORD PTR [rax+4]
	jmp	$LN1@getGradien
$LN7@getGradien:

; 1166 : 		}
; 1167 : 		case 3: { // Local Z
; 1168 : 			return (sc.PointTo(sc.P(), REF_OBJECT)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T8[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv332[rsp], rcx
	mov	r9d, 2
	mov	r8, rax
	lea	rdx, QWORD PTR $T9[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv332[rsp]
	call	QWORD PTR [rax+416]
	movss	xmm0, DWORD PTR [rax+8]
	jmp	$LN1@getGradien
$LN8@getGradien:

; 1169 : 		}
; 1170 : 		case 4: { // World X
; 1171 : 			return (sc.PointTo(sc.P(), REF_WORLD)).x;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T10[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv330[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv330[rsp]
	call	QWORD PTR [rax+416]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN9@getGradien:

; 1172 : 		}
; 1173 : 		case 5: { // World Y
; 1174 : 			return (sc.PointTo(sc.P(), REF_WORLD)).y;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T11[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv328[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T12[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv328[rsp]
	call	QWORD PTR [rax+416]
	movss	xmm0, DWORD PTR [rax+4]
	jmp	$LN1@getGradien
$LN10@getGradien:

; 1175 : 		}
; 1176 : 		case 6: { // World Z
; 1177 : 			return (sc.PointTo(sc.P(), REF_WORLD)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T13[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv326[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T14[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv326[rsp]
	call	QWORD PTR [rax+416]
	movss	xmm0, DWORD PTR [rax+8]
	jmp	$LN1@getGradien
$LN11@getGradien:

; 1178 : 		}
; 1179 : 		case 7: { // Camera X
; 1180 : 			return sc.P().x; //(sc.PointTo(sc.P(), REF_CAMERA)).x;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T15[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN12@getGradien:

; 1181 : 		}
; 1182 : 		case 8: { // Camera Y
; 1183 : 			return sc.P().y; //(sc.PointTo(sc.P(), REF_CAMERA)).y;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T16[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	movss	xmm0, DWORD PTR [rax+4]
	jmp	$LN1@getGradien
$LN13@getGradien:

; 1184 : 		}
; 1185 : 		case 9: { // Camera Z
; 1186 : 			return -sc.P().z; //-(sc.PointTo(sc.P(), REF_CAMERA)).z;

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T17[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	movss	xmm0, DWORD PTR [rax+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN14@getGradien:

; 1187 : 		}
; 1188 : 		case 10: { // To Object
; 1189 : 			if (sc.InMtlEditor() || !p_node)

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	SHORT $LN16@getGradien
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+560], 0
	jne	SHORT $LN15@getGradien
$LN16@getGradien:

; 1190 : 				return -sc.P().z; //(sc.PointTo(sc.P(), REF_CAMERA)).z;			

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T18[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	movss	xmm0, DWORD PTR [rax+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN15@getGradien:

; 1191 : 			return Length((p_node->GetNodeTM(sc.CurTime())).GetTrans() - sc.PointTo(sc.P(), REF_WORLD));

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T19[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv319[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T20[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv319[rsp]
	call	QWORD PTR [rax+416]
	mov	QWORD PTR tv239[rsp], rax
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv318[rsp], rcx
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR tv318[rsp]
	call	QWORD PTR [rdx+56]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+560]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+560]
	mov	QWORD PTR tv221[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv317[rsp], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, QWORD PTR $T25[rsp]
	mov	rax, QWORD PTR tv221[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv317[rsp]
	call	QWORD PTR [rax+1376]
	mov	rcx, rax
	call	?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ	; Matrix3::GetTrans
	mov	rcx, QWORD PTR tv239[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T21[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??GPoint3@@QEBA?AV0@AEBV0@@Z
	mov	rcx, rax
	call	QWORD PTR __imp_?Length@@YAMAEBVPoint3@@@Z
	jmp	$LN1@getGradien
$LN17@getGradien:

; 1192 : 		}
; 1193 : 		case 11: { // Object Z			
; 1194 : 			if (sc.InMtlEditor() || !p_node)

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+24]
	test	eax, eax
	jne	SHORT $LN19@getGradien
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+560], 0
	jne	SHORT $LN18@getGradien
$LN19@getGradien:

; 1195 : 				return -sc.P().z; //(sc.PointTo(sc.P(), REF_CAMERA)).z;			

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T22[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	movss	xmm0, DWORD PTR [rax+8]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	jmp	$LN1@getGradien
$LN18@getGradien:

; 1196 : 			Matrix3 tm = p_node->GetNodeTM(sc.CurTime());

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+56]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+560]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+560]
	mov	QWORD PTR tv269[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv313[rsp], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, QWORD PTR tm$28[rsp]
	mov	rax, QWORD PTR tv269[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv313[rsp]
	call	QWORD PTR [rax+1376]

; 1197 : 			Point3 a = tm.GetTrans() - sc.PointTo(sc.P(), REF_WORLD);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T23[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+208]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv311[rsp], rcx
	mov	r9d, 1
	mov	r8, rax
	lea	rdx, QWORD PTR $T24[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR tv311[rsp]
	call	QWORD PTR [rax+416]
	mov	QWORD PTR tv286[rsp], rax
	lea	rcx, QWORD PTR tm$28[rsp]
	call	?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ	; Matrix3::GetTrans
	mov	rcx, QWORD PTR tv286[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR a$27[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??GPoint3@@QEBA?AV0@AEBV0@@Z

; 1198 : 			Point3 b = FNormalize(tm.GetRow(2));

	mov	r8d, 2
	lea	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR tm$28[rsp]
	call	?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z	; Matrix3::GetRow
	mov	rdx, rax
	lea	rcx, QWORD PTR b$26[rsp]
	call	QWORD PTR __imp_?FNormalize@@YA?AVPoint3@@AEBV1@@Z

; 1199 : 			return (-DotProd(b, a) / Length(b));

	lea	rdx, QWORD PTR a$27[rsp]
	lea	rcx, QWORD PTR b$26[rsp]
	call	?DotProd@@YAMAEBVPoint3@@0@Z		; DotProd
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv305[rsp], xmm0
	lea	rcx, QWORD PTR b$26[rsp]
	call	QWORD PTR __imp_?Length@@YAMAEBVPoint3@@@Z
	movss	xmm1, DWORD PTR tv305[rsp]
	divss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	SHORT $LN1@getGradien
$LN2@getGradien:

; 1200 : 		}
; 1201 : 	}
; 1202 : 	return 0.f;

	xorps	xmm0, xmm0
$LN1@getGradien:

; 1203 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 616				; 00000268H
	ret	0
	npad	2
$LN21@getGradien:
	DD	$LN4@getGradien
	DD	$LN5@getGradien
	DD	$LN6@getGradien
	DD	$LN7@getGradien
	DD	$LN8@getGradien
	DD	$LN9@getGradien
	DD	$LN10@getGradien
	DD	$LN11@getGradien
	DD	$LN12@getGradien
	DD	$LN13@getGradien
	DD	$LN14@getGradien
	DD	$LN17@getGradien
?getGradientValueDist@BerconGradient@@QEAAMAEAVShadeContext@@@Z ENDP ; BerconGradient::getGradientValueDist
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z
_TEXT	SEGMENT
largest$1 = 32
a$2 = 36
tv65 = 40
tv135 = 44
tv211 = 48
$T3 = 52
$T4 = 64
$T5 = 76
this$ = 128
p$ = 136
?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z PROC ; BerconGradient::getGradientValueUVW, COMDAT

; 1059 : float BerconGradient::getGradientValueUVW(Point3 p) {

$LN26:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H

; 1060 : 	// NOTE! Asumes the values are scaled to [0..1, 0..1, 0..1] space
; 1061 : 	switch (p_uvwType) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+512]
	mov	DWORD PTR tv65[rsp], eax
	cmp	DWORD PTR tv65[rsp], 9
	ja	$LN19@getGradien
	movsxd	rax, DWORD PTR tv65[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN25@getGradien[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@getGradien:

; 1062 : 		case 0: { // 1D Linear
; 1063 : 			return p.x;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	jmp	$LN1@getGradien
$LN5@getGradien:

; 1064 : 		}
; 1065 : 		case 1: { // 2D Radial
; 1066 : 			p.x -= .5f; p.y -= .5f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 1067 : 			return 1.f - sqrt(p.x*p.x + p.y*p.y) * 2.f;			

	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN6@getGradien:

; 1068 : 		}
; 1069 : 		case 2: { // 2D Rectangle
; 1070 : 			p.x -= .5f; p.y -= .5f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 1071 : 			p.x = fabs(p.x); p.y = fabs(p.y);

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 1072 : 			return 1.f - (p.x>p.y?p.x:p.y) * 2.f;		

	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx]
	jae	SHORT $LN21@getGradien
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv135[rsp], xmm0
	jmp	SHORT $LN22@getGradien
$LN21@getGradien:
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv135[rsp], xmm0
$LN22@getGradien:
	movss	xmm0, DWORD PTR tv135[rsp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN7@getGradien:

; 1073 : 		}
; 1074 : 		case 3: { // 2D Diagonal
; 1075 : 			return 1.f - fabs(p.x - p.y); // / SQRT2 / 2.f;					

	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx+4]
	call	?fabs@@YAMM@Z				; fabs
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN8@getGradien:

; 1076 : 		}
; 1077 : 		case 4: { // 2D Pong
; 1078 : 			p.z = 0;

	mov	rax, QWORD PTR p$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 1079 : 			p = Normalize(p);

	mov	rdx, QWORD PTR p$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	QWORD PTR __imp_?Normalize@@YA?AVPoint3@@AEBV1@@Z
	mov	rdi, QWORD PTR p$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1080 : 			float a = acos(p.y);

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?acos@@YAMM@Z				; acos
	movss	DWORD PTR a$2[rsp], xmm0

; 1081 : 			if (a > pi / 4.f) a = (float)pi / 2.f - a;

	cvtss2sd xmm0, DWORD PTR a$2[rsp]
	comisd	xmm0, QWORD PTR __real@3fe921fb54442d18
	jbe	SHORT $LN9@getGradien
	movss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@40000000
	subss	xmm0, DWORD PTR a$2[rsp]
	movss	DWORD PTR a$2[rsp], xmm0
$LN9@getGradien:

; 1082 : 			return a / (float)pi * 4.f;

	movss	xmm0, DWORD PTR a$2[rsp]
	divss	xmm0, DWORD PTR __real@40490fdb
	mulss	xmm0, DWORD PTR __real@40800000
	jmp	$LN1@getGradien
$LN10@getGradien:

; 1083 : 		}	
; 1084 : 		case 5: { // 2D Spiral
; 1085 : 			p.x -= .5f; p.y -= .5f;	p.z = 0;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR p$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 1086 : 			p = Normalize(p);

	mov	rdx, QWORD PTR p$[rsp]
	lea	rcx, QWORD PTR $T4[rsp]
	call	QWORD PTR __imp_?Normalize@@YA?AVPoint3@@AEBV1@@Z
	mov	rdi, QWORD PTR p$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1087 : 			if (p.x > 0)

	mov	rax, QWORD PTR p$[rsp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax]
	jae	SHORT $LN11@getGradien

; 1088 : 				return acos(p.y) / (float)pi / 2.f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?acos@@YAMM@Z				; acos
	divss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@40000000
	jmp	$LN1@getGradien

; 1089 : 			else

	jmp	SHORT $LN12@getGradien
$LN11@getGradien:

; 1090 : 				return 1.f - acos(p.y) / (float)pi / 2.f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?acos@@YAMM@Z				; acos
	divss	xmm0, DWORD PTR __real@40490fdb
	divss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN12@getGradien:
$LN13@getGradien:

; 1091 : 		}	
; 1092 : 		case 6: { // 2D Sweep
; 1093 : 			p.z = 0;

	mov	rax, QWORD PTR p$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0

; 1094 : 			p = Normalize(p);

	mov	rdx, QWORD PTR p$[rsp]
	lea	rcx, QWORD PTR $T5[rsp]
	call	QWORD PTR __imp_?Normalize@@YA?AVPoint3@@AEBV1@@Z
	mov	rdi, QWORD PTR p$[rsp]
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 1095 : 			return acos(p.y) / (float)pi * 2.f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?acos@@YAMM@Z				; acos
	divss	xmm0, DWORD PTR __real@40490fdb
	mulss	xmm0, DWORD PTR __real@40000000
	jmp	$LN1@getGradien
$LN14@getGradien:

; 1096 : 		}	
; 1097 : 		case 7: { // 2D Tartan
; 1098 : 			p.x -= .5f; p.y -= .5f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 1099 : 			p.x = fabs(p.x); p.y = fabs(p.y);

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 1100 : 			return 1.f - (p.x<p.y?p.x:p.y)*2.f;		

	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	comiss	xmm0, DWORD PTR [rcx]
	jbe	SHORT $LN23@getGradien
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv211[rsp], xmm0
	jmp	SHORT $LN24@getGradien
$LN23@getGradien:
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR tv211[rsp], xmm0
$LN24@getGradien:
	movss	xmm0, DWORD PTR tv211[rsp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN15@getGradien:

; 1101 : 		}
; 1102 : 		case 8: { // 3D Spherical
; 1103 : 			p.x -= .5f; p.y -= .5f; p.z -= .5f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 1104 : 			return 1.f - sqrt(p.x*p.x + p.y*p.y + p.z*p.z) * 2.f;

	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	$LN1@getGradien
$LN16@getGradien:

; 1105 : 		}
; 1106 : 		case 9: { // 3D Box
; 1107 : 			p.x -= .5f; p.y -= .5f; p.z -= .5f;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	subss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 1108 : 			p.x = fabs(p.x); p.y = fabs(p.y); p.z = fabs(p.z);

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	call	?fabs@@YAMM@Z				; fabs
	mov	rax, QWORD PTR p$[rsp]
	movss	DWORD PTR [rax+8], xmm0

; 1109 : 			float largest = p.x;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR largest$1[rsp], xmm0

; 1110 : 			if (largest < p.y) largest = p.y;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR largest$1[rsp]
	comiss	xmm0, DWORD PTR [rax+4]
	jae	SHORT $LN17@getGradien
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	movss	DWORD PTR largest$1[rsp], xmm0
$LN17@getGradien:

; 1111 : 			if (largest < p.z) largest = p.z;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR largest$1[rsp]
	comiss	xmm0, DWORD PTR [rax+8]
	jae	SHORT $LN18@getGradien
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR largest$1[rsp], xmm0
$LN18@getGradien:

; 1112 : 			return 1.f - largest * 2.f;													

	movss	xmm0, DWORD PTR largest$1[rsp]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	jmp	SHORT $LN1@getGradien
$LN19@getGradien:

; 1113 : 		}
; 1114 : 		default:
; 1115 : 			return 0.f;

	xorps	xmm0, xmm0
	jmp	SHORT $LN1@getGradien

; 1116 : 	}
; 1117 : 	return 0.f;

	xorps	xmm0, xmm0
$LN1@getGradien:

; 1118 : }

	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
	npad	1
$LN25@getGradien:
	DD	$LN4@getGradien
	DD	$LN5@getGradien
	DD	$LN6@getGradien
	DD	$LN7@getGradien
	DD	$LN8@getGradien
	DD	$LN10@getGradien
	DD	$LN13@getGradien
	DD	$LN14@getGradien
	DD	$LN15@getGradien
	DD	$LN16@getGradien
?getGradientValueUVW@BerconGradient@@QEAAMVPoint3@@@Z ENDP ; BerconGradient::getGradientValueUVW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?EnableStuff@BerconGradient@@QEAAXXZ
_TEXT	SEGMENT
map$ = 48
t$1 = 56
tv177 = 60
tv187 = 64
tv197 = 68
tv206 = 72
tv215 = 76
tv224 = 80
tv233 = 84
tv242 = 88
tv251 = 92
tv260 = 96
tv269 = 100
tv280 = 104
tv289 = 108
tv300 = 112
tv315 = 116
tv324 = 120
tv78 = 128
tv86 = 136
tv349 = 144
tv132 = 152
tv348 = 160
tv146 = 168
tv347 = 176
tv160 = 184
tv346 = 192
this$ = 224
?EnableStuff@BerconGradient@@QEAAXXZ PROC		; BerconGradient::EnableStuff, COMDAT

; 645  : void BerconGradient::EnableStuff() {			

$LN39:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 216				; 000000d8H

; 646  : 	if (!pblock) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+152], 0
	jne	SHORT $LN2@EnableStuf
	jmp	$LN1@EnableStuf
$LN2@EnableStuf:

; 647  : 	IParamMap2 *map = pblock->GetMap();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+152]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+152]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+2328]
	mov	QWORD PTR map$[rsp], rax

; 648  : 	if (map) {

	cmp	QWORD PTR map$[rsp], 0
	je	$LN3@EnableStuf

; 649  : 		// Update values
; 650  : 		TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv78[rsp], rax
	mov	rax, QWORD PTR tv78[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv78[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$1[rsp], eax

; 651  : 		pblockGetValue(pb_type, p_type);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 480				; 000001e0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv86[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv349[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$1[rsp]
	mov	dx, 7
	mov	rax, QWORD PTR tv86[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv349[rsp]
	call	QWORD PTR [rax+1704]

; 652  : 		pblockGetValue(pb_dison, p_disOn);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 532				; 00000214H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv132[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv348[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$1[rsp]
	mov	dx, 26
	mov	rax, QWORD PTR tv132[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv348[rsp]
	call	QWORD PTR [rax+1704]

; 653  : 		pblockGetValue(pb_gradient_normal,	p_normalType);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 520				; 00000208H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv146[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv347[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$1[rsp]
	mov	dx, 19
	mov	rax, QWORD PTR tv146[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv347[rsp]
	call	QWORD PTR [rax+1704]

; 654  : 		pblockGetValue(pb_gradient_normal2,	p_normalFunction);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 448				; 000001c0H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 524				; 0000020cH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+152]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+152]
	mov	QWORD PTR tv160[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv346[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$1[rsp]
	mov	dx, 20
	mov	rax, QWORD PTR tv160[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv346[rsp]
	call	QWORD PTR [rax+1704]

; 655  : 		// Key params
; 656  : 		map->Enable(pb_keyTex,		gradient->selected==-1?FALSE:TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], -1
	jne	SHORT $LN5@EnableStuf
	mov	DWORD PTR tv177[rsp], 0
	jmp	SHORT $LN6@EnableStuf
$LN5@EnableStuf:
	mov	DWORD PTR tv177[rsp], 1
$LN6@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv177[rsp]
	mov	dx, 3
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 657  : 		map->Enable(pb_keyPos,		gradient->selected==-1?FALSE:TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], -1
	jne	SHORT $LN7@EnableStuf
	mov	DWORD PTR tv187[rsp], 0
	jmp	SHORT $LN8@EnableStuf
$LN7@EnableStuf:
	mov	DWORD PTR tv187[rsp], 1
$LN8@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv187[rsp]
	mov	dx, 5
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 658  : 		map->Enable(pb_keyCol,		gradient->selected==-1?FALSE:TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+456]
	cmp	DWORD PTR [rax+64], -1
	jne	SHORT $LN9@EnableStuf
	mov	DWORD PTR tv197[rsp], 0
	jmp	SHORT $LN10@EnableStuf
$LN9@EnableStuf:
	mov	DWORD PTR tv197[rsp], 1
$LN10@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv197[rsp]
	mov	dx, 4
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 659  : 		// Random
; 660  : 		map->Enable(pb_seed,		p_type==5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 5
	jne	SHORT $LN11@EnableStuf
	mov	DWORD PTR tv206[rsp], 1
	jmp	SHORT $LN12@EnableStuf
$LN11@EnableStuf:
	mov	DWORD PTR tv206[rsp], 0
$LN12@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv206[rsp]
	mov	dx, 10
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 661  : 		map->Enable(pb_rand_obj,	p_type==5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 5
	jne	SHORT $LN13@EnableStuf
	mov	DWORD PTR tv215[rsp], 1
	jmp	SHORT $LN14@EnableStuf
$LN13@EnableStuf:
	mov	DWORD PTR tv215[rsp], 0
$LN14@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv215[rsp]
	mov	dx, 12
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 662  : 		map->Enable(pb_rand_mat,	p_type==5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 5
	jne	SHORT $LN15@EnableStuf
	mov	DWORD PTR tv224[rsp], 1
	jmp	SHORT $LN16@EnableStuf
$LN15@EnableStuf:
	mov	DWORD PTR tv224[rsp], 0
$LN16@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv224[rsp]
	mov	dx, 11
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 663  : 		map->Enable(pb_rand_par,	p_type==5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 5
	jne	SHORT $LN17@EnableStuf
	mov	DWORD PTR tv233[rsp], 1
	jmp	SHORT $LN18@EnableStuf
$LN17@EnableStuf:
	mov	DWORD PTR tv233[rsp], 0
$LN18@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv233[rsp]
	mov	dx, 13
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 664  : 		map->Enable(pb_rand_tile,	p_type==5?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 5
	jne	SHORT $LN19@EnableStuf
	mov	DWORD PTR tv242[rsp], 1
	jmp	SHORT $LN20@EnableStuf
$LN19@EnableStuf:
	mov	DWORD PTR tv242[rsp], 0
$LN20@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv242[rsp]
	mov	dx, 14
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 665  : 		// Mapped
; 666  : 		map->Enable(pb_maptex,		p_type==4?TRUE:FALSE);		

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 4
	jne	SHORT $LN21@EnableStuf
	mov	DWORD PTR tv251[rsp], 1
	jmp	SHORT $LN22@EnableStuf
$LN21@EnableStuf:
	mov	DWORD PTR tv251[rsp], 0
$LN22@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv251[rsp]
	mov	dx, 23
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 667  : 		// Distortion
; 668  : 		map->Enable(pb_disstr,		p_disOn?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+532], 0
	je	SHORT $LN23@EnableStuf
	mov	DWORD PTR tv260[rsp], 1
	jmp	SHORT $LN24@EnableStuf
$LN23@EnableStuf:
	mov	DWORD PTR tv260[rsp], 0
$LN24@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv260[rsp]
	mov	dx, 25
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 669  : 		map->Enable(pb_distex,		p_disOn?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+532], 0
	je	SHORT $LN25@EnableStuf
	mov	DWORD PTR tv269[rsp], 1
	jmp	SHORT $LN26@EnableStuf
$LN25@EnableStuf:
	mov	DWORD PTR tv269[rsp], 0
$LN26@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv269[rsp]
	mov	dx, 24
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 670  : 		// Normal / Distance
; 671  : 		map->Enable(pb_gradient_normal,		p_type==1||p_type==2?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 1
	je	SHORT $LN27@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 2
	je	SHORT $LN27@EnableStuf
	mov	DWORD PTR tv280[rsp], 0
	jmp	SHORT $LN28@EnableStuf
$LN27@EnableStuf:
	mov	DWORD PTR tv280[rsp], 1
$LN28@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv280[rsp]
	mov	dx, 19
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 672  : 		map->Enable(pb_gradient_normal2,	p_type==1?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 1
	jne	SHORT $LN29@EnableStuf
	mov	DWORD PTR tv289[rsp], 1
	jmp	SHORT $LN30@EnableStuf
$LN29@EnableStuf:
	mov	DWORD PTR tv289[rsp], 0
$LN30@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv289[rsp]
	mov	dx, 20
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 673  : 		map->Enable(pb_ior,					p_type==1&&p_normalFunction==2?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 1
	jne	SHORT $LN31@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+524], 2
	jne	SHORT $LN31@EnableStuf
	mov	DWORD PTR tv300[rsp], 1
	jmp	SHORT $LN32@EnableStuf
$LN31@EnableStuf:
	mov	DWORD PTR tv300[rsp], 0
$LN32@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv300[rsp]
	mov	dx, 21
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 674  : 		map->Enable(pb_node,				(p_type==1||p_type==2)&&(p_normalType==10||p_normalType==11)?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 1
	je	SHORT $LN33@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 2
	jne	SHORT $LN35@EnableStuf
$LN33@EnableStuf:
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+520], 10
	je	SHORT $LN34@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+520], 11
	jne	SHORT $LN35@EnableStuf
$LN34@EnableStuf:
	mov	DWORD PTR tv315[rsp], 1
	jmp	SHORT $LN36@EnableStuf
$LN35@EnableStuf:
	mov	DWORD PTR tv315[rsp], 0
$LN36@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv315[rsp]
	mov	dx, 22
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]

; 675  : 		// UVW
; 676  : 		map->Enable(pb_gradient_uvw,	p_type==0?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+480], 0
	jne	SHORT $LN37@EnableStuf
	mov	DWORD PTR tv324[rsp], 1
	jmp	SHORT $LN38@EnableStuf
$LN37@EnableStuf:
	mov	DWORD PTR tv324[rsp], 0
$LN38@EnableStuf:
	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv324[rsp]
	mov	dx, 18
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+184]
$LN3@EnableStuf:
$LN1@EnableStuf:

; 677  : 	}		
; 678  : }

	add	rsp, 216				; 000000d8H
	ret	0
?EnableStuff@BerconGradient@@QEAAXXZ ENDP		; BerconGradient::EnableStuff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?limitRange@BerconGradient@@QEAAHAEAM@Z
_TEXT	SEGMENT
tv71 = 0
ix$1 = 4
this$ = 32
d$ = 40
?limitRange@BerconGradient@@QEAAHAEAM@Z PROC		; BerconGradient::limitRange, COMDAT

; 1332 : int BerconGradient::limitRange(float& d) {

$LN15:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 1333 : 	d = (d - p_rangeMin) / (p_rangeMax - p_rangeMin);

	mov	rax, QWORD PTR d$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR [rcx+500]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+504]
	subss	xmm1, DWORD PTR [rcx+500]
	divss	xmm0, xmm1
	mov	rax, QWORD PTR d$[rsp]
	movss	DWORD PTR [rax], xmm0

; 1334 : 	switch (p_rangeLoop) {

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+508]
	mov	DWORD PTR tv71[rsp], eax
	cmp	DWORD PTR tv71[rsp], 0
	je	SHORT $LN4@limitRange
	cmp	DWORD PTR tv71[rsp], 1
	je	SHORT $LN5@limitRange
	cmp	DWORD PTR tv71[rsp], 2
	je	SHORT $LN7@limitRange
	cmp	DWORD PTR tv71[rsp], 3
	je	$LN11@limitRange
	jmp	$LN2@limitRange
$LN4@limitRange:

; 1335 : 		case 0: return TRUE; // Gradient handles the stretching by itself

	mov	eax, 1
	jmp	$LN1@limitRange
$LN5@limitRange:

; 1336 : 		case 1: {D_LOOP(d) return TRUE;}

	mov	rax, QWORD PTR d$[rsp]
	cvttss2si eax, DWORD PTR [rax]
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR d$[rsp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR d$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR d$[rsp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax]
	jbe	SHORT $LN6@limitRange
	mov	rax, QWORD PTR d$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	addss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR d$[rsp]
	movss	DWORD PTR [rax], xmm0
$LN6@limitRange:
	mov	eax, 1
	jmp	$LN1@limitRange
$LN7@limitRange:

; 1337 : 		case 2: {D_MIRR(d) return TRUE;}

	mov	rax, QWORD PTR d$[rsp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax]
	jbe	SHORT $LN8@limitRange
	mov	rax, QWORD PTR d$[rsp]
	movss	xmm0, DWORD PTR [rax]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	rax, QWORD PTR d$[rsp]
	movss	DWORD PTR [rax], xmm0
$LN8@limitRange:
	mov	rax, QWORD PTR d$[rsp]
	cvttss2si eax, DWORD PTR [rax]
	mov	DWORD PTR ix$1[rsp], eax
	mov	eax, DWORD PTR ix$1[rsp]
	cdq
	and	eax, 1
	xor	eax, edx
	sub	eax, edx
	test	eax, eax
	jne	SHORT $LN9@limitRange
	cvtsi2ss xmm0, DWORD PTR ix$1[rsp]
	mov	rax, QWORD PTR d$[rsp]
	movss	xmm1, DWORD PTR [rax]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR d$[rsp]
	movss	DWORD PTR [rax], xmm0
	jmp	SHORT $LN10@limitRange
$LN9@limitRange:
	mov	rax, QWORD PTR d$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR [rax]
	cvtsi2ss xmm1, DWORD PTR ix$1[rsp]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR d$[rsp]
	movss	DWORD PTR [rax], xmm0
$LN10@limitRange:
	mov	eax, 1
	jmp	SHORT $LN1@limitRange
$LN11@limitRange:

; 1338 : 		case 3: {if (d<0||d>1) return FALSE;}		

	mov	rax, QWORD PTR d$[rsp]
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR [rax]
	ja	SHORT $LN13@limitRange
	mov	rax, QWORD PTR d$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [rax]
	jae	SHORT $LN12@limitRange
$LN13@limitRange:
	xor	eax, eax
	jmp	SHORT $LN1@limitRange
$LN12@limitRange:
$LN2@limitRange:

; 1339 : 	}
; 1340 : 	return FALSE;

	xor	eax, eax
$LN1@limitRange:

; 1341 : }

	add	rsp, 24
	ret	0
?limitRange@BerconGradient@@QEAAHAEAM@Z ENDP		; BerconGradient::limitRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z
_TEXT	SEGMENT
seed$ = 32
hand$1 = 36
id$2 = 40
chkMtlAPI$3 = 48
ob$4 = 56
tv83 = 64
obj$5 = 72
tv189 = 80
$T6 = 88
this$ = 128
sc$ = 136
?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z PROC ; BerconGradient::seedRandomGen, COMDAT

; 1121 : void BerconGradient::seedRandomGen(ShadeContext& sc) {

$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H

; 1122 : 	int seed = 1;

	mov	DWORD PTR seed$[rsp], 1

; 1123 : 	if (previewMatIDMode) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+540], 0
	je	SHORT $LN2@seedRandom

; 1124 : 		seed = sc.mtlNum;

	mov	rax, QWORD PTR sc$[rsp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR seed$[rsp], eax

; 1125 : 	} else {

	jmp	$LN3@seedRandom
$LN2@seedRandom:

; 1126 : 		if (p_randMat) { 		

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+488], 0
	je	SHORT $LN4@seedRandom

; 1127 : 			seed += sc.mtlNum;

	mov	rax, QWORD PTR sc$[rsp]
	mov	eax, DWORD PTR [rax+28]
	mov	ecx, DWORD PTR seed$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR seed$[rsp], eax
$LN4@seedRandom:

; 1128 : 		}
; 1129 : 		if (p_randObj) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+484], 0
	je	SHORT $LN5@seedRandom

; 1130 : 			int hand = 0;

	mov	DWORD PTR hand$1[rsp], 0

; 1131 : 			if (sc.Node())

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+72]
	test	rax, rax
	je	SHORT $LN6@seedRandom

; 1132 : 				hand = (int)sc.Node()->GetHandle();

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+72]
	mov	QWORD PTR tv83[rsp], rax
	mov	rax, QWORD PTR tv83[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv83[rsp]
	call	QWORD PTR [rax+2600]
	mov	DWORD PTR hand$1[rsp], eax
$LN6@seedRandom:

; 1133 : 
; 1134 : 			seed += hand*(hand*hand*15731 + 789221);

	mov	eax, DWORD PTR hand$1[rsp]
	imul	eax, DWORD PTR hand$1[rsp]
	imul	eax, eax, 15731				; 00003d73H
	add	eax, 789221				; 000c0ae5H
	mov	ecx, DWORD PTR hand$1[rsp]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR seed$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR seed$[rsp], eax
$LN5@seedRandom:

; 1135 : 		}
; 1136 : 		if (p_randPar) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+492], 0
	je	$LN7@seedRandom

; 1137 : 			Object *ob = sc.GetEvalObject();		

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+80]
	mov	QWORD PTR ob$4[rsp], rax

; 1138 : 			if (ob && ob->IsParticleSystem()) {

	cmp	QWORD PTR ob$4[rsp], 0
	je	$LN8@seedRandom
	mov	rax, QWORD PTR ob$4[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR ob$4[rsp]
	call	QWORD PTR [rax+1896]
	test	eax, eax
	je	$LN8@seedRandom

; 1139 : 				ParticleObject *obj = (ParticleObject*)ob;

	mov	rax, QWORD PTR ob$4[rsp]
	mov	QWORD PTR obj$5[rsp], rax

; 1140 : 				IChkMtlAPI* chkMtlAPI = static_cast<IChkMtlAPI*>(obj->GetInterface(I_NEWMTLINTERFACE));

	mov	rax, QWORD PTR obj$5[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 4752				; 00001290H
	mov	rcx, QWORD PTR obj$5[rsp]
	call	QWORD PTR [rax+72]
	mov	QWORD PTR chkMtlAPI$3[rsp], rax

; 1141 : 				if ((chkMtlAPI && chkMtlAPI->SupportsParticleIDbyFace())) {

	cmp	QWORD PTR chkMtlAPI$3[rsp], 0
	je	SHORT $LN9@seedRandom
	mov	rax, QWORD PTR chkMtlAPI$3[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR chkMtlAPI$3[rsp]
	call	QWORD PTR [rax]
	test	eax, eax
	je	SHORT $LN9@seedRandom

; 1142 : 					int id = chkMtlAPI->GetParticleFromFace(sc.FaceNumber());

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+96]
	mov	rcx, QWORD PTR chkMtlAPI$3[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv189[rsp], rcx
	mov	edx, eax
	mov	rcx, QWORD PTR chkMtlAPI$3[rsp]
	mov	rax, QWORD PTR tv189[rsp]
	call	QWORD PTR [rax+8]
	mov	DWORD PTR id$2[rsp], eax

; 1143 : 					seed += id*(id*id*571 + 789221);

	mov	eax, DWORD PTR id$2[rsp]
	imul	eax, DWORD PTR id$2[rsp]
	imul	eax, eax, 571				; 0000023bH
	add	eax, 789221				; 000c0ae5H
	mov	ecx, DWORD PTR id$2[rsp]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR seed$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR seed$[rsp], eax
$LN9@seedRandom:
$LN8@seedRandom:
$LN7@seedRandom:

; 1144 : 				}			
; 1145 : 			}
; 1146 : 		}
; 1147 : 		if (p_randTile) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+496], 0
	je	SHORT $LN10@seedRandom

; 1148 : 			seed += (int)(sc.UVW(99).z);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8d, 99					; 00000063H
	lea	rdx, QWORD PTR $T6[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+296]
	cvttss2si eax, DWORD PTR [rax+8]
	mov	ecx, DWORD PTR seed$[rsp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR seed$[rsp], eax
$LN10@seedRandom:
$LN3@seedRandom:

; 1149 : 		}
; 1150 : 	}
; 1151 : 
; 1152 : 	seed *= p_seed;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR seed$[rsp]
	imul	ecx, DWORD PTR [rax+476]
	mov	eax, ecx
	mov	DWORD PTR seed$[rsp], eax

; 1153 : 	srand(seed*(seed*seed*15731 + 789221));	

	mov	eax, DWORD PTR seed$[rsp]
	imul	eax, DWORD PTR seed$[rsp]
	imul	eax, eax, 15731				; 00003d73H
	add	eax, 789221				; 000c0ae5H
	mov	ecx, DWORD PTR seed$[rsp]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, eax
	call	QWORD PTR __imp_srand

; 1154 : }

	add	rsp, 120				; 00000078H
	ret	0
?seedRandomGen@BerconGradient@@QEAAXAEAVShadeContext@@@Z ENDP ; BerconGradient::seedRandomGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\3dsmaxdlport.h
;	COMDAT ??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z
_TEXT	SEGMENT
hWnd$ = 48
ptr$ = 56
n$ = 64
??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z PROC	; DLSetWindowLongPtr<int>, COMDAT

; 101  : {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 102  : #if !defined( _WIN64 )
; 103  :    // SetWindowLongPtr() maps to SetWindowLong() in 32 bit land; react accordingly to keep
; 104  :    // the compiler happy, even with /Wp64.
; 105  :    return (Type)(static_cast<LONG_PTR>(::SetWindowLongPtr(hWnd, n, (LONG)((LONG_PTR)(ptr)))));
; 106  : #else
; 107  :    return (Type)(static_cast<LONG_PTR>(::SetWindowLongPtr(hWnd, n, (LONG_PTR)(ptr))));

	movsxd	rax, DWORD PTR ptr$[rsp]
	mov	r8, rax
	mov	edx, DWORD PTR n$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_SetWindowLongPtrW

; 108  : #endif
; 109  : }

	add	rsp, 40					; 00000028H
	ret	0
??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z ENDP	; DLSetWindowLongPtr<int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\3dsmaxdlport.h
;	COMDAT ??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z
_TEXT	SEGMENT
hWnd$ = 48
ptr$ = 56
n$ = 64
??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z PROC ; DLSetWindowLongPtr<IGradient * __ptr64>, COMDAT

; 101  : {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 102  : #if !defined( _WIN64 )
; 103  :    // SetWindowLongPtr() maps to SetWindowLong() in 32 bit land; react accordingly to keep
; 104  :    // the compiler happy, even with /Wp64.
; 105  :    return (Type)(static_cast<LONG_PTR>(::SetWindowLongPtr(hWnd, n, (LONG)((LONG_PTR)(ptr)))));
; 106  : #else
; 107  :    return (Type)(static_cast<LONG_PTR>(::SetWindowLongPtr(hWnd, n, (LONG_PTR)(ptr))));

	mov	r8, QWORD PTR ptr$[rsp]
	mov	edx, DWORD PTR n$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_SetWindowLongPtrW

; 108  : #endif
; 109  : }

	add	rsp, 40					; 00000028H
	ret	0
??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z ENDP ; DLSetWindowLongPtr<IGradient * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GIGradient@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GIGradient@@UEAAPEAXI@Z PROC				; IGradient::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1IGradient@@UEAA@XZ			; IGradient::~IGradient
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GIGradient@@UEAAPEAXI@Z ENDP				; IGradient::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@IGradient@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@IGradient@@QEAAX_K@Z PROC		; IGradient::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@IGradient@@QEAAX_K@Z ENDP		; IGradient::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?Execute@IGradient@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
arg1$ = 24
arg2$ = 32
arg3$ = 40
?Execute@IGradient@@UEAA_JH_K00@Z PROC			; IGradient::Execute, COMDAT

; 66   : 	INT_PTR Execute(int cmd, ULONG_PTR arg1=0, ULONG_PTR arg2=0, ULONG_PTR arg3=0) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Execute@IGradient@@UEAA_JH_K00@Z ENDP			; IGradient::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?SetTooltip@IGradient@@UEAAX_NPEB_W@Z
_TEXT	SEGMENT
this$ = 8
bEnable$ = 16
text$ = 24
?SetTooltip@IGradient@@UEAAX_NPEB_W@Z PROC		; IGradient::SetTooltip, COMDAT

; 64   : 	void SetTooltip(bool bEnable, const MCHAR* text) {}

	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetTooltip@IGradient@@UEAAX_NPEB_W@Z ENDP		; IGradient::SetTooltip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?GetHwnd@IGradient@@UEAAPEAUHWND__@@XZ
_TEXT	SEGMENT
this$ = 8
?GetHwnd@IGradient@@UEAAPEAUHWND__@@XZ PROC		; IGradient::GetHwnd, COMDAT

; 61   : 	HWND GetHwnd() { return hWndMain; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	ret	0
?GetHwnd@IGradient@@UEAAPEAUHWND__@@XZ ENDP		; IGradient::GetHwnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?Enable2@IGradient@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
?Enable2@IGradient@@UEAAXH@Z PROC			; IGradient::Enable2, COMDAT

; 59   : 	void Enable2(int cmd) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?Enable2@IGradient@@UEAAXH@Z ENDP			; IGradient::Enable2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?Enable@IGradient@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
?Enable@IGradient@@UEAAXH@Z PROC			; IGradient::Enable, COMDAT

; 57   : 	void Enable(int cmd) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?Enable@IGradient@@UEAAXH@Z ENDP			; IGradient::Enable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?IsEnabled@IGradient@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsEnabled@IGradient@@UEAAHXZ PROC			; IGradient::IsEnabled, COMDAT

; 55   : 	int IsEnabled(){ return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsEnabled@IGradient@@UEAAHXZ ENDP			; IGradient::IsEnabled
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?DeleteMe@IGradient@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteMe@IGradient@@QEAAXXZ PROC			; IGradient::DeleteMe, COMDAT

; 53   : 	void DeleteMe() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteMe
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteMe
$LN3@DeleteMe:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteMe:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteMe@IGradient@@QEAAXXZ ENDP			; IGradient::DeleteMe
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?Disable@IGradient@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?Disable@IGradient@@UEAAXXZ PROC			; IGradient::Disable, COMDAT

; 51   : 	void Disable() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?Disable@IGradient@@UEAAXXZ ENDP			; IGradient::Disable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ?setGradient@IGradient@@QEAAXPEAVGradientRamp@@@Z
_TEXT	SEGMENT
this$ = 8
r$ = 16
?setGradient@IGradient@@QEAAXPEAVGradientRamp@@@Z PROC	; IGradient::setGradient, COMDAT

; 45   : 	void setGradient(GradientRamp *r) { gradient = r; } 

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR r$[rsp]
	mov	QWORD PTR [rax+16], rcx
	ret	0
?setGradient@IGradient@@QEAAXPEAVGradientRamp@@@Z ENDP	; IGradient::setGradient
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ??1IGradient@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1IGradient@@UEAA@XZ PROC				; IGradient::~IGradient, COMDAT

; 38   : 	~IGradient() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7IGradient@@6B@
	mov	QWORD PTR [rax], rcx

; 39   : 		DLSetWindowLongPtr(hWndMain, NULL);

	mov	r8d, -21
	xor	edx, edx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$DLSetWindowLongPtr@H@@YAHPEAUHWND__@@HH@Z ; DLSetWindowLongPtr<int>
	npad	1

; 40   : 		DestroyWindow(hWndMain);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_DestroyWindow
	npad	1

; 41   : 		hWndMain = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 42   : 		gradient = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0

; 43   : 	}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1ICustomControl@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1IGradient@@UEAA@XZ ENDP				; IGradient::~IGradient
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1IGradient@@UEAA@XZ@4HA PROC		; `IGradient::~IGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ICustomControl@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1IGradient@@UEAA@XZ@4HA ENDP		; `IGradient::~IGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1IGradient@@UEAA@XZ@4HA PROC		; `IGradient::~IGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ICustomControl@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1IGradient@@UEAA@XZ@4HA ENDP		; `IGradient::~IGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\igradient.h
;	COMDAT ??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
hwRamp$ = 88
r$ = 96
??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z PROC ; IGradient::IGradient, COMDAT

; 31   : 	IGradient(HWND hwRamp, GradientRamp *r) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ICustomControl@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7IGradient@@6B@
	mov	QWORD PTR [rax], rcx

; 32   : 		hWndMain = hwRamp;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR hwRamp$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 33   : 		gradient = r;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR r$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 34   : 		DLSetWindowLongPtr(hWndMain, this);

	mov	r8d, -21
	mov	rdx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$DLSetWindowLongPtr@PEAVIGradient@@@@YAPEAVIGradient@@PEAUHWND__@@PEAV0@H@Z ; DLSetWindowLongPtr<IGradient * __ptr64>

; 35   : 		IGradient::Execute(I_EXEC_CB_NO_BORDER);

	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 40960				; 0000a000H
	mov	rcx, QWORD PTR this$[rsp]
	call	?Execute@IGradient@@UEAA_JH_K00@Z	; IGradient::Execute
	npad	1

; 36   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 72					; 00000048H
	ret	0
??0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z ENDP ; IGradient::IGradient
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 80
hwRamp$ = 88
r$ = 96
?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA PROC ; `IGradient::IGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ICustomControl@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA ENDP ; `IGradient::IGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
this$ = 80
hwRamp$ = 88
r$ = 96
?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA PROC ; `IGradient::IGradient'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ICustomControl@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0IGradient@@QEAA@PEAUHWND__@@PEAVGradientRamp@@@Z@4HA ENDP ; `IGradient::IGradient'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GGradientRamp@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GGradientRamp@@QEAAPEAXI@Z PROC			; GradientRamp::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1GradientRamp@@QEAA@XZ		; GradientRamp::~GradientRamp
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 72					; 00000048H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GGradientRamp@@QEAAPEAXI@Z ENDP			; GradientRamp::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@GradientRamp@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@GradientRamp@@QEAAX_K@Z PROC		; GradientRamp::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@GradientRamp@@QEAAX_K@Z ENDP		; GradientRamp::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\gradientramp.h
;	COMDAT ?numKeys@GradientRamp@@QEAAHXZ
_TEXT	SEGMENT
this$ = 8
?numKeys@GradientRamp@@QEAAHXZ PROC			; GradientRamp::numKeys, COMDAT

; 107  : 	int numKeys() { return keys; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+56]
	ret	0
?numKeys@GradientRamp@@QEAAHXZ ENDP			; GradientRamp::numKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\gradientramp.h
;	COMDAT ??1GradientRamp@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
$T4 = 56
this$ = 80
??1GradientRamp@@QEAA@XZ PROC				; GradientRamp::~GradientRamp, COMDAT

; 72   : 	~GradientRamp() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 73   : 		delete[] subtex;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]

; 74   : 		delete[] position;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR $T2[rsp], rax
	mov	rcx, QWORD PTR $T2[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]

; 75   : 		delete[] color;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+40]
	mov	QWORD PTR $T3[rsp], rax
	mov	rcx, QWORD PTR $T3[rsp]
	call	QWORD PTR __imp_??_VMaxHeapOperators@@SAXPEAX@Z

; 76   : 		delete[] number;	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+48]
	mov	QWORD PTR $T4[rsp], rax
	mov	rcx, QWORD PTR $T4[rsp]
	call	??_V@YAXPEAX@Z				; operator delete[]

; 77   : 	}

	add	rsp, 72					; 00000048H
	ret	0
??1GradientRamp@@QEAA@XZ ENDP				; GradientRamp::~GradientRamp
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\gradientramp.h
;	COMDAT ??0GradientRamp@@QEAA@PEAVGradientMap@@@Z
_TEXT	SEGMENT
this$ = 48
p$ = 56
??0GradientRamp@@QEAA@PEAVGradientMap@@@Z PROC		; GradientRamp::GradientRamp, COMDAT

; 58   : 	GradientRamp(GradientMap* p) {		

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 59   : 		m_hWnd = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 60   : 		parent = p;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 61   : 		selected = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+64], 0

; 62   : 		interpolation = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+68], 0

; 63   : 		keys = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+56], 0

; 64   : 		subtex = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 65   : 		position = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0

; 66   : 		color = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+40], 0

; 67   : 		number = NULL;		

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+48], 0

; 68   : 		reset();

	mov	rcx, QWORD PTR this$[rsp]
	call	?reset@GradientRamp@@QEAAXXZ		; GradientRamp::reset

; 69   : 		sort();		

	mov	rcx, QWORD PTR this$[rsp]
	call	?sort@GradientRamp@@QEAAXXZ		; GradientRamp::sort

; 70   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0GradientRamp@@QEAA@PEAVGradientMap@@@Z ENDP		; GradientRamp::GradientRamp
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0GradientMap@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0GradientMap@@QEAA@XZ PROC				; GradientMap::GradientMap, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7GradientMap@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0GradientMap@@QEAA@XZ ENDP				; GradientMap::GradientMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
mapreq$ = 64
bumpreq$ = 72
?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z PROC		; BerconXYZ::map, COMDAT

; 327  : 	void map(int subMtlNum, BitArray& mapreq, BitArray& bumpreq) { if (mappingType==0 || mappingType==1) mapreq.Set(mappingChannel); }	

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@map
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@map
$LN3@map:
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR mapreq$[rsp]
	call	?Set@BitArray@@QEAAXH@Z			; BitArray::Set
$LN2@map:
	add	rsp, 40					; 00000028H
	ret	0
?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z ENDP		; BerconXYZ::map
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?req@BerconXYZ@@QEAAKXZ
_TEXT	SEGMENT
this$ = 8
?req@BerconXYZ@@QEAAKXZ PROC				; BerconXYZ::req, COMDAT

; 326  : 	ULONG req() { if (mappingType==0 || mappingType==1) return MTLREQ_UV; return 0; };

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@req
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@req
$LN3@req:
	mov	eax, 16
	jmp	SHORT $LN1@req
$LN2@req:
	xor	eax, eax
$LN1@req:
	ret	0
?req@BerconXYZ@@QEAAKXZ ENDP				; BerconXYZ::req
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0BerconXYZ@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0BerconXYZ@@QEAA@XZ PROC				; BerconXYZ::BerconXYZ, COMDAT

; 323  : 	BerconXYZ() {offX=0; offY=0; offZ=0; mode2D = FALSE; update();}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 314  : 	bool variance;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 120				; 00000078H
	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 323  : 	BerconXYZ() {offX=0; offY=0; offZ=0; mode2D = FALSE; update();}

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 156				; 0000009cH
	mov	rcx, rax
	call	??0Matrix3@@QEAA@XZ			; Matrix3::Matrix3
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 208				; 000000d0H
	mov	rcx, rax
	call	??0Matrix3@@QEAA@XZ			; Matrix3::Matrix3
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+260], 0
	mov	rcx, QWORD PTR this$[rsp]
	call	?update@BerconXYZ@@QEAAXXZ		; BerconXYZ::update
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0BerconXYZ@@QEAA@XZ ENDP				; BerconXYZ::BerconXYZ
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconXYZDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconXYZDlgProc@@UEAAPEAXI@Z PROC			; BerconXYZDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconXYZDlgProc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconXYZDlgProc@@UEAAPEAXI@Z ENDP			; BerconXYZDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z PROC	; BerconXYZDlgProc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z ENDP	; BerconXYZDlgProc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconXYZDlgProc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconXYZDlgProc@@UEAA@XZ PROC			; BerconXYZDlgProc::~BerconXYZDlgProc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconXYZDlgProc@@UEAA@XZ ENDP			; BerconXYZDlgProc::~BerconXYZDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA PROC	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA ENDP	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA PROC	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA ENDP	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
m$ = 16
?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconXYZDlgProc::SetThing, COMDAT

; 296  : 		void SetThing(ReferenceTarget *m) { reftarg = m; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	ret	0
?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconXYZDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconXYZDlgProc@@UEAAXXZ PROC		; BerconXYZDlgProc::DeleteThis, COMDAT

; 295  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconXYZDlgProc@@UEAAXXZ ENDP		; BerconXYZDlgProc::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwndMap$ = 48
tv64 = 56
custButton$ = 64
tv244 = 72
tv265 = 80
tv286 = 88
tv307 = 96
tv254 = 104
tv275 = 112
tv296 = 120
tv317 = 128
curIndex$1 = 136
__$ArrayPad$ = 144
this$ = 176
t$ = 184
map$ = 192
hWnd$ = 200
msg$ = 208
wParam$ = 216
IParam$ = 224
?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconXYZDlgProc::DlgProc, COMDAT

; 239  : 		INT_PTR DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM IParam) {

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 240  : 			HWND hwndMap;
; 241  : 			ICustButton* custButton;
; 242  : 			switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 24
	je	$LN5@DlgProc
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN4@DlgProc
	jmp	$LN6@DlgProc
$LN4@DlgProc:

; 243  : 				case WM_INITDIALOG:
; 244  : 					custButton = GetICustButton(GetDlgItem(hWnd, IDC_LOCK));

	mov	edx, 1115				; 0000045bH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	call	QWORD PTR __imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z
	mov	QWORD PTR custButton$[rsp], rax

; 245  : 					custButton->SetText(_T("L"));

	mov	rax, QWORD PTR custButton$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_13PHJMHGG@?$AAL?$AA?$AA@
	mov	rcx, QWORD PTR custButton$[rsp]
	call	QWORD PTR [rax+88]

; 246  : 					ReleaseICustButton(custButton);

	mov	rcx, QWORD PTR custButton$[rsp]
	call	QWORD PTR __imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z

; 247  : 
; 248  : 					// UVW
; 249  : 					hwndMap = GetDlgItem(hWnd, IDC_TYPE);  

	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 250  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_UVW));

	mov	ecx, 217				; 000000d9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 251  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_UVW2));

	mov	ecx, 222				; 000000deH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 252  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_OBJ));

	mov	ecx, 218				; 000000daH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 253  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_WOR));

	mov	ecx, 219				; 000000dbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 254  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_SCR));

	mov	ecx, 220				; 000000dcH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 255  : 
; 256  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_X);  

	mov	edx, 1065				; 00000429H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 257  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 258  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 259  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 260  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 261  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 262  : 
; 263  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_Y);  

	mov	edx, 1066				; 0000042aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 264  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 265  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 266  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 267  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 268  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 269  : 
; 270  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_Z);

	mov	edx, 1071				; 0000042fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 271  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 272  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 273  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 274  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 275  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW
$LN5@DlgProc:

; 276  : 
; 277  : 					// NO BREAK HERE, WE WANT TO UPDATE DROPDOWN VALUES TOO
; 278  : 				case WM_SHOWWINDOW: 
; 279  : 					// Set correct dropdown value
; 280  : 					int curIndex;
; 281  : 					map->GetParamBlock()->GetValue(xyz_map, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv244[rsp], rax
	mov	rax, QWORD PTR tv244[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv244[rsp]
	call	QWORD PTR [rax+1704]

; 282  : 					SendMessage(GetDlgItem(hWnd, IDC_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv254[rsp], rax
	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv254[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 283  : 					map->GetParamBlock()->GetValue(xyz_tile_x, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	mov	rcx, QWORD PTR tv265[rsp]
	call	QWORD PTR [rax+1704]

; 284  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_X), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv275[rsp], rax
	mov	edx, 1065				; 00000429H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv275[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 285  : 					map->GetParamBlock()->GetValue(xyz_tile_y, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv286[rsp], rax
	mov	rax, QWORD PTR tv286[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rcx, QWORD PTR tv286[rsp]
	call	QWORD PTR [rax+1704]

; 286  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_Y), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv296[rsp], rax
	mov	edx, 1066				; 0000042aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv296[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 287  : 					map->GetParamBlock()->GetValue(xyz_tile_z, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv307[rsp], rax
	mov	rax, QWORD PTR tv307[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rcx, QWORD PTR tv307[rsp]
	call	QWORD PTR [rax+1704]

; 288  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_Z), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv317[rsp], rax
	mov	edx, 1071				; 0000042fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv317[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 289  : 					break;

	jmp	SHORT $LN2@DlgProc
$LN6@DlgProc:

; 290  : 				case WM_DESTROY:			
; 291  : 				default: return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@DlgProc
$LN2@DlgProc:

; 292  : 			}
; 293  : 			return TRUE;

	mov	eax, 1
$LN1@DlgProc:

; 294  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	ret	0
?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconXYZDlgProc::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z PROC	; BerconXYZDlgProc::BerconXYZDlgProc, COMDAT

; 238  : 		BerconXYZDlgProc(ReferenceTarget *m) {reftarg = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconXYZDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ENDP	; BerconXYZDlgProc::BerconXYZDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA PROC ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA ENDP ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA PROC ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA ENDP ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GXYZ_Desc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GXYZ_Desc@@UEAAPEAXI@Z PROC				; XYZ_Desc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1XYZ_Desc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GXYZ_Desc@@UEAAPEAXI@Z ENDP				; XYZ_Desc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z PROC		; XYZ_Desc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z ENDP		; XYZ_Desc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1XYZ_Desc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1XYZ_Desc@@UEAA@XZ PROC				; XYZ_Desc::~XYZ_Desc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1XYZ_Desc@@UEAA@XZ ENDP				; XYZ_Desc::~XYZ_Desc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA PROC		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA ENDP		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA PROC		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA ENDP		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
_TEXT	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z PROC	; XYZ_Desc::XYZ_Desc, COMDAT

; 232  : 	p_end) {}

$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 3720				; 00000e88H
	mov	QWORD PTR $T1[rsp], -2

; 108  : 	XYZ_Desc(ClassDesc2* pointer, int ref, int blkID, int type, int x, int y, int z, int closed=1) : ParamBlockDesc2(blkID, _T("Mapping"),  0, pointer, 

	mov	DWORD PTR [rsp+3688], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3680], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3672], xmm0
	mov	DWORD PTR [rsp+3664], 1075		; 00000433H
	mov	DWORD PTR [rsp+3656], 1074		; 00000432H
	mov	DWORD PTR [rsp+3648], 1
	mov	QWORD PTR [rsp+3640], 0
	mov	DWORD PTR [rsp+3632], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3624], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3616], xmm0
	mov	DWORD PTR [rsp+3608], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3600], xmm0
	mov	DWORD PTR [rsp+3592], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	mov	QWORD PTR [rsp+3584], rax
	mov	DWORD PTR [rsp+3576], 1
	mov	QWORD PTR [rsp+3568], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	mov	QWORD PTR [rsp+3560], rax
	mov	DWORD PTR [rsp+3552], 28
	mov	DWORD PTR [rsp+3544], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3536], 1115		; 0000045bH
	mov	DWORD PTR [rsp+3528], 6
	mov	DWORD PTR [rsp+3520], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3512], 1
	mov	DWORD PTR [rsp+3504], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
	mov	QWORD PTR [rsp+3496], rax
	mov	DWORD PTR [rsp+3488], 1
	mov	DWORD PTR [rsp+3480], 4
	lea	rax, OFFSET FLAT:??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
	mov	QWORD PTR [rsp+3472], rax
	mov	DWORD PTR [rsp+3464], 27
	mov	DWORD PTR [rsp+3456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3448], xmm0
	mov	DWORD PTR [rsp+3440], 1113		; 00000459H
	mov	DWORD PTR [rsp+3432], 1112		; 00000458H
	mov	DWORD PTR [rsp+3424], 1
	mov	QWORD PTR [rsp+3416], 0
	mov	DWORD PTR [rsp+3408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3400], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3392], xmm0
	mov	DWORD PTR [rsp+3384], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3376], xmm0
	mov	DWORD PTR [rsp+3368], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3360], rax
	mov	DWORD PTR [rsp+3352], 1
	mov	QWORD PTR [rsp+3344], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3336], rax
	mov	DWORD PTR [rsp+3328], 22
	mov	DWORD PTR [rsp+3320], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3312], xmm0
	mov	DWORD PTR [rsp+3304], 1106		; 00000452H
	mov	DWORD PTR [rsp+3296], 1105		; 00000451H
	mov	DWORD PTR [rsp+3288], 1
	mov	QWORD PTR [rsp+3280], 0
	mov	DWORD PTR [rsp+3272], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3264], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3256], xmm0
	mov	DWORD PTR [rsp+3248], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3240], xmm0
	mov	DWORD PTR [rsp+3232], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3224], rax
	mov	DWORD PTR [rsp+3216], 1
	mov	QWORD PTR [rsp+3208], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3200], rax
	mov	DWORD PTR [rsp+3192], 21
	mov	DWORD PTR [rsp+3184], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3176], xmm0
	mov	DWORD PTR [rsp+3168], 1099		; 0000044bH
	mov	DWORD PTR [rsp+3160], 1098		; 0000044aH
	mov	DWORD PTR [rsp+3152], 1
	mov	QWORD PTR [rsp+3144], 0
	mov	DWORD PTR [rsp+3136], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3128], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3120], xmm0
	mov	DWORD PTR [rsp+3112], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3104], xmm0
	mov	DWORD PTR [rsp+3096], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3088], rax
	mov	DWORD PTR [rsp+3080], 1
	mov	QWORD PTR [rsp+3072], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3064], rax
	mov	DWORD PTR [rsp+3056], 20
	mov	DWORD PTR [rsp+3048], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3040], xmm0
	mov	DWORD PTR [rsp+3032], 1111		; 00000457H
	mov	DWORD PTR [rsp+3024], 1110		; 00000456H
	mov	DWORD PTR [rsp+3016], 1
	mov	QWORD PTR [rsp+3008], 0
	mov	DWORD PTR [rsp+3000], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2992], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2984], xmm0
	mov	DWORD PTR [rsp+2976], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2968], xmm0
	mov	DWORD PTR [rsp+2960], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2952], rax
	mov	DWORD PTR [rsp+2944], 1
	mov	QWORD PTR [rsp+2936], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2928], rax
	mov	DWORD PTR [rsp+2920], 19
	mov	DWORD PTR [rsp+2912], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2904], xmm0
	mov	DWORD PTR [rsp+2896], 1104		; 00000450H
	mov	DWORD PTR [rsp+2888], 1103		; 0000044fH
	mov	DWORD PTR [rsp+2880], 1
	mov	QWORD PTR [rsp+2872], 0
	mov	DWORD PTR [rsp+2864], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2856], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2848], xmm0
	mov	DWORD PTR [rsp+2840], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2832], xmm0
	mov	DWORD PTR [rsp+2824], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2816], rax
	mov	DWORD PTR [rsp+2808], 1
	mov	QWORD PTR [rsp+2800], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2792], rax
	mov	DWORD PTR [rsp+2784], 18
	mov	DWORD PTR [rsp+2776], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2768], xmm0
	mov	DWORD PTR [rsp+2760], 1097		; 00000449H
	mov	DWORD PTR [rsp+2752], 1096		; 00000448H
	mov	DWORD PTR [rsp+2744], 1
	mov	QWORD PTR [rsp+2736], 0
	mov	DWORD PTR [rsp+2728], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2720], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2712], xmm0
	mov	DWORD PTR [rsp+2704], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2696], xmm0
	mov	DWORD PTR [rsp+2688], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2680], rax
	mov	DWORD PTR [rsp+2672], 1
	mov	QWORD PTR [rsp+2664], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2656], rax
	mov	DWORD PTR [rsp+2648], 17
	mov	DWORD PTR [rsp+2640], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2632], xmm0
	mov	DWORD PTR [rsp+2624], 1109		; 00000455H
	mov	DWORD PTR [rsp+2616], 1108		; 00000454H
	mov	DWORD PTR [rsp+2608], 1
	mov	QWORD PTR [rsp+2600], 0
	mov	DWORD PTR [rsp+2592], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2584], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2576], xmm0
	mov	DWORD PTR [rsp+2568], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2560], xmm0
	mov	DWORD PTR [rsp+2552], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2544], rax
	mov	DWORD PTR [rsp+2536], 1
	mov	QWORD PTR [rsp+2528], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2520], rax
	mov	DWORD PTR [rsp+2512], 16
	mov	DWORD PTR [rsp+2504], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2496], xmm0
	mov	DWORD PTR [rsp+2488], 1102		; 0000044eH
	mov	DWORD PTR [rsp+2480], 1101		; 0000044dH
	mov	DWORD PTR [rsp+2472], 1
	mov	QWORD PTR [rsp+2464], 0
	mov	DWORD PTR [rsp+2456], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2448], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2440], xmm0
	mov	DWORD PTR [rsp+2432], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2424], xmm0
	mov	DWORD PTR [rsp+2416], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2408], rax
	mov	DWORD PTR [rsp+2400], 1
	mov	QWORD PTR [rsp+2392], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2384], rax
	mov	DWORD PTR [rsp+2376], 15
	mov	DWORD PTR [rsp+2368], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2360], xmm0
	mov	DWORD PTR [rsp+2352], 1095		; 00000447H
	mov	DWORD PTR [rsp+2344], 1094		; 00000446H
	mov	DWORD PTR [rsp+2336], 1
	mov	QWORD PTR [rsp+2328], 0
	mov	DWORD PTR [rsp+2320], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2312], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2304], xmm0
	mov	DWORD PTR [rsp+2296], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2288], xmm0
	mov	DWORD PTR [rsp+2280], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2272], rax
	mov	DWORD PTR [rsp+2264], 1
	mov	QWORD PTR [rsp+2256], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2248], rax
	mov	DWORD PTR [rsp+2240], 14
	mov	DWORD PTR [rsp+2232], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2224], 1034		; 0000040aH
	mov	DWORD PTR [rsp+2216], 2
	mov	DWORD PTR [rsp+2208], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2200], 0
	mov	DWORD PTR [rsp+2192], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2184], 166		; 000000a6H
	mov	DWORD PTR [rsp+2176], 1
	mov	DWORD PTR [rsp+2168], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@
	mov	QWORD PTR [rsp+2160], rax
	mov	DWORD PTR [rsp+2152], 26
	mov	DWORD PTR [rsp+2144], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2136], 1033		; 00000409H
	mov	DWORD PTR [rsp+2128], 2
	mov	DWORD PTR [rsp+2120], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2112], 1
	mov	DWORD PTR [rsp+2104], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2096], 165		; 000000a5H
	mov	DWORD PTR [rsp+2088], 1
	mov	DWORD PTR [rsp+2080], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@
	mov	QWORD PTR [rsp+2072], rax
	mov	DWORD PTR [rsp+2064], 25
	mov	DWORD PTR [rsp+2056], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2048], 1051		; 0000041bH
	mov	DWORD PTR [rsp+2040], 2
	mov	DWORD PTR [rsp+2032], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2024], 0
	mov	DWORD PTR [rsp+2016], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2008], 164		; 000000a4H
	mov	DWORD PTR [rsp+2000], 1
	mov	DWORD PTR [rsp+1992], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@
	mov	QWORD PTR [rsp+1984], rax
	mov	DWORD PTR [rsp+1976], 24
	mov	DWORD PTR [rsp+1968], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1960], xmm0
	mov	DWORD PTR [rsp+1952], 1017		; 000003f9H
	mov	DWORD PTR [rsp+1944], 1015		; 000003f7H
	mov	QWORD PTR [rsp+1936], 0
	mov	QWORD PTR [rsp+1928], 0
	mov	DWORD PTR [rsp+1920], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1912], 99999		; 0001869fH
	mov	DWORD PTR [rsp+1904], 1
	mov	DWORD PTR [rsp+1896], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+1888], 12345		; 00003039H
	mov	DWORD PTR [rsp+1880], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1872], 50		; 00000032H
	mov	DWORD PTR [rsp+1864], 1
	mov	DWORD PTR [rsp+1856], 1
	lea	rax, OFFSET FLAT:??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@
	mov	QWORD PTR [rsp+1848], rax
	mov	DWORD PTR [rsp+1840], 23
	mov	DWORD PTR [rsp+1832], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1824], 0
	mov	DWORD PTR [rsp+1816], 1071		; 0000042fH
	mov	DWORD PTR [rsp+1808], 13
	mov	DWORD PTR [rsp+1800], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR z$[rsp]
	mov	DWORD PTR [rsp+1792], eax
	mov	DWORD PTR [rsp+1784], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1776], rax
	mov	DWORD PTR [rsp+1768], 1
	mov	DWORD PTR [rsp+1760], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1752], rax
	mov	DWORD PTR [rsp+1744], 13
	mov	DWORD PTR [rsp+1736], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1728], 0
	mov	DWORD PTR [rsp+1720], 1066		; 0000042aH
	mov	DWORD PTR [rsp+1712], 13
	mov	DWORD PTR [rsp+1704], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR y$[rsp]
	mov	DWORD PTR [rsp+1696], eax
	mov	DWORD PTR [rsp+1688], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1680], rax
	mov	DWORD PTR [rsp+1672], 1
	mov	DWORD PTR [rsp+1664], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1656], rax
	mov	DWORD PTR [rsp+1648], 12
	mov	DWORD PTR [rsp+1640], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1632], 0
	mov	DWORD PTR [rsp+1624], 1065		; 00000429H
	mov	DWORD PTR [rsp+1616], 13
	mov	DWORD PTR [rsp+1608], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR [rsp+1600], eax
	mov	DWORD PTR [rsp+1592], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1584], rax
	mov	DWORD PTR [rsp+1576], 1
	mov	DWORD PTR [rsp+1568], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1560], rax
	mov	DWORD PTR [rsp+1552], 11
	mov	DWORD PTR [rsp+1544], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1536], xmm0
	mov	DWORD PTR [rsp+1528], 1070		; 0000042eH
	mov	DWORD PTR [rsp+1520], 1069		; 0000042dH
	mov	DWORD PTR [rsp+1512], 1
	mov	QWORD PTR [rsp+1504], 0
	mov	DWORD PTR [rsp+1496], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1488], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1480], xmm0
	mov	DWORD PTR [rsp+1472], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1464], xmm0
	mov	DWORD PTR [rsp+1456], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1448], rax
	mov	DWORD PTR [rsp+1440], 1
	mov	QWORD PTR [rsp+1432], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1424], rax
	mov	DWORD PTR [rsp+1416], 10
	mov	DWORD PTR [rsp+1408], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1400], xmm0
	mov	DWORD PTR [rsp+1392], 1062		; 00000426H
	mov	DWORD PTR [rsp+1384], 1061		; 00000425H
	mov	DWORD PTR [rsp+1376], 1
	mov	QWORD PTR [rsp+1368], 0
	mov	DWORD PTR [rsp+1360], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1352], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1344], xmm0
	mov	DWORD PTR [rsp+1336], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1328], xmm0
	mov	DWORD PTR [rsp+1320], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1312], rax
	mov	DWORD PTR [rsp+1304], 1
	mov	QWORD PTR [rsp+1296], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1288], rax
	mov	DWORD PTR [rsp+1280], 9
	mov	DWORD PTR [rsp+1272], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1264], xmm0
	mov	DWORD PTR [rsp+1256], 1058		; 00000422H
	mov	DWORD PTR [rsp+1248], 1057		; 00000421H
	mov	DWORD PTR [rsp+1240], 1
	mov	QWORD PTR [rsp+1232], 0
	mov	DWORD PTR [rsp+1224], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1216], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1208], xmm0
	mov	DWORD PTR [rsp+1200], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1192], xmm0
	mov	DWORD PTR [rsp+1184], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1176], rax
	mov	DWORD PTR [rsp+1168], 1
	mov	QWORD PTR [rsp+1160], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1152], rax
	mov	DWORD PTR [rsp+1144], 8
	mov	DWORD PTR [rsp+1136], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1128], xmm0
	mov	DWORD PTR [rsp+1120], 1068		; 0000042cH
	mov	DWORD PTR [rsp+1112], 1067		; 0000042bH
	mov	DWORD PTR [rsp+1104], 1
	mov	QWORD PTR [rsp+1096], 0
	mov	DWORD PTR [rsp+1088], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1080], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+1072], xmm0
	mov	DWORD PTR [rsp+1064], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+1056], xmm0
	mov	DWORD PTR [rsp+1048], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1040], rax
	mov	DWORD PTR [rsp+1032], 1
	mov	QWORD PTR [rsp+1024], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1016], rax
	mov	DWORD PTR [rsp+1008], 7
	mov	DWORD PTR [rsp+1000], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+992], xmm0
	mov	DWORD PTR [rsp+984], 1060		; 00000424H
	mov	DWORD PTR [rsp+976], 1059		; 00000423H
	mov	DWORD PTR [rsp+968], 1
	mov	QWORD PTR [rsp+960], 0
	mov	DWORD PTR [rsp+952], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+944], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+936], xmm0
	mov	DWORD PTR [rsp+928], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+920], xmm0
	mov	DWORD PTR [rsp+912], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+904], rax
	mov	DWORD PTR [rsp+896], 1
	mov	QWORD PTR [rsp+888], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+880], rax
	mov	DWORD PTR [rsp+872], 6
	mov	DWORD PTR [rsp+864], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+856], xmm0
	mov	DWORD PTR [rsp+848], 1056		; 00000420H
	mov	DWORD PTR [rsp+840], 1055		; 0000041fH
	mov	DWORD PTR [rsp+832], 1
	mov	QWORD PTR [rsp+824], 0
	mov	DWORD PTR [rsp+816], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+808], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+800], xmm0
	mov	DWORD PTR [rsp+792], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+784], xmm0
	mov	DWORD PTR [rsp+776], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+768], rax
	mov	DWORD PTR [rsp+760], 1
	mov	QWORD PTR [rsp+752], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+744], rax
	mov	DWORD PTR [rsp+736], 5
	mov	DWORD PTR [rsp+728], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+720], xmm0
	mov	DWORD PTR [rsp+712], 1064		; 00000428H
	mov	DWORD PTR [rsp+704], 1063		; 00000427H
	mov	DWORD PTR [rsp+696], 1
	mov	QWORD PTR [rsp+688], 0
	mov	DWORD PTR [rsp+680], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+672], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+664], xmm0
	mov	DWORD PTR [rsp+656], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+648], xmm0
	mov	DWORD PTR [rsp+640], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+632], rax
	mov	DWORD PTR [rsp+624], 1
	mov	QWORD PTR [rsp+616], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+608], rax
	mov	DWORD PTR [rsp+600], 4
	mov	DWORD PTR [rsp+592], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+584], xmm0
	mov	DWORD PTR [rsp+576], 1054		; 0000041eH
	mov	DWORD PTR [rsp+568], 1053		; 0000041dH
	mov	DWORD PTR [rsp+560], 1
	mov	QWORD PTR [rsp+552], 0
	mov	DWORD PTR [rsp+544], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+536], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+528], xmm0
	mov	DWORD PTR [rsp+520], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+512], xmm0
	mov	DWORD PTR [rsp+504], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+496], rax
	mov	DWORD PTR [rsp+488], 1
	mov	QWORD PTR [rsp+480], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+472], rax
	mov	DWORD PTR [rsp+464], 3
	mov	DWORD PTR [rsp+456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+448], xmm0
	mov	DWORD PTR [rsp+440], 1073		; 00000431H
	mov	DWORD PTR [rsp+432], 1072		; 00000430H
	mov	DWORD PTR [rsp+424], 1
	mov	QWORD PTR [rsp+416], 0
	mov	DWORD PTR [rsp+408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+400], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+392], xmm0
	mov	DWORD PTR [rsp+384], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+376], xmm0
	mov	DWORD PTR [rsp+368], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+360], rax
	mov	DWORD PTR [rsp+352], 1
	mov	QWORD PTR [rsp+344], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+336], rax
	mov	DWORD PTR [rsp+328], 2
	mov	DWORD PTR [rsp+320], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+312], xmm0
	mov	DWORD PTR [rsp+304], 1511		; 000005e7H
	mov	DWORD PTR [rsp+296], 1510		; 000005e6H
	mov	QWORD PTR [rsp+288], 0
	mov	QWORD PTR [rsp+280], 0
	mov	DWORD PTR [rsp+272], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+264], 100		; 00000064H
	mov	QWORD PTR [rsp+256], 0
	mov	DWORD PTR [rsp+248], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+240], 1
	mov	DWORD PTR [rsp+232], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+224], 50			; 00000032H
	mov	DWORD PTR [rsp+216], 1
	mov	DWORD PTR [rsp+208], 1
	lea	rax, OFFSET FLAT:??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@
	mov	QWORD PTR [rsp+200], rax
	mov	DWORD PTR [rsp+192], 1
	mov	DWORD PTR [rsp+184], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+176], 0
	mov	DWORD PTR [rsp+168], 1018		; 000003faH
	mov	DWORD PTR [rsp+160], 13
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR [rsp+144], eax
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
	mov	QWORD PTR [rsp+128], rax
	mov	DWORD PTR [rsp+120], 1
	mov	DWORD PTR [rsp+112], 1
	lea	rax, OFFSET FLAT:??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	eax, DWORD PTR closed$[rsp]
	mov	DWORD PTR [rsp+80], eax
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 216			; 000000d8H
	mov	DWORD PTR [rsp+56], 112			; 00000070H
	mov	eax, DWORD PTR ref$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	WORD PTR [rsp+40], 6
	mov	rax, QWORD PTR pointer$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@
	movsx	edx, WORD PTR blkID$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	npad	1

; 232  : 	p_end) {}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7XYZ_Desc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 3720				; 00000e88H
	ret	0
??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z ENDP	; XYZ_Desc::XYZ_Desc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA PROC ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA ENDP ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA PROC ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA ENDP ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??__Eintvalid@@YAXXZ
text$di	SEGMENT
??__Eintvalid@@YAXXZ PROC				; `dynamic initializer for 'intvalid'', COMDAT

; 83   : static Interval intvalid = Interval(TIME_NegInfinity, TIME_PosInfinity);

	sub	rsp, 40					; 00000028H
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	add	rsp, 40					; 00000028H
	ret	0
??__Eintvalid@@YAXXZ ENDP				; `dynamic initializer for 'intvalid''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ResourceMakerCallback@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ResourceMakerCallback@@QEAA@XZ PROC			; ResourceMakerCallback::ResourceMakerCallback, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ResourceMakerCallback@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ResourceMakerCallback@@QEAA@XZ ENDP			; ResourceMakerCallback::ResourceMakerCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z
_TEXT	SEGMENT
this$ = 8
id$ = 16
?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z PROC	; ResourceMakerCallback::GetInterface, COMDAT

; 746  : 	virtual void* GetInterface(ULONG id) {return NULL;}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z ENDP	; ResourceMakerCallback::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
curvenum$ = 16
pCCtl$ = 24
?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::NewCurveCreatedCallback, COMDAT

; 744  : 	virtual void NewCurveCreatedCallback(int curvenum, ICurveCtl *pCCtl){}

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::NewCurveCreatedCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
curvenum$ = 16
pCCtl$ = 24
?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::ResetCallback, COMDAT

; 732  : 	virtual void ResetCallback(int curvenum, ICurveCtl *pCCtl){}

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::ResetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
iButton$ = 16
ToolTip$ = 24
pCCtl$ = 32
?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::GetToolTip, COMDAT

; 720  : 	virtual BOOL GetToolTip(int iButton, MSTR &ToolTip,ICurveCtl *pCCtl){return FALSE;}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::GetToolTip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
hCTools$ = 16
pCCtl$ = 24
?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::SetCustomImageList, COMDAT

; 697  : 	virtual BOOL SetCustomImageList(HIMAGELIST& hCTools, ICurveCtl* pCCtl){return FALSE;} 

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::SetCustomImageList
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ??4CurvePoint@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
rhs$ = 16
??4CurvePoint@@QEAAAEAV0@AEBV0@@Z PROC			; CurvePoint::operator=, COMDAT

; 416  : 	{

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 417  : 		p		= rhs.p;

	mov	rax, QWORD PTR rhs$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 418  : 		in		= rhs.in;

	mov	rax, QWORD PTR rhs$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+8], rax

; 419  : 		out		= rhs.out;

	mov	rax, QWORD PTR rhs$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+16], rax

; 420  : 		flags	= rhs.flags;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rhs$[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	DWORD PTR [rax+24], ecx

; 421  : 		return *this;

	mov	rax, QWORD PTR this$[rsp]

; 422  : 	}

	ret	0
??4CurvePoint@@QEAAAEAV0@AEBV0@@Z ENDP			; CurvePoint::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GParamMap2UserDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GParamMap2UserDlgProc@@UEAAPEAXI@Z PROC		; ParamMap2UserDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 8
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GParamMap2UserDlgProc@@UEAAPEAXI@Z ENDP		; ParamMap2UserDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ParamMap2UserDlgProc@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ParamMap2UserDlgProc@@QEAA@XZ PROC			; ParamMap2UserDlgProc::ParamMap2UserDlgProc, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ParamMap2UserDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ParamMap2UserDlgProc@@QEAA@XZ ENDP			; ParamMap2UserDlgProc::ParamMap2UserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
_TEXT	SEGMENT
this$ = 48
t$ = 56
valid$ = 64
pmap$ = 72
?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z PROC ; ParamMap2UserDlgProc::Update, COMDAT

; 89   : 		virtual void Update(TimeValue t, Interval& valid, IParamMap2* pmap) { this->Update(t); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+40]
	add	rsp, 40					; 00000028H
	ret	0
?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z ENDP ; ParamMap2UserDlgProc::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
_TEXT	SEGMENT
this$ = 8
pb$ = 16
?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z PROC ; ParamMap2UserDlgProc::SetParamBlock, COMDAT

; 76   : 		virtual void SetParamBlock(IParamBlock2 *pb) { }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z ENDP ; ParamMap2UserDlgProc::SetParamBlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?Update@ParamMap2UserDlgProc@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?Update@ParamMap2UserDlgProc@@UEAAXH@Z PROC		; ParamMap2UserDlgProc::Update, COMDAT

; 75   : 		virtual void Update(TimeValue t) { }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?Update@ParamMap2UserDlgProc@@UEAAXH@Z ENDP		; ParamMap2UserDlgProc::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
m$ = 16
?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; ParamMap2UserDlgProc::SetThing, COMDAT

; 74   : 		virtual void SetThing(ReferenceTarget *m) { }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; ParamMap2UserDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ??1ParamMap2UserDlgProc@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ParamMap2UserDlgProc@@UEAA@XZ PROC			; ParamMap2UserDlgProc::~ParamMap2UserDlgProc, COMDAT

; 59   : 		virtual ~ParamMap2UserDlgProc() { }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ParamMap2UserDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	ret	0
??1ParamMap2UserDlgProc@@UEAA@XZ ENDP			; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z PROC	; ParamBlockDesc2::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z ENDP	; ParamBlockDesc2::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.h
;	COMDAT ?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z
_TEXT	SEGMENT
this$ = 48
proc$ = 56
?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z PROC ; ParamBlockDesc2::SetUserDlgProc, COMDAT

; 3969 : 	inline void		SetUserDlgProc(ParamMap2UserDlgProc* proc=NULL) { SetUserDlgProc(0, proc); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8, QWORD PTR proc$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?SetUserDlgProc@ParamBlockDesc2@@QEAAXFPEAVParamMap2UserDlgProc@@@Z
	add	rsp, 40					; 00000028H
	ret	0
?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ENDP ; ParamBlockDesc2::SetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.inline.h
;	COMDAT ?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
__formal$ = 32
__formal$ = 40
__formal$ = 48
__formal$ = 56
?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z PROC ; ClassDesc2::CreateQtWidget, COMDAT

; 290  : {

	mov	WORD PTR [rsp+32], r9w
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 291  :     // Default implementation returns null, only needs to be implemented for new Qt-based plugins.
; 292  :     return nullptr;

	xor	eax, eax

; 293  : }

	ret	0
?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z ENDP ; ClassDesc2::CreateQtWidget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.h
;	COMDAT ?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
_TEXT	SEGMENT
this$ = 48
pbd$ = 56
proc$ = 64
?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z PROC ; ClassDesc2::SetUserDlgProc, COMDAT

; 2653 : 	inline bool SetUserDlgProc(ParamBlockDesc2* pbd, ParamMap2UserDlgProc* proc=NULL) { return SetUserDlgProc(pbd, 0, proc); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r9, QWORD PTR proc$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR pbd$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?SetUserDlgProc@ClassDesc2@@QEAA_NPEAVParamBlockDesc2@@FPEAVParamMap2UserDlgProc@@@Z
	add	rsp, 40					; 00000028H
	ret	0
?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z ENDP ; ClassDesc2::SetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\triobj.h
;	COMDAT ??__EkTriObjNormalXTCID@@YAXXZ
text$di	SEGMENT
??__EkTriObjNormalXTCID@@YAXXZ PROC			; `dynamic initializer for 'kTriObjNormalXTCID'', COMDAT

; 289  : const Class_ID kTriObjNormalXTCID = Class_ID(0x730a33d7, 0x27246c55);

	sub	rsp, 40					; 00000028H
	mov	r8d, 656698453				; 27246c55H
	mov	edx, 1930048471				; 730a33d7H
	lea	rcx, OFFSET FLAT:?kTriObjNormalXTCID@@3VClass_ID@@B
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	add	rsp, 40					; 00000028H
	ret	0
??__EkTriObjNormalXTCID@@YAXXZ ENDP			; `dynamic initializer for 'kTriObjNormalXTCID''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Texmap@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Texmap@@UEAA@XZ PROC					; Texmap::~Texmap, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1Texmap@@UEAA@XZ ENDP					; Texmap::~Texmap
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA PROC			; `Texmap::~Texmap'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA ENDP			; `Texmap::~Texmap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA PROC			; `Texmap::~Texmap'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA ENDP			; `Texmap::~Texmap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?IsHighDynamicRange@Texmap@@UEBAHXZ
_TEXT	SEGMENT
this$ = 8
?IsHighDynamicRange@Texmap@@UEBAHXZ PROC		; Texmap::IsHighDynamicRange, COMDAT

; 483  : 			virtual int IsHighDynamicRange( ) const { return false; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsHighDynamicRange@Texmap@@UEBAHXZ ENDP		; Texmap::IsHighDynamicRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?LoadMapFiles@Texmap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?LoadMapFiles@Texmap@@UEAAHH@Z PROC			; Texmap::LoadMapFiles, COMDAT

; 450  : 			virtual int LoadMapFiles(TimeValue t) { return 1; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?LoadMapFiles@Texmap@@UEAAHH@Z ENDP			; Texmap::LoadMapFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
_TEXT	SEGMENT
this$ = 8
sc$ = 16
?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z PROC ; Texmap::IsLocalOutputMeaningful, COMDAT

; 364  : 			virtual bool IsLocalOutputMeaningful( ShadeContext& sc ) { return false; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z ENDP ; Texmap::IsLocalOutputMeaningful
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?SetOutputLevel@Texmap@@UEAAXHM@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
v$ = 24
?SetOutputLevel@Texmap@@UEAAXHM@Z PROC			; Texmap::SetOutputLevel, COMDAT

; 338  : 			virtual void SetOutputLevel(TimeValue t, float v) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetOutputLevel@Texmap@@UEAAXHM@Z ENDP			; Texmap::SetOutputLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ
_TEXT	SEGMENT
this$ = 8
?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ PROC		; Texmap::GetTheXYZGen, COMDAT

; 317  : 			virtual XYZGen *GetTheXYZGen() { return NULL; } // maps with a XYZGen should implement this

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ ENDP		; Texmap::GetTheXYZGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ
_TEXT	SEGMENT
this$ = 8
?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ PROC		; Texmap::GetTheUVGen, COMDAT

; 312  : 			virtual UVGen *GetTheUVGen() { return NULL; }  // maps with a UVGen should implement this

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ ENDP		; Texmap::GetTheUVGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?MapSlotType@Texmap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?MapSlotType@Texmap@@UEAAHH@Z PROC			; Texmap::MapSlotType, COMDAT

; 303  : 			virtual int MapSlotType(int i) { return defaultSlotType; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+20]
	ret	0
?MapSlotType@Texmap@@UEAAHH@Z ENDP			; Texmap::MapSlotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?InitSlotType@Texmap@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sType$ = 16
?InitSlotType@Texmap@@UEAAXH@Z PROC			; Texmap::InitSlotType, COMDAT

; 302  : 			virtual void InitSlotType(int sType) { defaultSlotType = sType; }          

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR sType$[rsp]
	mov	DWORD PTR [rax+84], ecx
	ret	0
?InitSlotType@Texmap@@UEAAXH@Z ENDP			; Texmap::InitSlotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetMapChannel@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetMapChannel@Texmap@@UEAAHXZ PROC			; Texmap::GetMapChannel, COMDAT

; 287  : 			virtual int GetMapChannel () { return 1; }   // only relevant if above returns UVWSRC_EXPLICIT

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetMapChannel@Texmap@@UEAAHXZ ENDP			; Texmap::GetMapChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetUVWSource@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetUVWSource@Texmap@@UEAAHXZ PROC			; Texmap::GetUVWSource, COMDAT

; 281  : 			virtual int GetUVWSource() { return UVWSRC_EXPLICIT; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetUVWSource@Texmap@@UEAAHXZ ENDP			; Texmap::GetUVWSource
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTextureTiling@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetTextureTiling@Texmap@@UEAAHXZ PROC			; Texmap::GetTextureTiling, COMDAT

; 256  : 			virtual int GetTextureTiling() { return  U_WRAP|V_WRAP; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3
	ret	0
?GetTextureTiling@Texmap@@UEAAHXZ ENDP			; Texmap::GetTextureTiling
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
_TEXT	SEGMENT
this$ = 48
uvtrans$ = 56
?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z PROC	; Texmap::GetUVTransform, COMDAT

; 247  : 			virtual  void GetUVTransform(Matrix3 &uvtrans) { uvtrans.IdentityMatrix(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR uvtrans$[rsp]
	call	QWORD PTR __imp_?IdentityMatrix@Matrix3@@QEAAXXZ
	add	rsp, 40					; 00000028H
	ret	0
?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z ENDP	; Texmap::GetUVTransform
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?HandleOwnViewPerturb@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?HandleOwnViewPerturb@Texmap@@UEAAHXZ PROC		; Texmap::HandleOwnViewPerturb, COMDAT

; 207  : 			virtual BOOL HandleOwnViewPerturb() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?HandleOwnViewPerturb@Texmap@@UEAAHXZ ENDP		; Texmap::HandleOwnViewPerturb
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
valid$ = 24
?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z PROC ; MtlBase::GetTransparencyHint, COMDAT

; 752  : 			virtual BOOL GetTransparencyHint(TimeValue t, Interval& valid) { return TRUE; }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z ENDP ; MtlBase::GetTransparencyHint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ
_TEXT	SEGMENT
this$ = 8
?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ PROC	; MtlBase::GetRefTarget, COMDAT

; 738  : 			virtual ReferenceTarget *GetRefTarget(){return this;}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 64					; 00000040H
	ret	0
?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ ENDP	; MtlBase::GetRefTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
id$ = 72
?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z PROC ; MtlBase::GetInterface, COMDAT

; 737  :             virtual BaseInterface *GetInterface(Interface_ID id) { return ReferenceTarget::GetInterface(id); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR id$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0Interface_ID@@QEAA@AEBV0@@Z		; Interface_ID::Interface_ID
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?GetInterface@ReferenceTarget@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	add	rsp, 56					; 00000038H
	ret	0
?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z ENDP ; MtlBase::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
mtl$ = 24
cb$ = 32
?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z PROC ; MtlBase::SetupGfxMultiMaps, COMDAT

; 732  : 			virtual void SetupGfxMultiMaps(TimeValue t, Material *mtl, MtlMakerCallback &cb) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z ENDP ; MtlBase::SetupGfxMultiMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ PROC	; MtlBase::SupportsMultiMapsInViewport, COMDAT

; 702  : 			virtual BOOL SupportsMultiMapsInViewport() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ ENDP	; MtlBase::SupportsMultiMapsInViewport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?IsMultiMtl@MtlBase@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsMultiMtl@MtlBase@@UEAAHXZ PROC			; MtlBase::IsMultiMtl, COMDAT

; 368  : 			virtual  BOOL IsMultiMtl() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsMultiMtl@MtlBase@@UEAAHXZ ENDP			; MtlBase::IsMultiMtl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 8
subMtlNum$ = 16
mapreq$ = 24
bumpreq$ = 32
?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z PROC ; MtlBase::LocalMappingsRequired, COMDAT

; 350  : 			virtual void LocalMappingsRequired(int subMtlNum, BitArray & mapreq, BitArray &bumpreq) {  }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z ENDP ; MtlBase::LocalMappingsRequired
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
rmc$ = 24
?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z PROC ; MtlBase::BuildMaps, COMDAT

; 258  : 			virtual int BuildMaps(TimeValue t, RenderMapsContext &rmc) { return 1; }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z ENDP ; MtlBase::BuildMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\isubmap.h
;	COMDAT ?SubTexmapOn@ISubMap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?SubTexmapOn@ISubMap@@UEAAHH@Z PROC			; ISubMap::SubTexmapOn, COMDAT

; 99   : 	virtual int SubTexmapOn(int i) { return 1; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SubTexmapOn@ISubMap@@UEAAHH@Z ENDP			; ISubMap::SubTexmapOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z
_TEXT	SEGMENT
this$ = 8
message$ = 16
hMaker$ = 24
?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z PROC ; ReferenceTarget::NotifyTarget, COMDAT

; 2150 : 		virtual void NotifyTarget(int message, ReferenceMaker* hMaker) { UNUSED_PARAM(message); UNUSED_PARAM(hMaker); }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z ENDP ; ReferenceTarget::NotifyTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyForeground@ReferenceTarget@@UEAAXH@Z
_TEXT	SEGMENT
tv71 = 64
$T1 = 72
this$ = 96
t$ = 104
?NotifyForeground@ReferenceTarget@@UEAAXH@Z PROC	; ReferenceTarget::NotifyForeground, COMDAT

; 2139 : 		virtual void NotifyForeground(TimeValue t) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 2140 : 			NotifyDependents(Interval(t,t),PART_PUT_IN_FG,REFMSG_FLAGDEPENDENTS);

	mov	r8d, DWORD PTR t$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv71[rsp], rcx
	mov	DWORD PTR [rsp+56], 0
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], -16			; fffffff0H
	mov	r9d, 112				; 00000070H
	mov	r8d, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+1200]

; 2141 : 		}

	add	rsp, 88					; 00000058H
	ret	0
?NotifyForeground@ReferenceTarget@@UEAAXH@Z ENDP	; ReferenceTarget::NotifyForeground
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ PROC	; ReferenceTarget::RefDeletedUndoRedo, COMDAT

; 1955 : 		virtual void RefDeletedUndoRedo() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ ENDP	; ReferenceTarget::RefDeletedUndoRedo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefDeleted@ReferenceTarget@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RefDeleted@ReferenceTarget@@UEAAXXZ PROC		; ReferenceTarget::RefDeleted, COMDAT

; 1946 : 		virtual void RefDeleted() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefDeleted@ReferenceTarget@@UEAAXXZ ENDP		; ReferenceTarget::RefDeleted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z
_TEXT	SEGMENT
this$ = 8
rm$ = 16
?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z PROC ; ReferenceTarget::RefAddedUndoRedo, COMDAT

; 1935 : 		virtual void RefAddedUndoRedo(RefMakerHandle rm) { UNUSED_PARAM(rm); }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z ENDP ; ReferenceTarget::RefAddedUndoRedo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRefTarget@ReferenceTarget@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsRefTarget@ReferenceTarget@@UEAAHXZ PROC		; ReferenceTarget::IsRefTarget, COMDAT

; 1874 : 		virtual BOOL IsRefTarget() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRefTarget@ReferenceTarget@@UEAAHXZ ENDP		; ReferenceTarget::IsRefTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
rtarg$ = 16
?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::ShouldPersistWeakRef, COMDAT

; 1664 : 		virtual BOOL ShouldPersistWeakRef(RefTargetHandle rtarg) { UNUSED_PARAM(rtarg); return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::ShouldPersistWeakRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
rtarg$ = 16
?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::IsRealDependency, COMDAT

; 1639 : 		virtual BOOL IsRealDependency(ReferenceTarget *rtarg) { UNUSED_PARAM(rtarg); return TRUE;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::IsRealDependency
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRefMaker@ReferenceMaker@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsRefMaker@ReferenceMaker@@UEAAHXZ PROC		; ReferenceMaker::IsRefMaker, COMDAT

; 1620 : 		virtual BOOL IsRefMaker() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRefMaker@ReferenceMaker@@UEAAHXZ ENDP		; ReferenceMaker::IsRefMaker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
changeInt$ = 16
partID$ = 24
message$ = 32
sclass$ = 40
propagate$ = 48
hTarg$ = 56
?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::NotifyDependents, COMDAT

; 1371 : 		{

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1372 : 			UNUSED_PARAM(changeInt); UNUSED_PARAM(partID);
; 1373 : 			UNUSED_PARAM(message); UNUSED_PARAM(sclass);
; 1374 : 			UNUSED_PARAM(propagate); UNUSED_PARAM(hTarg);
; 1375 : 			DbgAssert(false);
; 1376 : 			return REF_FAIL;

	xor	eax, eax

; 1377 : 		};

	ret	0
?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::NotifyDependents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
iref$ = 16
?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z PROC		; ReferenceMaker::RemapRefOnLoad, COMDAT

; 1337 : 		virtual int RemapRefOnLoad(int iref) { return iref; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, DWORD PTR iref$[rsp]
	ret	0
?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z ENDP		; ReferenceMaker::RemapRefOnLoad
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?CanTransferReference@ReferenceMaker@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?CanTransferReference@ReferenceMaker@@UEAAHH@Z PROC	; ReferenceMaker::CanTransferReference, COMDAT

; 1238 : 		virtual BOOL CanTransferReference(int i) { UNUSED_PARAM(i); return TRUE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanTransferReference@ReferenceMaker@@UEAAHH@Z ENDP	; ReferenceMaker::CanTransferReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z
_TEXT	SEGMENT
this$ = 8
used_as_rhs_value$ = 16
objectSpecifiedName$ = 24
?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z PROC ; Animatable::GetMacroRecorderName, COMDAT

; 2981 : 		virtual bool GetMacroRecorderName(bool used_as_rhs_value, MSTR &objectSpecifiedName) { return false; }

	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z ENDP ; Animatable::GetMacroRecorderName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
desc$ = 16
?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z PROC ; Animatable::IsParamBlockDesc2Used, COMDAT

; 2970 : 		virtual bool IsParamBlockDesc2Used(ParamBlockDesc2 * desc) { return true; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	al, 1
	ret	0
?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z ENDP ; Animatable::IsParamBlockDesc2Used
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
classID$ = 72
?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z PROC	; Animatable::IsSubClassOf, COMDAT

; 2285 : 		virtual BOOL IsSubClassOf(Class_ID classID) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2286 : 			return (classID == ClassID());

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+40]
	mov	rdx, rax
	mov	rcx, QWORD PTR classID$[rsp]
	call	??8Class_ID@@QEBA_NAEBV0@@Z		; Class_ID::operator==
	movzx	eax, al

; 2287 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z ENDP	; Animatable::IsSubClassOf
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z
_TEXT	SEGMENT
this$ = 8
nodes$ = 16
Context$ = 24
?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z PROC ; Animatable::GetSystemNodes, COMDAT

; 2265 : 		virtual void GetSystemNodes(INodeTab &nodes, SysNodeContext Context) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z ENDP ; Animatable::GetSystemNodes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FreeAllBitmaps@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?FreeAllBitmaps@Animatable@@UEAAXXZ PROC		; Animatable::FreeAllBitmaps, COMDAT

; 2237 : 		virtual void FreeAllBitmaps() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FreeAllBitmaps@Animatable@@UEAAXXZ ENDP		; Animatable::FreeAllBitmaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubAnim@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?SelectSubAnim@Animatable@@UEAAHH@Z PROC		; Animatable::SelectSubAnim, COMDAT

; 2163 : 		virtual BOOL SelectSubAnim(int subNum) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SelectSubAnim@Animatable@@UEAAHH@Z ENDP		; Animatable::SelectSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
this$ = 8
hwnd$ = 16
message$ = 24
wParam$ = 32
lParam$ = 40
?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z PROC ; Animatable::TrackViewWinProc, COMDAT

; 2146 : 			LPARAM lParam ) { return 0;}

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z ENDP ; Animatable::TrackViewWinProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z PROC ; Animatable::GetParamDimension, COMDAT

; 2137 : 		virtual ParamDimension* GetParamDimension(int i) { return defaultDim; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR __imp_?defaultDim@@3PEAVParamDimension@@EA
	mov	rax, QWORD PTR [rax]
	ret	0
?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z ENDP ; Animatable::GetParamDimension
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
min$ = 32
max$ = 40
flags$ = 48
?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z PROC ; Animatable::GetSubFCurveExtents, COMDAT

; 2128 : 			DWORD flags) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z ENDP ; Animatable::GetSubFCurveExtents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
min$ = 24
max$ = 32
flags$ = 40
?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z PROC ; Animatable::GetFCurveExtents, COMDAT

; 2097 : 			DWORD flags) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z ENDP ; Animatable::GetFCurveExtents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?TrackParamsType@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?TrackParamsType@Animatable@@UEAAHXZ PROC		; Animatable::TrackParamsType, COMDAT

; 2069 : 		virtual int TrackParamsType() {return TRACKPARAMS_NONE;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?TrackParamsType@Animatable@@UEAAHXZ ENDP		; Animatable::TrackParamsType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
dim$ = 24
pname$ = 32
hParent$ = 40
ip$ = 48
flags$ = 56
?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z PROC ; Animatable::EditTrackParams, COMDAT

; 2048 : 			DWORD flags) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z ENDP ; Animatable::EditTrackParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hits$ = 32
rcHit$ = 40
rcGraph$ = 48
tzoom$ = 56
tscroll$ = 64
vzoom$ = 72
vscroll$ = 80
flags$ = 88
?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::HitTestSubFCurves, COMDAT

; 2013 : 			DWORD flags ) { return HITCURVE_NONE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::HitTestSubFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hdc$ = 32
rcGraph$ = 40
rcPaint$ = 48
tzoom$ = 56
tscroll$ = 64
vzoom$ = 72
vscroll$ = 80
flags$ = 88
?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::PaintSubFCurves, COMDAT

; 1959 : 			DWORD flags ) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::PaintSubFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hits$ = 24
rcHit$ = 32
rcGraph$ = 40
tzoom$ = 48
tscroll$ = 56
vzoom$ = 64
vscroll$ = 72
flags$ = 80
?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::HitTestFCurves, COMDAT

; 1912 : 			DWORD flags ) { return HITCURVE_NONE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::HitTestFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hdc$ = 24
rcGraph$ = 32
rcPaint$ = 40
tzoom$ = 48
tscroll$ = 56
vzoom$ = 64
vscroll$ = 72
flags$ = 80
?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::PaintFCurves, COMDAT

; 1858 : 			DWORD flags ) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::PaintFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hdc$ = 32
rcTrack$ = 40
rcPaint$ = 48
zoom$ = 56
scroll$ = 64
flags$ = 72
?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z PROC ; Animatable::PaintSubTrack, COMDAT

; 1811 : 			DWORD flags) {return TRACK_DORANGE;}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ENDP ; Animatable::PaintSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hdc$ = 24
rcTrack$ = 32
rcPaint$ = 40
zoom$ = 48
scroll$ = 56
flags$ = 64
?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z PROC ; Animatable::PaintTrack, COMDAT

; 1776 : 			DWORD flags ) { return TRACK_DORANGE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ENDP ; Animatable::PaintTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z
_TEXT	SEGMENT
this$ = 8
hits$ = 16
rcHit$ = 24
rcTrack$ = 32
zoom$ = 40
scroll$ = 48
flags$ = 56
?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z PROC ; Animatable::HitTestTrack, COMDAT

; 1736 : 			DWORD flags ) { return TRACK_DORANGE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z ENDP ; Animatable::HitTestTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetTrackVSpace@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
lineHeight$ = 16
?GetTrackVSpace@Animatable@@UEAAHH@Z PROC		; Animatable::GetTrackVSpace, COMDAT

; 1694 : 		virtual int GetTrackVSpace( int lineHeight ) { return 1; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetTrackVSpace@Animatable@@UEAAHH@Z ENDP		; Animatable::GetTrackVSpace
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
cobj$ = 24
iv$ = 32
flags$ = 40
?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::PasteSubTrack, COMDAT

; 1685 : 		virtual void PasteSubTrack(int subNum, TrackClipObject *cobj, Interval iv, DWORD flags) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::PasteSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
iv$ = 24
flags$ = 32
?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z PROC ; Animatable::CopySubTrack, COMDAT

; 1672 : 		virtual TrackClipObject *CopySubTrack(int subNum, Interval iv, DWORD flags) { return NULL; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z ENDP ; Animatable::CopySubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
cobj$ = 24
iv$ = 32
flags$ = 40
?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CanPasteSubTrack, COMDAT

; 1657 : 		virtual BOOL CanPasteSubTrack(int subNum,TrackClipObject *cobj, Interval iv, DWORD flags) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CanPasteSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
iv$ = 24
flags$ = 32
?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z PROC	; Animatable::CanCopySubTrack, COMDAT

; 1637 : 		virtual BOOL CanCopySubTrack(int subNum, Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z ENDP	; Animatable::CanCopySubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
cobj$ = 16
iv$ = 24
flags$ = 32
?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::PasteTrack, COMDAT

; 1615 : 		virtual void PasteTrack(TrackClipObject *cobj, Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::PasteTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CopyTrack, COMDAT

; 1606 : 		virtual TrackClipObject *CopyTrack(Interval iv, DWORD flags) { return NULL; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CopyTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
cobj$ = 16
iv$ = 24
flags$ = 32
?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CanPasteTrack, COMDAT

; 1594 : 		virtual BOOL CanPasteTrack(TrackClipObject *cobj, Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CanPasteTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z PROC	; Animatable::CanCopyTrack, COMDAT

; 1582 : 		virtual BOOL CanCopyTrack(Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z ENDP	; Animatable::CanCopyTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RevertSetKeyBuffer@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RevertSetKeyBuffer@Animatable@@UEAAXXZ PROC		; Animatable::RevertSetKeyBuffer, COMDAT

; 1557 : 		virtual void RevertSetKeyBuffer() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RevertSetKeyBuffer@Animatable@@UEAAXXZ ENDP		; Animatable::RevertSetKeyBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CommitSetKeyBuffer@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?CommitSetKeyBuffer@Animatable@@UEAAXH@Z PROC		; Animatable::CommitSetKeyBuffer, COMDAT

; 1538 : 		virtual void CommitSetKeyBuffer(TimeValue t) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CommitSetKeyBuffer@Animatable@@UEAAXH@Z ENDP		; Animatable::CommitSetKeyBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetKeyBufferPresent@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SetKeyBufferPresent@Animatable@@UEAAHXZ PROC		; Animatable::SetKeyBufferPresent, COMDAT

; 1517 : 		virtual BOOL SetKeyBufferPresent() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SetKeyBufferPresent@Animatable@@UEAAHXZ ENDP		; Animatable::SetKeyBufferPresent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
dim$ = 24
angle$ = 32
length$ = 40
flags$ = 48
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z PROC ; Animatable::AdjustTangents, COMDAT

; 1488 : 			DWORD flags) {};

	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z ENDP ; Animatable::AdjustTangents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
dim$ = 24
rcGraph$ = 32
tzoom$ = 40
tscroll$ = 48
vzoom$ = 56
vscroll$ = 64
dx$ = 72
dy$ = 80
flags$ = 88
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z PROC ; Animatable::AdjustTangents, COMDAT

; 1465 : 			DWORD flags) {};

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z ENDP ; Animatable::AdjustTangents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
timeExpr$ = 24
valExpr$ = 32
flags$ = 40
?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z PROC ; Animatable::SetSelKeyCoordsExpr, COMDAT

; 1428 : 			DWORD flags) {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1429 : 				return KEYCOORDS_EXPR_UNSUPPORTED;

	xor	eax, eax

; 1430 : 		}

	ret	0
?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z ENDP ; Animatable::SetSelKeyCoordsExpr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetSelKeyCoords@Animatable@@UEAAXHMK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
val$ = 24
flags$ = 32
?SetSelKeyCoords@Animatable@@UEAAXHMK@Z PROC		; Animatable::SetSelKeyCoords, COMDAT

; 1385 : 		virtual void SetSelKeyCoords(TimeValue t, float val,DWORD flags) {}

	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetSelKeyCoords@Animatable@@UEAAXHMK@Z ENDP		; Animatable::SetSelKeyCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
val$ = 24
flags$ = 32
?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z PROC	; Animatable::GetSelKeyCoords, COMDAT

; 1370 : 		virtual int GetSelKeyCoords(TimeValue &t, float &val, DWORD flags) { 

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1371 : 			return KEYS_NONESELECTED; 

	mov	eax, 1

; 1372 : 		}

	ret	0
?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z ENDP	; Animatable::GetSelKeyCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsSubCurveSelected@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?IsSubCurveSelected@Animatable@@UEAAHH@Z PROC		; Animatable::IsSubCurveSelected, COMDAT

; 1343 : 		virtual BOOL IsSubCurveSelected(int subNum) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsSubCurveSelected@Animatable@@UEAAHH@Z ENDP		; Animatable::IsSubCurveSelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsCurveSelected@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsCurveSelected@Animatable@@UEAAHXZ PROC		; Animatable::IsCurveSelected, COMDAT

; 1338 : 		virtual BOOL IsCurveSelected() { return FALSE; }		

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsCurveSelected@Animatable@@UEAAHXZ ENDP		; Animatable::IsCurveSelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectCurve@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
?SelectCurve@Animatable@@UEAAXH@Z PROC			; Animatable::SelectCurve, COMDAT

; 1333 : 		virtual void SelectCurve(BOOL sel) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectCurve@Animatable@@UEAAXH@Z ENDP			; Animatable::SelectCurve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
origin$ = 24
scale$ = 32
flags$ = 40
?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z PROC ; Animatable::ScaleKeyValues, COMDAT

; 1326 : 			DWORD flags) {}

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z ENDP ; Animatable::ScaleKeyValues
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
delta$ = 24
flags$ = 32
?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z PROC ; Animatable::MoveKeys, COMDAT

; 1280 : 		virtual void MoveKeys(ParamDimensionBase *dim, float delta, DWORD flags) {}  

	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z ENDP ; Animatable::MoveKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AddNewKey@Animatable@@UEAAXHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?AddNewKey@Animatable@@UEAAXHK@Z PROC			; Animatable::AddNewKey, COMDAT

; 1256 : 		virtual void AddNewKey(TimeValue t, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AddNewKey@Animatable@@UEAAXHK@Z ENDP			; Animatable::AddNewKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CloneSelectedKeys@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
offset$ = 16
?CloneSelectedKeys@Animatable@@UEAAXH@Z PROC		; Animatable::CloneSelectedKeys, COMDAT

; 1245 : 		virtual void CloneSelectedKeys(BOOL offset = FALSE) {}   

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CloneSelectedKeys@Animatable@@UEAAXH@Z ENDP		; Animatable::CloneSelectedKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumSelKeys@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSelKeys@Animatable@@UEAAHXZ PROC			; Animatable::NumSelKeys, COMDAT

; 1239 : 		virtual int NumSelKeys() { return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumSelKeys@Animatable@@UEAAHXZ ENDP			; Animatable::NumSelKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetFlagKeyIndex@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetFlagKeyIndex@Animatable@@UEAAHXZ PROC		; Animatable::GetFlagKeyIndex, COMDAT

; 1235 : 		virtual int GetFlagKeyIndex() { return -1; } 

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?GetFlagKeyIndex@Animatable@@UEAAHXZ ENDP		; Animatable::GetFlagKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z PROC	; Animatable::FlagKey, COMDAT

; 1227 : 		virtual void FlagKey(TrackHitRecord hit) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z ENDP	; Animatable::FlagKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsKeySelected@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?IsKeySelected@Animatable@@UEAAHH@Z PROC		; Animatable::IsKeySelected, COMDAT

; 1207 : 		virtual BOOL IsKeySelected(int i) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsKeySelected@Animatable@@UEAAHH@Z ENDP		; Animatable::IsKeySelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectKeyByIndex@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
sel$ = 24
?SelectKeyByIndex@Animatable@@UEAAXHH@Z PROC		; Animatable::SelectKeyByIndex, COMDAT

; 1201 : 		virtual void SelectKeyByIndex(int i, BOOL sel) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectKeyByIndex@Animatable@@UEAAXHH@Z ENDP		; Animatable::SelectKeyByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubCurve@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
sel$ = 24
?SelectSubCurve@Animatable@@UEAAXHH@Z PROC		; Animatable::SelectSubCurve, COMDAT

; 1192 : 		virtual void SelectSubCurve(int subNum, BOOL sel) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectSubCurve@Animatable@@UEAAXHH@Z ENDP		; Animatable::SelectSubCurve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
sel$ = 24
flags$ = 32
?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z PROC ; Animatable::SelectSubKeys, COMDAT

; 1183 : 		virtual void SelectSubKeys(int subNum, TrackHitTab& sel, DWORD flags) {} 

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z ENDP ; Animatable::SelectSubKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
flags$ = 24
?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z PROC ; Animatable::SelectKeys, COMDAT

; 1160 : 		virtual void SelectKeys(TrackHitTab& sel, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z ENDP ; Animatable::SelectKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeyByIndex@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?DeleteKeyByIndex@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteKeyByIndex, COMDAT

; 1144 : 		virtual void DeleteKeyByIndex(int index) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeyByIndex@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteKeyByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeys@Animatable@@UEAAXK@Z
_TEXT	SEGMENT
this$ = 8
flags$ = 16
?DeleteKeys@Animatable@@UEAAXK@Z PROC			; Animatable::DeleteKeys, COMDAT

; 1139 : 		virtual void DeleteKeys(DWORD flags) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeys@Animatable@@UEAAXK@Z ENDP			; Animatable::DeleteKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SupportTimeOperations@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportTimeOperations@Animatable@@UEAAHXZ PROC		; Animatable::SupportTimeOperations, COMDAT

; 1107 : 		virtual BOOL SupportTimeOperations() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SupportTimeOperations@Animatable@@UEAAHXZ ENDP		; Animatable::SupportTimeOperations
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?InsertTime@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
ins$ = 16
amount$ = 24
?InsertTime@Animatable@@UEAAXHH@Z PROC			; Animatable::InsertTime, COMDAT

; 1097 : 		virtual void InsertTime(TimeValue ins, TimeValue amount) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?InsertTime@Animatable@@UEAAXHH@Z ENDP			; Animatable::InsertTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ScaleTime@Animatable@@UEAAXVInterval@@M@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
s$ = 24
?ScaleTime@Animatable@@UEAAXVInterval@@M@Z PROC		; Animatable::ScaleTime, COMDAT

; 1087 : 		virtual void ScaleTime(Interval iv, float s) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ScaleTime@Animatable@@UEAAXVInterval@@M@Z ENDP		; Animatable::ScaleTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ReverseTime@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?ReverseTime@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::ReverseTime, COMDAT

; 1077 : 		virtual void ReverseTime(Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ReverseTime@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::ReverseTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteTime@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?DeleteTime@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::DeleteTime, COMDAT

; 1061 : 		virtual void DeleteTime(Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteTime@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::DeleteTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
range$ = 16
flags$ = 24
?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::EditTimeRange, COMDAT

; 1049 : 		virtual void EditTimeRange(Interval range, DWORD flags) {};

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::EditTimeRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
range$ = 24
flags$ = 32
?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z PROC ; Animatable::GetKeySelState, COMDAT

; 931  : 		virtual int GetKeySelState(BitArray& sel, Interval range, DWORD flags) { return 0; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z ENDP ; Animatable::GetKeySelState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
times$ = 16
range$ = 24
flags$ = 32
?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z PROC ; Animatable::GetKeyTimes, COMDAT

; 913  : 		virtual int GetKeyTimes(Tab<TimeValue>& times, Interval range, DWORD flags) { return 0; }		

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z ENDP ; Animatable::GetKeyTimes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsKeyAtTime@Animatable@@UEAAHHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?IsKeyAtTime@Animatable@@UEAAHHK@Z PROC			; Animatable::IsKeyAtTime, COMDAT

; 888  : 		virtual BOOL IsKeyAtTime(TimeValue t, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsKeyAtTime@Animatable@@UEAAHHK@Z ENDP			; Animatable::IsKeyAtTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeyAtTime@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?DeleteKeyAtTime@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteKeyAtTime, COMDAT

; 878  : 		virtual void DeleteKeyAtTime(TimeValue t) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeyAtTime@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteKeyAtTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopyKeysFromTime@Animatable@@UEAAXHHK@Z
_TEXT	SEGMENT
this$ = 8
src$ = 16
dst$ = 24
flags$ = 32
?CopyKeysFromTime@Animatable@@UEAAXHHK@Z PROC		; Animatable::CopyKeysFromTime, COMDAT

; 873  : 		virtual void CopyKeysFromTime(TimeValue src, TimeValue dst, DWORD flags) {} 

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CopyKeysFromTime@Animatable@@UEAAXHHK@Z ENDP		; Animatable::CopyKeysFromTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
nt$ = 32
?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z PROC		; Animatable::GetNextKeyTime, COMDAT

; 862  : 		virtual BOOL GetNextKeyTime(TimeValue t, DWORD flags, TimeValue &nt) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z ENDP		; Animatable::GetNextKeyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyIndex@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?GetKeyIndex@Animatable@@UEAAHH@Z PROC			; Animatable::GetKeyIndex, COMDAT

; 841  : 		virtual int GetKeyIndex(TimeValue t) { return -1; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?GetKeyIndex@Animatable@@UEAAHH@Z ENDP			; Animatable::GetKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyTime@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?GetKeyTime@Animatable@@UEAAHH@Z PROC			; Animatable::GetKeyTime, COMDAT

; 835  : 		virtual TimeValue GetKeyTime(int index) { return 0; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeyTime@Animatable@@UEAAHH@Z ENDP			; Animatable::GetKeyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumKeys@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumKeys@Animatable@@UEAAHXZ PROC			; Animatable::NumKeys, COMDAT

; 830  : 		virtual int NumKeys() { return NOT_KEYFRAMEABLE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?NumKeys@Animatable@@UEAAHXZ ENDP			; Animatable::NumKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTrack@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?EditTrack@Animatable@@UEAAXXZ PROC			; Animatable::EditTrack, COMDAT

; 821  : 		virtual void EditTrack() { assert(0); } 

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTrack@Animatable@@UEAAXXZ ENDP			; Animatable::EditTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ChildAnim@Animatable@@UEAAPEAV1@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?ChildAnim@Animatable@@UEAAPEAV1@H@Z PROC		; Animatable::ChildAnim, COMDAT

; 757  : 		virtual Animatable* ChildAnim(int i) { return NULL; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ChildAnim@Animatable@@UEAAPEAV1@H@Z ENDP		; Animatable::ChildAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumChildren@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumChildren@Animatable@@UEAAHXZ PROC			; Animatable::NumChildren, COMDAT

; 754  : 		virtual	int NumChildren() { return 0; }   

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumChildren@Animatable@@UEAAHXZ ENDP			; Animatable::NumChildren
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanMakeUnique@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?CanMakeUnique@Animatable@@UEAAHXZ PROC			; Animatable::CanMakeUnique, COMDAT

; 749  : 		virtual BOOL CanMakeUnique() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanMakeUnique@Animatable@@UEAAHXZ ENDP			; Animatable::CanMakeUnique
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopyAnim@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?CanCopyAnim@Animatable@@UEAAHXZ PROC			; Animatable::CanCopyAnim, COMDAT

; 739  : 		virtual BOOL CanCopyAnim() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanCopyAnim@Animatable@@UEAAHXZ ENDP			; Animatable::CanCopyAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSubAnimCurveColor@Animatable@@UEAAKH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?GetSubAnimCurveColor@Animatable@@UEAAKH@Z PROC		; Animatable::GetSubAnimCurveColor, COMDAT

; 713  : 		virtual DWORD GetSubAnimCurveColor(int subNum) { return PAINTCURVE_GENCOLOR; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 16
	ret	0
?GetSubAnimCurveColor@Animatable@@UEAAKH@Z ENDP		; Animatable::GetSubAnimCurveColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteSubAnim@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?DeleteSubAnim@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteSubAnim, COMDAT

; 698  : 		virtual void DeleteSubAnim(int i) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteSubAnim@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanDeleteSubAnim@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?CanDeleteSubAnim@Animatable@@UEAAHH@Z PROC		; Animatable::CanDeleteSubAnim, COMDAT

; 692  : 		virtual BOOL CanDeleteSubAnim(int i) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanDeleteSubAnim@Animatable@@UEAAHH@Z ENDP		; Animatable::CanDeleteSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanAssignController@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subAnim$ = 16
?CanAssignController@Animatable@@UEAAHH@Z PROC		; Animatable::CanAssignController, COMDAT

; 674  : 		virtual BOOL CanAssignController(int subAnim) { return TRUE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanAssignController@Animatable@@UEAAHH@Z ENDP		; Animatable::CanAssignController
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AssignController@Animatable@@UEAAHPEAV1@H@Z
_TEXT	SEGMENT
this$ = 8
control$ = 16
subAnim$ = 24
?AssignController@Animatable@@UEAAHPEAV1@H@Z PROC	; Animatable::AssignController, COMDAT

; 664  : 		virtual BOOL AssignController(Animatable *control,int subAnim) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?AssignController@Animatable@@UEAAHPEAV1@H@Z ENDP	; Animatable::AssignController
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?InvisibleProperty@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?InvisibleProperty@Animatable@@UEAAHXZ PROC		; Animatable::InvisibleProperty, COMDAT

; 653  : 		virtual BOOL InvisibleProperty() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?InvisibleProperty@Animatable@@UEAAHXZ ENDP		; Animatable::InvisibleProperty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassPropertyLevel@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?BypassPropertyLevel@Animatable@@UEAAHXZ PROC		; Animatable::BypassPropertyLevel, COMDAT

; 645  : 		virtual BOOL BypassPropertyLevel() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BypassPropertyLevel@Animatable@@UEAAHXZ ENDP		; Animatable::BypassPropertyLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassTrackBar@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?BypassTrackBar@Animatable@@UEAAHXZ PROC		; Animatable::BypassTrackBar, COMDAT

; 636  : 		virtual BOOL BypassTrackBar() { return BypassTreeView(); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+128]
	add	rsp, 40					; 00000028H
	ret	0
?BypassTrackBar@Animatable@@UEAAHXZ ENDP		; Animatable::BypassTrackBar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassTreeView@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?BypassTreeView@Animatable@@UEAAHXZ PROC		; Animatable::BypassTreeView, COMDAT

; 626  : 		virtual BOOL BypassTreeView() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BypassTreeView@Animatable@@UEAAHXZ ENDP		; Animatable::BypassTreeView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
_TEXT	SEGMENT
this$ = 8
ip$ = 16
flags$ = 24
next$ = 32
?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z PROC ; Animatable::EndEditParams, COMDAT

; 414  : 		virtual void EndEditParams(IObjParam *ip, ULONG flags, Animatable *next = NULL) {} 

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ENDP ; Animatable::EndEditParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
_TEXT	SEGMENT
this$ = 8
ip$ = 16
flags$ = 24
prev$ = 32
?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z PROC ; Animatable::BeginEditParams, COMDAT

; 395  : 		virtual void BeginEditParams(IObjParam *ip, ULONG flags, Animatable *prev = NULL) {} 

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ENDP ; Animatable::BeginEditParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FreeCaches@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?FreeCaches@Animatable@@UEAAXXZ PROC			; Animatable::FreeCaches, COMDAT

; 353  : 		virtual void FreeCaches() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FreeCaches@Animatable@@UEAAXXZ ENDP			; Animatable::FreeCaches
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ??_4Interval@@QEAAAEAV0@V0@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
i$ = 72
??_4Interval@@QEAAAEAV0@V0@@Z PROC			; Interval::operator&=, COMDAT

; 147  : 		Interval& operator&=(const Interval i) { return (*this = (*this&i)); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	r8, QWORD PTR i$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??IInterval@@QEBA?AV0@V0@@Z
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??_4Interval@@QEAAAEAV0@V0@@Z ENDP			; Interval::operator&=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ?SetInfinite@Interval@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetInfinite@Interval@@QEAAXXZ PROC			; Interval::SetInfinite, COMDAT

; 122  : 		void SetInfinite() { start = TIME_NegInfinity; end = TIME_PosInfinity; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 2147483647		; 7fffffffH
	ret	0
?SetInfinite@Interval@@QEAAXXZ ENDP			; Interval::SetInfinite
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ?SetEmpty@Interval@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetEmpty@Interval@@QEAAXXZ PROC			; Interval::SetEmpty, COMDAT

; 118  : 		void SetEmpty() { start = TIME_NegInfinity; end = TIME_NegInfinity; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], -2147483648		; ffffffff80000000H
	ret	0
?SetEmpty@Interval@@QEAAXXZ ENDP			; Interval::SetEmpty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ??0Interval@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0Interval@@QEAA@XZ PROC				; Interval::Interval, COMDAT

; 58   : 		Interval() { SetEmpty(); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0Interval@@QEAA@XZ ENDP				; Interval::Interval
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GICustomControl@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GICustomControl@@UEAAPEAXI@Z PROC			; ICustomControl::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ICustomControl@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 8
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GICustomControl@@UEAAPEAXI@Z ENDP			; ICustomControl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ICustomControl@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ICustomControl@@UEAA@XZ PROC				; ICustomControl::~ICustomControl, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1ICustomControl@@UEAA@XZ ENDP				; ICustomControl::~ICustomControl
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA PROC		; `ICustomControl::~ICustomControl'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA ENDP		; `ICustomControl::~ICustomControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA PROC		; `ICustomControl::~ICustomControl'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1ICustomControl@@UEAA@XZ@4HA ENDP		; `ICustomControl::~ICustomControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ICustomControl@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0ICustomControl@@QEAA@XZ PROC				; ICustomControl::ICustomControl, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0InterfaceServer@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ICustomControl@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0ICustomControl@@QEAA@XZ ENDP				; ICustomControl::ICustomControl
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA PROC		; `ICustomControl::ICustomControl'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA ENDP		; `ICustomControl::ICustomControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA PROC		; `ICustomControl::ICustomControl'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0ICustomControl@@QEAA@XZ@4HA ENDP		; `ICustomControl::ICustomControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\custcont.h
;	COMDAT ?Execute@ICustomControl@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
arg1$ = 24
arg2$ = 32
arg3$ = 40
?Execute@ICustomControl@@UEAA_JH_K00@Z PROC		; ICustomControl::Execute, COMDAT

; 407  : 		virtual INT_PTR Execute(int cmd, ULONG_PTR arg1=0, ULONG_PTR arg2=0, ULONG_PTR arg3=0) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Execute@ICustomControl@@UEAA_JH_K00@Z ENDP		; ICustomControl::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ?Intens@@YAMAEBVAColor@@@Z
_TEXT	SEGMENT
c$ = 8
?Intens@@YAMAEBVAColor@@@Z PROC				; Intens, COMDAT

; 335  : static inline float Intens(const AColor& c) {   return (c.r+c.g+c.b)/3.0f; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rsp]
	addss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR __real@40400000
	ret	0
?Intens@@YAMAEBVAColor@@@Z ENDP				; Intens
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
??0AColor@@QEAA@AEBV0@@Z PROC				; AColor::AColor, COMDAT

; 54   : 	AColor(const AColor& c) { r = c.r; g = c.g; b = c.b; a = c.a; } 

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@AEBV0@@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
A$ = 40
??0AColor@@QEAA@MMMM@Z PROC				; AColor::AColor, COMDAT

; 44   : 	AColor(float R, float G, float B, float A=1.0f)  { r = R; g = G; b = B; a = A; }

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR R$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR G$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR B$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR A$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@MMMM@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AColor@@QEAA@XZ PROC					; AColor::AColor, COMDAT

; 41   : 	AColor()  {}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@XZ ENDP					; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ?Intens@@YAMAEBVColor@@@Z
_TEXT	SEGMENT
c$ = 8
?Intens@@YAMAEBVColor@@@Z PROC				; Intens, COMDAT

; 580  : static inline float Intens(const Color& c) { return (c.r+c.g+c.b)/3.0f; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rsp]
	addss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR __real@40400000
	ret	0
?Intens@@YAMAEBVColor@@@Z ENDP				; Intens
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@NNN@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
??0Color@@QEAA@NNN@Z PROC				; Color::Color, COMDAT

; 103  : 	Color(double R, double G, double B) { r = (float)R; g = (float)G; b = (float)B; }

	movsd	QWORD PTR [rsp+32], xmm3
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	cvtsd2ss xmm0, QWORD PTR R$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
	cvtsd2ss xmm0, QWORD PTR G$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	cvtsd2ss xmm0, QWORD PTR B$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@NNN@Z ENDP				; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
??0Color@@QEAA@MMM@Z PROC				; Color::Color, COMDAT

; 93   : 	Color(float R, float G, float B)  { r = R; g = G; b = B;  }

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR R$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR G$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR B$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@MMM@Z ENDP				; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?BitMask@BitArray@@AEBA_KH@Z
_TEXT	SEGMENT
tv66 = 0
tv69 = 8
this$ = 32
i$ = 40
?BitMask@BitArray@@AEBA_KH@Z PROC			; BitArray::BitMask, COMDAT

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	cmp	DWORD PTR i$[rsp], 64			; 00000040H
	jge	SHORT $LN3@BitMask
	mov	eax, DWORD PTR i$[rsp]
	mov	ecx, 1
	mov	QWORD PTR tv69[rsp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv69[rsp]
	shl	rax, cl
	mov	QWORD PTR tv66[rsp], rax
	jmp	SHORT $LN4@BitMask
$LN3@BitMask:
	mov	QWORD PTR tv66[rsp], 0
$LN4@BitMask:
	mov	rax, QWORD PTR tv66[rsp]
	add	rsp, 24
	ret	0
?BitMask@BitArray@@AEBA_KH@Z ENDP			; BitArray::BitMask
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?UseLocalBits@BitArray@@AEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?UseLocalBits@BitArray@@AEBA_NXZ PROC			; BitArray::UseLocalBits, COMDAT

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+8], 64			; 00000040H
	jg	SHORT $LN3@UseLocalBi
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN4@UseLocalBi
$LN3@UseLocalBi:
	mov	DWORD PTR tv66[rsp], 0
$LN4@UseLocalBi:
	movzx	eax, BYTE PTR tv66[rsp]
	add	rsp, 24
	ret	0
?UseLocalBits@BitArray@@AEBA_NXZ ENDP			; BitArray::UseLocalBits
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?Set@BitArray@@QEAAXH@Z
_TEXT	SEGMENT
tv93 = 32
tv79 = 40
this$ = 64
i$ = 72
?Set@BitArray@@QEAAXH@Z PROC				; BitArray::Set, COMDAT

; 290  : 	{

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 291  : 		DbgAssert(i>-1 && i<numBits);
; 292  : 		if ((i > -1) && (i < numBits))

	cmp	DWORD PTR i$[rsp], -1
	jle	$LN2@Set
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rsp], eax
	jge	$LN2@Set

; 293  : 		{
; 294  : 			if (UseLocalBits())

	mov	rcx, QWORD PTR this$[rsp]
	call	?UseLocalBits@BitArray@@AEBA_NXZ	; BitArray::UseLocalBits
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Set

; 295  : 			{
; 296  : 				localBits |= BitMask(i);

	mov	edx, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?BitMask@BitArray@@AEBA_KH@Z		; BitArray::BitMask
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	or	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 297  : 			}
; 298  : 			else

	jmp	SHORT $LN4@Set
$LN3@Set:

; 299  : 			{
; 300  : 				bits[i>>NSHIFT] |= BitMask(i&BITS_PER_DWORD_PTR_MASK);

	mov	eax, DWORD PTR i$[rsp]
	sar	eax, 6
	cdqe
	mov	QWORD PTR tv79[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv93[rsp], rcx
	mov	edx, DWORD PTR i$[rsp]
	and	edx, 63					; 0000003fH
	mov	rcx, QWORD PTR this$[rsp]
	call	?BitMask@BitArray@@AEBA_KH@Z		; BitArray::BitMask
	mov	rdx, QWORD PTR tv93[rsp]
	mov	rcx, QWORD PTR tv79[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8]
	or	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR i$[rsp]
	sar	ecx, 6
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rdx+rcx*8], rax
$LN4@Set:
$LN2@Set:

; 301  : 			}
; 302  : 		}
; 303  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?Set@BitArray@@QEAAXH@Z ENDP				; BitArray::Set
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\matrix3.h
;	COMDAT ?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ PROC		; Matrix3::GetTrans, COMDAT

; 308  :    const Point3& GetTrans() const { return (*this)[kTrans]; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	edx, 3
	mov	rcx, QWORD PTR this$[rsp]
	call	??AMatrix3@@QEBAAEBVPoint3@@H@Z		; Matrix3::operator[]
	add	rsp, 40					; 00000028H
	ret	0
?GetTrans@Matrix3@@QEBAAEBVPoint3@@XZ ENDP		; Matrix3::GetTrans
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\matrix3.h
;	COMDAT ?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
i$ = 64
?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z PROC		; Matrix3::GetRow, COMDAT

; 260  :    Point3 GetRow(int i) const { return (*this)[i]; }

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	edx, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??AMatrix3@@QEBAAEBVPoint3@@H@Z		; Matrix3::operator[]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?GetRow@Matrix3@@QEBA?AVPoint3@@H@Z ENDP		; Matrix3::GetRow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\matrix3.h
;	COMDAT ??0Matrix3@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Matrix3@@QEAA@XZ PROC				; Matrix3::Matrix3, COMDAT

; 172  :    Matrix3(){ flags = 0; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+48], 0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Matrix3@@QEAA@XZ ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\matrix3.h
;	COMDAT ??AMatrix3@@QEBAAEBVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
??AMatrix3@@QEBAAEBVPoint3@@H@Z PROC			; Matrix3::operator[], COMDAT

; 118  :    const Point3& operator[](int i) const { return((Point3&)(*m[i])); }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 4
	imul	rcx, rcx, 0
	add	rax, rcx
	ret	0
??AMatrix3@@QEBAAEBVPoint3@@H@Z ENDP			; Matrix3::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Execute@ClassDesc@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
arg1$ = 24
arg2$ = 32
arg3$ = 40
?Execute@ClassDesc@@UEAA_JH_K00@Z PROC			; ClassDesc::Execute, COMDAT

; 1419 : 		virtual INT_PTR Execute(int cmd, ULONG_PTR arg1=0, ULONG_PTR arg2=0, ULONG_PTR arg3=0) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Execute@ClassDesc@@UEAA_JH_K00@Z ENDP			; ClassDesc::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ PROC		; ClassDesc::SubClassID, COMDAT

; 1405 : 		virtual Class_ID		SubClassID() { return Class_ID(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@XZ			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ ENDP		; ClassDesc::SubClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?ClearInterfaces@ClassDesc@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearInterfaces@ClassDesc@@UEAAXXZ PROC		; ClassDesc::ClearInterfaces, COMDAT

; 1396 : 		virtual void			ClearInterfaces() { interfaces.ZeroCount(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ ; Tab<FPInterface * __ptr64>::ZeroCount
	add	rsp, 40					; 00000028H
	ret	0
?ClearInterfaces@ClassDesc@@UEAAXXZ ENDP		; ClassDesc::ClearInterfaces
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z PROC ; ClassDesc::GetInterfaceAt, COMDAT

; 1379 : 		virtual FPInterface*	GetInterfaceAt(int i) { return interfaces[i]; }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ; Tab<FPInterface * __ptr64>::operator[]
	mov	rax, QWORD PTR [rax]
	add	rsp, 40					; 00000028H
	ret	0
?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z ENDP ; ClassDesc::GetInterfaceAt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NumInterfaces@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NumInterfaces@ClassDesc@@UEAAHXZ PROC			; ClassDesc::NumInterfaces, COMDAT

; 1376 : 		virtual int				NumInterfaces() { return interfaces.Count(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ	; Tab<FPInterface * __ptr64>::Count
	add	rsp, 40					; 00000028H
	ret	0
?NumInterfaces@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::NumInterfaces
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z
_TEXT	SEGMENT
this$ = 8
bkColor$ = 16
hDC$ = 24
rect$ = 32
?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z PROC ; ClassDesc::DrawRepresentation, COMDAT

; 1370 : 		virtual bool DrawRepresentation(COLORREF bkColor, HDC hDC, Rect& rect) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z ENDP ; ClassDesc::DrawRepresentation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
pbd$ = 16
?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z PROC ; ClassDesc::GetUserDlgProc, COMDAT

; 1358 : 		virtual ParamMap2UserDlgProc* GetUserDlgProc(ParamBlockDesc2* pbd) { return NULL; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z ENDP ; ClassDesc::GetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
pbd$ = 16
?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z PROC ; ClassDesc::GetParamMap, COMDAT

; 1341 : 		virtual IParamMap2*		GetParamMap(ParamBlockDesc2* pbd) { return NULL; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z ENDP ; ClassDesc::GetParamMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ PROC ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure, COMDAT

; 1263 : 		virtual bool			UseOnlyInternalNameForMAXScriptExposure() { return false; }

	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ ENDP ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?InitialRollupPageState@ClassDesc@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?InitialRollupPageState@ClassDesc@@UEAAKXZ PROC		; ClassDesc::InitialRollupPageState, COMDAT

; 1252 : 		virtual DWORD			InitialRollupPageState() { return 0x7fffffff; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2147483647				; 7fffffffH
	ret	0
?InitialRollupPageState@ClassDesc@@UEAAKXZ ENDP		; ClassDesc::InitialRollupPageState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z
_TEXT	SEGMENT
this$ = 8
iload$ = 16
?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z PROC	; ClassDesc::Load, COMDAT

; 1237 : 		virtual IOResult 		Load(ILoad *iload) { return IO_OK; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z ENDP	; ClassDesc::Load
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z
_TEXT	SEGMENT
this$ = 8
isave$ = 16
?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z PROC	; ClassDesc::Save, COMDAT

; 1230 : 		virtual IOResult 		Save(ISave *isave) { return IO_OK; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z ENDP	; ClassDesc::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NeedsToSave@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NeedsToSave@ClassDesc@@UEAAHXZ PROC			; ClassDesc::NeedsToSave, COMDAT

; 1224 : 		virtual BOOL			NeedsToSave() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NeedsToSave@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::NeedsToSave
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
pNode$ = 16
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z PROC ; ClassDesc::CreateManipulator, COMDAT

; 1215 : 		virtual Manipulator* CreateManipulator(INode* pNode) {return NULL;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z ENDP ; ClassDesc::CreateManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
hTarget$ = 16
pNode$ = 24
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z PROC ; ClassDesc::CreateManipulator, COMDAT

; 1207 : 			INode* pNode) { return NULL; }

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z ENDP ; ClassDesc::CreateManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
pNode$ = 16
?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z PROC	; ClassDesc::CanManipulateNode, COMDAT

; 1189 : 		virtual BOOL CanManipulateNode(INode* pNode) { return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z ENDP	; ClassDesc::CanManipulateNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
hTarget$ = 16
?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z PROC ; ClassDesc::CanManipulate, COMDAT

; 1182 : 		virtual BOOL CanManipulate(ReferenceTarget* hTarget) { return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ClassDesc::CanManipulate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?IsManipulator@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsManipulator@ClassDesc@@UEAAHXZ PROC			; ClassDesc::IsManipulator, COMDAT

; 1173 : 		virtual BOOL IsManipulator() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsManipulator@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::IsManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z PROC ; ClassDesc::GetActionTable, COMDAT

; 1166 : 		virtual ActionTable* GetActionTable(int i) { return NULL; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z ENDP ; ClassDesc::GetActionTable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NumActionTables@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumActionTables@ClassDesc@@UEAAHXZ PROC		; ClassDesc::NumActionTables, COMDAT

; 1159 : 		virtual int NumActionTables() { return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumActionTables@ClassDesc@@UEAAHXZ ENDP		; ClassDesc::NumActionTables
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z
_TEXT	SEGMENT
this$ = 8
hParent$ = 16
?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z PROC	; ClassDesc::EditClassParams, COMDAT

; 1134 : 		virtual void			EditClassParams(HWND hParent) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z ENDP	; ClassDesc::EditClassParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?HasClassParams@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?HasClassParams@ClassDesc@@UEAAHXZ PROC			; ClassDesc::HasClassParams, COMDAT

; 1127 : 		virtual BOOL			HasClassParams() {return FALSE;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?HasClassParams@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::HasClassParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::OkToCreate, COMDAT

; 1051 : 		virtual BOOL			OkToCreate(Interface *i) { return TRUE; }	// return FALSE to disable create button

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::OkToCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::EndCreate, COMDAT

; 1018 : 		virtual int 			EndCreate(Interface *i) {return 0;};

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::EndCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::BeginCreate, COMDAT

; 1008 : 		virtual	int 			BeginCreate(Interface *i) {return 0;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::BeginCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
i$ = 72
??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z PROC ; Tab<FPInterface * __ptr64>::operator[], COMDAT

; 357  : 		T& operator[](const INT_PTR i) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 358  : 			DbgAssert(th);
; 359  : 			DbgAssert(i >= 0);
; 360  : 			DbgAssert(th && i < th->count);
; 361  : 			if (!th || i < 0 || (i >= th->count))

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@operator
	cmp	QWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax]
	cmp	QWORD PTR i$[rsp], rax
	jl	SHORT $LN2@operator
$LN3@operator:

; 362  : 			{
; 363  : 				throw MaxSDK::Util::TabOutOfRangeException(_M("Invalid index passed into a Max SDK Tab::operator[]"));

	lea	rdx, OFFSET FLAT:??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
	lea	rdx, OFFSET FLAT:_TI4?AVTabOutOfRangeException@Util@MaxSDK@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@operator:

; 364  : 			}
; 365  : 			
; 366  : 			return (th->data[i]); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR i$[rsp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
$LN4@operator:

; 367  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ENDP ; Tab<FPInterface * __ptr64>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ PROC	; Tab<FPInterface * __ptr64>::ZeroCount, COMDAT

; 232  : 		{ 

	mov	QWORD PTR [rsp+8], rcx

; 233  : 			if (th) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@ZeroCount

; 234  : 				th->count = 0; 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rax], 0
$LN2@ZeroCount:

; 235  : 			}
; 236  : 		}

	ret	0
?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ ENDP	; Tab<FPInterface * __ptr64>::ZeroCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ PROC		; Tab<FPInterface * __ptr64>::Count, COMDAT

; 220  : 		{ 

	mov	QWORD PTR [rsp+8], rcx

; 221  : 			if (th) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Count

; 222  : 				return (th->count); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	jmp	SHORT $LN1@Count
$LN2@Count:

; 223  : 			}
; 224  : 			return 0; 

	xor	eax, eax
$LN1@Count:

; 225  : 		}  

	ret	0
?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ ENDP		; Tab<FPInterface * __ptr64>::Count
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
text$di	SEGMENT
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ PROC	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId'', COMDAT

; 32   : 		static AssetId kInvalidId;

	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A
	call	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ; MaxSDK::AssetManagement::AssetId::AssetId
	add	rsp, 40					; 00000028H
	ret	0
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ENDP	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
_TEXT	SEGMENT
this$ = 24
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ PROC		; MaxSDK::AssetManagement::AssetId::AssetId, COMDAT

; 29   : 			AssetId() { *static_cast<GUID*>(this) = CLSID_NULL; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	lea	rax, OFFSET FLAT:GUID_NULL
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	pop	rsi
	ret	0
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ENDP		; MaxSDK::AssetManagement::AssetId::AssetId
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GInterfaceServer@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GInterfaceServer@@UEAAPEAXI@Z PROC			; InterfaceServer::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 8
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GInterfaceServer@@UEAAPEAXI@Z ENDP			; InterfaceServer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InterfaceServer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0InterfaceServer@@QEAA@XZ PROC			; InterfaceServer::InterfaceServer, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7InterfaceServer@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0InterfaceServer@@QEAA@XZ ENDP			; InterfaceServer::InterfaceServer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\point3.h
;	COMDAT ?DotProd@@YAMAEBVPoint3@@0@Z
_TEXT	SEGMENT
a$ = 8
b$ = 16
?DotProd@@YAMAEBVPoint3@@0@Z PROC			; DotProd, COMDAT

; 348  : __forceinline float DotProd(const Point3& a, const Point3& b) { 

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 349  :    return(a.x*b.x+a.y*b.y+a.z*b.z); 

	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx]
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR [rcx+4]
	addss	xmm0, xmm1
	mov	rax, QWORD PTR a$[rsp]
	mov	rcx, QWORD PTR b$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR [rcx+8]
	addss	xmm0, xmm1

; 350  :    }

	ret	0
?DotProd@@YAMAEBVPoint3@@0@Z ENDP			; DotProd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\point3.h
;	COMDAT ??D@YA?AVPoint3@@AEBV0@M@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
a$ = 72
f$ = 80
??D@YA?AVPoint3@@AEBV0@M@Z PROC				; operator*, COMDAT

; 326  : __forceinline Point3 operator*(const Point3& a, float f) {

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 327  :    return(Point3(a.x*f, a.y*f, a.z*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, DWORD PTR f$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 328  :    }

	add	rsp, 56					; 00000038H
	ret	0
??D@YA?AVPoint3@@AEBV0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT

; 304  : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 305  : 	return (_CSTD sqrtf(_Xx));

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_sqrtf
	npad	1

; 306  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?fabs@@YAMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
?fabs@@YAMM@Z PROC					; fabs, COMDAT

; 122  : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 123  : 	return (_CSTD fabsf(_Xx));

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	fabsf
	npad	1

; 124  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?fabs@@YAMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?acos@@YAMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
?acos@@YAMM@Z PROC					; acos, COMDAT

; 36   : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 37   : 	return (_CSTD acosf(_Xx));

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_acosf
	npad	1

; 38   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?acos@@YAMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z PROC ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z PROC ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7TabOutOfRangeException@Util@MaxSDK@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ PROC	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ ENDP	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
_TEXT	SEGMENT
tv75 = 0
this$ = 32
?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ PROC ; MaxSDK::Util::TabOutOfRangeException::What, COMDAT

; 99   : 			{

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 100  : 				return (mMessage) ? mMessage : _M("MaxSDK::Util::TabOutOfRangeException");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@What
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv75[rsp], rax
	jmp	SHORT $LN4@What
$LN3@What:
	lea	rax, OFFSET FLAT:??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@
	mov	QWORD PTR tv75[rsp], rax
$LN4@What:
	mov	rax, QWORD PTR tv75[rsp]

; 101  : 			}

	add	rsp, 24
	ret	0
?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ ENDP ; MaxSDK::Util::TabOutOfRangeException::What
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z PROC ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException, COMDAT

; 96   : 			{

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 95   : 				: MaxSDK::Util::OutOfRangeException(message)

	mov	rdx, QWORD PTR message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	npad	1

; 96   : 			{

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7TabOutOfRangeException@Util@MaxSDK@@6B@
	mov	QWORD PTR [rax], rcx

; 97   : 			}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Interface_ID@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
iid$ = 16
??0Interface_ID@@QEAA@AEBV0@@Z PROC			; Interface_ID::Interface_ID, COMDAT

; 215  : 	Interface_ID(const Interface_ID& iid) { a = iid.a; b = iid.b;	}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR iid$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR iid$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Interface_ID@@QEAA@AEBV0@@Z ENDP			; Interface_ID::Interface_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??8Class_ID@@QEBA_NAEBV0@@Z
_TEXT	SEGMENT
tv70 = 0
this$ = 32
cid$ = 40
??8Class_ID@@QEBA_NAEBV0@@Z PROC			; Class_ID::operator==, COMDAT

; 170  : 	bool operator==(const Class_ID& cid) const { return ((a == cid.a) && (b == cid.b)); }

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR cid$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR cid$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[rsp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv70[rsp]
	add	rsp, 24
	ret	0
??8Class_ID@@QEBA_NAEBV0@@Z ENDP			; Class_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@KK@Z
_TEXT	SEGMENT
this$ = 8
aa$ = 16
bb$ = 24
??0Class_ID@@QEAA@KK@Z PROC				; Class_ID::Class_ID, COMDAT

; 160  : 	Class_ID(ulong aa, ulong bb) { a = aa; b = bb; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR aa$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bb$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@KK@Z ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Class_ID@@QEAA@XZ PROC				; Class_ID::Class_ID, COMDAT

; 145  : 	Class_ID() { a = b = 0xffffffff; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], -1			; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -1			; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@XZ ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\math.h
;	COMDAT fabsf
_TEXT	SEGMENT
_X$ = 48
fabsf	PROC						; COMDAT

; 670  :     {

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 40					; 00000028H

; 671  :         return (float)fabs(_X);

	cvtss2sd xmm0, DWORD PTR _X$[rsp]
	call	fabs
	cvtsd2ss xmm0, xmm0

; 672  :     }

	add	rsp, 40					; 00000028H
	ret	0
fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercongradient.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 56					; 00000038H
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
