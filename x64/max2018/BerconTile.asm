; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24231.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?texoutDlg@BerconTile@@2PEAVParamDlg@@EA	; BerconTile::texoutDlg
PUBLIC	WinbaseIsolationAwarePrivateT_UnPgpgk
PUBLIC	IsolationAwarePrivateT_SqbjaYRiRY
PUBLIC	IsolationAwarePrivateT_SAbnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
?texoutDlg@BerconTile@@2PEAVParamDlg@@EA DQ 01H DUP (?)	; BerconTile::texoutDlg
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SqbjaYRiRY
_BSS	SEGMENT
IsolationAwarePrivateT_SqbjaYRiRY DD 01H DUP (?)
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SAbnPgpgk
_BSS	SEGMENT
IsolationAwarePrivateT_SAbnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_UnPgpgk
_DATA	SEGMENT
WinbaseIsolationAwarePrivateT_UnPgpgk DQ ffffffffffffffffH
_DATA	ENDS
CONST	SEGMENT
$SG219458 DB	'0,1,1/.5,.5,1', 00H
	ORG $+2
$SG219459 DB	'p', 00H, 'a', 00H, 't', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'n', 00H, 00H, 00H
$SG219460 DB	'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	00H, 00H
	ORG $+2
$SG219461 DB	'u', 00H, 's', 00H, 'e', 00H, 'D', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 00H, 00H
$SG219625 DB	'L', 00H, 00H, 00H
$SG219462 DB	'd', 00H, 'i', 00H, 's', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 't', 00H, 'r'
	DB	00H, 00H, 00H
$SG219626 DB	'L', 00H, 00H, 00H
$SG219463 DB	'm', 00H, 'a', 00H, 'p', 00H, '5', 00H, 00H, 00H
	ORG $+2
$SG219788 DB	00H, 00H
	ORG $+2
$SG219464 DB	'm', 00H, 'a', 00H, 'p', 00H, '4', 00H, 00H, 00H
	ORG $+6
$SG219465 DB	'p', 00H, 'b', 00H, '_', 00H, 'c', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'e', 00H, 'l', 00H, 00H, 00H
	ORG $+4
$SG219466 DB	'p', 00H, 'b', 00H, '_', 00H, 'c', 00H, 'e', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG219467 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, 'Z', 00H, 00H, 00H
	ORG $+6
$SG219468 DB	'p', 00H, 'b', 00H, '_', 00H, 'f', 00H, 'l', 00H, 'i', 00H
	DB	'p', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG219469 DB	'p', 00H, 'b', 00H, '_', 00H, 'f', 00H, 'l', 00H, 'i', 00H
	DB	'p', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG219470 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, 'R', 00H, 'o', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG219471 DB	'r', 00H, 'o', 00H, 't', 00H, 'U', 00H, 'V', 00H, 00H, 00H
	ORG $+4
$SG219472 DB	'p', 00H, 'b', 00H, '_', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, 00H, 00H
$SG219473 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, 'S', 00H, 'Y', 00H, 00H, 00H
	ORG $+4
$SG219474 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, 'S', 00H, 'X', 00H, 00H, 00H
	ORG $+4
$SG219475 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, 'Y', 00H, 00H, 00H
	ORG $+6
$SG219476 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'd', 00H, 'X', 00H, 00H, 00H
	ORG $+6
$SG219477 DB	'u', 00H, 'v', 00H, 'C', 00H, 'h', 00H, 'a', 00H, 'n', 00H
	DB	'n', 00H, 'e', 00H, 'l', 00H, 00H, 00H
	ORG $+4
$SG219478 DB	'm', 00H, 'a', 00H, 'p', 00H, 'U', 00H, 'V', 00H, 00H, 00H
	ORG $+4
$SG219479 DB	'p', 00H, 'b', 00H, '_', 00H, 'a', 00H, 'u', 00H, 't', 00H
	DB	'o', 00H, 00H, 00H
$SG219480 DB	'r', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 'd', 00H, 'R', 00H
	DB	'a', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG219481 DB	'p', 00H, 'b', 00H, '_', 00H, 'r', 00H, 'o', 00H, 'u', 00H
	DB	'n', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG219482 DB	's', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'R', 00H, 'a', 00H, 'd', 00H, 00H, 00H
	ORG $+4
$SG219483 DB	's', 00H, 'o', 00H, 'f', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	00H, 00H
	ORG $+2
$SG219484 DB	'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 'h', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, '2', 00H, 00H, 00H
$SG219485 DB	'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG219486 DB	't', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'h', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, '2', 00H, 00H, 00H
$SG219487 DB	't', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, '2', 00H, 00H, 00H
	ORG $+2
$SG219488 DB	'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 'h', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG219489 DB	'e', 00H, 'd', 00H, 'g', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+4
$SG219490 DB	't', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'h', 00H, 'e', 00H
	DB	'i', 00H, 'g', 00H, 'h', 00H, 't', 00H, 00H, 00H
	ORG $+2
$SG219491 DB	't', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'W', 00H, 'i', 00H
	DB	'd', 00H, 't', 00H, 'h', 00H, 00H, 00H
	ORG $+4
$SG219492 DB	's', 00H, 'i', 00H, 'z', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG219493 DB	's', 00H, 't', 00H, 'y', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG219494 DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, 'E', 00H, 'd', 00H
	DB	'g', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG219495 DB	'm', 00H, 'a', 00H, 'p', 00H, '3', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG219496 DB	'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG219497 DB	'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 'E', 00H, 'n', 00H
	DB	'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG219498 DB	'm', 00H, 'a', 00H, 'p', 00H, '3', 00H, 00H, 00H
	ORG $+6
$SG219499 DB	'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 00H, 00H
	ORG $+6
$SG219500 DB	'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 00H, 00H
	ORG $+6
$SG219501 DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, '3', 00H
	DB	00H, 00H
	ORG $+2
$SG219502 DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, '2', 00H
	DB	00H, 00H
	ORG $+2
$SG219503 DB	'c', 00H, 'o', 00H, 'l', 00H, 'o', 00H, 'r', 00H, '1', 00H
	DB	00H, 00H
	ORG $+2
$SG219504 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG219519 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG219520 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '2', 00H, 00H, 00H
	ORG $+4
$SG219521 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 'E', 00H
	DB	'n', 00H, 'a', 00H, 'b', 00H, 'l', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+6
$SG219522 DB	'b', 00H, 'm', 00H, 'a', 00H, 'p', 00H, '1', 00H, 00H, 00H
	ORG $+4
$SG219523 DB	'p', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 's', 00H
	DB	00H, 00H
	ORG $+2
$SG219669 DB	'0', 00H, ',', 00H, '1', 00H, ',', 00H, '1', 00H, '/', 00H
	DB	'.', 00H, '5', 00H, ',', 00H, '.', 00H, '5', 00H, ',', 00H, '1'
	DB	00H, 00H, 00H
CONST	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	wmemcpy
PUBLIC	wmemmove
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0Class_ID@@QEAA@XZ				; Class_ID::Class_ID
PUBLIC	??0Class_ID@@QEAA@KK@Z				; Class_ID::Class_ID
PUBLIC	??8Class_ID@@QEBA_NAEBV0@@Z			; Class_ID::operator==
PUBLIC	??0Interface_ID@@QEAA@AEBV0@@Z			; Interface_ID::Interface_ID
PUBLIC	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
PUBLIC	?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ ; MaxSDK::Util::TabOutOfRangeException::What
PUBLIC	??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException
PUBLIC	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
PUBLIC	??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor'
PUBLIC	?length@?$char_traits@_W@std@@SA_KPEB_W@Z	; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
PUBLIC	?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	??0_Container_proxy@std@@QEAA@XZ		; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QEAA@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	??D@YA?AVPoint3@@MAEBV0@@Z			; operator*
PUBLIC	??D@YA?AVPoint3@@AEBV0@M@Z			; operator*
PUBLIC	??0InterfaceServer@@QEAA@XZ			; InterfaceServer::InterfaceServer
PUBLIC	??_GInterfaceServer@@UEAAPEAXI@Z		; InterfaceServer::`scalar deleting destructor'
PUBLIC	??0?$Tab@PEAVBaseInterface@@@@QEAA@XZ		; Tab<BaseInterface * __ptr64>::Tab<BaseInterface * __ptr64>
PUBLIC	??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ		; Tab<BaseInterface * __ptr64>::~Tab<BaseInterface * __ptr64>
PUBLIC	??0BaseInterfaceServer@@QEAA@XZ			; BaseInterfaceServer::BaseInterfaceServer
PUBLIC	??_GBaseInterfaceServer@@UEAAPEAXI@Z		; BaseInterfaceServer::`scalar deleting destructor'
PUBLIC	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ	; MaxSDK::AssetManagement::AssetId::AssetId
PUBLIC	?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ		; Tab<FPInterface * __ptr64>::Count
PUBLIC	?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ	; Tab<FPInterface * __ptr64>::ZeroCount
PUBLIC	??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ; Tab<FPInterface * __ptr64>::operator[]
PUBLIC	?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::BeginCreate
PUBLIC	?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::EndCreate
PUBLIC	?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z	; ClassDesc::OkToCreate
PUBLIC	?HasClassParams@ClassDesc@@UEAAHXZ		; ClassDesc::HasClassParams
PUBLIC	?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z	; ClassDesc::EditClassParams
PUBLIC	?NumActionTables@ClassDesc@@UEAAHXZ		; ClassDesc::NumActionTables
PUBLIC	?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z ; ClassDesc::GetActionTable
PUBLIC	?IsManipulator@ClassDesc@@UEAAHXZ		; ClassDesc::IsManipulator
PUBLIC	?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z ; ClassDesc::CanManipulate
PUBLIC	?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z ; ClassDesc::CanManipulateNode
PUBLIC	?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z ; ClassDesc::CreateManipulator
PUBLIC	?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z ; ClassDesc::CreateManipulator
PUBLIC	?NeedsToSave@ClassDesc@@UEAAHXZ			; ClassDesc::NeedsToSave
PUBLIC	?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z ; ClassDesc::Save
PUBLIC	?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z ; ClassDesc::Load
PUBLIC	?InitialRollupPageState@ClassDesc@@UEAAKXZ	; ClassDesc::InitialRollupPageState
PUBLIC	?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure
PUBLIC	?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z ; ClassDesc::GetParamMap
PUBLIC	?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z ; ClassDesc::GetUserDlgProc
PUBLIC	?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z ; ClassDesc::DrawRepresentation
PUBLIC	?NumInterfaces@ClassDesc@@UEAAHXZ		; ClassDesc::NumInterfaces
PUBLIC	?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z ; ClassDesc::GetInterfaceAt
PUBLIC	?ClearInterfaces@ClassDesc@@UEAAXXZ		; ClassDesc::ClearInterfaces
PUBLIC	?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ	; ClassDesc::SubClassID
PUBLIC	?Execute@ClassDesc@@UEAA_JH_K00@Z		; ClassDesc::Execute
PUBLIC	??0Matrix3@@QEAA@XZ				; Matrix3::Matrix3
PUBLIC	?Set@BitArray@@QEAAXH@Z				; BitArray::Set
PUBLIC	?UseLocalBits@BitArray@@AEBA_NXZ		; BitArray::UseLocalBits
PUBLIC	?BitMask@BitArray@@AEBA_KH@Z			; BitArray::BitMask
PUBLIC	??0Color@@QEAA@XZ				; Color::Color
PUBLIC	??0Color@@QEAA@MMM@Z				; Color::Color
PUBLIC	??0AColor@@QEAA@XZ				; AColor::AColor
PUBLIC	??0AColor@@QEAA@MMMM@Z				; AColor::AColor
PUBLIC	??0AColor@@QEAA@HHHH@Z				; AColor::AColor
PUBLIC	??0AColor@@QEAA@AEBV0@@Z			; AColor::AColor
PUBLIC	??0AColor@@QEAA@AEBVColor@@M@Z			; AColor::AColor
PUBLIC	??HAColor@@QEBA?AV0@AEBV0@@Z			; AColor::operator+
PUBLIC	??D@YA?AVAColor@@MAEBV0@@Z			; operator*
PUBLIC	??0Interval@@QEAA@XZ				; Interval::Interval
PUBLIC	?SetEmpty@Interval@@QEAAXXZ			; Interval::SetEmpty
PUBLIC	?SetInfinite@Interval@@QEAAXXZ			; Interval::SetInfinite
PUBLIC	??_4Interval@@QEAAAEAV0@V0@@Z			; Interval::operator&=
PUBLIC	?FreeCaches@Animatable@@UEAAXXZ			; Animatable::FreeCaches
PUBLIC	?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ; Animatable::BeginEditParams
PUBLIC	?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ; Animatable::EndEditParams
PUBLIC	?BypassTreeView@Animatable@@UEAAHXZ		; Animatable::BypassTreeView
PUBLIC	?BypassTrackBar@Animatable@@UEAAHXZ		; Animatable::BypassTrackBar
PUBLIC	?BypassPropertyLevel@Animatable@@UEAAHXZ	; Animatable::BypassPropertyLevel
PUBLIC	?InvisibleProperty@Animatable@@UEAAHXZ		; Animatable::InvisibleProperty
PUBLIC	?AssignController@Animatable@@UEAAHPEAV1@H@Z	; Animatable::AssignController
PUBLIC	?CanAssignController@Animatable@@UEAAHH@Z	; Animatable::CanAssignController
PUBLIC	?CanDeleteSubAnim@Animatable@@UEAAHH@Z		; Animatable::CanDeleteSubAnim
PUBLIC	?DeleteSubAnim@Animatable@@UEAAXH@Z		; Animatable::DeleteSubAnim
PUBLIC	?GetSubAnimCurveColor@Animatable@@UEAAKH@Z	; Animatable::GetSubAnimCurveColor
PUBLIC	?CanCopyAnim@Animatable@@UEAAHXZ		; Animatable::CanCopyAnim
PUBLIC	?CanMakeUnique@Animatable@@UEAAHXZ		; Animatable::CanMakeUnique
PUBLIC	?NumChildren@Animatable@@UEAAHXZ		; Animatable::NumChildren
PUBLIC	?ChildAnim@Animatable@@UEAAPEAV1@H@Z		; Animatable::ChildAnim
PUBLIC	?RenderBegin@Animatable@@UEAAHHK@Z		; Animatable::RenderBegin
PUBLIC	?RenderEnd@Animatable@@UEAAHH@Z			; Animatable::RenderEnd
PUBLIC	?EditTrack@Animatable@@UEAAXXZ			; Animatable::EditTrack
PUBLIC	?NumKeys@Animatable@@UEAAHXZ			; Animatable::NumKeys
PUBLIC	?GetKeyTime@Animatable@@UEAAHH@Z		; Animatable::GetKeyTime
PUBLIC	?GetKeyIndex@Animatable@@UEAAHH@Z		; Animatable::GetKeyIndex
PUBLIC	?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z	; Animatable::GetNextKeyTime
PUBLIC	?CopyKeysFromTime@Animatable@@UEAAXHHK@Z	; Animatable::CopyKeysFromTime
PUBLIC	?DeleteKeyAtTime@Animatable@@UEAAXH@Z		; Animatable::DeleteKeyAtTime
PUBLIC	?IsKeyAtTime@Animatable@@UEAAHHK@Z		; Animatable::IsKeyAtTime
PUBLIC	?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z ; Animatable::GetKeyTimes
PUBLIC	?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z ; Animatable::GetKeySelState
PUBLIC	?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z	; Animatable::EditTimeRange
PUBLIC	?DeleteTime@Animatable@@UEAAXVInterval@@K@Z	; Animatable::DeleteTime
PUBLIC	?ReverseTime@Animatable@@UEAAXVInterval@@K@Z	; Animatable::ReverseTime
PUBLIC	?ScaleTime@Animatable@@UEAAXVInterval@@M@Z	; Animatable::ScaleTime
PUBLIC	?InsertTime@Animatable@@UEAAXHH@Z		; Animatable::InsertTime
PUBLIC	?SupportTimeOperations@Animatable@@UEAAHXZ	; Animatable::SupportTimeOperations
PUBLIC	?DeleteKeys@Animatable@@UEAAXK@Z		; Animatable::DeleteKeys
PUBLIC	?DeleteKeyByIndex@Animatable@@UEAAXH@Z		; Animatable::DeleteKeyByIndex
PUBLIC	?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z ; Animatable::SelectKeys
PUBLIC	?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z ; Animatable::SelectSubKeys
PUBLIC	?SelectSubCurve@Animatable@@UEAAXHH@Z		; Animatable::SelectSubCurve
PUBLIC	?SelectKeyByIndex@Animatable@@UEAAXHH@Z		; Animatable::SelectKeyByIndex
PUBLIC	?IsKeySelected@Animatable@@UEAAHH@Z		; Animatable::IsKeySelected
PUBLIC	?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z	; Animatable::FlagKey
PUBLIC	?GetFlagKeyIndex@Animatable@@UEAAHXZ		; Animatable::GetFlagKeyIndex
PUBLIC	?NumSelKeys@Animatable@@UEAAHXZ			; Animatable::NumSelKeys
PUBLIC	?CloneSelectedKeys@Animatable@@UEAAXH@Z		; Animatable::CloneSelectedKeys
PUBLIC	?AddNewKey@Animatable@@UEAAXHK@Z		; Animatable::AddNewKey
PUBLIC	?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z ; Animatable::MoveKeys
PUBLIC	?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z ; Animatable::ScaleKeyValues
PUBLIC	?SelectCurve@Animatable@@UEAAXH@Z		; Animatable::SelectCurve
PUBLIC	?IsCurveSelected@Animatable@@UEAAHXZ		; Animatable::IsCurveSelected
PUBLIC	?IsSubCurveSelected@Animatable@@UEAAHH@Z	; Animatable::IsSubCurveSelected
PUBLIC	?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z	; Animatable::GetSelKeyCoords
PUBLIC	?SetSelKeyCoords@Animatable@@UEAAXHMK@Z		; Animatable::SetSelKeyCoords
PUBLIC	?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z ; Animatable::SetSelKeyCoordsExpr
PUBLIC	?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z ; Animatable::AdjustTangents
PUBLIC	?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z ; Animatable::AdjustTangents
PUBLIC	?SetKeyBufferPresent@Animatable@@UEAAHXZ	; Animatable::SetKeyBufferPresent
PUBLIC	?CommitSetKeyBuffer@Animatable@@UEAAXH@Z	; Animatable::CommitSetKeyBuffer
PUBLIC	?RevertSetKeyBuffer@Animatable@@UEAAXXZ		; Animatable::RevertSetKeyBuffer
PUBLIC	?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z	; Animatable::CanCopyTrack
PUBLIC	?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CanPasteTrack
PUBLIC	?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CopyTrack
PUBLIC	?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::PasteTrack
PUBLIC	?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z ; Animatable::CanCopySubTrack
PUBLIC	?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::CanPasteSubTrack
PUBLIC	?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z ; Animatable::CopySubTrack
PUBLIC	?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z ; Animatable::PasteSubTrack
PUBLIC	?GetTrackVSpace@Animatable@@UEAAHH@Z		; Animatable::GetTrackVSpace
PUBLIC	?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z ; Animatable::HitTestTrack
PUBLIC	?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ; Animatable::PaintTrack
PUBLIC	?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ; Animatable::PaintSubTrack
PUBLIC	?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ; Animatable::PaintFCurves
PUBLIC	?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ; Animatable::HitTestFCurves
PUBLIC	?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ; Animatable::PaintSubFCurves
PUBLIC	?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ; Animatable::HitTestSubFCurves
PUBLIC	?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z ; Animatable::EditTrackParams
PUBLIC	?TrackParamsType@Animatable@@UEAAHXZ		; Animatable::TrackParamsType
PUBLIC	?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z ; Animatable::GetFCurveExtents
PUBLIC	?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z ; Animatable::GetSubFCurveExtents
PUBLIC	?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z ; Animatable::GetParamDimension
PUBLIC	?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z ; Animatable::TrackViewWinProc
PUBLIC	?SelectSubAnim@Animatable@@UEAAHH@Z		; Animatable::SelectSubAnim
PUBLIC	?FreeAllBitmaps@Animatable@@UEAAXXZ		; Animatable::FreeAllBitmaps
PUBLIC	?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z ; Animatable::GetSystemNodes
PUBLIC	?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z	; Animatable::IsSubClassOf
PUBLIC	?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z ; Animatable::IsParamBlockDesc2Used
PUBLIC	?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z ; Animatable::GetMacroRecorderName
PUBLIC	?CanTransferReference@ReferenceMaker@@UEAAHH@Z	; ReferenceMaker::CanTransferReference
PUBLIC	?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z	; ReferenceMaker::RemapRefOnLoad
PUBLIC	?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z ; ReferenceMaker::NotifyDependents
PUBLIC	?IsRefMaker@ReferenceMaker@@UEAAHXZ		; ReferenceMaker::IsRefMaker
PUBLIC	?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ; ReferenceMaker::IsRealDependency
PUBLIC	?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ; ReferenceMaker::ShouldPersistWeakRef
PUBLIC	?IsRefTarget@ReferenceTarget@@UEAAHXZ		; ReferenceTarget::IsRefTarget
PUBLIC	?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z ; ReferenceTarget::RefAddedUndoRedo
PUBLIC	?RefDeleted@ReferenceTarget@@UEAAXXZ		; ReferenceTarget::RefDeleted
PUBLIC	?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ	; ReferenceTarget::RefDeletedUndoRedo
PUBLIC	?NotifyForeground@ReferenceTarget@@UEAAXH@Z	; ReferenceTarget::NotifyForeground
PUBLIC	?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z ; ReferenceTarget::NotifyTarget
PUBLIC	?NRenderElements@RenderGlobalContext@@QEAAHXZ	; RenderGlobalContext::NRenderElements
PUBLIC	?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z ; RenderGlobalContext::GetRenderElement
PUBLIC	??0ShadeOutput@@QEAA@XZ				; ShadeOutput::ShadeOutput
PUBLIC	??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z		; ShadeOutput::operator=
PUBLIC	??1ShadeOutput@@UEAA@XZ				; ShadeOutput::~ShadeOutput
PUBLIC	??_GShadeOutput@@UEAAPEAXI@Z			; ShadeOutput::`scalar deleting destructor'
PUBLIC	?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ	; ShadeContext::ClassID
PUBLIC	?Antialias@ShadeContext@@UEAAHXZ		; ShadeContext::Antialias
PUBLIC	?ProjType@ShadeContext@@UEAAHXZ			; ShadeContext::ProjType
PUBLIC	?NodeID@ShadeContext@@UEAAHXZ			; ShadeContext::NodeID
PUBLIC	?Node@ShadeContext@@UEAAPEAVINode@@XZ		; ShadeContext::Node
PUBLIC	?GetEvalObject@ShadeContext@@UEAAPEAVObject@@XZ	; ShadeContext::GetEvalObject
PUBLIC	?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ ; ShadeContext::BarycentricCoords
PUBLIC	?SetNormal@ShadeContext@@UEAAXVPoint3@@@Z	; ShadeContext::SetNormal
PUBLIC	?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ	; ShadeContext::OrigNormal
PUBLIC	?Curve@ShadeContext@@UEAAMXZ			; ShadeContext::Curve
PUBLIC	?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ	; ShadeContext::OrigView
PUBLIC	?SetIOR@ShadeContext@@UEAAXM@Z			; ShadeContext::SetIOR
PUBLIC	?GetIOR@ShadeContext@@UEAAMXZ			; ShadeContext::GetIOR
PUBLIC	?DP@ShadeContext@@UEAAXAEAVPoint3@@0@Z		; ShadeContext::DP
PUBLIC	?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ ; ShadeContext::SurfacePtScreen
PUBLIC	?BumpBasisVectors@ShadeContext@@UEAAHQEAVPoint3@@HH@Z ; ShadeContext::BumpBasisVectors
PUBLIC	?IsSuperSampleOn@ShadeContext@@UEAAHXZ		; ShadeContext::IsSuperSampleOn
PUBLIC	?IsTextureSuperSampleOn@ShadeContext@@UEAAHXZ	; ShadeContext::IsTextureSuperSampleOn
PUBLIC	?GetNSuperSample@ShadeContext@@UEAAHXZ		; ShadeContext::GetNSuperSample
PUBLIC	?GetSampleSizeScale@ShadeContext@@UEAAMXZ	; ShadeContext::GetSampleSizeScale
PUBLIC	?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z	; ShadeContext::UVWNormal
PUBLIC	?RayDiam@ShadeContext@@UEAAMXZ			; ShadeContext::RayDiam
PUBLIC	?RayConeAngle@ShadeContext@@UEAAMXZ		; ShadeContext::RayConeAngle
PUBLIC	?CamNearRange@ShadeContext@@UEAAMXZ		; ShadeContext::CamNearRange
PUBLIC	?CamFarRange@ShadeContext@@UEAAMXZ		; ShadeContext::CamFarRange
PUBLIC	?SetGBufferID@ShadeContext@@UEAAXH@Z		; ShadeContext::SetGBufferID
PUBLIC	?DebugFile@ShadeContext@@UEAAPEAU_iobuf@@XZ	; ShadeContext::DebugFile
PUBLIC	?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z ; ShadeContext::EvalGlobalEnvironMap
PUBLIC	?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVAColor@@@Z ; ShadeContext::GetCache
PUBLIC	?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAM@Z	; ShadeContext::GetCache
PUBLIC	?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z ; ShadeContext::GetCache
PUBLIC	?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVAColor@@@Z ; ShadeContext::PutCache
PUBLIC	?PutCache@ShadeContext@@UEAAXPEAVTexmap@@M@Z	; ShadeContext::PutCache
PUBLIC	?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z ; ShadeContext::PutCache
PUBLIC	?TossCache@ShadeContext@@UEAAXPEAVTexmap@@@Z	; ShadeContext::TossCache
PUBLIC	?Execute@ShadeContext@@UEAA_JH_K00@Z		; ShadeContext::Execute
PUBLIC	?NRenderElements@ShadeContext@@UEAAHXZ		; ShadeContext::NRenderElements
PUBLIC	?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z ; ShadeContext::GetRenderElement
PUBLIC	??0ShadeContext@@QEAA@XZ			; ShadeContext::ShadeContext
PUBLIC	??1ShadeContext@@UEAA@XZ			; ShadeContext::~ShadeContext
PUBLIC	??_GShadeContext@@UEAAPEAXI@Z			; ShadeContext::`scalar deleting destructor'
PUBLIC	?SubTexmapOn@ISubMap@@UEAAHH@Z			; ISubMap::SubTexmapOn
PUBLIC	?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z ; MtlBase::BuildMaps
PUBLIC	?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z ; MtlBase::LocalMappingsRequired
PUBLIC	?IsMultiMtl@MtlBase@@UEAAHXZ			; MtlBase::IsMultiMtl
PUBLIC	?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ	; MtlBase::SupportsMultiMapsInViewport
PUBLIC	?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z ; MtlBase::SetupGfxMultiMaps
PUBLIC	?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z ; MtlBase::GetInterface
PUBLIC	?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ ; MtlBase::GetRefTarget
PUBLIC	?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z ; MtlBase::GetTransparencyHint
PUBLIC	?HandleOwnViewPerturb@Texmap@@UEAAHXZ		; Texmap::HandleOwnViewPerturb
PUBLIC	?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z	; Texmap::GetUVTransform
PUBLIC	?GetTextureTiling@Texmap@@UEAAHXZ		; Texmap::GetTextureTiling
PUBLIC	?GetUVWSource@Texmap@@UEAAHXZ			; Texmap::GetUVWSource
PUBLIC	?GetMapChannel@Texmap@@UEAAHXZ			; Texmap::GetMapChannel
PUBLIC	?InitSlotType@Texmap@@UEAAXH@Z			; Texmap::InitSlotType
PUBLIC	?MapSlotType@Texmap@@UEAAHH@Z			; Texmap::MapSlotType
PUBLIC	?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ		; Texmap::GetTheUVGen
PUBLIC	?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ	; Texmap::GetTheXYZGen
PUBLIC	?SetOutputLevel@Texmap@@UEAAXHM@Z		; Texmap::SetOutputLevel
PUBLIC	?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z ; Texmap::IsLocalOutputMeaningful
PUBLIC	?LoadMapFiles@Texmap@@UEAAHH@Z			; Texmap::LoadMapFiles
PUBLIC	?IsHighDynamicRange@Texmap@@UEBAHXZ		; Texmap::IsHighDynamicRange
PUBLIC	??1Texmap@@UEAA@XZ				; Texmap::~Texmap
PUBLIC	?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z ; ClassDesc2::SetUserDlgProc
PUBLIC	?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z ; ClassDesc2::CreateQtWidget
PUBLIC	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc
PUBLIC	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z	; ParamBlockDesc2::__autoclassinit2
PUBLIC	??1ParamMap2UserDlgProc@@UEAA@XZ		; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
PUBLIC	?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; ParamMap2UserDlgProc::SetThing
PUBLIC	?Update@ParamMap2UserDlgProc@@UEAAXH@Z		; ParamMap2UserDlgProc::Update
PUBLIC	?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z ; ParamMap2UserDlgProc::SetParamBlock
PUBLIC	?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z ; ParamMap2UserDlgProc::Update
PUBLIC	??0ParamMap2UserDlgProc@@QEAA@XZ		; ParamMap2UserDlgProc::ParamMap2UserDlgProc
PUBLIC	??_GParamMap2UserDlgProc@@UEAAPEAXI@Z		; ParamMap2UserDlgProc::`scalar deleting destructor'
PUBLIC	?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ; ResourceMakerCallback::SetCustomImageList
PUBLIC	?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ; ResourceMakerCallback::GetToolTip
PUBLIC	?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ; ResourceMakerCallback::ResetCallback
PUBLIC	?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ; ResourceMakerCallback::NewCurveCreatedCallback
PUBLIC	?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z ; ResourceMakerCallback::GetInterface
PUBLIC	??0ResourceMakerCallback@@QEAA@XZ		; ResourceMakerCallback::ResourceMakerCallback
PUBLIC	??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z	; XYZ_Desc::XYZ_Desc
PUBLIC	??1XYZ_Desc@@UEAA@XZ				; XYZ_Desc::~XYZ_Desc
PUBLIC	?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z		; XYZ_Desc::__autoclassinit2
PUBLIC	??_GXYZ_Desc@@UEAAPEAXI@Z			; XYZ_Desc::`scalar deleting destructor'
PUBLIC	??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ; BerconXYZDlgProc::BerconXYZDlgProc
PUBLIC	?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconXYZDlgProc::DlgProc
PUBLIC	?DeleteThis@BerconXYZDlgProc@@UEAAXXZ		; BerconXYZDlgProc::DeleteThis
PUBLIC	?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; BerconXYZDlgProc::SetThing
PUBLIC	??1BerconXYZDlgProc@@UEAA@XZ			; BerconXYZDlgProc::~BerconXYZDlgProc
PUBLIC	?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z	; BerconXYZDlgProc::__autoclassinit2
PUBLIC	??_GBerconXYZDlgProc@@UEAAPEAXI@Z		; BerconXYZDlgProc::`scalar deleting destructor'
PUBLIC	??0BerconXYZ@@QEAA@XZ				; BerconXYZ::BerconXYZ
PUBLIC	?req@BerconXYZ@@QEAAKXZ				; BerconXYZ::req
PUBLIC	?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z		; BerconXYZ::map
PUBLIC	?isRealworld@BerconXYZ@@QEAAHXZ			; BerconXYZ::isRealworld
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QEBA_KXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	??0?$allocator@M@std@@QEAA@XZ			; std::allocator<float>::allocator<float>
PUBLIC	?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z	; std::allocator<float>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
PUBLIC	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
PUBLIC	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
PUBLIC	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
PUBLIC	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
PUBLIC	?update@TileRow@@QEAAXXZ			; TileRow::update
PUBLIC	??1TileRow@@QEAA@XZ				; TileRow::~TileRow
PUBLIC	??_GTileRow@@QEAAPEAXI@Z			; TileRow::`scalar deleting destructor'
PUBLIC	??0TilePattern@@QEAA@XZ				; TilePattern::TilePattern
PUBLIC	??1TilePattern@@QEAA@XZ				; TilePattern::~TilePattern
PUBLIC	??0?$allocator@VTileRow@@@std@@QEAA@XZ		; std::allocator<TileRow>::allocator<TileRow>
PUBLIC	?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::allocator<TileRow>::deallocate
PUBLIC	??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<TileRow> >::_Wrap_alloc<std::allocator<TileRow> >
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>
PUBLIC	??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >
PUBLIC	??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
PUBLIC	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
PUBLIC	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
PUBLIC	?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy
PUBLIC	?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ ; std::vector<TileRow,std::allocator<TileRow> >::_Tidy
PUBLIC	?update@TilePattern@@QEAAXXZ			; TilePattern::update
PUBLIC	??0TileParam@@QEAA@XZ				; TileParam::TileParam
PUBLIC	?checkValues@TileParam@@QEAAXXZ			; TileParam::checkValues
PUBLIC	?__autoclassinit2@TileParam@@QEAAX_K@Z		; TileParam::__autoclassinit2
PUBLIC	?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z ; BerconTile::EvalParameters
PUBLIC	?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z ; BerconTile::getDistVector
PUBLIC	?EnableStuff@BerconTile@@QEAAXH@Z		; BerconTile::EnableStuff
PUBLIC	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
PUBLIC	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
PUBLIC	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
PUBLIC	?DiscardTexHandle@BerconTile@@QEAAXXZ		; BerconTile::DiscardTexHandle
PUBLIC	?SupportTexDisplay@BerconTile@@UEAAHXZ		; BerconTile::SupportTexDisplay
PUBLIC	?ActivateTexDisplay@BerconTile@@UEAAXH@Z	; BerconTile::ActivateTexDisplay
PUBLIC	?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z ; BerconTile::GetActiveTexHandle
PUBLIC	?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z ; BerconTile::CreateParamDlg
PUBLIC	?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z	; BerconTile::SetDlgThing
PUBLIC	?Update@BerconTile@@UEAAXHAEAVInterval@@@Z	; BerconTile::Update
PUBLIC	?Reset@BerconTile@@UEAAXXZ			; BerconTile::Reset
PUBLIC	?Validity@BerconTile@@UEAA?AVInterval@@H@Z	; BerconTile::Validity
PUBLIC	?LocalRequirements@BerconTile@@UEAAKH@Z		; BerconTile::LocalRequirements
PUBLIC	?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z ; BerconTile::MappingsRequired
PUBLIC	?NumSubTexmaps@BerconTile@@UEAAHXZ		; BerconTile::NumSubTexmaps
PUBLIC	?GetSubTexmap@BerconTile@@UEAAPEAVTexmap@@H@Z	; BerconTile::GetSubTexmap
PUBLIC	?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z	; BerconTile::SetSubTexmap
PUBLIC	?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z ; BerconTile::GetSubTexmapSlotName
PUBLIC	?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z ; BerconTile::EvalColor
PUBLIC	?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z	; BerconTile::EvalMono
PUBLIC	?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z ; BerconTile::EvalNormalPerturb
PUBLIC	?SubNumToRefNum@BerconTile@@UEAAHH@Z		; BerconTile::SubNumToRefNum
PUBLIC	?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ	; BerconTile::ClassID
PUBLIC	?SuperClassID@BerconTile@@UEAAKXZ		; BerconTile::SuperClassID
PUBLIC	?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z	; BerconTile::GetClassName
PUBLIC	?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z ; BerconTile::Clone
PUBLIC	?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z ; BerconTile::NotifyRefChanged
PUBLIC	?NumSubs@BerconTile@@UEAAHXZ			; BerconTile::NumSubs
PUBLIC	?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z	; BerconTile::SubAnim
PUBLIC	?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z	; BerconTile::SubAnimName
PUBLIC	?NumRefs@BerconTile@@UEAAHXZ			; BerconTile::NumRefs
PUBLIC	?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z ; BerconTile::GetReference
PUBLIC	?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z ; BerconTile::SetReference
PUBLIC	?NumParamBlocks@BerconTile@@UEAAHXZ		; BerconTile::NumParamBlocks
PUBLIC	?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z ; BerconTile::GetParamBlock
PUBLIC	?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z ; BerconTile::GetParamBlockByID
PUBLIC	?DeleteThis@BerconTile@@UEAAXXZ			; BerconTile::DeleteThis
PUBLIC	??0BerconTile@@QEAA@XZ				; BerconTile::BerconTile
PUBLIC	??1BerconTile@@UEAA@XZ				; BerconTile::~BerconTile
PUBLIC	?GetInterface@BerconTile@@UEAAPEAXK@Z		; BerconTile::GetInterface
PUBLIC	?__autoclassinit2@BerconTile@@QEAAX_K@Z		; BerconTile::__autoclassinit2
PUBLIC	??_GBerconTile@@UEAAPEAXI@Z			; BerconTile::`scalar deleting destructor'
PUBLIC	??0BerconTileClassDesc@@QEAA@XZ			; BerconTileClassDesc::BerconTileClassDesc
PUBLIC	??1BerconTileClassDesc@@UEAA@XZ			; BerconTileClassDesc::~BerconTileClassDesc
PUBLIC	?IsPublic@BerconTileClassDesc@@UEAAHXZ		; BerconTileClassDesc::IsPublic
PUBLIC	?Create@BerconTileClassDesc@@UEAAPEAXH@Z	; BerconTileClassDesc::Create
PUBLIC	?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ	; BerconTileClassDesc::ClassName
PUBLIC	?SuperClassID@BerconTileClassDesc@@UEAAKXZ	; BerconTileClassDesc::SuperClassID
PUBLIC	?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ ; BerconTileClassDesc::ClassID
PUBLIC	?Category@BerconTileClassDesc@@UEAAPEB_WXZ	; BerconTileClassDesc::Category
PUBLIC	?InternalName@BerconTileClassDesc@@UEAAPEB_WXZ	; BerconTileClassDesc::InternalName
PUBLIC	?HInstance@BerconTileClassDesc@@UEAAPEAUHINSTANCE__@@XZ ; BerconTileClassDesc::HInstance
PUBLIC	?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z ; BerconTileClassDesc::__autoclassinit2
PUBLIC	??_GBerconTileClassDesc@@UEAAPEAXI@Z		; BerconTileClassDesc::`scalar deleting destructor'
PUBLIC	??0BerconSC@@QEAA@QEAVShadeContext@@@Z		; BerconSC::BerconSC
PUBLIC	?setUV1@BerconSC@@QEAAXVPoint3@@H@Z		; BerconSC::setUV1
PUBLIC	?setUV2@BerconSC@@QEAAXVPoint3@@H@Z		; BerconSC::setUV2
PUBLIC	?setMultiTexture@BerconSC@@QEAAXM@Z		; BerconSC::setMultiTexture
PUBLIC	?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ		; BerconSC::ClassID
PUBLIC	?InMtlEditor@BerconSC@@UEAAHXZ			; BerconSC::InMtlEditor
PUBLIC	?Antialias@BerconSC@@UEAAHXZ			; BerconSC::Antialias
PUBLIC	?ProjType@BerconSC@@UEAAHXZ			; BerconSC::ProjType
PUBLIC	?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z		; BerconSC::Light
PUBLIC	?CurTime@BerconSC@@UEAAHXZ			; BerconSC::CurTime
PUBLIC	?NodeID@BerconSC@@UEAAHXZ			; BerconSC::NodeID
PUBLIC	?Node@BerconSC@@UEAAPEAVINode@@XZ		; BerconSC::Node
PUBLIC	?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ	; BerconSC::GetEvalObject
PUBLIC	?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ	; BerconSC::BarycentricCoords
PUBLIC	?FaceNumber@BerconSC@@UEAAHXZ			; BerconSC::FaceNumber
PUBLIC	?Normal@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::Normal
PUBLIC	?SetNormal@BerconSC@@UEAAXVPoint3@@@Z		; BerconSC::SetNormal
PUBLIC	?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::OrigNormal
PUBLIC	?GNormal@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::GNormal
PUBLIC	?Curve@BerconSC@@UEAAMXZ			; BerconSC::Curve
PUBLIC	?V@BerconSC@@UEAA?AVPoint3@@XZ			; BerconSC::V
PUBLIC	?SetView@BerconSC@@UEAAXVPoint3@@@Z		; BerconSC::SetView
PUBLIC	?OrigView@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::OrigView
PUBLIC	?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ	; BerconSC::ReflectVector
PUBLIC	?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z	; BerconSC::RefractVector
PUBLIC	?SetIOR@BerconSC@@UEAAXM@Z			; BerconSC::SetIOR
PUBLIC	?GetIOR@BerconSC@@UEAAMXZ			; BerconSC::GetIOR
PUBLIC	?CamPos@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::CamPos
PUBLIC	?P@BerconSC@@UEAA?AVPoint3@@XZ			; BerconSC::P
PUBLIC	?DP@BerconSC@@UEAA?AVPoint3@@XZ			; BerconSC::DP
PUBLIC	?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z		; BerconSC::DP
PUBLIC	?PObj@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::PObj
PUBLIC	?DPObj@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::DPObj
PUBLIC	?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ		; BerconSC::ObjectBox
PUBLIC	?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ		; BerconSC::PObjRelBox
PUBLIC	?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ	; BerconSC::DPObjRelBox
PUBLIC	?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z	; BerconSC::ScreenUV
PUBLIC	?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ	; BerconSC::ScreenCoord
PUBLIC	?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ	; BerconSC::SurfacePtScreen
PUBLIC	?UVW@BerconSC@@UEAA?AVPoint3@@H@Z		; BerconSC::UVW
PUBLIC	?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z		; BerconSC::DUVW
PUBLIC	?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z		; BerconSC::DPdUVW
PUBLIC	?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z ; BerconSC::BumpBasisVectors
PUBLIC	?IsSuperSampleOn@BerconSC@@UEAAHXZ		; BerconSC::IsSuperSampleOn
PUBLIC	?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ	; BerconSC::IsTextureSuperSampleOn
PUBLIC	?GetNSuperSample@BerconSC@@UEAAHXZ		; BerconSC::GetNSuperSample
PUBLIC	?GetSampleSizeScale@BerconSC@@UEAAMXZ		; BerconSC::GetSampleSizeScale
PUBLIC	?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z		; BerconSC::UVWNormal
PUBLIC	?RayDiam@BerconSC@@UEAAMXZ			; BerconSC::RayDiam
PUBLIC	?RayConeAngle@BerconSC@@UEAAMXZ			; BerconSC::RayConeAngle
PUBLIC	?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z ; BerconSC::EvalEnvironMap
PUBLIC	?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z	; BerconSC::GetBGColor
PUBLIC	?CamNearRange@BerconSC@@UEAAMXZ			; BerconSC::CamNearRange
PUBLIC	?CamFarRange@BerconSC@@UEAAMXZ			; BerconSC::CamFarRange
PUBLIC	?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ; BerconSC::PointTo
PUBLIC	?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ; BerconSC::PointFrom
PUBLIC	?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ; BerconSC::VectorTo
PUBLIC	?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ; BerconSC::VectorFrom
PUBLIC	?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ; BerconSC::VectorToNoScale
PUBLIC	?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ; BerconSC::VectorFromNoScale
PUBLIC	?SetGBufferID@BerconSC@@UEAAXH@Z		; BerconSC::SetGBufferID
PUBLIC	?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ		; BerconSC::DebugFile
PUBLIC	?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z ; BerconSC::EvalGlobalEnvironMap
PUBLIC	?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z ; BerconSC::GetCache
PUBLIC	?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z	; BerconSC::GetCache
PUBLIC	?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z ; BerconSC::GetCache
PUBLIC	?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z ; BerconSC::PutCache
PUBLIC	?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z	; BerconSC::PutCache
PUBLIC	?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z ; BerconSC::PutCache
PUBLIC	?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z	; BerconSC::TossCache
PUBLIC	?Execute@BerconSC@@UEAA_JH_K00@Z		; BerconSC::Execute
PUBLIC	?NRenderElements@BerconSC@@UEAAHXZ		; BerconSC::NRenderElements
PUBLIC	?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z ; BerconSC::GetRenderElement
PUBLIC	?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ	; BerconSC::DiffuseIllum
PUBLIC	??1BerconSC@@UEAA@XZ				; BerconSC::~BerconSC
PUBLIC	?__autoclassinit2@BerconSC@@QEAAX_K@Z		; BerconSC::__autoclassinit2
PUBLIC	??_GBerconSC@@UEAAPEAXI@Z			; BerconSC::`scalar deleting destructor'
PUBLIC	?GetBerconTileDesc@@YAPEAVClassDesc2@@XZ	; GetBerconTileDesc
PUBLIC	??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z	; BerconTileDlgProc::BerconTileDlgProc
PUBLIC	?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ; BerconTileDlgProc::DlgProc
PUBLIC	?DeleteThis@BerconTileDlgProc@@UEAAXXZ		; BerconTileDlgProc::DeleteThis
PUBLIC	?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z ; BerconTileDlgProc::SetThing
PUBLIC	??1BerconTileDlgProc@@UEAA@XZ			; BerconTileDlgProc::~BerconTileDlgProc
PUBLIC	?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z	; BerconTileDlgProc::__autoclassinit2
PUBLIC	??_GBerconTileDlgProc@@UEAAPEAXI@Z		; BerconTileDlgProc::`scalar deleting destructor'
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z	; std::addressof<wchar_t * __ptr64>
PUBLIC	??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
PUBLIC	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z	; std::_Debug_pointer<wchar_t const >
PUBLIC	??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z	; std::_Debug_pointer_if<wchar_t const >
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>
PUBLIC	??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>
PUBLIC	??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::allocator<float>,float * __ptr64>
PUBLIC	??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
PUBLIC	??$forward@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>
PUBLIC	??$?0VTileRow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VTileRow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><TileRow>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>
PUBLIC	??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
PUBLIC	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
PUBLIC	??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>
PUBLIC	??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z	; std::forward<wchar_t * __ptr64 & __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
PUBLIC	??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>
PUBLIC	??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z ; std::allocator<TileRow>::destroy<TileRow>
PUBLIC	??_EBerconTile@@WEA@EAAPEAXI@Z			; [thunk]:BerconTile::`vector deleting destructor'
PUBLIC	?GetInterface@BerconTile@@WJA@EAAPEAXK@Z	; [thunk]:BerconTile::GetInterface`adjustor{144}'
PUBLIC	??_7TabOutOfRangeException@Util@MaxSDK@@6B@	; MaxSDK::Util::TabOutOfRangeException::`vftable'
PUBLIC	??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@ ; `string'
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ ; `string'
PUBLIC	??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	??_7InterfaceServer@@6B@			; InterfaceServer::`vftable'
PUBLIC	??_7BaseInterfaceServer@@6B@			; BaseInterfaceServer::`vftable'
PUBLIC	??_7ShadeOutput@@6B@				; ShadeOutput::`vftable'
PUBLIC	??_7ShadeContext@@6B@				; ShadeContext::`vftable'
PUBLIC	??_R0?AVClassDesc2@@@8				; ClassDesc2 `RTTI Type Descriptor'
PUBLIC	??_7ParamMap2UserDlgProc@@6B@			; ParamMap2UserDlgProc::`vftable'
PUBLIC	??_R0?AVMaxHeapOperators@@@8			; MaxHeapOperators `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVMaxHeapOperators@@@818
PUBLIC	??_7ResourceMakerCallback@@6B@			; ResourceMakerCallback::`vftable'
PUBLIC	??_7XYZ_Desc@@6B@				; XYZ_Desc::`vftable'
PUBLIC	??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@ ; `string'
PUBLIC	??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@	; `string'
PUBLIC	??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@ ; `string'
PUBLIC	??_7BerconXYZDlgProc@@6B@			; BerconXYZDlgProc::`vftable'
PUBLIC	??_C@_13PHJMHGG@?$AAL?$AA?$AA@			; `string'
PUBLIC	??_7BerconTile@@6BReferenceTarget@@@		; BerconTile::`vftable'
PUBLIC	??_7BerconTile@@6BISubMap@@@			; BerconTile::`vftable'
PUBLIC	??_7BerconTile@@6B@				; BerconTile::`vftable'
PUBLIC	??_7BerconTileClassDesc@@6B@			; BerconTileClassDesc::`vftable'
PUBLIC	??_C@_1BG@HMMMJDJP@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAT?$AAi?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_7BerconSC@@6B@				; BerconSC::`vftable'
PUBLIC	??_7BerconTileDlgProc@@6B@			; BerconTileDlgProc::`vftable'
PUBLIC	??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@ ; `string'
PUBLIC	_TI4?AVTabOutOfRangeException@Util@MaxSDK@@
PUBLIC	_CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
PUBLIC	??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8	; MaxSDK::Util::TabOutOfRangeException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_R0?AVOutOfRangeException@Util@MaxSDK@@@8	; MaxSDK::Util::OutOfRangeException `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_R0?AVException@Util@MaxSDK@@@8		; MaxSDK::Util::Exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
PUBLIC	??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@ ; `string'
PUBLIC	??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_R4TabOutOfRangeException@Util@MaxSDK@@6B@	; MaxSDK::Util::TabOutOfRangeException::`RTTI Complete Object Locator'
PUBLIC	??_R3TabOutOfRangeException@Util@MaxSDK@@8	; MaxSDK::Util::TabOutOfRangeException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TabOutOfRangeException@Util@MaxSDK@@8	; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3OutOfRangeException@Util@MaxSDK@@8		; MaxSDK::Util::OutOfRangeException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2OutOfRangeException@Util@MaxSDK@@8		; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@Util@MaxSDK@@8		; MaxSDK::Util::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3Exception@Util@MaxSDK@@8			; MaxSDK::Util::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@Util@MaxSDK@@8			; MaxSDK::Util::Exception::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R3MaxHeapOperators@@8			; MaxHeapOperators::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MaxHeapOperators@@8			; MaxHeapOperators::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@InterfaceServer@@8		; InterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVInterfaceServer@@@8			; InterfaceServer `RTTI Type Descriptor'
PUBLIC	??_R3InterfaceServer@@8				; InterfaceServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2InterfaceServer@@8				; InterfaceServer::`RTTI Base Class Array'
PUBLIC	??_R4InterfaceServer@@6B@			; InterfaceServer::`RTTI Complete Object Locator'
PUBLIC	??_R4BaseInterfaceServer@@6B@			; BaseInterfaceServer::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBaseInterfaceServer@@@8			; BaseInterfaceServer `RTTI Type Descriptor'
PUBLIC	??_R3BaseInterfaceServer@@8			; BaseInterfaceServer::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BaseInterfaceServer@@8			; BaseInterfaceServer::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BaseInterfaceServer@@8		; BaseInterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ReferenceTarget@@8		; ReferenceTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReferenceTarget@@@8			; ReferenceTarget `RTTI Type Descriptor'
PUBLIC	??_R3ReferenceTarget@@8				; ReferenceTarget::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferenceTarget@@8				; ReferenceTarget::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ReferenceMaker@@8			; ReferenceMaker::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVReferenceMaker@@@8			; ReferenceMaker `RTTI Type Descriptor'
PUBLIC	??_R3ReferenceMaker@@8				; ReferenceMaker::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ReferenceMaker@@8				; ReferenceMaker::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Animatable@@8			; Animatable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAnimatable@@@8				; Animatable `RTTI Type Descriptor'
PUBLIC	??_R3Animatable@@8				; Animatable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Animatable@@8				; Animatable::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,66)'
PUBLIC	??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8		; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (9,-1,0,64)'
PUBLIC	??_R0?AVNoncopyable@Util@MaxSDK@@@8		; MaxSDK::Util::Noncopyable `RTTI Type Descriptor'
PUBLIC	??_R3Noncopyable@Util@MaxSDK@@8			; MaxSDK::Util::Noncopyable::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Noncopyable@Util@MaxSDK@@8			; MaxSDK::Util::Noncopyable::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8	; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R18?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (9,-1,0,66)'
PUBLIC	??_R1EI@?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (72,-1,0,66)'
PUBLIC	??_R4ParamMap2UserDlgProc@@6B@			; ParamMap2UserDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVParamMap2UserDlgProc@@@8		; ParamMap2UserDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3ParamMap2UserDlgProc@@8			; ParamMap2UserDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParamMap2UserDlgProc@@8			; ParamMap2UserDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ParamMap2UserDlgProc@@8		; ParamMap2UserDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVClassDesc@@@8				; ClassDesc `RTTI Type Descriptor'
PUBLIC	??_R3ClassDesc@@8				; ClassDesc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ClassDesc@@8				; ClassDesc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ClassDesc@@8			; ClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ShadeContext@@6B@				; ShadeContext::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVShadeContext@@@8			; ShadeContext `RTTI Type Descriptor'
PUBLIC	??_R3ShadeContext@@8				; ShadeContext::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ShadeContext@@8				; ShadeContext::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ShadeContext@@8			; ShadeContext::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ShadeOutput@@6B@				; ShadeOutput::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVShadeOutput@@@8				; ShadeOutput `RTTI Type Descriptor'
PUBLIC	??_R3ShadeOutput@@8				; ShadeOutput::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ShadeOutput@@8				; ShadeOutput::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ShadeOutput@@8			; ShadeOutput::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVISubMap@@@8				; ISubMap `RTTI Type Descriptor'
PUBLIC	??_R3ISubMap@@8					; ISubMap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ISubMap@@8					; ISubMap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ISubMap@@8			; ISubMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4ResourceMakerCallback@@6B@			; ResourceMakerCallback::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVResourceMakerCallback@@@8		; ResourceMakerCallback `RTTI Type Descriptor'
PUBLIC	??_R3ResourceMakerCallback@@8			; ResourceMakerCallback::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ResourceMakerCallback@@8			; ResourceMakerCallback::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ResourceMakerCallback@@8		; ResourceMakerCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4XYZ_Desc@@6B@				; XYZ_Desc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVXYZ_Desc@@@8				; XYZ_Desc `RTTI Type Descriptor'
PUBLIC	??_R3XYZ_Desc@@8				; XYZ_Desc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2XYZ_Desc@@8				; XYZ_Desc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@XYZ_Desc@@8			; XYZ_Desc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ParamBlockDesc2@@8		; ParamBlockDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVParamBlockDesc2@@@8			; ParamBlockDesc2 `RTTI Type Descriptor'
PUBLIC	??_R3ParamBlockDesc2@@8				; ParamBlockDesc2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ParamBlockDesc2@@8				; ParamBlockDesc2::`RTTI Base Class Array'
PUBLIC	??_R4BerconXYZDlgProc@@6B@			; BerconXYZDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconXYZDlgProc@@@8			; BerconXYZDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3BerconXYZDlgProc@@8			; BerconXYZDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconXYZDlgProc@@8			; BerconXYZDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconXYZDlgProc@@8		; BerconXYZDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconTile@@6BReferenceTarget@@@		; BerconTile::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconTile@@@8				; BerconTile `RTTI Type Descriptor'
PUBLIC	??_R3BerconTile@@8				; BerconTile::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconTile@@8				; BerconTile::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconTile@@8			; BerconTile::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Texmap@@8				; Texmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTexmap@@@8				; Texmap `RTTI Type Descriptor'
PUBLIC	??_R3Texmap@@8					; Texmap::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Texmap@@8					; Texmap::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@MtlBase@@8			; MtlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVMtlBase@@@8				; MtlBase `RTTI Type Descriptor'
PUBLIC	??_R3MtlBase@@8					; MtlBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2MtlBase@@8					; MtlBase::`RTTI Base Class Array'
PUBLIC	??_R1EA@?0A@EA@ISubMap@@8			; ISubMap::`RTTI Base Class Descriptor at (64,-1,0,64)'
PUBLIC	??_R1JA@?0A@EA@ResourceMakerCallback@@8		; ResourceMakerCallback::`RTTI Base Class Descriptor at (144,-1,0,64)'
PUBLIC	??_R1JI@?0A@EC@MaxHeapOperators@@8		; MaxHeapOperators::`RTTI Base Class Descriptor at (152,-1,0,66)'
PUBLIC	??_R4BerconTile@@6BISubMap@@@			; BerconTile::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconTile@@6B@				; BerconTile::`RTTI Complete Object Locator'
PUBLIC	??_R4BerconTileClassDesc@@6B@			; BerconTileClassDesc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconTileClassDesc@@@8			; BerconTileClassDesc `RTTI Type Descriptor'
PUBLIC	??_R3BerconTileClassDesc@@8			; BerconTileClassDesc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconTileClassDesc@@8			; BerconTileClassDesc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconTileClassDesc@@8		; BerconTileClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ClassDesc2@@8			; ClassDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3ClassDesc2@@8				; ClassDesc2::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ClassDesc2@@8				; ClassDesc2::`RTTI Base Class Array'
PUBLIC	??_R4BerconSC@@6B@				; BerconSC::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconSC@@@8				; BerconSC `RTTI Type Descriptor'
PUBLIC	??_R3BerconSC@@8				; BerconSC::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconSC@@8				; BerconSC::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconSC@@8			; BerconSC::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4BerconTileDlgProc@@6B@			; BerconTileDlgProc::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBerconTileDlgProc@@@8			; BerconTileDlgProc `RTTI Type Descriptor'
PUBLIC	??_R3BerconTileDlgProc@@8			; BerconTileDlgProc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2BerconTileDlgProc@@8			; BerconTileDlgProc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@BerconTileDlgProc@@8		; BerconTileDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@38d1b717
PUBLIC	__real@3a83126f
PUBLIC	__real@3c8efa35
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f1a36e2e0000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fb99999a0000000
PUBLIC	__real@3fd3333340000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4039000000000000
PUBLIC	__real@40400000
PUBLIC	__real@4059000000000000
PUBLIC	__real@4066800000000000
PUBLIC	__real@40800000
PUBLIC	__real@408f400000000000
PUBLIC	__real@412e848000000000
PUBLIC	__real@42c80000
PUBLIC	__real@43340000
PUBLIC	__real@43480000
PUBLIC	__real@49742400
PUBLIC	__real@bf000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c12e848000000000
PUBLIC	__real@c9742400
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	?__global_delete@@YAXPEAX_K@Z:PROC		; __global_delete
EXTRN	atexit:PROC
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memcpy:PROC
EXTRN	__imp_memmove:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	__imp_SendMessageW:PROC
EXTRN	__imp_GetDlgItem:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_??2MaxHeapOperators@@SAPEAX_K@Z:PROC
EXTRN	__imp_??3MaxHeapOperators@@SAXPEAX@Z:PROC
EXTRN	__imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z:PROC
EXTRN	__imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ:PROC
EXTRN	__imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC
EXTRN	__imp_?zfree@@YAXPEAPEAX@Z:PROC
EXTRN	??_ETabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z:PROC ; MaxSDK::Util::TabOutOfRangeException::`vector deleting destructor'
EXTRN	__imp__CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPEB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPEBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPEBD@Z:PROC
EXTRN	__imp_??0WStr@@QEAA@PEB_W@Z:PROC
EXTRN	__imp_??1WStr@@QEAA@XZ:PROC
EXTRN	__imp_??4WStr@@QEAAAEAV0@PEB_W@Z:PROC
EXTRN	__imp_??0Point2@@QEAA@NN@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@XZ:PROC
EXTRN	__imp_??0Point3@@QEAA@MMM@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@HHH@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??GPoint3@@QEBA?AV0@XZ:PROC
EXTRN	__imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_??_0Point3@@QEAAAEAV0@M@Z:PROC
EXTRN	__imp_??HPoint3@@QEBA?AV0@AEBV0@@Z:PROC
EXTRN	__imp_?Length@@YAMAEBVPoint3@@@Z:PROC
EXTRN	__imp_??1InterfaceServer@@UEAA@XZ:PROC
EXTRN	??_EInterfaceServer@@UEAAPEAXI@Z:PROC		; InterfaceServer::`vector deleting destructor'
EXTRN	__imp_??1BaseInterfaceServer@@UEAA@XZ:PROC
EXTRN	??_EBaseInterfaceServer@@UEAAPEAXI@Z:PROC	; BaseInterfaceServer::`vector deleting destructor'
EXTRN	__imp_?IdentityMatrix@Matrix3@@QEAAXXZ:PROC
EXTRN	__imp_?ClampMinMax@Color@@QEAAXXZ:PROC
EXTRN	__imp_?ReleaseISpinner@@YAXPEAVISpinnerControl@@@Z:PROC
EXTRN	__imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z:PROC
EXTRN	__imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z:PROC
EXTRN	__imp_?SetupFloatSpinner@@YAPEAVISpinnerControl@@PEAUHWND__@@HHMMMM@Z:PROC
EXTRN	__imp_?SetupUniverseSpinner@@YAPEAVISpinnerControl@@PEAUHWND__@@HHMMMM@Z:PROC
EXTRN	__imp_??0Interval@@QEAA@HH@Z:PROC
EXTRN	__imp_?InInterval@Interval@@QEBAHH@Z:PROC
EXTRN	__imp_??IInterval@@QEBA?AV0@V0@@Z:PROC
EXTRN	__imp_?GetCOREInterface@@YAPEAVInterface@@XZ:PROC
EXTRN	__imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z:PROC
EXTRN	__imp_?DeleteReference@ReferenceMaker@@QEAA?AW4RefResult@@H@Z:PROC
EXTRN	__imp_?GetInterface@ReferenceTarget@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC
EXTRN	??_EShadeOutput@@UEAAPEAXI@Z:PROC		; ShadeOutput::`vector deleting destructor'
EXTRN	??_EShadeContext@@UEAAPEAXI@Z:PROC		; ShadeContext::`vector deleting destructor'
EXTRN	__imp_?GetSubTexmapTVName@ISubMap@@QEAA?AVWStr@@H@Z:PROC
EXTRN	__imp_??1MtlBase@@UEAA@XZ:PROC
EXTRN	__imp_??4MtlBase@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_?GetInterface@MtlBase@@UEAAPEAXK@Z:PROC
EXTRN	__imp_??0Texmap@@QEAA@XZ:PROC
EXTRN	__imp_?GetNewDefaultTextureOutput@@YAPEAVTextureOutput@@XZ:PROC
EXTRN	__imp_??0ClassDesc2@@QEAA@XZ:PROC
EXTRN	__imp_??1ClassDesc2@@UEAA@XZ:PROC
EXTRN	__imp_?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z:PROC
EXTRN	__imp_?SetUserDlgProc@ClassDesc2@@QEAA_NPEAVParamBlockDesc2@@FPEAVParamMap2UserDlgProc@@@Z:PROC
EXTRN	__imp_?CreateParamDlgs@ClassDesc2@@QEAAPEAVIAutoMParamDlg@@PEAUHWND__@@PEAVIMtlParams@@PEAVReferenceTarget@@@Z:PROC
EXTRN	__imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ:PROC
EXTRN	__imp_??1ParamBlockDesc2@@UEAA@XZ:PROC
EXTRN	__imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z:PROC
EXTRN	__imp_?SetUserDlgProc@ParamBlockDesc2@@QEAAXFPEAVParamMap2UserDlgProc@@@Z:PROC
EXTRN	??_EParamMap2UserDlgProc@@UEAAPEAXI@Z:PROC	; ParamMap2UserDlgProc::`vector deleting destructor'
EXTRN	?GetString@@YAPEA_WH@Z:PROC			; GetString
EXTRN	??_EXYZ_Desc@@UEAAPEAXI@Z:PROC			; XYZ_Desc::`vector deleting destructor'
EXTRN	??_EBerconXYZDlgProc@@UEAAPEAXI@Z:PROC		; BerconXYZDlgProc::`vector deleting destructor'
EXTRN	?update@BerconXYZ@@QEAAXPEAVIParamBlock2@@HAEAVInterval@@@Z:PROC ; BerconXYZ::update
EXTRN	?update@BerconXYZ@@QEAAXXZ:PROC			; BerconXYZ::update
EXTRN	?reset@BerconXYZ@@QEAAXPEAVIParamBlock2@@AEAVInterval@@HHHH@Z:PROC ; BerconXYZ::reset
EXTRN	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@@Z:PROC ; BerconXYZ::get
EXTRN	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@PEAV3@@Z:PROC ; BerconXYZ::get
EXTRN	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z:PROC ; TilePattern::setPattern
EXTRN	?setPreset@TilePattern@@QEAAXH@Z:PROC		; TilePattern::setPreset
EXTRN	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z:PROC ; Tile::draw
EXTRN	??_EBerconTile@@UEAAPEAXI@Z:PROC		; BerconTile::`vector deleting destructor'
EXTRN	??_EBerconTileClassDesc@@UEAAPEAXI@Z:PROC	; BerconTileClassDesc::`vector deleting destructor'
EXTRN	??_EBerconSC@@UEAAPEAXI@Z:PROC			; BerconSC::`vector deleting destructor'
EXTRN	??_EBerconTileDlgProc@@UEAAPEAXI@Z:PROC		; BerconTileDlgProc::`vector deleting destructor'
EXTRN	??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC	; MaxSDK::Util::Exception::Exception
EXTRN	??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z:PROC ; MaxSDK::Util::OutOfRangeException::OutOfRangeException
EXTRN	?AddInterface@ClassDesc@@UEAAXPEAVFPInterface@@@Z:PROC ; ClassDesc::AddInterface
EXTRN	?AddParamBlockDesc@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z:PROC ; ClassDesc2::AddParamBlockDesc
EXTRN	?AutoDelete@ReferenceTarget@@UEAA?AW4RefResult@@XZ:PROC ; ReferenceTarget::AutoDelete
EXTRN	?BaseClone@MtlBase@@UEAAXPEAVReferenceTarget@@0AEAVRemapDir@@@Z:PROC ; MtlBase::BaseClone
EXTRN	?BeginEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z:PROC ; ClassDesc2::BeginEditParams
EXTRN	?CreatePStamp@MtlBase@@UEAAPEAVPStamp@@HH@Z:PROC ; MtlBase::CreatePStamp
EXTRN	?DeleteAllRefsToMe@ReferenceTarget@@UEAA?AW4RefResult@@XZ:PROC ; ReferenceTarget::DeleteAllRefsToMe
EXTRN	?DiffuseIllum@ShadeContext@@UEAA?AVColor@@XZ:PROC ; ShadeContext::DiffuseIllum
EXTRN	?DiscardPStamp@MtlBase@@UEAAXH@Z:PROC		; MtlBase::DiscardPStamp
EXTRN	?DoEnumDependentsImpl@ReferenceTarget@@MEAAHPEAVDependentEnumProc@@@Z:PROC ; ReferenceTarget::DoEnumDependentsImpl
EXTRN	?EndEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z:PROC ; ClassDesc2::EndEditParams
EXTRN	?EnumAuxFiles@MtlBase@@UEAAXAEAVAssetEnumCallback@@K@Z:PROC ; MtlBase::EnumAuxFiles
EXTRN	?EvalEnvironMap@ShadeContext@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z:PROC ; ShadeContext::EvalEnvironMap
EXTRN	?GetFullName@MtlBase@@UEAA?AVWStr@@XZ:PROC	; MtlBase::GetFullName
EXTRN	?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC ; BaseInterfaceServer::GetInterface
EXTRN	?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@PEB_W@Z:PROC ; ClassDesc::GetInterface
EXTRN	?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@VInterface_ID@@@Z:PROC ; ClassDesc::GetInterface
EXTRN	?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z:PROC ; InterfaceServer::GetInterface
EXTRN	?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z:PROC ; BaseInterfaceServer::GetInterfaceAt
EXTRN	?GetPStamp@MtlBase@@UEAAPEAVPStamp@@H@Z:PROC	; MtlBase::GetPStamp
EXTRN	?GetParamBlockDesc@ClassDesc2@@UEAAPEAVParamBlockDesc2@@H@Z:PROC ; ClassDesc2::GetParamBlockDesc
EXTRN	?GetParamBlockDescByID@ClassDesc2@@UEAAPEAVParamBlockDesc2@@F@Z:PROC ; ClassDesc2::GetParamBlockDescByID
EXTRN	?GetParamMap@ClassDesc2@@UEAAPEAVIParamMap2@@H@Z:PROC ; ClassDesc2::GetParamMap
EXTRN	?GetProperty@MtlBase@@UEAAPEAXK@Z:PROC		; MtlBase::GetProperty
EXTRN	?GetRsrcString@ClassDesc@@UEAAPEB_W_J@Z:PROC	; ClassDesc::GetRsrcString
EXTRN	?GetTimeRange@Animatable@@UEAA?AVInterval@@K@Z:PROC ; Animatable::GetTimeRange
EXTRN	?GetVPDisplayDIB@Texmap@@UEAAPEAUtagBITMAPINFO@@HAEAVTexHandleMaker@@AEAVInterval@@HHH@Z:PROC ; Texmap::GetVPDisplayDIB
EXTRN	?InvalidateUI@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z:PROC ; ClassDesc2::InvalidateUI
EXTRN	?IsAnimated@Animatable@@UEAAHXZ:PROC		; Animatable::IsAnimated
EXTRN	?IsOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z:PROC ; Texmap::IsOutputMeaningful
EXTRN	?Load@MtlBase@@UEAA?AW4IOResult@@PEAVILoad@@@Z:PROC ; MtlBase::Load
EXTRN	?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z:PROC ; ClassDesc2::MakeAutoParamBlocks
EXTRN	?MapKeys@Animatable@@UEAAXPEAVTimeMap@@K@Z:PROC	; Animatable::MapKeys
EXTRN	?MouseCycleCompleted@Animatable@@UEAAXH@Z:PROC	; Animatable::MouseCycleCompleted
EXTRN	?MouseCycleStarted@Animatable@@UEAAXH@Z:PROC	; Animatable::MouseCycleStarted
EXTRN	?NodeName@Animatable@@UEAA?AVWStr@@XZ:PROC	; Animatable::NodeName
EXTRN	?NotifyDependents@ReferenceTarget@@UEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAV1@W4NotifyDependentsOption@@@Z:PROC ; ReferenceTarget::NotifyDependents
EXTRN	?NumInterfaces@BaseInterfaceServer@@UEBAHXZ:PROC ; BaseInterfaceServer::NumInterfaces
EXTRN	?NumParamBlockDescs@ClassDesc2@@UEAAHXZ:PROC	; ClassDesc2::NumParamBlockDescs
EXTRN	?NumParamMaps@ClassDesc2@@UEAAHXZ:PROC		; ClassDesc2::NumParamMaps
EXTRN	?RefAdded@Texmap@@UEAAXPEAVReferenceMaker@@@Z:PROC ; Texmap::RefAdded
EXTRN	?ReleaseInterface@Animatable@@UEAAXKPEAX@Z:PROC	; Animatable::ReleaseInterface
EXTRN	?RenderBitmap@Texmap@@UEAAXHPEAVBitmap@@MH@Z:PROC ; Texmap::RenderBitmap
EXTRN	?Requirements@MtlBase@@UEAAKH@Z:PROC		; MtlBase::Requirements
EXTRN	?RescaleWorldUnits@ReferenceMaker@@UEAAXM@Z:PROC ; ReferenceMaker::RescaleWorldUnits
EXTRN	?ResetClassParams@ClassDesc2@@UEAAXH@Z:PROC	; ClassDesc2::ResetClassParams
EXTRN	?Save@MtlBase@@UEAA?AW4IOResult@@PEAVISave@@@Z:PROC ; MtlBase::Save
EXTRN	?SaveEnum@ReferenceMaker@@UEAAXAEAVSaveEnumProc@@H@Z:PROC ; ReferenceMaker::SaveEnum
EXTRN	?SetProperty@MtlBase@@UEAAHKPEAX@Z:PROC		; MtlBase::SetProperty
EXTRN	?SpecifySaveReferences@ReferenceMaker@@UEAA_NAEAVReferenceSaveManager@@@Z:PROC ; ReferenceMaker::SpecifySaveReferences
EXTRN	?SubAnimCommitSetKeyBuffer@Animatable@@UEAAXHH@Z:PROC ; Animatable::SubAnimCommitSetKeyBuffer
EXTRN	?SubAnimRevertSetKeyBuffer@Animatable@@UEAAXH@Z:PROC ; Animatable::SubAnimRevertSetKeyBuffer
EXTRN	?SubAnimSetKeyBufferPresent@Animatable@@UEAAHH@Z:PROC ; Animatable::SubAnimSetKeyBufferPresent
EXTRN	?SvCanConcludeLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvCanConcludeLink
EXTRN	?SvCanDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanDetach
EXTRN	?SvCanDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvCanDetachRel
EXTRN	?SvCanInitiateLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanInitiateLink
EXTRN	?SvCanRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvCanRemoveThis
EXTRN	?SvCanSelect@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvCanSelect
EXTRN	?SvCanSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvCanSetName
EXTRN	?SvDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvDetach
EXTRN	?SvDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvDetachRel
EXTRN	?SvEditProperties@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvEditProperties
EXTRN	?SvGetMultiSelectCallback@MtlBase@@UEAAPEAVMultiSelectCallback@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvGetMultiSelectCallback
EXTRN	?SvGetName@MtlBase@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@_N@Z:PROC ; MtlBase::SvGetName
EXTRN	?SvGetRefTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvGetRefTip
EXTRN	?SvGetRelTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvGetRelTip
EXTRN	?SvGetSwatchColor@Animatable@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvGetSwatchColor
EXTRN	?SvGetTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvGetTip
EXTRN	?SvHandleDoubleClick@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvHandleDoubleClick
EXTRN	?SvHandleRelDoubleClick@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z:PROC ; Animatable::SvHandleRelDoubleClick
EXTRN	?SvHighlightColor@MtlBase@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvHighlightColor
EXTRN	?SvIsHighlighted@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvIsHighlighted
EXTRN	?SvIsInactive@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvIsInactive
EXTRN	?SvIsSelected@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; MtlBase::SvIsSelected
EXTRN	?SvLinkChild@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z:PROC ; Animatable::SvLinkChild
EXTRN	?SvRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z:PROC ; Animatable::SvRemoveThis
EXTRN	?SvSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@AEBVWStr@@@Z:PROC ; MtlBase::SvSetName
EXTRN	?SvTraverseAnimGraph@Texmap@@UEAA?AVSvGraphNodeReference@@PEAVIGraphObjectManager@@PEAVAnimatable@@HK@Z:PROC ; Texmap::SvTraverseAnimGraph
EXTRN	?VectorFromNoScale@ShadeContext@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z:PROC ; ShadeContext::VectorFromNoScale
EXTRN	?VectorToNoScale@ShadeContext@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z:PROC ; ShadeContext::VectorToNoScale
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	GUID_NULL:BYTE
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?defaultDim@@3PEAVParamDimension@@EA:QWORD
EXTRN	__imp_?TEXMAP_CAT_3D@@3PA_WA:BYTE
EXTRN	?hInstance@@3PEAUHINSTANCE__@@EA:QWORD		; hInstance
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A DB 010H DUP (?) ; MaxSDK::AssetManagement::kInvalidId
?kTriObjNormalXTCID@@3VClass_ID@@B DQ 01H DUP (?)	; kTriObjNormalXTCID
?intvalid@@3VInterval@@A DQ 01H DUP (?)			; intvalid
?BerconTileDesc@@3VBerconTileClassDesc@@A DB 038H DUP (?) ; BerconTileDesc
?xyz_blk@@3VXYZ_Desc@@A DB 080H DUP (?)			; xyz_blk
?BerconTile_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; BerconTile_param_blk
?BerconMap_param_blk@@3VParamBlockDesc2@@A DB 080H DUP (?) ; BerconMap_param_blk
?black@@3VAColor@@A DB 010H DUP (?)			; black
?white@@3VAColor@@A DB 010H DUP (?)			; white
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemmove DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$wmemmove
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8Class_ID@@QEBA_NAEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+73
	DD	imagerel $unwind$??8Class_ID@@QEBA_NAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA DD imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$char_traits@_W@std@@SA_KPEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?length@?$char_traits@_W@std@@SA_KPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??1_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+173
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN14
	DD	imagerel $LN14+517
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN22
	DD	imagerel $LN22+947
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVPoint3@@MAEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??D@YA?AVPoint3@@MAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVPoint3@@AEBV0@M@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??D@YA?AVPoint3@@AEBV0@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GInterfaceServer@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$??_GInterfaceServer@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BaseInterfaceServer@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+72
	DD	imagerel $unwind$??0BaseInterfaceServer@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBaseInterfaceServer@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$??_GBaseInterfaceServer@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
	DD	imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ+21
	DD	imagerel $unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NumInterfaces@ClassDesc@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?NumInterfaces@ClassDesc@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClearInterfaces@ClassDesc@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?ClearInterfaces@ClassDesc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Set@BitArray@@QEAAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+188
	DD	imagerel $unwind$?Set@BitArray@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UseLocalBits@BitArray@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+45
	DD	imagerel $unwind$?UseLocalBits@BitArray@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BitMask@BitArray@@AEBA_KH@Z DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?BitMask@BitArray@@AEBA_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??HAColor@@QEBA?AV0@AEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$??HAColor@@QEBA?AV0@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D@YA?AVAColor@@MAEBV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??D@YA?AVAColor@@MAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Interval@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0Interval@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_4Interval@@QEAAAEAV0@V0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??_4Interval@@QEAAAEAV0@V0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BypassTrackBar@Animatable@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$?BypassTrackBar@Animatable@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyForeground@ReferenceTarget@@UEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?NotifyForeground@ReferenceTarget@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NRenderElements@RenderGlobalContext@@QEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?NRenderElements@RenderGlobalContext@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ShadeOutput@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+160
	DD	imagerel $unwind$??0ShadeOutput@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z DD imagerel $LN6
	DD	imagerel $LN6+231
	DD	imagerel $unwind$??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ShadeOutput@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1ShadeOutput@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GShadeOutput@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GShadeOutput@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RayDiam@ShadeContext@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?RayDiam@ShadeContext@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NRenderElements@ShadeContext@@UEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?NRenderElements@ShadeContext@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ShadeContext@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+163
	DD	imagerel $unwind$??0ShadeContext@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ShadeContext@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+53
	DD	imagerel $unwind$??1ShadeContext@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GShadeContext@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GShadeContext@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Texmap@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1Texmap@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkTriObjNormalXTCID@@YAXXZ DD imagerel ??__EkTriObjNormalXTCID@@YAXXZ
	DD	imagerel ??__EkTriObjNormalXTCID@@YAXXZ+32
	DD	imagerel $unwind$??__EkTriObjNormalXTCID@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eintvalid@@YAXXZ DD imagerel ??__Eintvalid@@YAXXZ
	DD	imagerel ??__Eintvalid@@YAXXZ+33
	DD	imagerel $unwind$??__Eintvalid@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD imagerel $LN4
	DD	imagerel $LN4+5732
	DD	imagerel $unwind$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA DD imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
	DD	imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1XYZ_Desc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$??1XYZ_Desc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GXYZ_Desc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GXYZ_Desc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN8
	DD	imagerel $LN8+1507
	DD	imagerel $unwind$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconXYZDlgProc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconXYZDlgProc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconXYZDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconXYZDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconXYZ@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??0BerconXYZ@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?isRealworld@BerconXYZ@@QEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+53
	DD	imagerel $unwind$?isRealworld@BerconXYZ@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+52
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN6
	DD	imagerel $LN6+229
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+216
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN6
	DD	imagerel $LN6+208
	DD	imagerel $unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD imagerel $LN23
	DD	imagerel $LN23+575
	DD	imagerel $unwind$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+82
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+54
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN13
	DD	imagerel $LN13+238
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+96
	DD	imagerel $unwind$?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD imagerel $LN7
	DD	imagerel $LN7+262
	DD	imagerel $unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+39
	DD	imagerel $unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+45
	DD	imagerel $unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD imagerel $LN6
	DD	imagerel $LN6+207
	DD	imagerel $unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+241
	DD	imagerel $unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?update@TileRow@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+129
	DD	imagerel $unwind$?update@TileRow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TileRow@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+41
	DD	imagerel $unwind$??1TileRow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1TileRow@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1TileRow@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1TileRow@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???1TileRow@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GTileRow@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_GTileRow@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TilePattern@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??0TilePattern@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TilePattern@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+59
	DD	imagerel $unwind$??1TilePattern@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+39
	DD	imagerel $unwind$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+45
	DD	imagerel $unwind$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+207
	DD	imagerel $unwind$??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?update@TilePattern@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+156
	DD	imagerel $unwind$?update@TilePattern@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?checkValues@TileParam@@QEAAXXZ DD imagerel $LN17
	DD	imagerel $LN17+583
	DD	imagerel $unwind$?checkValues@TileParam@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@TileParam@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@TileParam@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z DD imagerel ?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z
	DD	imagerel ?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z+433
	DD	imagerel $unwind$?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z DD imagerel $LN8
	DD	imagerel $LN8+581
	DD	imagerel $unwind$?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z DD imagerel $LN7
	DD	imagerel $LN7+389
	DD	imagerel $unwind$?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnableStuff@BerconTile@@QEAAXH@Z DD imagerel $LN23
	DD	imagerel $LN23+1787
	DD	imagerel $unwind$?EnableStuff@BerconTile@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+210
	DD	imagerel $unwind$?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+165
	DD	imagerel $unwind$?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z DD imagerel $LN5
	DD	imagerel $LN5+187
	DD	imagerel $unwind$?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DiscardTexHandle@BerconTile@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$?DiscardTexHandle@BerconTile@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ActivateTexDisplay@BerconTile@@UEAAXH@Z DD imagerel $LN4
	DD	imagerel $LN4+35
	DD	imagerel $unwind$?ActivateTexDisplay@BerconTile@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z DD imagerel $LN6
	DD	imagerel $LN6+260
	DD	imagerel $unwind$?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD imagerel $LN9
	DD	imagerel $LN9+410
	DD	imagerel $unwind$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD imagerel ?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z DD imagerel $LN21
	DD	imagerel $LN21+6438
	DD	imagerel $unwind$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA DD imagerel ?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Reset@BerconTile@@UEAAXXZ DD imagerel $LN11
	DD	imagerel $LN11+2956
	DD	imagerel $unwind$?Reset@BerconTile@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Validity@BerconTile@@UEAA?AVInterval@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?Validity@BerconTile@@UEAA?AVInterval@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?LocalRequirements@BerconTile@@UEAAKH@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?LocalRequirements@BerconTile@@UEAAKH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z DD imagerel $LN13
	DD	imagerel $LN13+379
	DD	imagerel $unwind$?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z DD imagerel $LN16
	DD	imagerel $LN16+464
	DD	imagerel $unwind$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD imagerel $LN22
	DD	imagerel $LN22+1787
	DD	imagerel $unwind$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA DD imagerel ?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD imagerel $LN29
	DD	imagerel $LN29+3040
	DD	imagerel $unwind$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA DD imagerel ?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD imagerel $LN10
	DD	imagerel $LN10+544
	DD	imagerel $unwind$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA DD imagerel ?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z DD imagerel $LN11
	DD	imagerel $LN11+277
	DD	imagerel $unwind$?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z DD imagerel $LN10
	DD	imagerel $LN10+129
	DD	imagerel $unwind$?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z DD imagerel $LN12
	DD	imagerel $LN12+312
	DD	imagerel $unwind$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA DD imagerel ?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z DD imagerel $LN10
	DD	imagerel $LN10+129
	DD	imagerel $unwind$?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z DD imagerel $LN10
	DD	imagerel $LN10+159
	DD	imagerel $unwind$?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z DD imagerel $LN8
	DD	imagerel $LN8+89
	DD	imagerel $unwind$?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z DD imagerel $LN6
	DD	imagerel $LN6+192
	DD	imagerel $unwind$?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconTile@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconTile@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconTile@@QEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+417
	DD	imagerel $unwind$??0BerconTile@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA+31
	DD	imagerel $unwind$?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconTile@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+115
	DD	imagerel $unwind$??1BerconTile@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA+31
	DD	imagerel $unwind$?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetInterface@BerconTile@@UEAAPEAXK@Z DD imagerel $LN7
	DD	imagerel $LN7+87
	DD	imagerel $unwind$?GetInterface@BerconTile@@UEAAPEAXK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconTile@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconTile@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconTile@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconTile@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconTileClassDesc@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??0BerconTileClassDesc@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconTileClassDesc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1BerconTileClassDesc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Create@BerconTileClassDesc@@UEAAPEAXH@Z DD imagerel $LN6
	DD	imagerel $LN6+107
	DD	imagerel $unwind$?Create@BerconTileClassDesc@@UEAAPEAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA DD imagerel ?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconTileClassDesc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconTileClassDesc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconSC@@QEAA@QEAVShadeContext@@@Z DD imagerel $LN4
	DD	imagerel $LN4+408
	DD	imagerel $unwind$??0BerconSC@@QEAA@QEAVShadeContext@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setUV1@BerconSC@@QEAAXVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?setUV1@BerconSC@@QEAAXVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setUV2@BerconSC@@QEAAXVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?setUV2@BerconSC@@QEAAXVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?InMtlEditor@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?InMtlEditor@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Antialias@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?Antialias@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ProjType@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?ProjType@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CurTime@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?CurTime@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NodeID@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?NodeID@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Node@BerconSC@@UEAAPEAVINode@@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?Node@BerconSC@@UEAAPEAVINode@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?FaceNumber@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?FaceNumber@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Normal@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?Normal@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetNormal@BerconSC@@UEAAXVPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$?SetNormal@BerconSC@@UEAAXVPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GNormal@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?GNormal@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Curve@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?Curve@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?V@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?V@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetView@BerconSC@@UEAAXVPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+104
	DD	imagerel $unwind$?SetView@BerconSC@@UEAAXVPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?OrigView@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?OrigView@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetIOR@BerconSC@@UEAAXM@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?SetIOR@BerconSC@@UEAAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetIOR@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?GetIOR@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CamPos@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?CamPos@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?P@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN5
	DD	imagerel $LN5+139
	DD	imagerel $unwind$?P@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DP@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?DP@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PObj@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN5
	DD	imagerel $LN5+139
	DD	imagerel $unwind$?PObj@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DPObj@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?DPObj@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UVW@BerconSC@@UEAA?AVPoint3@@H@Z DD imagerel $LN8
	DD	imagerel $LN8+361
	DD	imagerel $unwind$?UVW@BerconSC@@UEAA?AVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsSuperSampleOn@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?IsSuperSampleOn@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNSuperSample@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?GetNSuperSample@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSampleSizeScale@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?GetSampleSizeScale@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RayDiam@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?RayDiam@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RayConeAngle@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?RayConeAngle@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CamNearRange@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?CamNearRange@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?CamFarRange@BerconSC@@UEAAMXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?CamFarRange@BerconSC@@UEAAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetGBufferID@BerconSC@@UEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?SetGBufferID@BerconSC@@UEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Execute@BerconSC@@UEAA_JH_K00@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?Execute@BerconSC@@UEAA_JH_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NRenderElements@BerconSC@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?NRenderElements@BerconSC@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconSC@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconSC@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconSC@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconSC@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconSC@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconSC@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconTileDesc@@YAXXZ DD imagerel ??__EBerconTileDesc@@YAXXZ
	DD	imagerel ??__EBerconTileDesc@@YAXXZ+50
	DD	imagerel $unwind$??__EBerconTileDesc@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconTileDesc@@YAXXZ DD imagerel ??__FBerconTileDesc@@YAXXZ
	DD	imagerel ??__FBerconTileDesc@@YAXXZ+21
	DD	imagerel $unwind$??__FBerconTileDesc@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Exyz_blk@@YAXXZ DD imagerel ??__Exyz_blk@@YAXXZ
	DD	imagerel ??__Exyz_blk@@YAXXZ+103
	DD	imagerel $unwind$??__Exyz_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fxyz_blk@@YAXXZ DD imagerel ??__Fxyz_blk@@YAXXZ
	DD	imagerel ??__Fxyz_blk@@YAXXZ+21
	DD	imagerel $unwind$??__Fxyz_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconTile_param_blk@@YAXXZ DD imagerel ??__EBerconTile_param_blk@@YAXXZ
	DD	imagerel ??__EBerconTile_param_blk@@YAXXZ+7681
	DD	imagerel $unwind$??__EBerconTile_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconTile_param_blk@@YAXXZ DD imagerel ??__FBerconTile_param_blk@@YAXXZ
	DD	imagerel ??__FBerconTile_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__FBerconTile_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EBerconMap_param_blk@@YAXXZ DD imagerel ??__EBerconMap_param_blk@@YAXXZ
	DD	imagerel ??__EBerconMap_param_blk@@YAXXZ+687
	DD	imagerel $unwind$??__EBerconMap_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__FBerconMap_param_blk@@YAXXZ DD imagerel ??__FBerconMap_param_blk@@YAXXZ
	DD	imagerel ??__FBerconMap_param_blk@@YAXXZ+22
	DD	imagerel $unwind$??__FBerconMap_param_blk@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA DD imagerel ?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD imagerel $LN8
	DD	imagerel $LN8+2404
	DD	imagerel $unwind$?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?DeleteThis@BerconTileDlgProc@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?DeleteThis@BerconTileDlgProc@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1BerconTileDlgProc@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1BerconTileDlgProc@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBerconTileDlgProc@@UEAAPEAXI@Z DD imagerel $LN7
	DD	imagerel $LN7+85
	DD	imagerel $unwind$??_GBerconTileDlgProc@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Eblack@@YAXXZ DD imagerel ??__Eblack@@YAXXZ
	DD	imagerel ??__Eblack@@YAXXZ+44
	DD	imagerel $unwind$??__Eblack@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Ewhite@@YAXXZ DD imagerel ??__Ewhite@@YAXXZ
	DD	imagerel ??__Ewhite@@YAXXZ+59
	DD	imagerel $unwind$??__Ewhite@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z DD imagerel $LN4
	DD	imagerel $LN4+68
	DD	imagerel $unwind$??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+82
	DD	imagerel $unwind$??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?kInvalidId$initializer$@AssetManagement@MaxSDK@@3P6AXXZEA DQ FLAT:??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ; MaxSDK::AssetManagement::kInvalidId$initializer$
CRT$XCU	ENDS
;	COMDAT __real@c9742400
CONST	SEGMENT
__real@c9742400 DD 0c9742400r			; -1e+06
CONST	ENDS
;	COMDAT __real@c12e848000000000
CONST	SEGMENT
__real@c12e848000000000 DQ 0c12e848000000000r	; -1e+06
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@49742400
CONST	SEGMENT
__real@49742400 DD 049742400r			; 1e+06
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+06
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4066800000000000
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4039000000000000
CONST	SEGMENT
__real@4039000000000000 DQ 04039000000000000r	; 25
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd3333340000000
CONST	SEGMENT
__real@3fd3333340000000 DQ 03fd3333340000000r	; 0.3
CONST	ENDS
;	COMDAT __real@3fb99999a0000000
CONST	SEGMENT
__real@3fb99999a0000000 DQ 03fb99999a0000000r	; 0.1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f1a36e2e0000000
CONST	SEGMENT
__real@3f1a36e2e0000000 DQ 03f1a36e2e0000000r	; 0.0001
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconTileDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconTileDlgProc@@8 DD imagerel ??_R0?AVBerconTileDlgProc@@@8 ; BerconTileDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconTileDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconTileDlgProc@@8
rdata$r	SEGMENT
??_R2BerconTileDlgProc@@8 DD imagerel ??_R1A@?0A@EA@BerconTileDlgProc@@8 ; BerconTileDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconTileDlgProc@@8
rdata$r	SEGMENT
??_R3BerconTileDlgProc@@8 DD 00H			; BerconTileDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconTileDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconTileDlgProc@@@8
data$r	SEGMENT
??_R0?AVBerconTileDlgProc@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconTileDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconTileDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconTileDlgProc@@6B@
rdata$r	SEGMENT
??_R4BerconTileDlgProc@@6B@ DD 01H			; BerconTileDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconTileDlgProc@@@8
	DD	imagerel ??_R3BerconTileDlgProc@@8
	DD	imagerel ??_R4BerconTileDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconSC@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconSC@@8 DD imagerel ??_R0?AVBerconSC@@@8 ; BerconSC::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconSC@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconSC@@8
rdata$r	SEGMENT
??_R2BerconSC@@8 DD imagerel ??_R1A@?0A@EA@BerconSC@@8	; BerconSC::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ShadeContext@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconSC@@8
rdata$r	SEGMENT
??_R3BerconSC@@8 DD 00H					; BerconSC::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2BerconSC@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconSC@@@8
data$r	SEGMENT
??_R0?AVBerconSC@@@8 DQ FLAT:??_7type_info@@6B@		; BerconSC `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconSC@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconSC@@6B@
rdata$r	SEGMENT
??_R4BerconSC@@6B@ DD 01H				; BerconSC::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconSC@@@8
	DD	imagerel ??_R3BerconSC@@8
	DD	imagerel ??_R4BerconSC@@6B@
rdata$r	ENDS
;	COMDAT ??_R2ClassDesc2@@8
rdata$r	SEGMENT
??_R2ClassDesc2@@8 DD imagerel ??_R1A@?0A@EA@ClassDesc2@@8 ; ClassDesc2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ClassDesc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ClassDesc2@@8
rdata$r	SEGMENT
??_R3ClassDesc2@@8 DD 00H				; ClassDesc2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ClassDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ClassDesc2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ClassDesc2@@8 DD imagerel ??_R0?AVClassDesc2@@@8 ; ClassDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ClassDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconTileClassDesc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconTileClassDesc@@8 DD imagerel ??_R0?AVBerconTileClassDesc@@@8 ; BerconTileClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconTileClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconTileClassDesc@@8
rdata$r	SEGMENT
??_R2BerconTileClassDesc@@8 DD imagerel ??_R1A@?0A@EA@BerconTileClassDesc@@8 ; BerconTileClassDesc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ClassDesc2@@8
	DD	imagerel ??_R1A@?0A@EA@ClassDesc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconTileClassDesc@@8
rdata$r	SEGMENT
??_R3BerconTileClassDesc@@8 DD 00H			; BerconTileClassDesc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2BerconTileClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconTileClassDesc@@@8
data$r	SEGMENT
??_R0?AVBerconTileClassDesc@@@8 DQ FLAT:??_7type_info@@6B@ ; BerconTileClassDesc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconTileClassDesc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconTileClassDesc@@6B@
rdata$r	SEGMENT
??_R4BerconTileClassDesc@@6B@ DD 01H			; BerconTileClassDesc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconTileClassDesc@@@8
	DD	imagerel ??_R3BerconTileClassDesc@@8
	DD	imagerel ??_R4BerconTileClassDesc@@6B@
rdata$r	ENDS
;	COMDAT ??_R4BerconTile@@6B@
rdata$r	SEGMENT
??_R4BerconTile@@6B@ DD 01H				; BerconTile::`RTTI Complete Object Locator'
	DD	090H
	DD	00H
	DD	imagerel ??_R0?AVBerconTile@@@8
	DD	imagerel ??_R3BerconTile@@8
	DD	imagerel ??_R4BerconTile@@6B@
rdata$r	ENDS
;	COMDAT ??_R4BerconTile@@6BISubMap@@@
rdata$r	SEGMENT
??_R4BerconTile@@6BISubMap@@@ DD 01H			; BerconTile::`RTTI Complete Object Locator'
	DD	040H
	DD	00H
	DD	imagerel ??_R0?AVBerconTile@@@8
	DD	imagerel ??_R3BerconTile@@8
	DD	imagerel ??_R4BerconTile@@6BISubMap@@@
rdata$r	ENDS
;	COMDAT ??_R1JI@?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1JI@?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (152,-1,0,66)'
	DD	00H
	DD	098H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R1JA@?0A@EA@ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R1JA@?0A@EA@ResourceMakerCallback@@8 DD imagerel ??_R0?AVResourceMakerCallback@@@8 ; ResourceMakerCallback::`RTTI Base Class Descriptor at (144,-1,0,64)'
	DD	01H
	DD	090H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R1EA@?0A@EA@ISubMap@@8
rdata$r	SEGMENT
??_R1EA@?0A@EA@ISubMap@@8 DD imagerel ??_R0?AVISubMap@@@8 ; ISubMap::`RTTI Base Class Descriptor at (64,-1,0,64)'
	DD	01H
	DD	040H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R2MtlBase@@8
rdata$r	SEGMENT
??_R2MtlBase@@8 DD imagerel ??_R1A@?0A@EA@MtlBase@@8	; MtlBase::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3MtlBase@@8
rdata$r	SEGMENT
??_R3MtlBase@@8 DD 00H					; MtlBase::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0aH
	DD	imagerel ??_R2MtlBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVMtlBase@@@8
data$r	SEGMENT
??_R0?AVMtlBase@@@8 DQ FLAT:??_7type_info@@6B@		; MtlBase `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVMtlBase@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MtlBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MtlBase@@8 DD imagerel ??_R0?AVMtlBase@@@8 ; MtlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MtlBase@@8
rdata$r	ENDS
;	COMDAT ??_R2Texmap@@8
rdata$r	SEGMENT
??_R2Texmap@@8 DD imagerel ??_R1A@?0A@EA@Texmap@@8	; Texmap::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@MtlBase@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Texmap@@8
rdata$r	SEGMENT
??_R3Texmap@@8 DD 00H					; Texmap::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	0bH
	DD	imagerel ??_R2Texmap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTexmap@@@8
data$r	SEGMENT
??_R0?AVTexmap@@@8 DQ FLAT:??_7type_info@@6B@		; Texmap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVTexmap@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Texmap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Texmap@@8 DD imagerel ??_R0?AVTexmap@@@8	; Texmap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0aH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Texmap@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconTile@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconTile@@8 DD imagerel ??_R0?AVBerconTile@@@8 ; BerconTile::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	0dH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconTile@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconTile@@8
rdata$r	SEGMENT
??_R2BerconTile@@8 DD imagerel ??_R1A@?0A@EA@BerconTile@@8 ; BerconTile::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Texmap@@8
	DD	imagerel ??_R1A@?0A@EA@MtlBase@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceTarget@@8
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1EA@?0A@EA@ISubMap@@8
	DD	imagerel ??_R1EI@?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R1JA@?0A@EA@ResourceMakerCallback@@8
	DD	imagerel ??_R1JI@?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconTile@@8
rdata$r	SEGMENT
??_R3BerconTile@@8 DD 00H				; BerconTile::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	0eH
	DD	imagerel ??_R2BerconTile@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconTile@@@8
data$r	SEGMENT
??_R0?AVBerconTile@@@8 DQ FLAT:??_7type_info@@6B@	; BerconTile `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconTile@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconTile@@6BReferenceTarget@@@
rdata$r	SEGMENT
??_R4BerconTile@@6BReferenceTarget@@@ DD 01H		; BerconTile::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconTile@@@8
	DD	imagerel ??_R3BerconTile@@8
	DD	imagerel ??_R4BerconTile@@6BReferenceTarget@@@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BerconXYZDlgProc@@8 DD imagerel ??_R0?AVBerconXYZDlgProc@@@8 ; BerconXYZDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BerconXYZDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R2BerconXYZDlgProc@@8 DD imagerel ??_R1A@?0A@EA@BerconXYZDlgProc@@8 ; BerconXYZDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BerconXYZDlgProc@@8
rdata$r	SEGMENT
??_R3BerconXYZDlgProc@@8 DD 00H				; BerconXYZDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BerconXYZDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBerconXYZDlgProc@@@8
data$r	SEGMENT
??_R0?AVBerconXYZDlgProc@@@8 DQ FLAT:??_7type_info@@6B@	; BerconXYZDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBerconXYZDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4BerconXYZDlgProc@@6B@
rdata$r	SEGMENT
??_R4BerconXYZDlgProc@@6B@ DD 01H			; BerconXYZDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBerconXYZDlgProc@@@8
	DD	imagerel ??_R3BerconXYZDlgProc@@8
	DD	imagerel ??_R4BerconXYZDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R2ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R2ParamBlockDesc2@@8 DD imagerel ??_R1A@?0A@EA@ParamBlockDesc2@@8 ; ParamBlockDesc2::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R3ParamBlockDesc2@@8 DD 00H				; ParamBlockDesc2::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2ParamBlockDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParamBlockDesc2@@@8
data$r	SEGMENT
??_R0?AVParamBlockDesc2@@@8 DQ FLAT:??_7type_info@@6B@	; ParamBlockDesc2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVParamBlockDesc2@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParamBlockDesc2@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParamBlockDesc2@@8 DD imagerel ??_R0?AVParamBlockDesc2@@@8 ; ParamBlockDesc2::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ParamBlockDesc2@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@XYZ_Desc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@XYZ_Desc@@8 DD imagerel ??_R0?AVXYZ_Desc@@@8 ; XYZ_Desc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3XYZ_Desc@@8
rdata$r	ENDS
;	COMDAT ??_R2XYZ_Desc@@8
rdata$r	SEGMENT
??_R2XYZ_Desc@@8 DD imagerel ??_R1A@?0A@EA@XYZ_Desc@@8	; XYZ_Desc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ParamBlockDesc2@@8
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3XYZ_Desc@@8
rdata$r	SEGMENT
??_R3XYZ_Desc@@8 DD 00H					; XYZ_Desc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2XYZ_Desc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVXYZ_Desc@@@8
data$r	SEGMENT
??_R0?AVXYZ_Desc@@@8 DQ FLAT:??_7type_info@@6B@		; XYZ_Desc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVXYZ_Desc@@', 00H
data$r	ENDS
;	COMDAT ??_R4XYZ_Desc@@6B@
rdata$r	SEGMENT
??_R4XYZ_Desc@@6B@ DD 01H				; XYZ_Desc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVXYZ_Desc@@@8
	DD	imagerel ??_R3XYZ_Desc@@8
	DD	imagerel ??_R4XYZ_Desc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ResourceMakerCallback@@8 DD imagerel ??_R0?AVResourceMakerCallback@@@8 ; ResourceMakerCallback::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R2ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R2ResourceMakerCallback@@8 DD imagerel ??_R1A@?0A@EA@ResourceMakerCallback@@8 ; ResourceMakerCallback::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ResourceMakerCallback@@8
rdata$r	SEGMENT
??_R3ResourceMakerCallback@@8 DD 00H			; ResourceMakerCallback::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ResourceMakerCallback@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVResourceMakerCallback@@@8
data$r	SEGMENT
??_R0?AVResourceMakerCallback@@@8 DQ FLAT:??_7type_info@@6B@ ; ResourceMakerCallback `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVResourceMakerCallback@@', 00H
data$r	ENDS
;	COMDAT ??_R4ResourceMakerCallback@@6B@
rdata$r	SEGMENT
??_R4ResourceMakerCallback@@6B@ DD 01H			; ResourceMakerCallback::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVResourceMakerCallback@@@8
	DD	imagerel ??_R3ResourceMakerCallback@@8
	DD	imagerel ??_R4ResourceMakerCallback@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ISubMap@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ISubMap@@8 DD imagerel ??_R0?AVISubMap@@@8 ; ISubMap::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R2ISubMap@@8
rdata$r	SEGMENT
??_R2ISubMap@@8 DD imagerel ??_R1A@?0A@EA@ISubMap@@8	; ISubMap::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ISubMap@@8
rdata$r	SEGMENT
??_R3ISubMap@@8 DD 00H					; ISubMap::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ISubMap@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVISubMap@@@8
data$r	SEGMENT
??_R0?AVISubMap@@@8 DQ FLAT:??_7type_info@@6B@		; ISubMap `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVISubMap@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ShadeOutput@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ShadeOutput@@8 DD imagerel ??_R0?AVShadeOutput@@@8 ; ShadeOutput::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ShadeOutput@@8
rdata$r	ENDS
;	COMDAT ??_R2ShadeOutput@@8
rdata$r	SEGMENT
??_R2ShadeOutput@@8 DD imagerel ??_R1A@?0A@EA@ShadeOutput@@8 ; ShadeOutput::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ShadeOutput@@8
rdata$r	SEGMENT
??_R3ShadeOutput@@8 DD 00H				; ShadeOutput::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2ShadeOutput@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVShadeOutput@@@8
data$r	SEGMENT
??_R0?AVShadeOutput@@@8 DQ FLAT:??_7type_info@@6B@	; ShadeOutput `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVShadeOutput@@', 00H
data$r	ENDS
;	COMDAT ??_R4ShadeOutput@@6B@
rdata$r	SEGMENT
??_R4ShadeOutput@@6B@ DD 01H				; ShadeOutput::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVShadeOutput@@@8
	DD	imagerel ??_R3ShadeOutput@@8
	DD	imagerel ??_R4ShadeOutput@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ShadeContext@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ShadeContext@@8 DD imagerel ??_R0?AVShadeContext@@@8 ; ShadeContext::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ShadeContext@@8
rdata$r	ENDS
;	COMDAT ??_R2ShadeContext@@8
rdata$r	SEGMENT
??_R2ShadeContext@@8 DD imagerel ??_R1A@?0A@EA@ShadeContext@@8 ; ShadeContext::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ShadeContext@@8
rdata$r	SEGMENT
??_R3ShadeContext@@8 DD 00H				; ShadeContext::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2ShadeContext@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVShadeContext@@@8
data$r	SEGMENT
??_R0?AVShadeContext@@@8 DQ FLAT:??_7type_info@@6B@	; ShadeContext `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVShadeContext@@', 00H
data$r	ENDS
;	COMDAT ??_R4ShadeContext@@6B@
rdata$r	SEGMENT
??_R4ShadeContext@@6B@ DD 01H				; ShadeContext::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVShadeContext@@@8
	DD	imagerel ??_R3ShadeContext@@8
	DD	imagerel ??_R4ShadeContext@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ClassDesc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ClassDesc@@8 DD imagerel ??_R0?AVClassDesc@@@8 ; ClassDesc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R2ClassDesc@@8
rdata$r	SEGMENT
??_R2ClassDesc@@8 DD imagerel ??_R1A@?0A@EA@ClassDesc@@8 ; ClassDesc::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ClassDesc@@8
rdata$r	SEGMENT
??_R3ClassDesc@@8 DD 00H				; ClassDesc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ClassDesc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVClassDesc@@@8
data$r	SEGMENT
??_R0?AVClassDesc@@@8 DQ FLAT:??_7type_info@@6B@	; ClassDesc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVClassDesc@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ParamMap2UserDlgProc@@8 DD imagerel ??_R0?AVParamMap2UserDlgProc@@@8 ; ParamMap2UserDlgProc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ParamMap2UserDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R2ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R2ParamMap2UserDlgProc@@8 DD imagerel ??_R1A@?0A@EA@ParamMap2UserDlgProc@@8 ; ParamMap2UserDlgProc::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ParamMap2UserDlgProc@@8
rdata$r	SEGMENT
??_R3ParamMap2UserDlgProc@@8 DD 00H			; ParamMap2UserDlgProc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ParamMap2UserDlgProc@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVParamMap2UserDlgProc@@@8
data$r	SEGMENT
??_R0?AVParamMap2UserDlgProc@@@8 DQ FLAT:??_7type_info@@6B@ ; ParamMap2UserDlgProc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVParamMap2UserDlgProc@@', 00H
data$r	ENDS
;	COMDAT ??_R4ParamMap2UserDlgProc@@6B@
rdata$r	SEGMENT
??_R4ParamMap2UserDlgProc@@6B@ DD 01H			; ParamMap2UserDlgProc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVParamMap2UserDlgProc@@@8
	DD	imagerel ??_R3ParamMap2UserDlgProc@@8
	DD	imagerel ??_R4ParamMap2UserDlgProc@@6B@
rdata$r	ENDS
;	COMDAT ??_R1EI@?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1EI@?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (72,-1,0,66)'
	DD	00H
	DD	048H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R18?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R18?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (9,-1,0,66)'
	DD	00H
	DD	09H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R0?AVNoncopyable@Util@MaxSDK@@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@Noncopyable@Util@MaxSDK@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3Noncopyable@Util@MaxSDK@@8 DD 00H			; MaxSDK::Util::Noncopyable::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVNoncopyable@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVNoncopyable@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::Noncopyable `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVNoncopyable@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8 DD imagerel ??_R0?AVNoncopyable@Util@MaxSDK@@@8 ; MaxSDK::Util::Noncopyable::`RTTI Base Class Descriptor at (9,-1,0,64)'
	DD	01H
	DD	09H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Noncopyable@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EC@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R17?0A@EC@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,66)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	042H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2Animatable@@8
rdata$r	SEGMENT
??_R2Animatable@@8 DD imagerel ??_R1A@?0A@EA@Animatable@@8 ; Animatable::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Animatable@@8
rdata$r	SEGMENT
??_R3Animatable@@8 DD 00H				; Animatable::`RTTI Class Hierarchy Descriptor'
	DD	05H
	DD	05H
	DD	imagerel ??_R2Animatable@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVAnimatable@@@8
data$r	SEGMENT
??_R0?AVAnimatable@@@8 DQ FLAT:??_7type_info@@6B@	; Animatable `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAnimatable@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Animatable@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Animatable@@8 DD imagerel ??_R0?AVAnimatable@@@8 ; Animatable::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Animatable@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferenceMaker@@8
rdata$r	SEGMENT
??_R2ReferenceMaker@@8 DD imagerel ??_R1A@?0A@EA@ReferenceMaker@@8 ; ReferenceMaker::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReferenceMaker@@8
rdata$r	SEGMENT
??_R3ReferenceMaker@@8 DD 00H				; ReferenceMaker::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	06H
	DD	imagerel ??_R2ReferenceMaker@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferenceMaker@@@8
data$r	SEGMENT
??_R0?AVReferenceMaker@@@8 DQ FLAT:??_7type_info@@6B@	; ReferenceMaker `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReferenceMaker@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferenceMaker@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferenceMaker@@8 DD imagerel ??_R0?AVReferenceMaker@@@8 ; ReferenceMaker::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	05H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReferenceMaker@@8
rdata$r	ENDS
;	COMDAT ??_R2ReferenceTarget@@8
rdata$r	SEGMENT
??_R2ReferenceTarget@@8 DD imagerel ??_R1A@?0A@EA@ReferenceTarget@@8 ; ReferenceTarget::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ReferenceMaker@@8
	DD	imagerel ??_R1A@?0A@EA@Animatable@@8
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EC@MaxHeapOperators@@8
	DD	imagerel ??_R18?0A@EA@Noncopyable@Util@MaxSDK@@8
	DD	imagerel ??_R18?0A@EC@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ReferenceTarget@@8
rdata$r	SEGMENT
??_R3ReferenceTarget@@8 DD 00H				; ReferenceTarget::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	07H
	DD	imagerel ??_R2ReferenceTarget@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVReferenceTarget@@@8
data$r	SEGMENT
??_R0?AVReferenceTarget@@@8 DQ FLAT:??_7type_info@@6B@	; ReferenceTarget `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVReferenceTarget@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ReferenceTarget@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ReferenceTarget@@8 DD imagerel ??_R0?AVReferenceTarget@@@8 ; ReferenceTarget::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	06H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ReferenceTarget@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@BaseInterfaceServer@@8 DD imagerel ??_R0?AVBaseInterfaceServer@@@8 ; BaseInterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3BaseInterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R2BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R2BaseInterfaceServer@@8 DD imagerel ??_R1A@?0A@EA@BaseInterfaceServer@@8 ; BaseInterfaceServer::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@InterfaceServer@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3BaseInterfaceServer@@8
rdata$r	SEGMENT
??_R3BaseInterfaceServer@@8 DD 00H			; BaseInterfaceServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2BaseInterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBaseInterfaceServer@@@8
data$r	SEGMENT
??_R0?AVBaseInterfaceServer@@@8 DQ FLAT:??_7type_info@@6B@ ; BaseInterfaceServer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVBaseInterfaceServer@@', 00H
data$r	ENDS
;	COMDAT ??_R4BaseInterfaceServer@@6B@
rdata$r	SEGMENT
??_R4BaseInterfaceServer@@6B@ DD 01H			; BaseInterfaceServer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVBaseInterfaceServer@@@8
	DD	imagerel ??_R3BaseInterfaceServer@@8
	DD	imagerel ??_R4BaseInterfaceServer@@6B@
rdata$r	ENDS
;	COMDAT ??_R4InterfaceServer@@6B@
rdata$r	SEGMENT
??_R4InterfaceServer@@6B@ DD 01H			; InterfaceServer::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVInterfaceServer@@@8
	DD	imagerel ??_R3InterfaceServer@@8
	DD	imagerel ??_R4InterfaceServer@@6B@
rdata$r	ENDS
;	COMDAT ??_R2InterfaceServer@@8
rdata$r	SEGMENT
??_R2InterfaceServer@@8 DD imagerel ??_R1A@?0A@EA@InterfaceServer@@8 ; InterfaceServer::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3InterfaceServer@@8
rdata$r	SEGMENT
??_R3InterfaceServer@@8 DD 00H				; InterfaceServer::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2InterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVInterfaceServer@@@8
data$r	SEGMENT
??_R0?AVInterfaceServer@@@8 DQ FLAT:??_7type_info@@6B@	; InterfaceServer `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVInterfaceServer@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@InterfaceServer@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@InterfaceServer@@8 DD imagerel ??_R0?AVInterfaceServer@@@8 ; InterfaceServer::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3InterfaceServer@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2MaxHeapOperators@@8
rdata$r	SEGMENT
??_R2MaxHeapOperators@@8 DD imagerel ??_R1A@?0A@EA@MaxHeapOperators@@8 ; MaxHeapOperators::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3MaxHeapOperators@@8
rdata$r	SEGMENT
??_R3MaxHeapOperators@@8 DD 00H				; MaxHeapOperators::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@MaxHeapOperators@@8
rdata$r	SEGMENT
??_R17?0A@EA@MaxHeapOperators@@8 DD imagerel ??_R0?AVMaxHeapOperators@@@8 ; MaxHeapOperators::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3MaxHeapOperators@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2Exception@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8 ; MaxSDK::Util::Exception::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3Exception@Util@MaxSDK@@8 DD 00H			; MaxSDK::Util::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2Exception@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@Util@MaxSDK@@8 DD imagerel ??_R0?AVException@Util@MaxSDK@@@8 ; MaxSDK::Util::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Exception@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2OutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3OutOfRangeException@Util@MaxSDK@@8 DD 00H		; MaxSDK::Util::OutOfRangeException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2OutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8 ; MaxSDK::Util::OutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3OutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R2TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R2TabOutOfRangeException@Util@MaxSDK@@8 DD imagerel ??_R1A@?0A@EA@TabOutOfRangeException@Util@MaxSDK@@8 ; MaxSDK::Util::TabOutOfRangeException::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@OutOfRangeException@Util@MaxSDK@@8
	DD	imagerel ??_R1A@?0A@EA@Exception@Util@MaxSDK@@8
	DD	imagerel ??_R17?0A@EA@MaxHeapOperators@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	SEGMENT
??_R3TabOutOfRangeException@Util@MaxSDK@@8 DD 00H	; MaxSDK::Util::TabOutOfRangeException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2TabOutOfRangeException@Util@MaxSDK@@8
rdata$r	ENDS
;	COMDAT ??_R4TabOutOfRangeException@Util@MaxSDK@@6B@
rdata$r	SEGMENT
??_R4TabOutOfRangeException@Util@MaxSDK@@6B@ DD 01H	; MaxSDK::Util::TabOutOfRangeException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
	DD	imagerel ??_R3TabOutOfRangeException@Util@MaxSDK@@8
	DD	imagerel ??_R4TabOutOfRangeException@Util@MaxSDK@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@
CONST	SEGMENT
??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' '
	DB	00H, 'p', 00H, 'a', 00H, 's', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'a'
	DB	00H, ' ', 00H, 'M', 00H, 'a', 00H, 'x', 00H, ' ', 00H, 'S', 00H
	DB	'D', 00H, 'K', 00H, ' ', 00H, 'T', 00H, 'a', 00H, 'b', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel __imp_??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::Exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVOutOfRangeException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVOutOfRangeException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::OutOfRangeException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVOutOfRangeException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
xdata$x	SEGMENT
_CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16 DD 00H
	DD	imagerel ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	010H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8
data$r	SEGMENT
??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8 DQ FLAT:??_7type_info@@6B@ ; MaxSDK::Util::TabOutOfRangeException `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVTabOutOfRangeException@Util@MaxSDK@@', 00H
data$r	ENDS
;	COMDAT _CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	SEGMENT
_CTA4?AVTabOutOfRangeException@Util@MaxSDK@@ DD 04H
	DD	imagerel _CT??_R0?AVTabOutOfRangeException@Util@MaxSDK@@@8??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVOutOfRangeException@Util@MaxSDK@@@8??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVException@Util@MaxSDK@@@8??0Exception@Util@MaxSDK@@QEAA@AEBV012@@Z16
	DD	imagerel _CT??_R0?AVMaxHeapOperators@@@818
xdata$x	ENDS
;	COMDAT _TI4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	SEGMENT
_TI4?AVTabOutOfRangeException@Util@MaxSDK@@ DD 00H
	DD	imagerel ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA4?AVTabOutOfRangeException@Util@MaxSDK@@
xdata$x	ENDS
;	COMDAT ??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@
CONST	SEGMENT
??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'f', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'f'
	DB	00H, 'l', 00H, 'o', 00H, 'a', 00H, 't', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H
	DB	']', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'T', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'R', 00H, 'o', 00H, 'w', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'T', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'R', 00H, 'o', 00H
	DB	'w', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7BerconTileDlgProc@@6B@
CONST	SEGMENT
??_7BerconTileDlgProc@@6B@ DQ FLAT:??_R4BerconTileDlgProc@@6B@ ; BerconTileDlgProc::`vftable'
	DQ	FLAT:??_EBerconTileDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconTileDlgProc@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_7BerconSC@@6B@
CONST	SEGMENT
??_7BerconSC@@6B@ DQ FLAT:??_R4BerconSC@@6B@		; BerconSC::`vftable'
	DQ	FLAT:??_EBerconSC@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?InMtlEditor@BerconSC@@UEAAHXZ
	DQ	FLAT:?Antialias@BerconSC@@UEAAHXZ
	DQ	FLAT:?ProjType@BerconSC@@UEAAHXZ
	DQ	FLAT:?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z
	DQ	FLAT:?CurTime@BerconSC@@UEAAHXZ
	DQ	FLAT:?NodeID@BerconSC@@UEAAHXZ
	DQ	FLAT:?Node@BerconSC@@UEAAPEAVINode@@XZ
	DQ	FLAT:?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ
	DQ	FLAT:?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?FaceNumber@BerconSC@@UEAAHXZ
	DQ	FLAT:?Normal@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?SetNormal@BerconSC@@UEAAXVPoint3@@@Z
	DQ	FLAT:?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?GNormal@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?Curve@BerconSC@@UEAAMXZ
	DQ	FLAT:?V@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?SetView@BerconSC@@UEAAXVPoint3@@@Z
	DQ	FLAT:?OrigView@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z
	DQ	FLAT:?SetIOR@BerconSC@@UEAAXM@Z
	DQ	FLAT:?GetIOR@BerconSC@@UEAAMXZ
	DQ	FLAT:?CamPos@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?P@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z
	DQ	FLAT:?DP@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?PObj@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?DPObj@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ
	DQ	FLAT:?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ
	DQ	FLAT:?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z
	DQ	FLAT:?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ
	DQ	FLAT:?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ
	DQ	FLAT:?UVW@BerconSC@@UEAA?AVPoint3@@H@Z
	DQ	FLAT:?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z
	DQ	FLAT:?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z
	DQ	FLAT:?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z
	DQ	FLAT:?IsSuperSampleOn@BerconSC@@UEAAHXZ
	DQ	FLAT:?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ
	DQ	FLAT:?GetNSuperSample@BerconSC@@UEAAHXZ
	DQ	FLAT:?GetSampleSizeScale@BerconSC@@UEAAMXZ
	DQ	FLAT:?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z
	DQ	FLAT:?RayDiam@BerconSC@@UEAAMXZ
	DQ	FLAT:?RayConeAngle@BerconSC@@UEAAMXZ
	DQ	FLAT:?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z
	DQ	FLAT:?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z
	DQ	FLAT:?CamNearRange@BerconSC@@UEAAMXZ
	DQ	FLAT:?CamFarRange@BerconSC@@UEAAMXZ
	DQ	FLAT:?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?SetGBufferID@BerconSC@@UEAAXH@Z
	DQ	FLAT:?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ
	DQ	FLAT:?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z
	DQ	FLAT:?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z
	DQ	FLAT:?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z
	DQ	FLAT:?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z
	DQ	FLAT:?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z
	DQ	FLAT:?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z
	DQ	FLAT:?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z
	DQ	FLAT:?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z
	DQ	FLAT:?Execute@BerconSC@@UEAA_JH_K00@Z
	DQ	FLAT:?NRenderElements@BerconSC@@UEAAHXZ
	DQ	FLAT:?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z
	DQ	FLAT:?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ
CONST	ENDS
;	COMDAT ??_C@_1BG@HMMMJDJP@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAT?$AAi?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@HMMMJDJP@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAT?$AAi?$AAl?$AAe?$AA?$AA@ DB 'B'
	DB	00H, 'e', 00H, 'r', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 'T', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7BerconTileClassDesc@@6B@
CONST	SEGMENT
??_7BerconTileClassDesc@@6B@ DQ FLAT:??_R4BerconTileClassDesc@@6B@ ; BerconTileClassDesc::`vftable'
	DQ	FLAT:??_EBerconTileClassDesc@@UEAAPEAXI@Z
	DQ	FLAT:?IsPublic@BerconTileClassDesc@@UEAAHXZ
	DQ	FLAT:?Create@BerconTileClassDesc@@UEAAPEAXH@Z
	DQ	FLAT:?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
	DQ	FLAT:?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?SuperClassID@BerconTileClassDesc@@UEAAKXZ
	DQ	FLAT:?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?Category@BerconTileClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?HasClassParams@ClassDesc@@UEAAHXZ
	DQ	FLAT:?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z
	DQ	FLAT:?ResetClassParams@ClassDesc2@@UEAAXH@Z
	DQ	FLAT:?NumActionTables@ClassDesc@@UEAAHXZ
	DQ	FLAT:?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z
	DQ	FLAT:?IsManipulator@ClassDesc@@UEAAHXZ
	DQ	FLAT:?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z
	DQ	FLAT:?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z
	DQ	FLAT:?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z
	DQ	FLAT:?NeedsToSave@ClassDesc@@UEAAHXZ
	DQ	FLAT:?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z
	DQ	FLAT:?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z
	DQ	FLAT:?InitialRollupPageState@ClassDesc@@UEAAKXZ
	DQ	FLAT:?InternalName@BerconTileClassDesc@@UEAAPEB_WXZ
	DQ	FLAT:?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ
	DQ	FLAT:?HInstance@BerconTileClassDesc@@UEAAPEAUHINSTANCE__@@XZ
	DQ	FLAT:?NumParamBlockDescs@ClassDesc2@@UEAAHXZ
	DQ	FLAT:?GetParamBlockDesc@ClassDesc2@@UEAAPEAVParamBlockDesc2@@H@Z
	DQ	FLAT:?GetParamBlockDescByID@ClassDesc2@@UEAAPEAVParamBlockDesc2@@F@Z
	DQ	FLAT:?AddParamBlockDesc@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?BeginEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z
	DQ	FLAT:?EndEditParams@ClassDesc2@@UEAAXPEAVIObjParam@@PEAVReferenceMaker@@KPEAVAnimatable@@@Z
	DQ	FLAT:?InvalidateUI@ClassDesc2@@UEAAXPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetRsrcString@ClassDesc@@UEAAPEB_W_J@Z
	DQ	FLAT:?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?NumParamMaps@ClassDesc2@@UEAAHXZ
	DQ	FLAT:?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetParamMap@ClassDesc2@@UEAAPEAVIParamMap2@@H@Z
	DQ	FLAT:?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
	DQ	FLAT:?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z
	DQ	FLAT:?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z
	DQ	FLAT:?NumInterfaces@ClassDesc@@UEAAHXZ
	DQ	FLAT:?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
	DQ	FLAT:?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@PEB_W@Z
	DQ	FLAT:?GetInterface@ClassDesc@@UEAAPEAVFPInterface@@VInterface_ID@@@Z
	DQ	FLAT:?AddInterface@ClassDesc@@UEAAXPEAVFPInterface@@@Z
	DQ	FLAT:?ClearInterfaces@ClassDesc@@UEAAXXZ
	DQ	FLAT:?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?Execute@ClassDesc@@UEAA_JH_K00@Z
	DQ	FLAT:?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z
CONST	ENDS
;	COMDAT ??_7BerconTile@@6B@
CONST	SEGMENT
??_7BerconTile@@6B@ DQ FLAT:??_R4BerconTile@@6B@	; BerconTile::`vftable'
	DQ	FLAT:?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
	DQ	FLAT:?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
	DQ	FLAT:?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?GetInterface@BerconTile@@WJA@EAAPEAXK@Z
CONST	ENDS
;	COMDAT ??_7BerconTile@@6BISubMap@@@
CONST	SEGMENT
??_7BerconTile@@6BISubMap@@@ DQ FLAT:??_R4BerconTile@@6BISubMap@@@ ; BerconTile::`vftable'
	DQ	FLAT:??_EBerconTile@@WEA@EAAPEAXI@Z
	DQ	FLAT:?NumSubTexmaps@BerconTile@@UEAAHXZ
	DQ	FLAT:?GetSubTexmap@BerconTile@@UEAAPEAVTexmap@@H@Z
	DQ	FLAT:?MapSlotType@Texmap@@UEAAHH@Z
	DQ	FLAT:?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z
	DQ	FLAT:?SubTexmapOn@ISubMap@@UEAAHH@Z
	DQ	FLAT:?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
	DQ	FLAT:?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z
	DQ	FLAT:?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ
CONST	ENDS
;	COMDAT ??_7BerconTile@@6BReferenceTarget@@@
CONST	SEGMENT
??_7BerconTile@@6BReferenceTarget@@@ DQ FLAT:??_R4BerconTile@@6BReferenceTarget@@@ ; BerconTile::`vftable'
	DQ	FLAT:??_EBerconTile@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?DeleteThis@BerconTile@@UEAAXXZ
	DQ	FLAT:?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z
	DQ	FLAT:?SuperClassID@BerconTile@@UEAAKXZ
	DQ	FLAT:?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:?FreeCaches@Animatable@@UEAAXXZ
	DQ	FLAT:?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
	DQ	FLAT:?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
	DQ	FLAT:?GetInterface@BerconTile@@UEAAPEAXK@Z
	DQ	FLAT:?ReleaseInterface@Animatable@@UEAAXKPEAX@Z
	DQ	FLAT:?SetProperty@MtlBase@@UEAAHKPEAX@Z
	DQ	FLAT:?GetProperty@MtlBase@@UEAAPEAXK@Z
	DQ	FLAT:?NumSubs@BerconTile@@UEAAHXZ
	DQ	FLAT:?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z
	DQ	FLAT:?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
	DQ	FLAT:?BypassTreeView@Animatable@@UEAAHXZ
	DQ	FLAT:?BypassTrackBar@Animatable@@UEAAHXZ
	DQ	FLAT:?BypassPropertyLevel@Animatable@@UEAAHXZ
	DQ	FLAT:?InvisibleProperty@Animatable@@UEAAHXZ
	DQ	FLAT:?AssignController@Animatable@@UEAAHPEAV1@H@Z
	DQ	FLAT:?CanAssignController@Animatable@@UEAAHH@Z
	DQ	FLAT:?CanDeleteSubAnim@Animatable@@UEAAHH@Z
	DQ	FLAT:?DeleteSubAnim@Animatable@@UEAAXH@Z
	DQ	FLAT:?GetSubAnimCurveColor@Animatable@@UEAAKH@Z
	DQ	FLAT:?SubNumToRefNum@BerconTile@@UEAAHH@Z
	DQ	FLAT:?CanCopyAnim@Animatable@@UEAAHXZ
	DQ	FLAT:?CanMakeUnique@Animatable@@UEAAHXZ
	DQ	FLAT:?NumChildren@Animatable@@UEAAHXZ
	DQ	FLAT:?ChildAnim@Animatable@@UEAAPEAV1@H@Z
	DQ	FLAT:?NodeName@Animatable@@UEAA?AVWStr@@XZ
	DQ	FLAT:?RenderBegin@Animatable@@UEAAHHK@Z
	DQ	FLAT:?RenderEnd@Animatable@@UEAAHH@Z
	DQ	FLAT:?EditTrack@Animatable@@UEAAXXZ
	DQ	FLAT:?NumKeys@Animatable@@UEAAHXZ
	DQ	FLAT:?GetKeyTime@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetKeyIndex@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z
	DQ	FLAT:?CopyKeysFromTime@Animatable@@UEAAXHHK@Z
	DQ	FLAT:?DeleteKeyAtTime@Animatable@@UEAAXH@Z
	DQ	FLAT:?IsKeyAtTime@Animatable@@UEAAHHK@Z
	DQ	FLAT:?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z
	DQ	FLAT:?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z
	DQ	FLAT:?GetTimeRange@Animatable@@UEAA?AVInterval@@K@Z
	DQ	FLAT:?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?DeleteTime@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?ReverseTime@Animatable@@UEAAXVInterval@@K@Z
	DQ	FLAT:?ScaleTime@Animatable@@UEAAXVInterval@@M@Z
	DQ	FLAT:?InsertTime@Animatable@@UEAAXHH@Z
	DQ	FLAT:?SupportTimeOperations@Animatable@@UEAAHXZ
	DQ	FLAT:?MapKeys@Animatable@@UEAAXPEAVTimeMap@@K@Z
	DQ	FLAT:?DeleteKeys@Animatable@@UEAAXK@Z
	DQ	FLAT:?DeleteKeyByIndex@Animatable@@UEAAXH@Z
	DQ	FLAT:?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z
	DQ	FLAT:?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z
	DQ	FLAT:?SelectSubCurve@Animatable@@UEAAXHH@Z
	DQ	FLAT:?SelectKeyByIndex@Animatable@@UEAAXHH@Z
	DQ	FLAT:?IsKeySelected@Animatable@@UEAAHH@Z
	DQ	FLAT:?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z
	DQ	FLAT:?GetFlagKeyIndex@Animatable@@UEAAHXZ
	DQ	FLAT:?NumSelKeys@Animatable@@UEAAHXZ
	DQ	FLAT:?CloneSelectedKeys@Animatable@@UEAAXH@Z
	DQ	FLAT:?AddNewKey@Animatable@@UEAAXHK@Z
	DQ	FLAT:?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z
	DQ	FLAT:?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z
	DQ	FLAT:?SelectCurve@Animatable@@UEAAXH@Z
	DQ	FLAT:?IsCurveSelected@Animatable@@UEAAHXZ
	DQ	FLAT:?IsSubCurveSelected@Animatable@@UEAAHH@Z
	DQ	FLAT:?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z
	DQ	FLAT:?SetSelKeyCoords@Animatable@@UEAAXHMK@Z
	DQ	FLAT:?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z
	DQ	FLAT:?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z
	DQ	FLAT:?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z
	DQ	FLAT:?SubAnimSetKeyBufferPresent@Animatable@@UEAAHH@Z
	DQ	FLAT:?SetKeyBufferPresent@Animatable@@UEAAHXZ
	DQ	FLAT:?SubAnimCommitSetKeyBuffer@Animatable@@UEAAXHH@Z
	DQ	FLAT:?CommitSetKeyBuffer@Animatable@@UEAAXH@Z
	DQ	FLAT:?SubAnimRevertSetKeyBuffer@Animatable@@UEAAXH@Z
	DQ	FLAT:?RevertSetKeyBuffer@Animatable@@UEAAXXZ
	DQ	FLAT:?IsAnimated@Animatable@@UEAAHXZ
	DQ	FLAT:?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z
	DQ	FLAT:?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z
	DQ	FLAT:?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z
	DQ	FLAT:?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z
	DQ	FLAT:?GetTrackVSpace@Animatable@@UEAAHH@Z
	DQ	FLAT:?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z
	DQ	FLAT:?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
	DQ	FLAT:?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
	DQ	FLAT:?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
	DQ	FLAT:?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z
	DQ	FLAT:?TrackParamsType@Animatable@@UEAAHXZ
	DQ	FLAT:?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z
	DQ	FLAT:?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z
	DQ	FLAT:?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z
	DQ	FLAT:?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z
	DQ	FLAT:?SelectSubAnim@Animatable@@UEAAHH@Z
	DQ	FLAT:?EnumAuxFiles@MtlBase@@UEAAXAEAVAssetEnumCallback@@K@Z
	DQ	FLAT:?FreeAllBitmaps@Animatable@@UEAAXXZ
	DQ	FLAT:?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z
	DQ	FLAT:?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
	DQ	FLAT:?IsRefMaker@ReferenceMaker@@UEAAHXZ
	DQ	FLAT:?MouseCycleCompleted@Animatable@@UEAAXH@Z
	DQ	FLAT:?MouseCycleStarted@Animatable@@UEAAXH@Z
	DQ	FLAT:?NumParamBlocks@BerconTile@@UEAAHXZ
	DQ	FLAT:?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z
	DQ	FLAT:?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z
	DQ	FLAT:?SvTraverseAnimGraph@Texmap@@UEAA?AVSvGraphNodeReference@@PEAVIGraphObjectManager@@PEAVAnimatable@@HK@Z
	DQ	FLAT:?SvCanInitiateLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvCanConcludeLink@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvGetName@MtlBase@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@_N@Z
	DQ	FLAT:?SvCanSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvSetName@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@AEBVWStr@@@Z
	DQ	FLAT:?SvCanRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvRemoveThis@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsSelected@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsHighlighted@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvHighlightColor@MtlBase@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetSwatchColor@Animatable@@UEAAKPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvIsInactive@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvLinkChild@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvHandleDoubleClick@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetMultiSelectCallback@MtlBase@@UEAAPEAVMultiSelectCallback@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvCanSelect@MtlBase@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvEditProperties@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetRefTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@1@Z
	DQ	FLAT:?SvCanDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvDetach@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@@Z
	DQ	FLAT:?SvGetRelTip@Animatable@@UEAA?AVWStr@@PEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvCanDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvDetachRel@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?SvHandleRelDoubleClick@Animatable@@UEAA_NPEAVIGraphObjectManager@@PEAVIGraphNode@@H1@Z
	DQ	FLAT:?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z
	DQ	FLAT:?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z
	DQ	FLAT:?DeleteAllRefsToMe@ReferenceTarget@@UEAA?AW4RefResult@@XZ
	DQ	FLAT:?CanTransferReference@ReferenceMaker@@UEAAHH@Z
	DQ	FLAT:?NumRefs@BerconTile@@UEAAHXZ
	DQ	FLAT:?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z
	DQ	FLAT:?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z
	DQ	FLAT:?Save@MtlBase@@UEAA?AW4IOResult@@PEAVISave@@@Z
	DQ	FLAT:?Load@MtlBase@@UEAA?AW4IOResult@@PEAVILoad@@@Z
	DQ	FLAT:?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z
	DQ	FLAT:?RescaleWorldUnits@ReferenceMaker@@UEAAXM@Z
	DQ	FLAT:?NotifyDependents@ReferenceTarget@@UEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAV1@W4NotifyDependentsOption@@@Z
	DQ	FLAT:?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z
	DQ	FLAT:?SaveEnum@ReferenceMaker@@UEAAXAEAVSaveEnumProc@@H@Z
	DQ	FLAT:?SpecifySaveReferences@ReferenceMaker@@UEAA_NAEAVReferenceSaveManager@@@Z
	DQ	FLAT:?DoEnumDependentsImpl@ReferenceTarget@@MEAAHPEAVDependentEnumProc@@@Z
	DQ	FLAT:?IsRefTarget@ReferenceTarget@@UEAAHXZ
	DQ	FLAT:?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
	DQ	FLAT:?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
	DQ	FLAT:?AutoDelete@ReferenceTarget@@UEAA?AW4RefResult@@XZ
	DQ	FLAT:?RefAdded@Texmap@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z
	DQ	FLAT:?RefDeleted@ReferenceTarget@@UEAAXXZ
	DQ	FLAT:?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ
	DQ	FLAT:?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DQ	FLAT:?BaseClone@MtlBase@@UEAAXPEAVReferenceTarget@@0AEAVRemapDir@@@Z
	DQ	FLAT:?NotifyForeground@ReferenceTarget@@UEAAXH@Z
	DQ	FLAT:?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z
	DQ	FLAT:?GetFullName@MtlBase@@UEAA?AVWStr@@XZ
	DQ	FLAT:?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z
	DQ	FLAT:?Requirements@MtlBase@@UEAAKH@Z
	DQ	FLAT:?LocalRequirements@BerconTile@@UEAAKH@Z
	DQ	FLAT:?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z
	DQ	FLAT:?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z
	DQ	FLAT:?IsMultiMtl@MtlBase@@UEAAHXZ
	DQ	FLAT:?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
	DQ	FLAT:?Reset@BerconTile@@UEAAXXZ
	DQ	FLAT:?Validity@BerconTile@@UEAA?AVInterval@@H@Z
	DQ	FLAT:?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DQ	FLAT:?GetPStamp@MtlBase@@UEAAPEAVPStamp@@H@Z
	DQ	FLAT:?CreatePStamp@MtlBase@@UEAAPEAVPStamp@@HH@Z
	DQ	FLAT:?DiscardPStamp@MtlBase@@UEAAXH@Z
	DQ	FLAT:?SupportTexDisplay@BerconTile@@UEAAHXZ
	DQ	FLAT:?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z
	DQ	FLAT:?ActivateTexDisplay@BerconTile@@UEAAXH@Z
	DQ	FLAT:?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ
	DQ	FLAT:?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z
	DQ	FLAT:?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z
	DQ	FLAT:?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DQ	FLAT:?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z
	DQ	FLAT:?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DQ	FLAT:?HandleOwnViewPerturb@Texmap@@UEAAHXZ
	DQ	FLAT:?GetVPDisplayDIB@Texmap@@UEAAPEAUtagBITMAPINFO@@HAEAVTexHandleMaker@@AEAVInterval@@HHH@Z
	DQ	FLAT:?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
	DQ	FLAT:?GetTextureTiling@Texmap@@UEAAHXZ
	DQ	FLAT:?GetUVWSource@Texmap@@UEAAHXZ
	DQ	FLAT:?GetMapChannel@Texmap@@UEAAHXZ
	DQ	FLAT:?InitSlotType@Texmap@@UEAAXH@Z
	DQ	FLAT:?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ
	DQ	FLAT:?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ
	DQ	FLAT:?SetOutputLevel@Texmap@@UEAAXHM@Z
	DQ	FLAT:?IsOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
	DQ	FLAT:?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
	DQ	FLAT:?LoadMapFiles@Texmap@@UEAAHH@Z
	DQ	FLAT:?RenderBitmap@Texmap@@UEAAXHPEAVBitmap@@MH@Z
	DQ	FLAT:?IsHighDynamicRange@Texmap@@UEBAHXZ
CONST	ENDS
;	COMDAT ??_C@_13PHJMHGG@?$AAL?$AA?$AA@
CONST	SEGMENT
??_C@_13PHJMHGG@?$AAL?$AA?$AA@ DB 'L', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7BerconXYZDlgProc@@6B@
CONST	SEGMENT
??_7BerconXYZDlgProc@@6B@ DQ FLAT:??_R4BerconXYZDlgProc@@6B@ ; BerconXYZDlgProc::`vftable'
	DQ	FLAT:??_EBerconXYZDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
	DQ	FLAT:?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
	DQ	FLAT:?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@ DB 'M', 00H
	DB	'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@ DB 'x', 00H
	DB	'y', 00H, 'z', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'n', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'x', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'z', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
CONST	SEGMENT
??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 't', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@
CONST	SEGMENT
??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@ DB 's', 00H, 'e', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'M', 00H
	DB	'a', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'O', 00H
	DB	'b', 00H, 'j', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@ DB 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'B', 00H, 'y', 00H, 'P', 00H
	DB	'a', 00H, 'r', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'o', 00H, 'f', 00H, 'f', 00H
	DB	's', 00H, 'e', 00H, 't', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 's', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'x', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'y', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
CONST	SEGMENT
??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'l', 00H, 'e', 00H, '_', 00H, 'z', 00H, '2', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
CONST	SEGMENT
??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'k', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
CONST	SEGMENT
??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@ DB 'x'
	DB	00H, 'y', 00H, 'z', 00H, '_', 00H, 'f', 00H, 'i', 00H, 'l', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7XYZ_Desc@@6B@
CONST	SEGMENT
??_7XYZ_Desc@@6B@ DQ FLAT:??_R4XYZ_Desc@@6B@		; XYZ_Desc::`vftable'
	DQ	FLAT:??_EXYZ_Desc@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?NumInterfaces@BaseInterfaceServer@@UEBAHXZ
	DQ	FLAT:?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z
CONST	ENDS
;	COMDAT ??_7ResourceMakerCallback@@6B@
CONST	SEGMENT
??_7ResourceMakerCallback@@6B@ DQ FLAT:??_R4ResourceMakerCallback@@6B@ ; ResourceMakerCallback::`vftable'
	DQ	FLAT:?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
	DQ	FLAT:?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
	DQ	FLAT:?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
	DQ	FLAT:?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z
CONST	ENDS
;	COMDAT _CT??_R0?AVMaxHeapOperators@@@818
xdata$x	SEGMENT
_CT??_R0?AVMaxHeapOperators@@@818 DD 00H
	DD	imagerel ??_R0?AVMaxHeapOperators@@@8
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVMaxHeapOperators@@@8
data$r	SEGMENT
??_R0?AVMaxHeapOperators@@@8 DQ FLAT:??_7type_info@@6B@	; MaxHeapOperators `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVMaxHeapOperators@@', 00H
data$r	ENDS
;	COMDAT ??_7ParamMap2UserDlgProc@@6B@
CONST	SEGMENT
??_7ParamMap2UserDlgProc@@6B@ DQ FLAT:??_R4ParamMap2UserDlgProc@@6B@ ; ParamMap2UserDlgProc::`vftable'
	DQ	FLAT:??_EParamMap2UserDlgProc@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
	DQ	FLAT:?Update@ParamMap2UserDlgProc@@UEAAXH@Z
	DQ	FLAT:?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
CONST	ENDS
;	COMDAT ??_R0?AVClassDesc2@@@8
data$r	SEGMENT
??_R0?AVClassDesc2@@@8 DQ FLAT:??_7type_info@@6B@	; ClassDesc2 `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVClassDesc2@@', 00H
data$r	ENDS
;	COMDAT ??_7ShadeContext@@6B@
CONST	SEGMENT
??_7ShadeContext@@6B@ DQ FLAT:??_R4ShadeContext@@6B@	; ShadeContext::`vftable'
	DQ	FLAT:??_EShadeContext@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ
	DQ	FLAT:_purecall
	DQ	FLAT:?Antialias@ShadeContext@@UEAAHXZ
	DQ	FLAT:?ProjType@ShadeContext@@UEAAHXZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?NodeID@ShadeContext@@UEAAHXZ
	DQ	FLAT:?Node@ShadeContext@@UEAAPEAVINode@@XZ
	DQ	FLAT:?GetEvalObject@ShadeContext@@UEAAPEAVObject@@XZ
	DQ	FLAT:?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SetNormal@ShadeContext@@UEAAXVPoint3@@@Z
	DQ	FLAT:?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ
	DQ	FLAT:_purecall
	DQ	FLAT:?Curve@ShadeContext@@UEAAMXZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SetIOR@ShadeContext@@UEAAXM@Z
	DQ	FLAT:?GetIOR@ShadeContext@@UEAAMXZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?DP@ShadeContext@@UEAAXAEAVPoint3@@0@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?BumpBasisVectors@ShadeContext@@UEAAHQEAVPoint3@@HH@Z
	DQ	FLAT:?IsSuperSampleOn@ShadeContext@@UEAAHXZ
	DQ	FLAT:?IsTextureSuperSampleOn@ShadeContext@@UEAAHXZ
	DQ	FLAT:?GetNSuperSample@ShadeContext@@UEAAHXZ
	DQ	FLAT:?GetSampleSizeScale@ShadeContext@@UEAAMXZ
	DQ	FLAT:?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z
	DQ	FLAT:?RayDiam@ShadeContext@@UEAAMXZ
	DQ	FLAT:?RayConeAngle@ShadeContext@@UEAAMXZ
	DQ	FLAT:?EvalEnvironMap@ShadeContext@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z
	DQ	FLAT:_purecall
	DQ	FLAT:?CamNearRange@ShadeContext@@UEAAMXZ
	DQ	FLAT:?CamFarRange@ShadeContext@@UEAAMXZ
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?VectorToNoScale@ShadeContext@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?VectorFromNoScale@ShadeContext@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
	DQ	FLAT:?SetGBufferID@ShadeContext@@UEAAXH@Z
	DQ	FLAT:?DebugFile@ShadeContext@@UEAAPEAU_iobuf@@XZ
	DQ	FLAT:?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z
	DQ	FLAT:?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z
	DQ	FLAT:?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAM@Z
	DQ	FLAT:?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVAColor@@@Z
	DQ	FLAT:?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z
	DQ	FLAT:?PutCache@ShadeContext@@UEAAXPEAVTexmap@@M@Z
	DQ	FLAT:?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVAColor@@@Z
	DQ	FLAT:?TossCache@ShadeContext@@UEAAXPEAVTexmap@@@Z
	DQ	FLAT:?Execute@ShadeContext@@UEAA_JH_K00@Z
	DQ	FLAT:?NRenderElements@ShadeContext@@UEAAHXZ
	DQ	FLAT:?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z
	DQ	FLAT:?DiffuseIllum@ShadeContext@@UEAA?AVColor@@XZ
CONST	ENDS
;	COMDAT ??_7ShadeOutput@@6B@
CONST	SEGMENT
??_7ShadeOutput@@6B@ DQ FLAT:??_R4ShadeOutput@@6B@	; ShadeOutput::`vftable'
	DQ	FLAT:??_EShadeOutput@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?NumInterfaces@BaseInterfaceServer@@UEBAHXZ
	DQ	FLAT:?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z
CONST	ENDS
;	COMDAT ??_7BaseInterfaceServer@@6B@
CONST	SEGMENT
??_7BaseInterfaceServer@@6B@ DQ FLAT:??_R4BaseInterfaceServer@@6B@ ; BaseInterfaceServer::`vftable'
	DQ	FLAT:??_EBaseInterfaceServer@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@BaseInterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	DQ	FLAT:?NumInterfaces@BaseInterfaceServer@@UEBAHXZ
	DQ	FLAT:?GetInterfaceAt@BaseInterfaceServer@@UEBAPEAVBaseInterface@@H@Z
CONST	ENDS
;	COMDAT ??_7InterfaceServer@@6B@
CONST	SEGMENT
??_7InterfaceServer@@6B@ DQ FLAT:??_R4InterfaceServer@@6B@ ; InterfaceServer::`vftable'
	DQ	FLAT:??_EInterfaceServer@@UEAAPEAXI@Z
	DQ	FLAT:?GetInterface@InterfaceServer@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
CONST	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, '_'
	DB	00H, 'S', 00H, 'z', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
CONST	SEGMENT
??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ DB '_'
	DB	'Count <= (size_t)(-1) / _Sz', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@ DB '_Ptr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@
CONST	SEGMENT
??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@ DB 'M'
	DB	00H, 'a', 00H, 'x', 00H, 'S', 00H, 'D', 00H, 'K', 00H, ':', 00H
	DB	':', 00H, 'U', 00H, 't', 00H, 'i', 00H, 'l', 00H, ':', 00H, ':'
	DB	00H, 'T', 00H, 'a', 00H, 'b', 00H, 'O', 00H, 'u', 00H, 't', 00H
	DB	'O', 00H, 'f', 00H, 'R', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, 'e', 00H, 'p', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_7TabOutOfRangeException@Util@MaxSDK@@6B@
CONST	SEGMENT
??_7TabOutOfRangeException@Util@MaxSDK@@6B@ DQ FLAT:??_R4TabOutOfRangeException@Util@MaxSDK@@6B@ ; MaxSDK::Util::TabOutOfRangeException::`vftable'
	DQ	FLAT:??_ETabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
	DQ	FLAT:?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 011611H
	DD	0620dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 011611H
	DD	0620dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 011611H
	DD	0620dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Ewhite@@YAXXZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eblack@@YAXXZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconTileDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconTileDlgProc@@UEAA@XZ DD imagerel ??1BerconTileDlgProc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconTileDlgProc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconTileDlgProc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconTileDlgProc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconTileDlgProc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconTileDlgProc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconTileDlgProc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconTileDlgProc@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 022c19H
	DD	01d011aH
	DD	imagerel __GSHandlerCheck
	DD	0d0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z DD imagerel ??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z+34
	DD	00H
	DD	imagerel ??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconMap_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconMap_param_blk@@YAXXZ DD 020701H
	DD	03f0107H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconTile_param_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconTile_param_blk@@YAXXZ DD 041001H
	DD	02870110H
	DD	060027003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fxyz_blk@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Exyz_blk@@YAXXZ DD 010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__FBerconTileDesc@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EBerconTileDesc@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconSC@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconSC@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconSC@@UEAA@XZ DD imagerel ??1BerconSC@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconSC@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconSC@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconSC@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconSC@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconSC@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconSC@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NRenderElements@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Execute@BerconSC@@UEAA_JH_K00@Z DD 011701H
	DD	06217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z DD 011401H
	DD	04214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetGBufferID@BerconSC@@UEAAXH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CamFarRange@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CamNearRange@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z DD 011801H
	DD	0a218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RayConeAngle@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RayDiam@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSampleSizeScale@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNSuperSample@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsSuperSampleOn@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UVW@BerconSC@@UEAA?AVPoint3@@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DPObj@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PObj@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0a20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DP@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?P@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0a20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CamPos@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetIOR@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetIOR@BerconSC@@UEAAXM@Z DD 010f01H
	DD	0420fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z DD 011401H
	DD	04214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OrigView@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetView@BerconSC@@UEAAXVPoint3@@@Z DD 010e01H
	DD	0a20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?V@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Curve@BerconSC@@UEAAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GNormal@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetNormal@BerconSC@@UEAAXVPoint3@@@Z DD 010e01H
	DD	0a20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Normal@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?FaceNumber@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Node@BerconSC@@UEAAPEAVINode@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NodeID@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CurTime@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ProjType@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Antialias@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?InMtlEditor@BerconSC@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setUV2@BerconSC@@QEAAXVPoint3@@H@Z DD 021101H
	DD	060107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setUV1@BerconSC@@QEAAXVPoint3@@H@Z DD 021101H
	DD	060107011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconSC@@QEAA@QEAVShadeContext@@@Z DD imagerel ??0BerconSC@@QEAA@QEAVShadeContext@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconSC@@QEAA@QEAVShadeContext@@@Z+36
	DD	00H
	DD	imagerel ??0BerconSC@@QEAA@QEAVShadeContext@@@Z+396
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconSC@@QEAA@QEAVShadeContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconSC@@QEAA@QEAVShadeContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconSC@@QEAA@QEAVShadeContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconSC@@QEAA@QEAVShadeContext@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconSC@@QEAA@QEAVShadeContext@@@Z DD 031911H
	DD	0700c6210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconSC@@QEAA@QEAVShadeContext@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconTileClassDesc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Create@BerconTileClassDesc@@UEAAPEAXH@Z DD imagerel ?Create@BerconTileClassDesc@@UEAAPEAXH@Z
	DD	0ffffffffH
	DD	imagerel ?Create@BerconTileClassDesc@@UEAAPEAXH@Z+38
	DD	00H
	DD	imagerel ?Create@BerconTileClassDesc@@UEAAPEAXH@Z+97
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Create@BerconTileClassDesc@@UEAAPEAXH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Create@BerconTileClassDesc@@UEAAPEAXH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Create@BerconTileClassDesc@@UEAAPEAXH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Create@BerconTileClassDesc@@UEAAPEAXH@Z
	DD	038H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Create@BerconTileClassDesc@@UEAAPEAXH@Z DD 011611H
	DD	0820dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Create@BerconTileClassDesc@@UEAAPEAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconTileClassDesc@@UEAA@XZ DD imagerel ??1BerconTileClassDesc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconTileClassDesc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconTileClassDesc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconTileClassDesc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconTileClassDesc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconTileClassDesc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconTileClassDesc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconTileClassDesc@@QEAA@XZ DD imagerel ??0BerconTileClassDesc@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BerconTileClassDesc@@QEAA@XZ+30
	DD	00H
	DD	imagerel ??0BerconTileClassDesc@@QEAA@XZ+45
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconTileClassDesc@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconTileClassDesc@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconTileClassDesc@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconTileClassDesc@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconTileClassDesc@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconTileClassDesc@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconTile@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconTile@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@BerconTile@@UEAAPEAXK@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconTile@@UEAA@XZ DD imagerel ??1BerconTile@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1BerconTile@@UEAA@XZ+68
	DD	01H
	DD	imagerel ??1BerconTile@@UEAA@XZ+79
	DD	00H
	DD	imagerel ??1BerconTile@@UEAA@XZ+99
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconTile@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconTile@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1BerconTile@@UEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??1BerconTile@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconTile@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconTile@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconTile@@QEAA@XZ DD imagerel ??0BerconTile@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BerconTile@@QEAA@XZ+30
	DD	00H
	DD	imagerel ??0BerconTile@@QEAA@XZ+138
	DD	01H
	DD	imagerel ??0BerconTile@@QEAA@XZ+407
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconTile@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconTile@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0BerconTile@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0BerconTile@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconTile@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconTile@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconTile@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z DD 011201H
	DD	02212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z DD imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+106
	DD	00H
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+127
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+152
	DD	00H
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+173
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+198
	DD	00H
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+216
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+241
	DD	00H
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+259
	DD	0ffffffffH
	DD	imagerel ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z+290
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
	DD	00H
	DD	00H
	DD	0aH
	DD	imagerel $ip2state$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD imagerel ?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	0ffffffffH
	DD	imagerel ?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z+39
	DD	00H
	DD	imagerel ?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z+98
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
	DD	050H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z DD 011711H
	DD	0c20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD imagerel ?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DD	0ffffffffH
	DD	imagerel ?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z+1877
	DD	00H
	DD	imagerel ?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z+2378
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DD	098H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z DD 043619H
	DD	0db0118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
	DD	06caH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD imagerel ?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DD	0ffffffffH
	DD	imagerel ?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z+857
	DD	00H
	DD	imagerel ?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z+1243
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z DD 043319H
	DD	0a90118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
	DD	0532H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z DD imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+77
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+79
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+104
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+125
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+150
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+171
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+196
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+217
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+242
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+263
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+288
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+306
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+331
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+349
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+374
	DD	00H
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+392
	DD	0ffffffffH
	DD	imagerel ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z+411
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
	DD	00H
	DD	00H
	DD	012H
	DD	imagerel $ip2state$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z DD 011201H
	DD	04212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?LocalRequirements@BerconTile@@UEAAKH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Validity@BerconTile@@UEAA?AVInterval@@H@Z DD 012219H
	DD	06213H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Reset@BerconTile@@UEAAXXZ DD 020c01H
	DD	017010cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z DD imagerel ?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
	DD	0ffffffffH
	DD	imagerel ?Update@BerconTile@@UEAAXHAEAVInterval@@@Z+6056
	DD	00H
	DD	imagerel ?Update@BerconTile@@UEAAXHAEAVInterval@@@Z+6070
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
	DD	02f8H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z DD 023319H
	DD	0690115H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
	DD	0332H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD imagerel ?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+171
	DD	00H
	DD	imagerel ?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+238
	DD	0ffffffffH
	DD	imagerel ?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+271
	DD	01H
	DD	imagerel ?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z+338
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
	DD	060H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z DD 011c11H
	DD	0e213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z DD 011201H
	DD	0a212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ActivateTexDisplay@BerconTile@@UEAAXH@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DiscardTexHandle@BerconTile@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z DD 011801H
	DD	0a218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z DD 011801H
	DD	0a218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnableStuff@BerconTile@@QEAAXH@Z DD 021001H
	DD	0110110H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z DD 042a19H
	DD	01b0118H
	DD	060107011H
	DD	imagerel __GSHandlerCheck
	DD	0c0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z DD 012619H
	DD	0e217H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@TileParam@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?checkValues@TileParam@@QEAAXXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?update@TilePattern@@QEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel ??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel ??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ DD imagerel ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ+68
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	06209H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	0c209H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ+48
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TilePattern@@QEAA@XZ DD imagerel ??1TilePattern@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1TilePattern@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1TilePattern@@QEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TilePattern@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1TilePattern@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1TilePattern@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1TilePattern@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TilePattern@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1TilePattern@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TilePattern@@QEAA@XZ DD imagerel ??0TilePattern@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0TilePattern@@QEAA@XZ+36
	DD	00H
	DD	imagerel ??0TilePattern@@QEAA@XZ+54
	DD	01H
	DD	imagerel ??0TilePattern@@QEAA@XZ+65
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TilePattern@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TilePattern@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0TilePattern@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0TilePattern@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TilePattern@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TilePattern@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GTileRow@@QEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1TileRow@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TileRow@@QEAA@XZ DD imagerel ??1TileRow@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TileRow@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1TileRow@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1TileRow@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1TileRow@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1TileRow@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TileRow@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1TileRow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?update@TileRow@@QEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD imagerel ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ+68
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	06209H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	0c209H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+48
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD 011201H
	DD	08212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z+322
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z+369
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+24
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+66
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+68
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+40
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	0aH
	DD	imagerel $ip2state$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 022e19H
	DD	0110116H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	07bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ+34
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z+34
	DD	00H
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z+65
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	06209H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	0c209H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+48
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+47
	DD	01H
	DD	imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+73
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?isRealworld@BerconXYZ@@QEAAHXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconXYZ@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBerconXYZDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1BerconXYZDlgProc@@UEAA@XZ DD imagerel ??1BerconXYZDlgProc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1BerconXYZDlgProc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1BerconXYZDlgProc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1BerconXYZDlgProc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1BerconXYZDlgProc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1BerconXYZDlgProc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1BerconXYZDlgProc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DeleteThis@BerconXYZDlgProc@@UEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z DD 022c19H
	DD	015011aH
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	0ffffffffH
	DD	imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z+34
	DD	00H
	DD	imagerel ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GXYZ_Desc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1XYZ_Desc@@UEAA@XZ DD imagerel ??1XYZ_Desc@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1XYZ_Desc@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1XYZ_Desc@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1XYZ_Desc@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1XYZ_Desc@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1XYZ_Desc@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1XYZ_Desc@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	0ffffffffH
	DD	imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z+5698
	DD	00H
	DD	imagerel ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z+5716
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
	DD	0e70H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z DD 022711H
	DD	01d1011bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Eintvalid@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GParamMap2UserDlgProc@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkTriObjNormalXTCID@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1Texmap@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Texmap@@UEAA@XZ DD imagerel ??1Texmap@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1Texmap@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1Texmap@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1Texmap@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1Texmap@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1Texmap@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Texmap@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1Texmap@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GShadeContext@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ShadeContext@@UEAA@XZ DD imagerel ??1ShadeContext@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1ShadeContext@@UEAA@XZ+18
	DD	00H
	DD	imagerel ??1ShadeContext@@UEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ShadeContext@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ShadeContext@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1ShadeContext@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1ShadeContext@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ShadeContext@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ShadeContext@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ShadeContext@@QEAA@XZ DD imagerel ??0ShadeContext@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0ShadeContext@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0ShadeContext@@QEAA@XZ+79
	DD	01H
	DD	imagerel ??0ShadeContext@@QEAA@XZ+153
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ShadeContext@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ShadeContext@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0ShadeContext@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0ShadeContext@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ShadeContext@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ShadeContext@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NRenderElements@ShadeContext@@UEAAHXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RayDiam@ShadeContext@@UEAAMXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GShadeOutput@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ShadeOutput@@UEAA@XZ DD imagerel ??1ShadeOutput@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1ShadeOutput@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1ShadeOutput@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1ShadeOutput@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1ShadeOutput@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ShadeOutput@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1ShadeOutput@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z DD 031001H
	DD	0700c2210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ShadeOutput@@QEAA@XZ DD imagerel ??0ShadeOutput@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0ShadeOutput@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0ShadeOutput@@QEAA@XZ+150
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ShadeOutput@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0ShadeOutput@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0ShadeOutput@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0ShadeOutput@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ShadeOutput@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0ShadeOutput@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NRenderElements@RenderGlobalContext@@QEAAHXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotifyForeground@ReferenceTarget@@UEAAXH@Z DD 010d01H
	DD	0a20dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BypassTrackBar@Animatable@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_4Interval@@QEAAAEAV0@V0@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Interval@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVAColor@@MAEBV0@@Z DD 011401H
	DD	08214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??HAColor@@QEBA?AV0@AEBV0@@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?BitMask@BitArray@@AEBA_KH@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UseLocalBits@BitArray@@AEBA_NXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Set@BitArray@@QEAAXH@Z DD 010d01H
	DD	0620dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ClearInterfaces@ClassDesc@@UEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NumInterfaces@ClassDesc@@UEAAHXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD 020701H
	DD	060067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBaseInterfaceServer@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0BaseInterfaceServer@@QEAA@XZ DD imagerel ??0BaseInterfaceServer@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0BaseInterfaceServer@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0BaseInterfaceServer@@QEAA@XZ+62
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0BaseInterfaceServer@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0BaseInterfaceServer@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0BaseInterfaceServer@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0BaseInterfaceServer@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0BaseInterfaceServer@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0BaseInterfaceServer@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ DD imagerel ??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GInterfaceServer@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVPoint3@@AEBV0@M@Z DD 011401H
	DD	06214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D@YA?AVPoint3@@MAEBV0@@Z DD 011401H
	DD	06214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ+61
	DD	00H
	DD	imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ+144
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 012119H
	DD	08209H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Container_base12@std@@QEAA@XZ DD imagerel ??1_Container_base12@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Container_base12@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Container_base12@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Container_base12@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Container_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$char_traits@_W@std@@SA_KPEB_W@Z DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	0ffffffffH
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z+40
	DD	00H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z+55
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD imagerel ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z+40
	DD	00H
	DD	imagerel ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z+55
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8Class_ID@@QEBA_NAEBV0@@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemmove DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 011801H
	DD	06218H
xdata	ENDS
CRT$XCU	SEGMENT
?kTriObjNormalXTCID$initializer$@@3P6AXXZEA DQ FLAT:??__EkTriObjNormalXTCID@@YAXXZ ; kTriObjNormalXTCID$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?intvalid$initializer$@@3P6AXXZEA DQ FLAT:??__Eintvalid@@YAXXZ ; intvalid$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconTileDesc$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconTileDesc@@YAXXZ ; BerconTileDesc$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?xyz_blk$initializer$@@3P6AXXZEA DQ FLAT:??__Exyz_blk@@YAXXZ ; xyz_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconTile_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconTile_param_blk@@YAXXZ ; BerconTile_param_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BerconMap_param_blk$initializer$@@3P6AXXZEA DQ FLAT:??__EBerconMap_param_blk@@YAXXZ ; BerconMap_param_blk$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?black$initializer$@@3P6AXXZEA DQ FLAT:??__Eblack@@YAXXZ ; black$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?white$initializer$@@3P6AXXZEA DQ FLAT:??__Ewhite@@YAXXZ ; white$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ?GetInterface@BerconTile@@WJA@EAAPEAXK@Z
_TEXT	SEGMENT
?GetInterface@BerconTile@@WJA@EAAPEAXK@Z PROC		; [thunk]:BerconTile::GetInterface`adjustor{144}', COMDAT
	sub	rcx, 144				; 00000090H
	jmp	?GetInterface@BerconTile@@UEAAPEAXK@Z	; BerconTile::GetInterface
?GetInterface@BerconTile@@WJA@EAAPEAXK@Z ENDP		; [thunk]:BerconTile::GetInterface`adjustor{144}'
_TEXT	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_EBerconTile@@WEA@EAAPEAXI@Z
_TEXT	SEGMENT
??_EBerconTile@@WEA@EAAPEAXI@Z PROC			; [thunk]:BerconTile::`vector deleting destructor', COMDAT
	sub	rcx, 64					; 00000040H
	jmp	??_EBerconTile@@UEAAPEAXI@Z
??_EBerconTile@@WEA@EAAPEAXI@Z ENDP			; [thunk]:BerconTile::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z PROC ; std::allocator<TileRow>::destroy<TileRow>, COMDAT

; 743  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 744  : 		_Ptr->~_Uty();

	xor	edx, edx
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??_GTileRow@@QEAAPEAXI@Z

; 745  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z ENDP ; std::allocator<TileRow>::destroy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z PROC ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z ; std::allocator<TileRow>::destroy<TileRow>

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z ENDP ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * __ptr64 & __ptr64>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv73[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv73[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z PROC ; std::_Unfancy<TileRow>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ENDP ; std::_Unfancy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
_TEXT	SEGMENT
$T1 = 32
tv74 = 40
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv74[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT

; 743  : 		{	// destroy object at _Ptr

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z PROC ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>, COMDAT

; 743  : 		{	// destroy object at _Ptr

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	ret	0
??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ENDP ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * __ptr64 & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z PROC	; std::forward<wchar_t * __ptr64 & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ENDP	; std::forward<wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT

; 709  : 		{	// construct from a related allocator (do nothing)

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 710  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
__formal$ = 24
__formal$ = 32
??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>, COMDAT

; 1107 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1108 : 		// nothing to do
; 1109 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>, COMDAT

; 709  : 		{	// construct from a related allocator (do nothing)

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 710  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
__formal$ = 72
??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>, COMDAT

; 1099 : 	{	// destroy [_First, _Last), no special optimization

$LN6:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1100 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Destroy_ra

; 1101 : 		_Al.destroy(_Unfancy(_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>
	jmp	SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1102 : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0VTileRow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VTileRow@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0VTileRow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VTileRow@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><TileRow>, COMDAT

; 709  : 		{	// construct from a related allocator (do nothing)

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 710  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0VTileRow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VTileRow@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z
_TEXT	SEGMENT
_Val$ = 48
?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 280  : 		return (_STD addressof(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>

; 281  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * __ptr64 & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
_First$ = 64
_Last$ = 72
_Al$ = 80
??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<float>,float * __ptr64>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	r9d, BYTE PTR $T1[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<float>,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
_First$ = 64
_Last$ = 72
_Al$ = 80
??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	r9d, BYTE PTR $T1[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0VTileRow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@VTileRow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><TileRow>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT

; 925  : 		{	// return address of mutable _Val

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to

; 927  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 16
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 16
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z
_TEXT	SEGMENT
_Test$ = 48
_Ptr$ = 56
_File$ = 64
_Line$ = 72
??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z PROC	; std::_Debug_pointer_if<wchar_t const >, COMDAT

; 937  : 	{	// conditionally test pointer for non-singularity, pointers

$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	BYTE PTR [rsp+8], cl
	sub	rsp, 40					; 00000028H

; 938  : 	if (_Test && _Ptr == 0)

	movzx	eax, BYTE PTR _Test$[rsp]
	test	eax, eax
	je	SHORT $LN2@Debug_poin
	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN2@Debug_poin

; 939  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	r8d, DWORD PTR _Line$[rsp]
	mov	rdx, QWORD PTR _File$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z
$LN2@Debug_poin:

; 940  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z ENDP	; std::_Debug_pointer_if<wchar_t const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z
_TEXT	SEGMENT
_Ptr$ = 48
_File$ = 56
_Line$ = 64
??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z PROC		; std::_Debug_pointer<wchar_t const >, COMDAT

; 923  : 	{	// test pointer for non-singularity, pointers

$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 924  : 	if (_Ptr == 0)

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN2@Debug_poin

; 925  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	r8d, DWORD PTR _Line$[rsp]
	mov	rdx, QWORD PTR _File$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z
$LN2@Debug_poin:

; 926  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z PROC	; std::addressof<wchar_t * __ptr64>, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ENDP	; std::addressof<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	npad	1

; 281  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	npad	1

; 281  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<TileRow> >::_Wrap_alloc<std::allocator<TileRow> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >
	npad	1

; 281  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??__Ewhite@@YAXXZ
text$di	SEGMENT
??__Ewhite@@YAXXZ PROC					; `dynamic initializer for 'white'', COMDAT

; 829  : static AColor white(1.0f,1.0f,1.0f,1.0f);

	sub	rsp, 56					; 00000038H
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, OFFSET FLAT:?white@@3VAColor@@A
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	add	rsp, 56					; 00000038H
	ret	0
??__Ewhite@@YAXXZ ENDP					; `dynamic initializer for 'white''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??__Eblack@@YAXXZ
text$di	SEGMENT
??__Eblack@@YAXXZ PROC					; `dynamic initializer for 'black'', COMDAT

; 828  : static AColor black(0.0f,0.0f,0.0f,1.0f);

	sub	rsp, 56					; 00000038H
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rsp+32], xmm0
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, OFFSET FLAT:?black@@3VAColor@@A
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	add	rsp, 56					; 00000038H
	ret	0
??__Eblack@@YAXXZ ENDP					; `dynamic initializer for 'black''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconTileDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconTileDlgProc@@UEAAPEAXI@Z PROC			; BerconTileDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconTileDlgProc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconTileDlgProc@@UEAAPEAXI@Z ENDP			; BerconTileDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z PROC	; BerconTileDlgProc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z ENDP	; BerconTileDlgProc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconTileDlgProc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconTileDlgProc@@UEAA@XZ PROC			; BerconTileDlgProc::~BerconTileDlgProc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconTileDlgProc@@UEAA@XZ ENDP			; BerconTileDlgProc::~BerconTileDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA PROC	; `BerconTileDlgProc::~BerconTileDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA ENDP	; `BerconTileDlgProc::~BerconTileDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA PROC	; `BerconTileDlgProc::~BerconTileDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconTileDlgProc@@UEAA@XZ@4HA ENDP	; `BerconTileDlgProc::~BerconTileDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
tv73 = 32
this$ = 64
m$ = 72
?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconTileDlgProc::SetThing, COMDAT

; 347  : 		void SetThing(ReferenceTarget *m) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 348  : 			tile = (BerconTile*)m;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 349  : 			tile->EnableStuff(GetCOREInterface()->GetTime());

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv73[rsp], rax
	mov	rax, QWORD PTR tv73[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv73[rsp]
	call	QWORD PTR [rax+1448]
	mov	edx, eax
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	?EnableStuff@BerconTile@@QEAAXH@Z	; BerconTile::EnableStuff

; 350  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?SetThing@BerconTileDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconTileDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?DeleteThis@BerconTileDlgProc@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconTileDlgProc@@UEAAXXZ PROC		; BerconTileDlgProc::DeleteThis, COMDAT

; 346  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconTileDlgProc@@UEAAXXZ ENDP		; BerconTileDlgProc::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwndMap$1 = 48
custButton$2 = 56
tv64 = 64
tv290 = 72
tv311 = 80
tv332 = 88
tv353 = 96
tv374 = 104
tv395 = 112
tv416 = 120
tv437 = 128
tv300 = 136
tv321 = 144
tv342 = 152
tv363 = 160
tv384 = 168
tv405 = 176
tv426 = 184
tv447 = 192
curIndex$3 = 200
curIndex$4 = 204
__$ArrayPad$ = 208
this$ = 240
t$ = 248
map$ = 256
hWnd$ = 264
msg$ = 272
wParam$ = 280
lParam$ = 288
?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconTileDlgProc::DlgProc, COMDAT

; 353  : INT_PTR BerconTileDlgProc::DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM lParam)	{	

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 232				; 000000e8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 354  : 	switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 24
	je	$LN5@DlgProc
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN4@DlgProc
	jmp	$LN6@DlgProc
$LN4@DlgProc:

; 355  : 		case WM_INITDIALOG:	{			
; 356  : 			// Lock buttons			
; 357  : 			ICustButton* custButton = GetICustButton(GetDlgItem(hWnd, IDC_LOCKEDGE));

	mov	edx, 1056				; 00000420H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	call	QWORD PTR __imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z
	mov	QWORD PTR custButton$2[rsp], rax

; 358  : 			custButton->SetText(_T("L"));

	mov	rax, QWORD PTR custButton$2[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:$SG219625
	mov	rcx, QWORD PTR custButton$2[rsp]
	call	QWORD PTR [rax+88]

; 359  : 			ReleaseICustButton(custButton);

	mov	rcx, QWORD PTR custButton$2[rsp]
	call	QWORD PTR __imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z

; 360  : 			custButton = GetICustButton(GetDlgItem(hWnd, IDC_LOCK));

	mov	edx, 1115				; 0000045bH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	call	QWORD PTR __imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z
	mov	QWORD PTR custButton$2[rsp], rax

; 361  : 			custButton->SetText(_T("L"));

	mov	rax, QWORD PTR custButton$2[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:$SG219626
	mov	rcx, QWORD PTR custButton$2[rsp]
	call	QWORD PTR [rax+88]

; 362  : 			ReleaseICustButton(custButton); 

	mov	rcx, QWORD PTR custButton$2[rsp]
	call	QWORD PTR __imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z

; 363  : 
; 364  : 			// Style
; 365  : 			HWND hwndMap = GetDlgItem(hWnd, IDC_TYPE);  

	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 366  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_11)); // Custom

	mov	ecx, 233				; 000000e9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 367  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_10)); // Herringbone

	mov	ecx, 232				; 000000e8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 368  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_9)); // Stack

	mov	ecx, 142				; 0000008eH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 369  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_0)); // Stretcher			

	mov	ecx, 53					; 00000035H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 370  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_1)); // Flemish Stretcher

	mov	ecx, 54					; 00000036H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 371  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_2)); // Common

	mov	ecx, 55					; 00000037H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 372  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_3)); // Flemish

	mov	ecx, 56					; 00000038H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 373  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_4)); // Monk

	mov	ecx, 57					; 00000039H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 374  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_5)); // Flemish Garden Wall

	mov	ecx, 58					; 0000003aH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 375  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_6)); // English

	mov	ecx, 59					; 0000003bH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 376  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_7)); // English Cross

	mov	ecx, 60					; 0000003cH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 377  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILETYPE_8)); // Double

	mov	ecx, 61					; 0000003dH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 378  : 
; 379  : 			// Soften
; 380  : 			hwndMap = GetDlgItem(hWnd, IDC_SOFTEN);  

	mov	edx, 1019				; 000003fbH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 381  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILESOFTEN_0));

	mov	ecx, 62					; 0000003eH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 382  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILESOFTEN_1));

	mov	ecx, 63					; 0000003fH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 383  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILESOFTEN_2));

	mov	ecx, 64					; 00000040H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 384  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILESOFTEN_3));

	mov	ecx, 65					; 00000041H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 385  : 
; 386  : 			// UV rotation
; 387  : 			hwndMap = GetDlgItem(hWnd, IDC_ROTUV);  

	mov	edx, 1037				; 0000040dH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 388  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEROT_0));

	mov	ecx, 68					; 00000044H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 389  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEROT_1));

	mov	ecx, 69					; 00000045H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 390  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEROT_2));

	mov	ecx, 70					; 00000046H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 391  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEROT_3));	

	mov	ecx, 71					; 00000047H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 392  : 
; 393  : 			// Auto scale
; 394  : 			hwndMap = GetDlgItem(hWnd, IDC_AUTO);  

	mov	edx, 1039				; 0000040fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$1[rsp], rax

; 395  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEUVW_0));

	mov	ecx, 115				; 00000073H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 396  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEUVW_1));

	mov	ecx, 116				; 00000074H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 397  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEUVW_2));

	mov	ecx, 228				; 000000e4H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 398  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEUVW_3));

	mov	ecx, 229				; 000000e5H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 399  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEUVW_4));

	mov	ecx, 230				; 000000e6H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 400  : 			SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_TILEUVW_5));

	mov	ecx, 231				; 000000e7H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$1[rsp]
	call	QWORD PTR __imp_SendMessageW

; 401  : 
; 402  : 			// Set correct dropdown value			
; 403  : 			int curIndex;
; 404  : 			map->GetParamBlock()->GetValue(tile_style, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv290[rsp], rax
	mov	rax, QWORD PTR tv290[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv290[rsp]
	call	QWORD PTR [rax+1704]

; 405  : 			SendMessage(GetDlgItem(hWnd, IDC_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv300[rsp], rax
	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv300[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 406  : 			map->GetParamBlock()->GetValue(soften, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv311[rsp], rax
	mov	rax, QWORD PTR tv311[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	mov	rcx, QWORD PTR tv311[rsp]
	call	QWORD PTR [rax+1704]

; 407  : 			SendMessage(GetDlgItem(hWnd, IDC_SOFTEN), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv321[rsp], rax
	mov	edx, 1019				; 000003fbH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv321[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 408  : 			map->GetParamBlock()->GetValue(pb_rotUV, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv332[rsp], rax
	mov	rax, QWORD PTR tv332[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rcx, QWORD PTR tv332[rsp]
	call	QWORD PTR [rax+1704]

; 409  : 			SendMessage(GetDlgItem(hWnd, IDC_ROTUV), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv342[rsp], rax
	mov	edx, 1037				; 0000040dH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv342[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 410  : 			map->GetParamBlock()->GetValue(pb_auto, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv353[rsp], rax
	mov	rax, QWORD PTR tv353[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$3[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 44					; 0000002cH
	mov	rcx, QWORD PTR tv353[rsp]
	call	QWORD PTR [rax+1704]

; 411  : 			SendMessage(GetDlgItem(hWnd, IDC_AUTO), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$3[rsp]
	mov	QWORD PTR tv363[rsp], rax
	mov	edx, 1039				; 0000040fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv363[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 412  : 			break;

	jmp	$LN2@DlgProc
$LN5@DlgProc:

; 413  : 		}		
; 414  : 		case WM_SHOWWINDOW:	{					
; 415  : 			// Set correct dropdown value
; 416  : 			int curIndex;
; 417  : 			map->GetParamBlock()->GetValue(tile_style, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv374[rsp], rax
	mov	rax, QWORD PTR tv374[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$4[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv374[rsp]
	call	QWORD PTR [rax+1704]

; 418  : 			SendMessage(GetDlgItem(hWnd, IDC_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$4[rsp]
	mov	QWORD PTR tv384[rsp], rax
	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv384[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 419  : 			map->GetParamBlock()->GetValue(soften, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv395[rsp], rax
	mov	rax, QWORD PTR tv395[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$4[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	mov	rcx, QWORD PTR tv395[rsp]
	call	QWORD PTR [rax+1704]

; 420  : 			SendMessage(GetDlgItem(hWnd, IDC_SOFTEN), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$4[rsp]
	mov	QWORD PTR tv405[rsp], rax
	mov	edx, 1019				; 000003fbH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv405[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 421  : 			map->GetParamBlock()->GetValue(pb_rotUV, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv416[rsp], rax
	mov	rax, QWORD PTR tv416[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$4[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rcx, QWORD PTR tv416[rsp]
	call	QWORD PTR [rax+1704]

; 422  : 			SendMessage(GetDlgItem(hWnd, IDC_ROTUV), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$4[rsp]
	mov	QWORD PTR tv426[rsp], rax
	mov	edx, 1037				; 0000040dH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv426[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 423  : 			map->GetParamBlock()->GetValue(pb_auto, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv437[rsp], rax
	mov	rax, QWORD PTR tv437[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$4[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 44					; 0000002cH
	mov	rcx, QWORD PTR tv437[rsp]
	call	QWORD PTR [rax+1704]

; 424  : 			SendMessage(GetDlgItem(hWnd, IDC_AUTO), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$4[rsp]
	mov	QWORD PTR tv447[rsp], rax
	mov	edx, 1039				; 0000040fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv447[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 425  : 			break;

	jmp	SHORT $LN2@DlgProc
$LN6@DlgProc:

; 426  : 		}
; 427  : 		default: return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@DlgProc
$LN2@DlgProc:

; 428  : 	}
; 429  : 	return TRUE;

	mov	eax, 1
$LN1@DlgProc:

; 430  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 232				; 000000e8H
	ret	0
?DlgProc@BerconTileDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconTileDlgProc::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z PROC	; BerconTileDlgProc::BerconTileDlgProc, COMDAT

; 344  : 		BerconTileDlgProc(BerconTile *m) {tile = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTileDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z ENDP	; BerconTileDlgProc::BerconTileDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA PROC ; `BerconTileDlgProc::BerconTileDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA ENDP ; `BerconTileDlgProc::BerconTileDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA PROC ; `BerconTileDlgProc::BerconTileDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z@4HA ENDP ; `BerconTileDlgProc::BerconTileDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconMap_param_blk@@YAXXZ
text$yd	SEGMENT
??__FBerconMap_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconMap_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconMap_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconMap_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??__EBerconMap_param_blk@@YAXXZ
text$di	SEGMENT
??__EBerconMap_param_blk@@YAXXZ PROC			; `dynamic initializer for 'BerconMap_param_blk'', COMDAT

; 338  : );

	sub	rsp, 504				; 000001f8H

; 330  : static ParamBlockDesc2 BerconMap_param_blk ( BerconMap_params, _T("params"),  0, &BerconTileDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	mov	DWORD PTR [rsp+480], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+472], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+464], 1641		; 00000669H
	mov	DWORD PTR [rsp+456], 2
	mov	DWORD PTR [rsp+448], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+440], 1
	mov	DWORD PTR [rsp+432], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+424], 90			; 0000005aH
	mov	QWORD PTR [rsp+416], 0
	mov	DWORD PTR [rsp+408], 4
	lea	rax, OFFSET FLAT:$SG219519
	mov	QWORD PTR [rsp+400], rax
	mov	DWORD PTR [rsp+392], 3
	mov	DWORD PTR [rsp+384], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+376], 1034		; 0000040aH
	mov	DWORD PTR [rsp+368], 8
	mov	DWORD PTR [rsp+360], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+352], 6
	mov	DWORD PTR [rsp+344], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+336], 8
	mov	DWORD PTR [rsp+328], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+320], 74			; 0000004aH
	mov	DWORD PTR [rsp+312], 512		; 00000200H
	mov	DWORD PTR [rsp+304], 15
	lea	rax, OFFSET FLAT:$SG219520
	mov	QWORD PTR [rsp+296], rax
	mov	DWORD PTR [rsp+288], 1
	mov	DWORD PTR [rsp+280], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+272], 1640		; 00000668H
	mov	DWORD PTR [rsp+264], 2
	mov	DWORD PTR [rsp+256], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+248], 1
	mov	DWORD PTR [rsp+240], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+232], 89			; 00000059H
	mov	QWORD PTR [rsp+224], 0
	mov	DWORD PTR [rsp+216], 4
	lea	rax, OFFSET FLAT:$SG219521
	mov	QWORD PTR [rsp+208], rax
	mov	DWORD PTR [rsp+200], 2
	mov	DWORD PTR [rsp+192], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+184], 1033		; 00000409H
	mov	DWORD PTR [rsp+176], 8
	mov	DWORD PTR [rsp+168], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+160], 5
	mov	DWORD PTR [rsp+152], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+144], 7
	mov	DWORD PTR [rsp+136], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+128], 73			; 00000049H
	mov	DWORD PTR [rsp+120], 512		; 00000200H
	mov	DWORD PTR [rsp+112], 15
	lea	rax, OFFSET FLAT:$SG219522
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	DWORD PTR [rsp+80], 1
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 72			; 00000048H
	mov	DWORD PTR [rsp+56], 107			; 0000006bH
	mov	DWORD PTR [rsp+48], 10
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG219523
	mov	edx, 2
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__FBerconMap_param_blk@@YAXXZ ; `dynamic atexit destructor for 'BerconMap_param_blk''
	call	atexit
	add	rsp, 504				; 000001f8H
	ret	0
??__EBerconMap_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'BerconMap_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconTile_param_blk@@YAXXZ
text$yd	SEGMENT
??__FBerconTile_param_blk@@YAXXZ PROC			; `dynamic atexit destructor for 'BerconTile_param_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconTile_param_blk@@YAXXZ ENDP			; `dynamic atexit destructor for 'BerconTile_param_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??__EBerconTile_param_blk@@YAXXZ
text$di	SEGMENT
$T1 = 5072
$T2 = 5088
$T3 = 5104
$T4 = 5120
$T5 = 5132
$T6 = 5144
??__EBerconTile_param_blk@@YAXXZ PROC			; `dynamic initializer for 'BerconTile_param_blk'', COMDAT

; 323  : );

	push	rsi
	push	rdi
	mov	eax, 5176				; 00001438H
	call	__chkstk
	sub	rsp, rax

; 89   : static ParamBlockDesc2 BerconTile_param_blk ( BerconTile_params, _T("params"),  0, &BerconTileDesc, 

	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
	movss	xmm3, DWORD PTR __real@3f000000
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	lea	rcx, QWORD PTR $T1[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	lea	rcx, QWORD PTR $T2[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T6[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	lea	rcx, QWORD PTR $T3[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	mov	DWORD PTR [rsp+5056], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+5048], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+5040], 1059		; 00000423H
	mov	DWORD PTR [rsp+5032], 5
	mov	DWORD PTR [rsp+5024], -1073741821	; ffffffffc0000003H
	lea	rax, OFFSET FLAT:$SG219458
	mov	QWORD PTR [rsp+5016], rax
	mov	DWORD PTR [rsp+5008], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+5000], 251		; 000000fbH
	mov	QWORD PTR [rsp+4992], 0
	mov	DWORD PTR [rsp+4984], 8
	lea	rax, OFFSET FLAT:$SG219459
	mov	QWORD PTR [rsp+4976], rax
	mov	DWORD PTR [rsp+4968], 43		; 0000002bH
	mov	DWORD PTR [rsp+4960], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4952], 9
	mov	DWORD PTR [rsp+4944], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+4936], 8
	mov	DWORD PTR [rsp+4928], 512		; 00000200H
	mov	DWORD PTR [rsp+4920], 18
	lea	rax, OFFSET FLAT:$SG219460
	mov	QWORD PTR [rsp+4912], rax
	mov	DWORD PTR [rsp+4904], 42		; 0000002aH
	mov	DWORD PTR [rsp+4896], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4888], 1643		; 0000066bH
	mov	DWORD PTR [rsp+4880], 2
	mov	DWORD PTR [rsp+4872], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+4864], 0
	mov	DWORD PTR [rsp+4856], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4848], 39		; 00000027H
	mov	QWORD PTR [rsp+4840], 0
	mov	DWORD PTR [rsp+4832], 4
	lea	rax, OFFSET FLAT:$SG219461
	mov	QWORD PTR [rsp+4824], rax
	mov	DWORD PTR [rsp+4816], 30
	mov	DWORD PTR [rsp+4808], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+4800], xmm0
	mov	DWORD PTR [rsp+4792], 1064		; 00000428H
	mov	DWORD PTR [rsp+4784], 1063		; 00000427H
	mov	DWORD PTR [rsp+4776], 1
	mov	QWORD PTR [rsp+4768], 0
	mov	DWORD PTR [rsp+4760], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@408f400000000000
	movsd	QWORD PTR [rsp+4752], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+4744], xmm0
	mov	DWORD PTR [rsp+4736], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3fb99999a0000000
	movsd	QWORD PTR [rsp+4728], xmm0
	mov	DWORD PTR [rsp+4720], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4712], 12
	mov	DWORD PTR [rsp+4704], 1
	mov	QWORD PTR [rsp+4696], 0
	lea	rax, OFFSET FLAT:$SG219462
	mov	QWORD PTR [rsp+4688], rax
	mov	DWORD PTR [rsp+4680], 31
	mov	DWORD PTR [rsp+4672], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4664], 1055		; 0000041fH
	mov	DWORD PTR [rsp+4656], 8
	mov	DWORD PTR [rsp+4648], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4640], 4
	mov	DWORD PTR [rsp+4632], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+4624], 6
	mov	DWORD PTR [rsp+4616], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+4608], 38		; 00000026H
	mov	DWORD PTR [rsp+4600], 512		; 00000200H
	mov	DWORD PTR [rsp+4592], 15
	lea	rax, OFFSET FLAT:$SG219463
	mov	QWORD PTR [rsp+4584], rax
	mov	DWORD PTR [rsp+4576], 29
	mov	DWORD PTR [rsp+4568], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4560], 1053		; 0000041dH
	mov	DWORD PTR [rsp+4552], 8
	mov	DWORD PTR [rsp+4544], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4536], 3
	mov	DWORD PTR [rsp+4528], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+4520], 5
	mov	DWORD PTR [rsp+4512], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+4504], 13
	mov	DWORD PTR [rsp+4496], 512		; 00000200H
	mov	DWORD PTR [rsp+4488], 15
	lea	rax, OFFSET FLAT:$SG219464
	mov	QWORD PTR [rsp+4480], rax
	mov	DWORD PTR [rsp+4472], 28
	mov	DWORD PTR [rsp+4464], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+4456], xmm0
	mov	DWORD PTR [rsp+4448], 1076		; 00000434H
	mov	DWORD PTR [rsp+4440], 1075		; 00000433H
	mov	DWORD PTR [rsp+4432], 3
	mov	QWORD PTR [rsp+4424], 0
	mov	DWORD PTR [rsp+4416], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4408], 99		; 00000063H
	mov	DWORD PTR [rsp+4400], 1
	mov	DWORD PTR [rsp+4392], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+4384], 1
	mov	DWORD PTR [rsp+4376], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4368], 240		; 000000f0H
	mov	DWORD PTR [rsp+4360], 1
	mov	DWORD PTR [rsp+4352], 1
	lea	rax, OFFSET FLAT:$SG219465
	mov	QWORD PTR [rsp+4344], rax
	mov	DWORD PTR [rsp+4336], 26
	mov	DWORD PTR [rsp+4328], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4320], 1649		; 00000671H
	mov	DWORD PTR [rsp+4312], 2
	mov	DWORD PTR [rsp+4304], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4296], 1
	mov	DWORD PTR [rsp+4288], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4280], 249		; 000000f9H
	mov	QWORD PTR [rsp+4272], 0
	mov	DWORD PTR [rsp+4264], 4
	lea	rax, OFFSET FLAT:$SG219466
	mov	QWORD PTR [rsp+4256], rax
	mov	DWORD PTR [rsp+4248], 25
	mov	DWORD PTR [rsp+4240], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4232], 1653		; 00000675H
	mov	DWORD PTR [rsp+4224], 2
	mov	DWORD PTR [rsp+4216], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4208], 1
	mov	DWORD PTR [rsp+4200], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4192], 248		; 000000f8H
	mov	QWORD PTR [rsp+4184], 0
	mov	DWORD PTR [rsp+4176], 4
	lea	rax, OFFSET FLAT:$SG219467
	mov	QWORD PTR [rsp+4168], rax
	mov	DWORD PTR [rsp+4160], 24
	mov	DWORD PTR [rsp+4152], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4144], 1651		; 00000673H
	mov	DWORD PTR [rsp+4136], 2
	mov	DWORD PTR [rsp+4128], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4120], 1
	mov	DWORD PTR [rsp+4112], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4104], 247		; 000000f7H
	mov	QWORD PTR [rsp+4096], 0
	mov	DWORD PTR [rsp+4088], 4
	lea	rax, OFFSET FLAT:$SG219468
	mov	QWORD PTR [rsp+4080], rax
	mov	DWORD PTR [rsp+4072], 23
	mov	DWORD PTR [rsp+4064], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+4056], 1078		; 00000436H
	mov	DWORD PTR [rsp+4048], 2
	mov	DWORD PTR [rsp+4040], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+4032], 1
	mov	DWORD PTR [rsp+4024], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+4016], 246		; 000000f6H
	mov	QWORD PTR [rsp+4008], 0
	mov	DWORD PTR [rsp+4000], 4
	lea	rax, OFFSET FLAT:$SG219469
	mov	QWORD PTR [rsp+3992], rax
	mov	DWORD PTR [rsp+3984], 22
	mov	DWORD PTR [rsp+3976], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3968], xmm0
	mov	DWORD PTR [rsp+3960], 1106		; 00000452H
	mov	DWORD PTR [rsp+3952], 1105		; 00000451H
	mov	DWORD PTR [rsp+3944], 1
	mov	QWORD PTR [rsp+3936], 0
	mov	DWORD PTR [rsp+3928], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4066800000000000
	movsd	QWORD PTR [rsp+3920], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3912], xmm0
	mov	DWORD PTR [rsp+3904], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3896], xmm0
	mov	DWORD PTR [rsp+3888], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3880], 245		; 000000f5H
	mov	DWORD PTR [rsp+3872], 1
	mov	QWORD PTR [rsp+3864], 0
	lea	rax, OFFSET FLAT:$SG219470
	mov	QWORD PTR [rsp+3856], rax
	mov	DWORD PTR [rsp+3848], 21
	mov	DWORD PTR [rsp+3840], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+3832], 0
	mov	DWORD PTR [rsp+3824], 1037		; 0000040dH
	mov	DWORD PTR [rsp+3816], 13
	mov	DWORD PTR [rsp+3808], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3800], 2
	mov	DWORD PTR [rsp+3792], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3784], 137		; 00000089H
	mov	QWORD PTR [rsp+3776], 0
	mov	DWORD PTR [rsp+3768], 1
	lea	rax, OFFSET FLAT:$SG219471
	mov	QWORD PTR [rsp+3760], rax
	mov	DWORD PTR [rsp+3752], 20
	mov	DWORD PTR [rsp+3744], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3736], 1115		; 0000045bH
	mov	DWORD PTR [rsp+3728], 6
	mov	DWORD PTR [rsp+3720], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3712], 1
	mov	DWORD PTR [rsp+3704], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3696], 250		; 000000faH
	mov	QWORD PTR [rsp+3688], 0
	mov	DWORD PTR [rsp+3680], 4
	lea	rax, OFFSET FLAT:$SG219472
	mov	QWORD PTR [rsp+3672], rax
	mov	DWORD PTR [rsp+3664], 27
	mov	DWORD PTR [rsp+3656], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3648], xmm0
	mov	DWORD PTR [rsp+3640], 1104		; 00000450H
	mov	DWORD PTR [rsp+3632], 1103		; 0000044fH
	mov	DWORD PTR [rsp+3624], 1
	mov	QWORD PTR [rsp+3616], 0
	mov	DWORD PTR [rsp+3608], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3600], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3592], xmm0
	mov	DWORD PTR [rsp+3584], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3576], xmm0
	mov	DWORD PTR [rsp+3568], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3560], 244		; 000000f4H
	mov	DWORD PTR [rsp+3552], 1
	mov	QWORD PTR [rsp+3544], 0
	lea	rax, OFFSET FLAT:$SG219473
	mov	QWORD PTR [rsp+3536], rax
	mov	DWORD PTR [rsp+3528], 19
	mov	DWORD PTR [rsp+3520], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3512], xmm0
	mov	DWORD PTR [rsp+3504], 1097		; 00000449H
	mov	DWORD PTR [rsp+3496], 1096		; 00000448H
	mov	DWORD PTR [rsp+3488], 1
	mov	QWORD PTR [rsp+3480], 0
	mov	DWORD PTR [rsp+3472], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3464], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3456], xmm0
	mov	DWORD PTR [rsp+3448], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3440], xmm0
	mov	DWORD PTR [rsp+3432], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3424], 243		; 000000f3H
	mov	DWORD PTR [rsp+3416], 1
	mov	QWORD PTR [rsp+3408], 0
	lea	rax, OFFSET FLAT:$SG219474
	mov	QWORD PTR [rsp+3400], rax
	mov	DWORD PTR [rsp+3392], 18
	mov	DWORD PTR [rsp+3384], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3376], xmm0
	mov	DWORD PTR [rsp+3368], 1102		; 0000044eH
	mov	DWORD PTR [rsp+3360], 1101		; 0000044dH
	mov	DWORD PTR [rsp+3352], 1
	mov	QWORD PTR [rsp+3344], 0
	mov	DWORD PTR [rsp+3336], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3328], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3320], xmm0
	mov	DWORD PTR [rsp+3312], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3304], xmm0
	mov	DWORD PTR [rsp+3296], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3288], 242		; 000000f2H
	mov	DWORD PTR [rsp+3280], 1
	mov	QWORD PTR [rsp+3272], 0
	lea	rax, OFFSET FLAT:$SG219475
	mov	QWORD PTR [rsp+3264], rax
	mov	DWORD PTR [rsp+3256], 17
	mov	DWORD PTR [rsp+3248], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3240], xmm0
	mov	DWORD PTR [rsp+3232], 1095		; 00000447H
	mov	DWORD PTR [rsp+3224], 1094		; 00000446H
	mov	DWORD PTR [rsp+3216], 1
	mov	QWORD PTR [rsp+3208], 0
	mov	DWORD PTR [rsp+3200], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3192], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3184], xmm0
	mov	DWORD PTR [rsp+3176], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3168], xmm0
	mov	DWORD PTR [rsp+3160], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3152], 241		; 000000f1H
	mov	DWORD PTR [rsp+3144], 1
	mov	QWORD PTR [rsp+3136], 0
	lea	rax, OFFSET FLAT:$SG219476
	mov	QWORD PTR [rsp+3128], rax
	mov	DWORD PTR [rsp+3120], 16
	mov	DWORD PTR [rsp+3112], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3104], xmm0
	mov	DWORD PTR [rsp+3096], 1074		; 00000432H
	mov	DWORD PTR [rsp+3088], 1073		; 00000431H
	mov	DWORD PTR [rsp+3080], 3
	mov	QWORD PTR [rsp+3072], 0
	mov	DWORD PTR [rsp+3064], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3056], 99		; 00000063H
	mov	DWORD PTR [rsp+3048], 1
	mov	DWORD PTR [rsp+3040], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+3032], 1
	mov	DWORD PTR [rsp+3024], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+3016], 239		; 000000efH
	mov	DWORD PTR [rsp+3008], 1
	mov	DWORD PTR [rsp+3000], 1
	lea	rax, OFFSET FLAT:$SG219477
	mov	QWORD PTR [rsp+2992], rax
	mov	DWORD PTR [rsp+2984], 15
	mov	DWORD PTR [rsp+2976], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2968], 1648		; 00000670H
	mov	DWORD PTR [rsp+2960], 2
	mov	DWORD PTR [rsp+2952], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2944], 1
	mov	DWORD PTR [rsp+2936], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2928], 136		; 00000088H
	mov	QWORD PTR [rsp+2920], 0
	mov	DWORD PTR [rsp+2912], 4
	lea	rax, OFFSET FLAT:$SG219478
	mov	QWORD PTR [rsp+2904], rax
	mov	DWORD PTR [rsp+2896], 14
	mov	DWORD PTR [rsp+2888], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2880], 0
	mov	DWORD PTR [rsp+2872], 1039		; 0000040fH
	mov	DWORD PTR [rsp+2864], 13
	mov	DWORD PTR [rsp+2856], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2848], 5
	mov	DWORD PTR [rsp+2840], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2832], 238		; 000000eeH
	mov	QWORD PTR [rsp+2824], 0
	mov	DWORD PTR [rsp+2816], 1
	lea	rax, OFFSET FLAT:$SG219479
	mov	QWORD PTR [rsp+2808], rax
	mov	DWORD PTR [rsp+2800], 44		; 0000002cH
	mov	DWORD PTR [rsp+2792], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2784], xmm0
	mov	DWORD PTR [rsp+2776], 1072		; 00000430H
	mov	DWORD PTR [rsp+2768], 1071		; 0000042fH
	mov	DWORD PTR [rsp+2760], 1
	mov	QWORD PTR [rsp+2752], 0
	mov	DWORD PTR [rsp+2744], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2736], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2728], xmm0
	mov	DWORD PTR [rsp+2720], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3fd3333340000000
	movsd	QWORD PTR [rsp+2712], xmm0
	mov	DWORD PTR [rsp+2704], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2696], 134		; 00000086H
	mov	DWORD PTR [rsp+2688], 1
	mov	QWORD PTR [rsp+2680], 0
	lea	rax, OFFSET FLAT:$SG219480
	mov	QWORD PTR [rsp+2672], rax
	mov	DWORD PTR [rsp+2664], 13
	mov	DWORD PTR [rsp+2656], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2648], 1647		; 0000066fH
	mov	DWORD PTR [rsp+2640], 2
	mov	DWORD PTR [rsp+2632], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2624], 1
	mov	DWORD PTR [rsp+2616], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2608], 133		; 00000085H
	mov	QWORD PTR [rsp+2600], 0
	mov	DWORD PTR [rsp+2592], 4
	lea	rax, OFFSET FLAT:$SG219481
	mov	QWORD PTR [rsp+2584], rax
	mov	DWORD PTR [rsp+2576], 12
	mov	DWORD PTR [rsp+2568], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2560], xmm0
	mov	DWORD PTR [rsp+2552], 1070		; 0000042eH
	mov	DWORD PTR [rsp+2544], 1069		; 0000042dH
	mov	DWORD PTR [rsp+2536], 1
	mov	QWORD PTR [rsp+2528], 0
	mov	DWORD PTR [rsp+2520], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2512], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2504], xmm0
	mov	DWORD PTR [rsp+2496], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3fb99999a0000000
	movsd	QWORD PTR [rsp+2488], xmm0
	mov	DWORD PTR [rsp+2480], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2472], 132		; 00000084H
	mov	DWORD PTR [rsp+2464], 1
	mov	QWORD PTR [rsp+2456], 0
	lea	rax, OFFSET FLAT:$SG219482
	mov	QWORD PTR [rsp+2448], rax
	mov	DWORD PTR [rsp+2440], 11
	mov	DWORD PTR [rsp+2432], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+2424], 0
	mov	DWORD PTR [rsp+2416], 1019		; 000003fbH
	mov	DWORD PTR [rsp+2408], 13
	mov	DWORD PTR [rsp+2400], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2392], 2
	mov	DWORD PTR [rsp+2384], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2376], 131		; 00000083H
	mov	QWORD PTR [rsp+2368], 0
	mov	DWORD PTR [rsp+2360], 1
	lea	rax, OFFSET FLAT:$SG219483
	mov	QWORD PTR [rsp+2352], rax
	mov	DWORD PTR [rsp+2344], 10
	mov	DWORD PTR [rsp+2336], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2328], xmm0
	mov	DWORD PTR [rsp+2320], 1042		; 00000412H
	mov	DWORD PTR [rsp+2312], 1041		; 00000411H
	mov	DWORD PTR [rsp+2304], 1
	mov	QWORD PTR [rsp+2296], 0
	mov	DWORD PTR [rsp+2288], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2280], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2272], xmm0
	mov	DWORD PTR [rsp+2264], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2256], xmm0
	mov	DWORD PTR [rsp+2248], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2240], 237		; 000000edH
	mov	DWORD PTR [rsp+2232], 1
	mov	QWORD PTR [rsp+2224], 0
	lea	rax, OFFSET FLAT:$SG219484
	mov	QWORD PTR [rsp+2216], rax
	mov	DWORD PTR [rsp+2208], 9
	mov	DWORD PTR [rsp+2200], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2192], xmm0
	mov	DWORD PTR [rsp+2184], 1045		; 00000415H
	mov	DWORD PTR [rsp+2176], 1040		; 00000410H
	mov	DWORD PTR [rsp+2168], 1
	mov	QWORD PTR [rsp+2160], 0
	mov	DWORD PTR [rsp+2152], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2144], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2136], xmm0
	mov	DWORD PTR [rsp+2128], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2120], xmm0
	mov	DWORD PTR [rsp+2112], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2104], 236		; 000000ecH
	mov	DWORD PTR [rsp+2096], 1
	mov	QWORD PTR [rsp+2088], 0
	lea	rax, OFFSET FLAT:$SG219485
	mov	QWORD PTR [rsp+2080], rax
	mov	DWORD PTR [rsp+2072], 8
	mov	DWORD PTR [rsp+2064], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2056], xmm0
	mov	DWORD PTR [rsp+2048], 1044		; 00000414H
	mov	DWORD PTR [rsp+2040], 1038		; 0000040eH
	mov	DWORD PTR [rsp+2032], 1
	mov	QWORD PTR [rsp+2024], 0
	mov	DWORD PTR [rsp+2016], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+2008], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2000], xmm0
	mov	DWORD PTR [rsp+1992], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1984], xmm0
	mov	DWORD PTR [rsp+1976], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1968], 235		; 000000ebH
	mov	DWORD PTR [rsp+1960], 1
	mov	QWORD PTR [rsp+1952], 0
	lea	rax, OFFSET FLAT:$SG219486
	mov	QWORD PTR [rsp+1944], rax
	mov	DWORD PTR [rsp+1936], 7
	mov	DWORD PTR [rsp+1928], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1920], xmm0
	mov	DWORD PTR [rsp+1912], 1043		; 00000413H
	mov	DWORD PTR [rsp+1904], 1036		; 0000040cH
	mov	DWORD PTR [rsp+1896], 1
	mov	QWORD PTR [rsp+1888], 0
	mov	DWORD PTR [rsp+1880], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@4059000000000000
	movsd	QWORD PTR [rsp+1872], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1864], xmm0
	mov	DWORD PTR [rsp+1856], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1848], xmm0
	mov	DWORD PTR [rsp+1840], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1832], 234		; 000000eaH
	mov	DWORD PTR [rsp+1824], 1
	mov	QWORD PTR [rsp+1816], 0
	lea	rax, OFFSET FLAT:$SG219487
	mov	QWORD PTR [rsp+1808], rax
	mov	DWORD PTR [rsp+1800], 6
	mov	DWORD PTR [rsp+1792], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1784], xmm0
	mov	DWORD PTR [rsp+1776], 1029		; 00000405H
	mov	DWORD PTR [rsp+1768], 1028		; 00000404H
	mov	DWORD PTR [rsp+1760], 1
	mov	QWORD PTR [rsp+1752], 0
	mov	DWORD PTR [rsp+1744], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1736], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1728], xmm0
	mov	DWORD PTR [rsp+1720], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3fb99999a0000000
	movsd	QWORD PTR [rsp+1712], xmm0
	mov	DWORD PTR [rsp+1704], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1696], 127		; 0000007fH
	mov	DWORD PTR [rsp+1688], 1
	mov	QWORD PTR [rsp+1680], 0
	lea	rax, OFFSET FLAT:$SG219488
	mov	QWORD PTR [rsp+1672], rax
	mov	DWORD PTR [rsp+1664], 5
	mov	DWORD PTR [rsp+1656], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1648], xmm0
	mov	DWORD PTR [rsp+1640], 1027		; 00000403H
	mov	DWORD PTR [rsp+1632], 1026		; 00000402H
	mov	DWORD PTR [rsp+1624], 1
	mov	QWORD PTR [rsp+1616], 0
	mov	DWORD PTR [rsp+1608], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1600], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1592], xmm0
	mov	DWORD PTR [rsp+1584], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3fb99999a0000000
	movsd	QWORD PTR [rsp+1576], xmm0
	mov	DWORD PTR [rsp+1568], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1560], 126		; 0000007eH
	mov	DWORD PTR [rsp+1552], 1
	mov	QWORD PTR [rsp+1544], 0
	lea	rax, OFFSET FLAT:$SG219489
	mov	QWORD PTR [rsp+1536], rax
	mov	DWORD PTR [rsp+1528], 4
	mov	DWORD PTR [rsp+1520], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1512], xmm0
	mov	DWORD PTR [rsp+1504], 1025		; 00000401H
	mov	DWORD PTR [rsp+1496], 1024		; 00000400H
	mov	DWORD PTR [rsp+1488], 1
	mov	QWORD PTR [rsp+1480], 0
	mov	DWORD PTR [rsp+1472], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1464], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1456], xmm0
	mov	DWORD PTR [rsp+1448], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@4000000000000000
	movsd	QWORD PTR [rsp+1440], xmm0
	mov	DWORD PTR [rsp+1432], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1424], 125		; 0000007dH
	mov	DWORD PTR [rsp+1416], 1
	mov	QWORD PTR [rsp+1408], 0
	lea	rax, OFFSET FLAT:$SG219490
	mov	QWORD PTR [rsp+1400], rax
	mov	DWORD PTR [rsp+1392], 3
	mov	DWORD PTR [rsp+1384], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1376], xmm0
	mov	DWORD PTR [rsp+1368], 1023		; 000003ffH
	mov	DWORD PTR [rsp+1360], 1021		; 000003fdH
	mov	DWORD PTR [rsp+1352], 1
	mov	QWORD PTR [rsp+1344], 0
	mov	DWORD PTR [rsp+1336], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1328], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1320], xmm0
	mov	DWORD PTR [rsp+1312], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@4010000000000000
	movsd	QWORD PTR [rsp+1304], xmm0
	mov	DWORD PTR [rsp+1296], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1288], 124		; 0000007cH
	mov	DWORD PTR [rsp+1280], 1
	mov	QWORD PTR [rsp+1272], 0
	lea	rax, OFFSET FLAT:$SG219491
	mov	QWORD PTR [rsp+1264], rax
	mov	DWORD PTR [rsp+1256], 2
	mov	DWORD PTR [rsp+1248], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1240], xmm0
	mov	DWORD PTR [rsp+1232], 1022		; 000003feH
	mov	DWORD PTR [rsp+1224], 1020		; 000003fcH
	mov	DWORD PTR [rsp+1216], 1
	mov	QWORD PTR [rsp+1208], 0
	mov	DWORD PTR [rsp+1200], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1192], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1184], xmm0
	mov	DWORD PTR [rsp+1176], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@4039000000000000
	movsd	QWORD PTR [rsp+1168], xmm0
	mov	DWORD PTR [rsp+1160], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1152], 122		; 0000007aH
	mov	DWORD PTR [rsp+1144], 1
	mov	QWORD PTR [rsp+1136], 0
	lea	rax, OFFSET FLAT:$SG219492
	mov	QWORD PTR [rsp+1128], rax
	mov	DWORD PTR [rsp+1120], 1
	mov	DWORD PTR [rsp+1112], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1104], 0
	mov	DWORD PTR [rsp+1096], 1018		; 000003faH
	mov	DWORD PTR [rsp+1088], 13
	mov	DWORD PTR [rsp+1080], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+1072], 0
	mov	DWORD PTR [rsp+1064], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1056], 123		; 0000007bH
	mov	QWORD PTR [rsp+1048], 0
	mov	DWORD PTR [rsp+1040], 1
	lea	rax, OFFSET FLAT:$SG219493
	mov	QWORD PTR [rsp+1032], rax
	mov	QWORD PTR [rsp+1024], 0
	mov	DWORD PTR [rsp+1016], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+1008], 1056		; 00000420H
	mov	DWORD PTR [rsp+1000], 6
	mov	DWORD PTR [rsp+992], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+984], 1
	mov	DWORD PTR [rsp+976], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+968], 135		; 00000087H
	mov	QWORD PTR [rsp+960], 0
	mov	DWORD PTR [rsp+952], 4
	lea	rax, OFFSET FLAT:$SG219494
	mov	QWORD PTR [rsp+944], rax
	mov	DWORD PTR [rsp+936], 32			; 00000020H
	mov	DWORD PTR [rsp+928], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+920], 1644		; 0000066cH
	mov	DWORD PTR [rsp+912], 2
	mov	DWORD PTR [rsp+904], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+896], 1
	mov	DWORD PTR [rsp+888], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+880], 43			; 0000002bH
	mov	QWORD PTR [rsp+872], 0
	mov	DWORD PTR [rsp+864], 4
	lea	rax, OFFSET FLAT:$SG219495
	mov	QWORD PTR [rsp+856], rax
	mov	DWORD PTR [rsp+848], 41			; 00000029H
	mov	DWORD PTR [rsp+840], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+832], 1641		; 00000669H
	mov	DWORD PTR [rsp+824], 2
	mov	DWORD PTR [rsp+816], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+808], 1
	mov	DWORD PTR [rsp+800], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+792], 1056		; 00000420H
	mov	QWORD PTR [rsp+784], 0
	mov	DWORD PTR [rsp+776], 4
	lea	rax, OFFSET FLAT:$SG219496
	mov	QWORD PTR [rsp+768], rax
	mov	DWORD PTR [rsp+760], 40			; 00000028H
	mov	DWORD PTR [rsp+752], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+744], 1640		; 00000668H
	mov	DWORD PTR [rsp+736], 2
	mov	DWORD PTR [rsp+728], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+720], 1
	mov	DWORD PTR [rsp+712], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+704], 1055		; 0000041fH
	mov	QWORD PTR [rsp+696], 0
	mov	DWORD PTR [rsp+688], 4
	lea	rax, OFFSET FLAT:$SG219497
	mov	QWORD PTR [rsp+680], rax
	mov	DWORD PTR [rsp+672], 39			; 00000027H
	mov	DWORD PTR [rsp+664], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+656], 1054		; 0000041eH
	mov	DWORD PTR [rsp+648], 8
	mov	DWORD PTR [rsp+640], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+632], 2
	mov	DWORD PTR [rsp+624], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+616], 4
	mov	DWORD PTR [rsp+608], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+600], 42			; 0000002aH
	mov	DWORD PTR [rsp+592], 512		; 00000200H
	mov	DWORD PTR [rsp+584], 15
	lea	rax, OFFSET FLAT:$SG219498
	mov	QWORD PTR [rsp+576], rax
	mov	DWORD PTR [rsp+568], 38			; 00000026H
	mov	DWORD PTR [rsp+560], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+552], 1052		; 0000041cH
	mov	DWORD PTR [rsp+544], 8
	mov	DWORD PTR [rsp+536], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+528], 1
	mov	DWORD PTR [rsp+520], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+512], 3
	mov	DWORD PTR [rsp+504], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+496], 1054		; 0000041eH
	mov	DWORD PTR [rsp+488], 512		; 00000200H
	mov	DWORD PTR [rsp+480], 15
	lea	rax, OFFSET FLAT:$SG219499
	mov	QWORD PTR [rsp+472], rax
	mov	DWORD PTR [rsp+464], 37			; 00000025H
	mov	DWORD PTR [rsp+456], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+448], 1051		; 0000041bH
	mov	DWORD PTR [rsp+440], 8
	mov	DWORD PTR [rsp+432], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+424], 0
	mov	DWORD PTR [rsp+416], -1073741816	; ffffffffc0000008H
	mov	DWORD PTR [rsp+408], 2
	mov	DWORD PTR [rsp+400], -1073741817	; ffffffffc0000007H
	mov	DWORD PTR [rsp+392], 1053		; 0000041dH
	mov	DWORD PTR [rsp+384], 512		; 00000200H
	mov	DWORD PTR [rsp+376], 15
	lea	rax, OFFSET FLAT:$SG219500
	mov	QWORD PTR [rsp+368], rax
	mov	DWORD PTR [rsp+360], 36			; 00000024H
	mov	DWORD PTR [rsp+352], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+344], 1049		; 00000419H
	mov	DWORD PTR [rsp+336], 4
	mov	DWORD PTR [rsp+328], -1073741821	; ffffffffc0000003H
	lea	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR [rsp+320], rax
	mov	DWORD PTR [rsp+312], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+304], 41			; 00000029H
	mov	DWORD PTR [rsp+296], 1
	mov	DWORD PTR [rsp+288], 2
	lea	rax, OFFSET FLAT:$SG219501
	mov	QWORD PTR [rsp+280], rax
	mov	DWORD PTR [rsp+272], 35			; 00000023H
	mov	DWORD PTR [rsp+264], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+256], 1048		; 00000418H
	mov	DWORD PTR [rsp+248], 4
	mov	DWORD PTR [rsp+240], -1073741821	; ffffffffc0000003H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR [rsp+232], rax
	mov	DWORD PTR [rsp+224], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+216], 1052		; 0000041cH
	mov	DWORD PTR [rsp+208], 1
	mov	DWORD PTR [rsp+200], 2
	lea	rax, OFFSET FLAT:$SG219502
	mov	QWORD PTR [rsp+192], rax
	mov	DWORD PTR [rsp+184], 34			; 00000022H
	mov	DWORD PTR [rsp+176], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+168], 1047		; 00000417H
	mov	DWORD PTR [rsp+160], 4
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	lea	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR [rsp+144], rax
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+128], 1051		; 0000041bH
	mov	DWORD PTR [rsp+120], 1
	mov	DWORD PTR [rsp+112], 2
	lea	rax, OFFSET FLAT:$SG219503
	mov	QWORD PTR [rsp+104], rax
	mov	DWORD PTR [rsp+96], 33			; 00000021H
	mov	QWORD PTR [rsp+88], 0
	mov	QWORD PTR [rsp+80], 0
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 4
	mov	DWORD PTR [rsp+56], 103			; 00000067H
	mov	DWORD PTR [rsp+48], 1
	mov	WORD PTR [rsp+40], 6
	lea	rax, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:$SG219504
	mov	edx, 1
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	lea	rcx, OFFSET FLAT:??__FBerconTile_param_blk@@YAXXZ ; `dynamic atexit destructor for 'BerconTile_param_blk''
	call	atexit
	add	rsp, 5176				; 00001438H
	pop	rdi
	pop	rsi
	ret	0
??__EBerconTile_param_blk@@YAXXZ ENDP			; `dynamic initializer for 'BerconTile_param_blk''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__Fxyz_blk@@YAXXZ
text$yd	SEGMENT
??__Fxyz_blk@@YAXXZ PROC				; `dynamic atexit destructor for 'xyz_blk'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	??1XYZ_Desc@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??__Fxyz_blk@@YAXXZ ENDP				; `dynamic atexit destructor for 'xyz_blk''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??__Exyz_blk@@YAXXZ
text$di	SEGMENT
??__Exyz_blk@@YAXXZ PROC				; `dynamic initializer for 'xyz_blk'', COMDAT

; 49   : static XYZ_Desc xyz_blk(&BerconTileDesc, COORD_REF, xyz_params, 1, 0, 0, 0);

	sub	rsp, 88					; 00000058H
	mov	edx, 128				; 00000080H
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
	mov	DWORD PTR [rsp+64], 1
	mov	DWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z ; XYZ_Desc::XYZ_Desc
	lea	rcx, OFFSET FLAT:??__Fxyz_blk@@YAXXZ	; `dynamic atexit destructor for 'xyz_blk''
	call	atexit
	add	rsp, 88					; 00000058H
	ret	0
??__Exyz_blk@@YAXXZ ENDP				; `dynamic initializer for 'xyz_blk''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?GetBerconTileDesc@@YAPEAVClassDesc2@@XZ
_TEXT	SEGMENT
?GetBerconTileDesc@@YAPEAVClassDesc2@@XZ PROC		; GetBerconTileDesc, COMDAT

; 45   : ClassDesc2* GetBerconTileDesc() { return &BerconTileDesc; }

	lea	rax, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	ret	0
?GetBerconTileDesc@@YAPEAVClassDesc2@@XZ ENDP		; GetBerconTileDesc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBerconTileDesc@@YAXXZ
text$yd	SEGMENT
??__FBerconTileDesc@@YAXXZ PROC				; `dynamic atexit destructor for 'BerconTileDesc'', COMDAT
	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	call	??1BerconTileClassDesc@@UEAA@XZ		; BerconTileClassDesc::~BerconTileClassDesc
	add	rsp, 40					; 00000028H
	ret	0
??__FBerconTileDesc@@YAXXZ ENDP				; `dynamic atexit destructor for 'BerconTileDesc''
text$yd	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??__EBerconTileDesc@@YAXXZ
text$di	SEGMENT
??__EBerconTileDesc@@YAXXZ PROC				; `dynamic initializer for 'BerconTileDesc'', COMDAT

; 44   : static BerconTileClassDesc BerconTileDesc;

	sub	rsp, 40					; 00000028H
	mov	edx, 56					; 00000038H
	lea	rcx, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	call	?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z
	lea	rcx, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	call	??0BerconTileClassDesc@@QEAA@XZ		; BerconTileClassDesc::BerconTileClassDesc
	lea	rcx, OFFSET FLAT:??__FBerconTileDesc@@YAXXZ ; `dynamic atexit destructor for 'BerconTileDesc''
	call	atexit
	add	rsp, 40					; 00000028H
	ret	0
??__EBerconTileDesc@@YAXXZ ENDP				; `dynamic initializer for 'BerconTileDesc''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconSC@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconSC@@UEAAPEAXI@Z PROC				; BerconSC::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconSC@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 696				; 000002b8H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconSC@@UEAAPEAXI@Z ENDP				; BerconSC::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconSC@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconSC@@QEAAX_K@Z PROC		; BerconSC::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconSC@@QEAAX_K@Z ENDP		; BerconSC::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconSC@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconSC@@UEAA@XZ PROC				; BerconSC::~BerconSC, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ShadeContext@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconSC@@UEAA@XZ ENDP				; BerconSC::~BerconSC
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA PROC		; `BerconSC::~BerconSC'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ShadeContext@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA ENDP		; `BerconSC::~BerconSC'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA PROC		; `BerconSC::~BerconSC'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ShadeContext@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconSC@@UEAA@XZ@4HA ENDP		; `BerconSC::~BerconSC'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ PROC		; BerconSC::DiffuseIllum, COMDAT

; 147  : 	Color DiffuseIllum (){ return sc->DiffuseIllum(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+568]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?DiffuseIllum@BerconSC@@UEAA?AVColor@@XZ ENDP		; BerconSC::DiffuseIllum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z PROC ; BerconSC::GetRenderElement, COMDAT

; 146  : 	IRenderElement* GetRenderElement (int n){ return sc->GetRenderElement(n); }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR n$[rsp]
	call	QWORD PTR [rax+560]
	add	rsp, 40					; 00000028H
	ret	0
?GetRenderElement@BerconSC@@UEAAPEAVIRenderElement@@H@Z ENDP ; BerconSC::GetRenderElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?NRenderElements@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NRenderElements@BerconSC@@UEAAHXZ PROC			; BerconSC::NRenderElements, COMDAT

; 145  : 	int NRenderElements () { return sc->NRenderElements(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+552]
	add	rsp, 40					; 00000028H
	ret	0
?NRenderElements@BerconSC@@UEAAHXZ ENDP			; BerconSC::NRenderElements
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?Execute@BerconSC@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 64
cmd$ = 72
arg1$ = 80
arg2$ = 88
arg3$ = 96
?Execute@BerconSC@@UEAA_JH_K00@Z PROC			; BerconSC::Execute, COMDAT

; 142  : 	INT_PTR Execute (int cmd, ULONG_PTR arg1, ULONG_PTR arg2, ULONG_PTR arg3){ return sc->Execute(cmd, arg1, arg2, arg3); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR arg3$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	r9, QWORD PTR arg2$[rsp]
	mov	r8, QWORD PTR arg1$[rsp]
	mov	edx, DWORD PTR cmd$[rsp]
	call	QWORD PTR [rax+544]
	add	rsp, 56					; 00000038H
	ret	0
?Execute@BerconSC@@UEAA_JH_K00@Z ENDP			; BerconSC::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z PROC		; BerconSC::TossCache, COMDAT

; 141  : 	void TossCache (Texmap* map){ sc->TossCache(map); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+536]
	add	rsp, 40					; 00000028H
	ret	0
?TossCache@BerconSC@@UEAAXPEAVTexmap@@@Z ENDP		; BerconSC::TossCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
p$ = 64
?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z PROC ; BerconSC::PutCache, COMDAT

; 140  : 	void PutCache (Texmap* map, const Point3 &p) { sc->PutCache(map, p); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+512]
	add	rsp, 40					; 00000028H
	ret	0
?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z ENDP ; BerconSC::PutCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
f$ = 64
?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z PROC		; BerconSC::PutCache, COMDAT

; 139  : 	void PutCache (Texmap* map, const float f) { sc->PutCache(map, f); }

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	movss	xmm2, DWORD PTR f$[rsp]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+520]
	add	rsp, 40					; 00000028H
	ret	0
?PutCache@BerconSC@@UEAAXPEAVTexmap@@M@Z ENDP		; BerconSC::PutCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
c$ = 64
?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z PROC ; BerconSC::PutCache, COMDAT

; 138  : 	void PutCache (Texmap* map, const AColor &c) { sc->PutCache(map, c); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR c$[rsp]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+528]
	add	rsp, 40					; 00000028H
	ret	0
?PutCache@BerconSC@@UEAAXPEAVTexmap@@AEBVAColor@@@Z ENDP ; BerconSC::PutCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
p$ = 64
?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z PROC ; BerconSC::GetCache, COMDAT

; 137  : 	BOOL GetCache (Texmap* map, Point3 &p) { return sc->GetCache(map, p); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+488]
	add	rsp, 40					; 00000028H
	ret	0
?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z ENDP ; BerconSC::GetCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
f$ = 64
?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z PROC	; BerconSC::GetCache, COMDAT

; 136  : 	BOOL GetCache (Texmap* map, float &f) { return sc->GetCache(map, f); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR f$[rsp]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+496]
	add	rsp, 40					; 00000028H
	ret	0
?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAM@Z ENDP	; BerconSC::GetCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z
_TEXT	SEGMENT
this$ = 48
map$ = 56
c$ = 64
?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z PROC ; BerconSC::GetCache, COMDAT

; 135  : 	BOOL GetCache (Texmap* map, AColor &c) { return sc->GetCache(map, c); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR c$[rsp]
	mov	rdx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+504]
	add	rsp, 40					; 00000028H
	ret	0
?GetCache@BerconSC@@UEAAHPEAVTexmap@@AEAVAColor@@@Z ENDP ; BerconSC::GetCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
tv71 = 48
$T2 = 56
this$ = 96
__$ReturnUdt$ = 104
dir$ = 112
?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z PROC ; BerconSC::EvalGlobalEnvironMap, COMDAT

; 134  : 	AColor EvalGlobalEnvironMap (Point3 dir){ return sc->EvalGlobalEnvironMap(dir); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR dir$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+640]
	mov	QWORD PTR tv68[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv71[rsp], rcx
	mov	r8, rax
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rax, QWORD PTR tv68[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+480]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 88					; 00000058H
	ret	0
?EvalGlobalEnvironMap@BerconSC@@UEAA?AVAColor@@VPoint3@@@Z ENDP ; BerconSC::EvalGlobalEnvironMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ
_TEXT	SEGMENT
this$ = 48
?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ PROC		; BerconSC::DebugFile, COMDAT

; 133  : 	FILE* DebugFile (){ return sc->DebugFile(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+472]
	add	rsp, 40					; 00000028H
	ret	0
?DebugFile@BerconSC@@UEAAPEAU_iobuf@@XZ ENDP		; BerconSC::DebugFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?SetGBufferID@BerconSC@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 48
gbid$ = 56
?SetGBufferID@BerconSC@@UEAAXH@Z PROC			; BerconSC::SetGBufferID, COMDAT

; 132  : 	void SetGBufferID (int gbid){ sc->SetGBufferID(gbid); }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR gbid$[rsp]
	call	QWORD PTR [rax+464]
	add	rsp, 40					; 00000028H
	ret	0
?SetGBufferID@BerconSC@@UEAAXH@Z ENDP			; BerconSC::SetGBufferID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
p$ = 64
ifrom$ = 72
?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z PROC ; BerconSC::VectorFromNoScale, COMDAT

; 131  : 	Point3 VectorFromNoScale (const Point3& p, RefFrame ifrom){ return sc->VectorFromNoScale(p, ifrom); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR ifrom$[rsp]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+456]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?VectorFromNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ENDP ; BerconSC::VectorFromNoScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
p$ = 64
ito$ = 72
?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z PROC ; BerconSC::VectorToNoScale, COMDAT

; 130  : 	Point3 VectorToNoScale (const Point3& p, RefFrame ito) { return sc->VectorToNoScale(p, ito); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR ito$[rsp]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+448]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?VectorToNoScale@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ENDP ; BerconSC::VectorToNoScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
p$ = 64
ifrom$ = 72
?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z PROC ; BerconSC::VectorFrom, COMDAT

; 129  : 	Point3 VectorFrom (const Point3& p, RefFrame ifrom) { return sc->VectorFrom(p, ifrom); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR ifrom$[rsp]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+440]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?VectorFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ENDP ; BerconSC::VectorFrom
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
p$ = 64
ito$ = 72
?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z PROC ; BerconSC::VectorTo, COMDAT

; 128  : 	Point3 VectorTo (const Point3& p, RefFrame ito) { return sc->VectorTo(p, ito); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR ito$[rsp]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+432]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?VectorTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ENDP ; BerconSC::VectorTo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
p$ = 64
ifrom$ = 72
?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z PROC ; BerconSC::PointFrom, COMDAT

; 127  : 	Point3 PointFrom (const Point3& p, RefFrame ifrom) { return sc->PointFrom(p, ifrom); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR ifrom$[rsp]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+424]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?PointFrom@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ENDP ; BerconSC::PointFrom
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
p$ = 64
ito$ = 72
?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z PROC ; BerconSC::PointTo, COMDAT

; 126  : 	Point3 PointTo (const Point3& p, RefFrame ito) { return sc->PointTo(p, ito); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR ito$[rsp]
	mov	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+416]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?PointTo@BerconSC@@UEAA?AVPoint3@@AEBV2@W4RefFrame@@@Z ENDP ; BerconSC::PointTo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?CamFarRange@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?CamFarRange@BerconSC@@UEAAMXZ PROC			; BerconSC::CamFarRange, COMDAT

; 125  : 	float CamFarRange (){ return sc->CamFarRange(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+408]
	add	rsp, 40					; 00000028H
	ret	0
?CamFarRange@BerconSC@@UEAAMXZ ENDP			; BerconSC::CamFarRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?CamNearRange@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?CamNearRange@BerconSC@@UEAAMXZ PROC			; BerconSC::CamNearRange, COMDAT

; 124  : 	float CamNearRange () { return sc->CamNearRange(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+400]
	add	rsp, 40					; 00000028H
	ret	0
?CamNearRange@BerconSC@@UEAAMXZ ENDP			; BerconSC::CamNearRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z
_TEXT	SEGMENT
this$ = 48
bgcol$ = 56
transp$ = 64
fogBG$ = 72
?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z PROC		; BerconSC::GetBGColor, COMDAT

; 123  : 	void GetBGColor (Color& bgcol, Color& transp, BOOL fogBG){ sc->GetBGColor(bgcol, transp, fogBG); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR fogBG$[rsp]
	mov	r8, QWORD PTR transp$[rsp]
	mov	rdx, QWORD PTR bgcol$[rsp]
	call	QWORD PTR [rax+392]
	add	rsp, 40					; 00000028H
	ret	0
?GetBGColor@BerconSC@@UEAAXAEAVColor@@0H@Z ENDP		; BerconSC::GetBGColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
tv71 = 48
$T2 = 56
this$ = 96
__$ReturnUdt$ = 104
map$ = 112
view$ = 120
?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z PROC ; BerconSC::EvalEnvironMap, COMDAT

; 122  : 	AColor EvalEnvironMap (Texmap* map, Point3 view) { return sc->EvalEnvironMap(map, view); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR view$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+640]
	mov	QWORD PTR tv68[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv71[rsp], rcx
	mov	r9, rax
	mov	r8, QWORD PTR map$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rax, QWORD PTR tv68[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+384]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 88					; 00000058H
	ret	0
?EvalEnvironMap@BerconSC@@UEAA?AVAColor@@PEAVTexmap@@VPoint3@@@Z ENDP ; BerconSC::EvalEnvironMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?RayConeAngle@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?RayConeAngle@BerconSC@@UEAAMXZ PROC			; BerconSC::RayConeAngle, COMDAT

; 121  : 	float RayConeAngle (){ return sc->RayConeAngle(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+376]
	add	rsp, 40					; 00000028H
	ret	0
?RayConeAngle@BerconSC@@UEAAMXZ ENDP			; BerconSC::RayConeAngle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?RayDiam@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?RayDiam@BerconSC@@UEAAMXZ PROC				; BerconSC::RayDiam, COMDAT

; 120  : 	float RayDiam (){ return sc->RayDiam(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+368]
	add	rsp, 40					; 00000028H
	ret	0
?RayDiam@BerconSC@@UEAAMXZ ENDP				; BerconSC::RayDiam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
channel$ = 64
?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z PROC		; BerconSC::UVWNormal, COMDAT

; 119  : 	Point3 UVWNormal (int channel){ return sc->UVWNormal(channel); }

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR channel$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+360]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?UVWNormal@BerconSC@@UEAA?AVPoint3@@H@Z ENDP		; BerconSC::UVWNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetSampleSizeScale@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?GetSampleSizeScale@BerconSC@@UEAAMXZ PROC		; BerconSC::GetSampleSizeScale, COMDAT

; 118  : 	float GetSampleSizeScale (){ return sc->GetSampleSizeScale(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+352]
	add	rsp, 40					; 00000028H
	ret	0
?GetSampleSizeScale@BerconSC@@UEAAMXZ ENDP		; BerconSC::GetSampleSizeScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetNSuperSample@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?GetNSuperSample@BerconSC@@UEAAHXZ PROC			; BerconSC::GetNSuperSample, COMDAT

; 117  : 	int GetNSuperSample () { return sc->GetNSuperSample(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+344]
	add	rsp, 40					; 00000028H
	ret	0
?GetNSuperSample@BerconSC@@UEAAHXZ ENDP			; BerconSC::GetNSuperSample
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ PROC		; BerconSC::IsTextureSuperSampleOn, COMDAT

; 116  : 	BOOL IsTextureSuperSampleOn () { return sc->IsTextureSuperSampleOn(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+336]
	add	rsp, 40					; 00000028H
	ret	0
?IsTextureSuperSampleOn@BerconSC@@UEAAHXZ ENDP		; BerconSC::IsTextureSuperSampleOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?IsSuperSampleOn@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?IsSuperSampleOn@BerconSC@@UEAAHXZ PROC			; BerconSC::IsSuperSampleOn, COMDAT

; 115  : 	BOOL IsSuperSampleOn () { return sc->IsSuperSampleOn(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+328]
	add	rsp, 40					; 00000028H
	ret	0
?IsSuperSampleOn@BerconSC@@UEAAHXZ ENDP			; BerconSC::IsSuperSampleOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z
_TEXT	SEGMENT
this$ = 48
dP$ = 56
axis$ = 64
channel$ = 72
?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z PROC	; BerconSC::BumpBasisVectors, COMDAT

; 114  : 	int BumpBasisVectors (Point3 dP[2], int axis, int channel){ return sc->BumpBasisVectors(dP, axis, channel); }

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r9d, DWORD PTR channel$[rsp]
	mov	r8d, DWORD PTR axis$[rsp]
	mov	rdx, QWORD PTR dP$[rsp]
	call	QWORD PTR [rax+320]
	add	rsp, 40					; 00000028H
	ret	0
?BumpBasisVectors@BerconSC@@UEAAHQEAVPoint3@@HH@Z ENDP	; BerconSC::BumpBasisVectors
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 48
dP$ = 56
channel$ = 64
?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z PROC		; BerconSC::DPdUVW, COMDAT

; 113  : 	void DPdUVW (Point3 dP[3], int channel){ sc->DPdUVW(dP, channel); }

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR channel$[rsp]
	mov	rdx, QWORD PTR dP$[rsp]
	call	QWORD PTR [rax+312]
	add	rsp, 40					; 00000028H
	ret	0
?DPdUVW@BerconSC@@UEAAXQEAVPoint3@@H@Z ENDP		; BerconSC::DPdUVW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
channel$ = 64
?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z PROC			; BerconSC::DUVW, COMDAT

; 112  : 	Point3 DUVW (int channel) { return sc->DUVW(channel); }

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR channel$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+304]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?DUVW@BerconSC@@UEAA?AVPoint3@@H@Z ENDP			; BerconSC::DUVW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?UVW@BerconSC@@UEAA?AVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
channel$ = 64
?UVW@BerconSC@@UEAA?AVPoint3@@H@Z PROC			; BerconSC::UVW, COMDAT

; 178  : inline Point3 BerconSC::UVW(int channel) {

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 179  : 	if (useMultiTexture && 99 == channel)

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+684]
	test	eax, eax
	je	SHORT $LN2@UVW
	cmp	DWORD PTR channel$[rsp], 99		; 00000063H
	jne	SHORT $LN2@UVW

; 180  : 		return Point3(val, val, val);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm3, DWORD PTR [rax+688]
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rax+688]
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+688]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@UVW
$LN2@UVW:

; 181  : 
; 182  : 	if ((type == 0 || type == 1) && uvChannel == channel)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+648], 0
	je	SHORT $LN4@UVW
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+648], 1
	jne	SHORT $LN3@UVW
$LN4@UVW:
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR channel$[rsp]
	cmp	DWORD PTR [rax+676], ecx
	jne	SHORT $LN3@UVW

; 183  : 		return uvPoint;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 652				; 0000028cH
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@UVW
$LN3@UVW:

; 184  : 
; 185  : 	if (uvChannel > 0 && uvChannel == channel)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+676], 0
	jle	SHORT $LN5@UVW
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR channel$[rsp]
	cmp	DWORD PTR [rax+676], ecx
	jne	SHORT $LN5@UVW

; 186  : 		return uvPoint;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 652				; 0000028cH
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@UVW
$LN5@UVW:

; 187  : 	
; 188  : 	if (uvChannel2 > 0 && uvChannel2 == channel)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+680], 0
	jle	SHORT $LN6@UVW
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR channel$[rsp]
	cmp	DWORD PTR [rax+680], ecx
	jne	SHORT $LN6@UVW

; 189  : 		return uvPoint2;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 664				; 00000298H
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@UVW
$LN6@UVW:

; 190  : 	
; 191  : 	return sc->UVW(channel);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8d, DWORD PTR channel$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+296]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@UVW:

; 192  : }

	add	rsp, 40					; 00000028H
	ret	0
?UVW@BerconSC@@UEAA?AVPoint3@@H@Z ENDP			; BerconSC::UVW
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ PROC	; BerconSC::SurfacePtScreen, COMDAT

; 110  : 	Point2 SurfacePtScreen (){ return sc->SurfacePtScreen(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+288]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?SurfacePtScreen@BerconSC@@UEAA?AVPoint2@@XZ ENDP	; BerconSC::SurfacePtScreen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ PROC		; BerconSC::ScreenCoord, COMDAT

; 109  : 	IPoint2 ScreenCoord () { return sc->ScreenCoord(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+280]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ScreenCoord@BerconSC@@UEAA?AVIPoint2@@XZ ENDP		; BerconSC::ScreenCoord
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z
_TEXT	SEGMENT
this$ = 48
uv$ = 56
duv$ = 64
?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z PROC		; BerconSC::ScreenUV, COMDAT

; 162  : inline void BerconSC::ScreenUV(Point2& uv, Point2 &duv) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 163  : 	sc->ScreenUV(uv, duv);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR duv$[rsp]
	mov	rdx, QWORD PTR uv$[rsp]
	call	QWORD PTR [rax+272]

; 164  : 	if (type == 4) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+648], 4
	jne	SHORT $LN2@ScreenUV

; 165  : 		uv.x = uvPoint.x;

	mov	rax, QWORD PTR uv$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+652]
	movss	DWORD PTR [rax], xmm0

; 166  : 		uv.y = uvPoint.y;

	mov	rax, QWORD PTR uv$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+656]
	movss	DWORD PTR [rax+4], xmm0
$LN2@ScreenUV:

; 167  : 	}
; 168  : }

	add	rsp, 40					; 00000028H
	ret	0
?ScreenUV@BerconSC@@UEAAXAEAVPoint2@@0@Z ENDP		; BerconSC::ScreenUV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::DPObjRelBox, COMDAT

; 107  : 	Point3 DPObjRelBox () { return sc->DPObjRelBox(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+264]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?DPObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::DPObjRelBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::PObjRelBox, COMDAT

; 158  : inline Point3 BerconSC::PObjRelBox() {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 159  : 	return sc->PObjRelBox();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+256]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 160  : }

	add	rsp, 40					; 00000028H
	ret	0
?PObjRelBox@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::PObjRelBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ PROC		; BerconSC::ObjectBox, COMDAT

; 105  : 	Box3 ObjectBox () { return sc->ObjectBox(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+248]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ObjectBox@BerconSC@@UEAA?AVBox3@@XZ ENDP		; BerconSC::ObjectBox
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DPObj@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?DPObj@BerconSC@@UEAA?AVPoint3@@XZ PROC			; BerconSC::DPObj, COMDAT

; 104  : 	Point3 DPObj () { return sc->DPObj(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+240]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?DPObj@BerconSC@@UEAA?AVPoint3@@XZ ENDP			; BerconSC::DPObj
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?PObj@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
tv81 = 32
$T1 = 40
$T2 = 48
$T3 = 60
this$ = 96
__$ReturnUdt$ = 104
?PObj@BerconSC@@UEAA?AVPoint3@@XZ PROC			; BerconSC::PObj, COMDAT

; 174  : inline Point3 BerconSC::PObj() {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 175  : 	return type == 2 ? uvPoint : sc->PObj();	

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+648], 2
	jne	SHORT $LN3@PObj
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 652				; 0000028cH
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv81[rsp], rax
	jmp	SHORT $LN4@PObj
$LN3@PObj:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T3[rsp]
	call	QWORD PTR [rax+232]
	mov	QWORD PTR tv81[rsp], rax
$LN4@PObj:
	mov	rax, QWORD PTR tv81[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 176  : }

	add	rsp, 88					; 00000058H
	ret	0
?PObj@BerconSC@@UEAA?AVPoint3@@XZ ENDP			; BerconSC::PObj
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z
_TEXT	SEGMENT
this$ = 48
dpdx$ = 56
dpdy$ = 64
?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z PROC			; BerconSC::DP, COMDAT

; 102  : 	void DP (Point3& dpdx, Point3& dpdy) { sc->DP(dpdx, dpdx); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR dpdx$[rsp]
	mov	rdx, QWORD PTR dpdx$[rsp]
	call	QWORD PTR [rax+216]
	add	rsp, 40					; 00000028H
	ret	0
?DP@BerconSC@@UEAAXAEAVPoint3@@0@Z ENDP			; BerconSC::DP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?DP@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?DP@BerconSC@@UEAA?AVPoint3@@XZ PROC			; BerconSC::DP, COMDAT

; 101  : 	Point3 DP () { return sc->DP(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+224]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?DP@BerconSC@@UEAA?AVPoint3@@XZ ENDP			; BerconSC::DP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?P@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
tv81 = 32
$T1 = 40
$T2 = 48
$T3 = 60
this$ = 96
__$ReturnUdt$ = 104
?P@BerconSC@@UEAA?AVPoint3@@XZ PROC			; BerconSC::P, COMDAT

; 170  : inline Point3 BerconSC::P() {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 171  : 	return type == 3 ? uvPoint : sc->P();

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+648], 3
	jne	SHORT $LN3@P
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 652				; 0000028cH
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv81[rsp], rax
	jmp	SHORT $LN4@P
$LN3@P:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T3[rsp]
	call	QWORD PTR [rax+208]
	mov	QWORD PTR tv81[rsp], rax
$LN4@P:
	mov	rax, QWORD PTR tv81[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 172  : }

	add	rsp, 88					; 00000058H
	ret	0
?P@BerconSC@@UEAA?AVPoint3@@XZ ENDP			; BerconSC::P
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?CamPos@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?CamPos@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::CamPos, COMDAT

; 99   : 	Point3 CamPos () { return sc->CamPos(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+200]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?CamPos@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::CamPos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetIOR@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?GetIOR@BerconSC@@UEAAMXZ PROC				; BerconSC::GetIOR, COMDAT

; 98   : 	float GetIOR () { return sc->GetIOR(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+192]
	add	rsp, 40					; 00000028H
	ret	0
?GetIOR@BerconSC@@UEAAMXZ ENDP				; BerconSC::GetIOR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?SetIOR@BerconSC@@UEAAXM@Z
_TEXT	SEGMENT
this$ = 48
ior$ = 56
?SetIOR@BerconSC@@UEAAXM@Z PROC				; BerconSC::SetIOR, COMDAT

; 97   : 	void SetIOR (float ior) { sc->SetIOR(ior); }

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	movss	xmm1, DWORD PTR ior$[rsp]
	call	QWORD PTR [rax+184]
	add	rsp, 40					; 00000028H
	ret	0
?SetIOR@BerconSC@@UEAAXM@Z ENDP				; BerconSC::SetIOR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
ior$ = 64
?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z PROC	; BerconSC::RefractVector, COMDAT

; 96   : 	Point3 RefractVector (float ior) { return sc->RefractVector(ior); }

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	movss	xmm2, DWORD PTR ior$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+176]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?RefractVector@BerconSC@@UEAA?AVPoint3@@M@Z ENDP	; BerconSC::RefractVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::ReflectVector, COMDAT

; 95   : 	Point3 ReflectVector () { return sc->ReflectVector(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+168]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ReflectVector@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::ReflectVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?OrigView@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?OrigView@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::OrigView, COMDAT

; 94   : 	Point3 OrigView () { return sc->OrigView(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+160]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?OrigView@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::OrigView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?SetView@BerconSC@@UEAAXVPoint3@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
tv80 = 48
$T2 = 56
this$ = 96
p$ = 104
?SetView@BerconSC@@UEAAXVPoint3@@@Z PROC		; BerconSC::SetView, COMDAT

; 93   : 	void SetView (Point3 p) { sc->SetView(p); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+640]
	mov	QWORD PTR tv68[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv80[rsp], rcx
	mov	rdx, rax
	mov	rax, QWORD PTR tv68[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv80[rsp]
	call	QWORD PTR [rax+152]
	add	rsp, 88					; 00000058H
	ret	0
?SetView@BerconSC@@UEAAXVPoint3@@@Z ENDP		; BerconSC::SetView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?V@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?V@BerconSC@@UEAA?AVPoint3@@XZ PROC			; BerconSC::V, COMDAT

; 92   : 	Point3 V () { return sc->V(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+144]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?V@BerconSC@@UEAA?AVPoint3@@XZ ENDP			; BerconSC::V
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?Curve@BerconSC@@UEAAMXZ
_TEXT	SEGMENT
this$ = 48
?Curve@BerconSC@@UEAAMXZ PROC				; BerconSC::Curve, COMDAT

; 91   : 	float Curve () { return sc->Curve(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+136]
	add	rsp, 40					; 00000028H
	ret	0
?Curve@BerconSC@@UEAAMXZ ENDP				; BerconSC::Curve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GNormal@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?GNormal@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::GNormal, COMDAT

; 90   : 	Point3 GNormal () { return sc->GNormal(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+128]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?GNormal@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::GNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::OrigNormal, COMDAT

; 89   : 	Point3 OrigNormal () { return sc->OrigNormal(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+120]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?OrigNormal@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::OrigNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?SetNormal@BerconSC@@UEAAXVPoint3@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
tv80 = 48
$T2 = 56
this$ = 96
p$ = 104
?SetNormal@BerconSC@@UEAAXVPoint3@@@Z PROC		; BerconSC::SetNormal, COMDAT

; 88   : 	void SetNormal (Point3 p) { sc->SetNormal(p); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+640]
	mov	QWORD PTR tv68[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv80[rsp], rcx
	mov	rdx, rax
	mov	rax, QWORD PTR tv68[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv80[rsp]
	call	QWORD PTR [rax+112]
	add	rsp, 88					; 00000058H
	ret	0
?SetNormal@BerconSC@@UEAAXVPoint3@@@Z ENDP		; BerconSC::SetNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?Normal@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?Normal@BerconSC@@UEAA?AVPoint3@@XZ PROC		; BerconSC::Normal, COMDAT

; 87   : 	Point3 Normal () { return sc->Normal(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+104]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?Normal@BerconSC@@UEAA?AVPoint3@@XZ ENDP		; BerconSC::Normal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?FaceNumber@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?FaceNumber@BerconSC@@UEAAHXZ PROC			; BerconSC::FaceNumber, COMDAT

; 86   : 	int FaceNumber () { return sc->FaceNumber(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+96]
	add	rsp, 40					; 00000028H
	ret	0
?FaceNumber@BerconSC@@UEAAHXZ ENDP			; BerconSC::FaceNumber
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ PROC	; BerconSC::BarycentricCoords, COMDAT

; 85   : 	Point3 BarycentricCoords () { return sc->BarycentricCoords(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR [rax+88]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?BarycentricCoords@BerconSC@@UEAA?AVPoint3@@XZ ENDP	; BerconSC::BarycentricCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ
_TEXT	SEGMENT
this$ = 48
?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ PROC	; BerconSC::GetEvalObject, COMDAT

; 84   : 	Object* GetEvalObject () { return sc->GetEvalObject(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+80]
	add	rsp, 40					; 00000028H
	ret	0
?GetEvalObject@BerconSC@@UEAAPEAVObject@@XZ ENDP	; BerconSC::GetEvalObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?Node@BerconSC@@UEAAPEAVINode@@XZ
_TEXT	SEGMENT
this$ = 48
?Node@BerconSC@@UEAAPEAVINode@@XZ PROC			; BerconSC::Node, COMDAT

; 83   : 	INode* Node () { return sc->Node(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+72]
	add	rsp, 40					; 00000028H
	ret	0
?Node@BerconSC@@UEAAPEAVINode@@XZ ENDP			; BerconSC::Node
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?NodeID@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NodeID@BerconSC@@UEAAHXZ PROC				; BerconSC::NodeID, COMDAT

; 82   : 	int NodeID () { return sc->NodeID(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+64]
	add	rsp, 40					; 00000028H
	ret	0
?NodeID@BerconSC@@UEAAHXZ ENDP				; BerconSC::NodeID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?CurTime@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?CurTime@BerconSC@@UEAAHXZ PROC				; BerconSC::CurTime, COMDAT

; 81   : 	TimeValue CurTime () { return sc->CurTime(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+56]
	add	rsp, 40					; 00000028H
	ret	0
?CurTime@BerconSC@@UEAAHXZ ENDP				; BerconSC::CurTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z
_TEXT	SEGMENT
this$ = 48
n$ = 56
?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z PROC		; BerconSC::Light, COMDAT

; 80   : 	LightDesc* Light (int n) { return sc->Light(n); }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR n$[rsp]
	call	QWORD PTR [rax+48]
	add	rsp, 40					; 00000028H
	ret	0
?Light@BerconSC@@UEAAPEAVLightDesc@@H@Z ENDP		; BerconSC::Light
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?ProjType@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?ProjType@BerconSC@@UEAAHXZ PROC			; BerconSC::ProjType, COMDAT

; 79   : 	int ProjType () { return sc->ProjType(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+40]
	add	rsp, 40					; 00000028H
	ret	0
?ProjType@BerconSC@@UEAAHXZ ENDP			; BerconSC::ProjType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?Antialias@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?Antialias@BerconSC@@UEAAHXZ PROC			; BerconSC::Antialias, COMDAT

; 78   : 	int Antialias () { return sc->Antialias(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+32]
	add	rsp, 40					; 00000028H
	ret	0
?Antialias@BerconSC@@UEAAHXZ ENDP			; BerconSC::Antialias
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?InMtlEditor@BerconSC@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?InMtlEditor@BerconSC@@UEAAHXZ PROC			; BerconSC::InMtlEditor, COMDAT

; 77   : 	BOOL InMtlEditor () { return sc->InMtlEditor(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+640]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+640]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+24]
	add	rsp, 40					; 00000028H
	ret	0
?InMtlEditor@BerconSC@@UEAAHXZ ENDP			; BerconSC::InMtlEditor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ PROC		; BerconSC::ClassID, COMDAT

; 76   : 	Class_ID ClassID () { return BERCON_SHADE_CONTEXT_CLASS_ID; }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 790259698				; 2f1a67f2H
	mov	edx, 2081044721				; 7c0a38f1H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconSC@@UEAA?AVClass_ID@@XZ ENDP		; BerconSC::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?setMultiTexture@BerconSC@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 8
val$ = 16
?setMultiTexture@BerconSC@@QEAAXM@Z PROC		; BerconSC::setMultiTexture, COMDAT

; 70   : 	void setMultiTexture(float val) {

	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx

; 71   : 		this->val = val;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR val$[rsp]
	movss	DWORD PTR [rax+688], xmm0

; 72   : 		useMultiTexture = true;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+684], 1

; 73   : 	}

	ret	0
?setMultiTexture@BerconSC@@QEAAXM@Z ENDP		; BerconSC::setMultiTexture
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?setUV2@BerconSC@@QEAAXVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 24
uvw$ = 32
chan$ = 40
?setUV2@BerconSC@@QEAAXVPoint3@@H@Z PROC		; BerconSC::setUV2, COMDAT

; 65   : 	void setUV2(Point3 uvw, int chan) {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi

; 66   : 		uvPoint2 = uvw;

	mov	rax, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rax+664]
	mov	rsi, QWORD PTR uvw$[rsp]
	mov	ecx, 12
	rep movsb

; 67   : 		uvChannel2 = chan;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR chan$[rsp]
	mov	DWORD PTR [rax+680], ecx

; 68   : 	}

	pop	rdi
	pop	rsi
	ret	0
?setUV2@BerconSC@@QEAAXVPoint3@@H@Z ENDP		; BerconSC::setUV2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ?setUV1@BerconSC@@QEAAXVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 24
uvw$ = 32
chan$ = 40
?setUV1@BerconSC@@QEAAXVPoint3@@H@Z PROC		; BerconSC::setUV1, COMDAT

; 60   : 	void setUV1(Point3 uvw, int chan) {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi

; 61   : 		uvPoint = uvw;

	mov	rax, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rax+652]
	mov	rsi, QWORD PTR uvw$[rsp]
	mov	ecx, 12
	rep movsb

; 62   : 		uvChannel = chan;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR chan$[rsp]
	mov	DWORD PTR [rax+676], ecx

; 63   : 	}

	pop	rdi
	pop	rsi
	ret	0
?setUV1@BerconSC@@QEAAXVPoint3@@H@Z ENDP		; BerconSC::setUV1
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconsc.h
;	COMDAT ??0BerconSC@@QEAA@QEAVShadeContext@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 80
sc$ = 88
??0BerconSC@@QEAA@QEAVShadeContext@@@Z PROC		; BerconSC::BerconSC, COMDAT

; 36   : 	BerconSC(ShadeContext* const sc) : sc (sc) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ShadeContext@@QEAA@XZ		; ShadeContext::ShadeContext
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconSC@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	QWORD PTR [rax+640], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 652				; 0000028cH
	mov	rcx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 664				; 00000298H
	mov	rcx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 37   : 		mode = sc->mode;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax+8], ecx

; 38   : 		doMaps = sc->doMaps;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+12]
	mov	DWORD PTR [rax+12], ecx

; 39   : 		filterMaps = sc->filterMaps;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax+16], ecx

; 40   : 		shadow = sc->shadow;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+20]
	mov	DWORD PTR [rax+20], ecx

; 41   : 		backFace = sc->backFace;					

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+24]
	mov	DWORD PTR [rax+24], ecx

; 42   : 		mtlNum = sc->mtlNum;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+28]
	mov	DWORD PTR [rax+28], ecx

; 43   : 		ambientLight = sc->ambientLight;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	lea	rdi, QWORD PTR [rax+32]
	lea	rsi, QWORD PTR [rcx+32]
	mov	ecx, 12
	rep movsb

; 44   : 		nLights = sc->nLights;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+44]
	mov	DWORD PTR [rax+44], ecx

; 45   : 		rayLevel = sc->rayLevel;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+48]
	mov	DWORD PTR [rax+48], ecx

; 46   : 		xshadeID = sc->xshadeID;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	ecx, DWORD PTR [rcx+52]
	mov	DWORD PTR [rax+52], ecx

; 47   : 		atmosSkipLight = sc->atmosSkipLight;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx+56]
	mov	QWORD PTR [rax+56], rcx

; 48   : 		globContext = sc->globContext;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR [rcx+64]
	mov	QWORD PTR [rax+64], rcx

; 49   : 		out = sc->out;

	mov	rax, QWORD PTR sc$[rsp]
	add	rax, 72					; 00000048H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 72					; 00000048H
	mov	rdx, rax
	call	??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z	; ShadeOutput::operator=

; 50   : 
; 51   : 		uvChannel = -1; uvChannel2 = -1; useMultiTexture = false; type = -1;

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+676], -1
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+680], -1
	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+684], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+648], -1

; 52   : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??0BerconSC@@QEAA@QEAVShadeContext@@@Z ENDP		; BerconSC::BerconSC
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 80
sc$ = 88
?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA PROC ; `BerconSC::BerconSC'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ShadeContext@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA ENDP ; `BerconSC::BerconSC'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 80
sc$ = 88
?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA PROC ; `BerconSC::BerconSC'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ShadeContext@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconSC@@QEAA@QEAVShadeContext@@@Z@4HA ENDP ; `BerconSC::BerconSC'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconTileClassDesc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconTileClassDesc@@UEAAPEAXI@Z PROC		; BerconTileClassDesc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconTileClassDesc@@UEAA@XZ		; BerconTileClassDesc::~BerconTileClassDesc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 56					; 00000038H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconTileClassDesc@@UEAAPEAXI@Z ENDP		; BerconTileClassDesc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z PROC	; BerconTileClassDesc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconTileClassDesc@@QEAAX_K@Z ENDP	; BerconTileClassDesc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?HInstance@BerconTileClassDesc@@UEAAPEAUHINSTANCE__@@XZ
_TEXT	SEGMENT
this$ = 8
?HInstance@BerconTileClassDesc@@UEAAPEAUHINSTANCE__@@XZ PROC ; BerconTileClassDesc::HInstance, COMDAT

; 168  : 	virtual HINSTANCE HInstance() 					{ return hInstance; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR ?hInstance@@3PEAUHINSTANCE__@@EA ; hInstance
	ret	0
?HInstance@BerconTileClassDesc@@UEAAPEAUHINSTANCE__@@XZ ENDP ; BerconTileClassDesc::HInstance
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?InternalName@BerconTileClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?InternalName@BerconTileClassDesc@@UEAAPEB_WXZ PROC	; BerconTileClassDesc::InternalName, COMDAT

; 167  : 	virtual const TCHAR* InternalName() 			{ return _T("BerconTile"); } // returns fixed parsable name (scripter-visible name)

	mov	QWORD PTR [rsp+8], rcx
	lea	rax, OFFSET FLAT:??_C@_1BG@HMMMJDJP@?$AAB?$AAe?$AAr?$AAc?$AAo?$AAn?$AAT?$AAi?$AAl?$AAe?$AA?$AA@
	ret	0
?InternalName@BerconTileClassDesc@@UEAAPEB_WXZ ENDP	; BerconTileClassDesc::InternalName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?Category@BerconTileClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 8
?Category@BerconTileClassDesc@@UEAAPEB_WXZ PROC		; BerconTileClassDesc::Category, COMDAT

; 166  : 	virtual const TCHAR* Category() 				{ return TEXMAP_CAT_3D; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR __imp_?TEXMAP_CAT_3D@@3PA_WA
	ret	0
?Category@BerconTileClassDesc@@UEAAPEB_WXZ ENDP		; BerconTileClassDesc::Category
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ PROC	; BerconTileClassDesc::ClassID, COMDAT

; 165  : 	virtual Class_ID ClassID() 						{ return BerconTile_CLASS_ID; }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 738369057				; 2c029e21H
	mov	edx, 2092439444				; 7cb81794H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconTileClassDesc@@UEAA?AVClass_ID@@XZ ENDP	; BerconTileClassDesc::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?SuperClassID@BerconTileClassDesc@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?SuperClassID@BerconTileClassDesc@@UEAAKXZ PROC		; BerconTileClassDesc::SuperClassID, COMDAT

; 164  : 	virtual SClass_ID SuperClassID() 				{ return TEXMAP_CLASS_ID; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3088				; 00000c10H
	ret	0
?SuperClassID@BerconTileClassDesc@@UEAAKXZ ENDP		; BerconTileClassDesc::SuperClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ PROC	; BerconTileClassDesc::ClassName, COMDAT

; 163  : 	virtual const TCHAR *	ClassName() 			{ return GetString(IDS_BERCON_TILE); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	ecx, 52					; 00000034H
	call	?GetString@@YAPEA_WH@Z			; GetString
	add	rsp, 40					; 00000028H
	ret	0
?ClassName@BerconTileClassDesc@@UEAAPEB_WXZ ENDP	; BerconTileClassDesc::ClassName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?Create@BerconTileClassDesc@@UEAAPEAXH@Z
_TEXT	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?Create@BerconTileClassDesc@@UEAAPEAXH@Z PROC		; BerconTileClassDesc::Create, COMDAT

; 162  : 	virtual void* Create(BOOL /*loading = FALSE*/) 	{ return new BerconTile(); }

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T3[rsp], -2
	mov	ecx, 848				; 00000350H
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@Create
	mov	edx, 848				; 00000350H
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@BerconTile@@QEAAX_K@Z
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0BerconTile@@QEAA@XZ			; BerconTile::BerconTile
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN4@Create
$LN3@Create:
	mov	QWORD PTR tv76[rsp], 0
$LN4@Create:
	mov	rax, QWORD PTR tv76[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	add	rsp, 72					; 00000048H
	ret	0
?Create@BerconTileClassDesc@@UEAAPEAXH@Z ENDP		; BerconTileClassDesc::Create
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA PROC ; `BerconTileClassDesc::Create'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA ENDP ; `BerconTileClassDesc::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv76 = 40
$T2 = 48
$T3 = 56
this$ = 80
__formal$ = 88
?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA PROC ; `BerconTileClassDesc::Create'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Create@BerconTileClassDesc@@UEAAPEAXH@Z@4HA ENDP ; `BerconTileClassDesc::Create'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?IsPublic@BerconTileClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsPublic@BerconTileClassDesc@@UEAAHXZ PROC		; BerconTileClassDesc::IsPublic, COMDAT

; 161  : 	virtual int IsPublic() 							{ return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsPublic@BerconTileClassDesc@@UEAAHXZ ENDP		; BerconTileClassDesc::IsPublic
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ??1BerconTileClassDesc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconTileClassDesc@@UEAA@XZ PROC			; BerconTileClassDesc::~BerconTileClassDesc, COMDAT

; 160  : 	virtual ~BerconTileClassDesc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTileClassDesc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconTileClassDesc@@UEAA@XZ ENDP			; BerconTileClassDesc::~BerconTileClassDesc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA PROC	; `BerconTileClassDesc::~BerconTileClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA ENDP	; `BerconTileClassDesc::~BerconTileClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA PROC	; `BerconTileClassDesc::~BerconTileClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconTileClassDesc@@UEAA@XZ@4HA ENDP	; `BerconTileClassDesc::~BerconTileClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ??0BerconTileClassDesc@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0BerconTileClassDesc@@QEAA@XZ PROC			; BerconTileClassDesc::BerconTileClassDesc, COMDAT

; 159  : 	BerconTileClassDesc() {}

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0ClassDesc2@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTileClassDesc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconTileClassDesc@@QEAA@XZ ENDP			; BerconTileClassDesc::BerconTileClassDesc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA PROC	; `BerconTileClassDesc::BerconTileClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA ENDP	; `BerconTileClassDesc::BerconTileClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA PROC	; `BerconTileClassDesc::BerconTileClassDesc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ClassDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconTileClassDesc@@QEAA@XZ@4HA ENDP	; `BerconTileClassDesc::BerconTileClassDesc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconTile@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconTile@@UEAAPEAXI@Z PROC			; BerconTile::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconTile@@UEAA@XZ			; BerconTile::~BerconTile
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 848				; 00000350H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconTile@@UEAAPEAXI@Z ENDP			; BerconTile::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconTile@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconTile@@QEAAX_K@Z PROC		; BerconTile::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconTile@@QEAAX_K@Z ENDP		; BerconTile::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?GetInterface@BerconTile@@UEAAPEAXK@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
id$ = 72
?GetInterface@BerconTile@@UEAAPEAXK@Z PROC		; BerconTile::GetInterface, COMDAT

; 149  : 		void* GetInterface(ULONG id) {

$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 150  : 			if(id == I_RESMAKER_INTERFACE)

	cmp	DWORD PTR id$[rsp], 611595082		; 2474334aH
	jne	SHORT $LN2@GetInterfa

; 151  : 				return (void *) (ResourceMakerCallback*) this;

	cmp	QWORD PTR this$[rsp], 0
	je	SHORT $LN5@GetInterfa
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 144				; 00000090H
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN6@GetInterfa
$LN5@GetInterfa:
	mov	QWORD PTR tv69[rsp], 0
$LN6@GetInterfa:
	mov	rax, QWORD PTR tv69[rsp]
	jmp	SHORT $LN1@GetInterfa

; 152  : 			else

	jmp	SHORT $LN3@GetInterfa
$LN2@GetInterfa:

; 153  : 				return Texmap::GetInterface(id);

	mov	edx, DWORD PTR id$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?GetInterface@MtlBase@@UEAAPEAXK@Z
$LN3@GetInterfa:
$LN1@GetInterfa:

; 154  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?GetInterface@BerconTile@@UEAAPEAXK@Z ENDP		; BerconTile::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??1BerconTile@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconTile@@UEAA@XZ PROC				; BerconTile::~BerconTile, COMDAT

; 445  : BerconTile::~BerconTile() { DiscardTexHandle(); }

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTile@@6BReferenceTarget@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTile@@6BISubMap@@@
	mov	QWORD PTR [rax+64], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTile@@6B@
	mov	QWORD PTR [rax+144], rcx
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconTile@@QEAAXXZ	; BerconTile::DiscardTexHandle
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rcx, rax
	call	??1TilePattern@@QEAA@XZ			; TilePattern::~TilePattern
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	??1Texmap@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconTile@@UEAA@XZ ENDP				; BerconTile::~BerconTile
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA PROC		; `BerconTile::~BerconTile'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA ENDP		; `BerconTile::~BerconTile'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA PROC		; `BerconTile::~BerconTile'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 312				; 00000138H
	call	??1TilePattern@@QEAA@XZ			; TilePattern::~TilePattern
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA ENDP		; `BerconTile::~BerconTile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA PROC		; `BerconTile::~BerconTile'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconTile@@UEAA@XZ@4HA ENDP		; `BerconTile::~BerconTile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA PROC		; `BerconTile::~BerconTile'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 312				; 00000138H
	call	??1TilePattern@@QEAA@XZ			; TilePattern::~TilePattern
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1BerconTile@@UEAA@XZ@4HA ENDP		; `BerconTile::~BerconTile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ??0BerconTile@@QEAA@XZ
_TEXT	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
??0BerconTile@@QEAA@XZ PROC				; BerconTile::BerconTile, COMDAT

; 433  : BerconTile::BerconTile() {	

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0Texmap@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 144				; 00000090H
	mov	rcx, rax
	call	??0ResourceMakerCallback@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTile@@6BReferenceTarget@@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTile@@6BISubMap@@@
	mov	QWORD PTR [rax+64], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconTile@@6B@
	mov	QWORD PTR [rax+144], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 160				; 000000a0H
	mov	rcx, rax
	call	??0TileParam@@QEAA@XZ			; TileParam::TileParam
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rcx, rax
	call	??0TilePattern@@QEAA@XZ			; TilePattern::TilePattern
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	mov	rcx, rax
	call	??0BerconXYZ@@QEAA@XZ			; BerconXYZ::BerconXYZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 688				; 000002b0H
	lea	r9, OFFSET FLAT:??0Color@@QEAA@XZ	; Color::Color
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, rax
	call	??0Interval@@QEAA@XZ			; Interval::Interval
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 840				; 00000348H
	mov	rcx, rax
	call	??0Interval@@QEAA@XZ			; Interval::Interval

; 434  : 	for (int i=0; i<TILE_NSUBTEX; i++) subtex[i] = NULL;

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@BerconTile
$LN2@BerconTile:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@BerconTile:
	cmp	DWORD PTR i$1[rsp], 7
	jge	SHORT $LN3@BerconTile
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+rax*8+728], 0
	jmp	SHORT $LN2@BerconTile
$LN3@BerconTile:

; 435  : 	texHandle = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+832], 0

; 436  : 	pblock = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+400], 0

; 437  : 	pbMap = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+408], 0

; 438  : 	pbXYZ = NULL;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+416], 0

; 439  : 	BerconTileDesc.MakeAutoParamBlocks(this);	

	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	call	QWORD PTR __imp_?MakeAutoParamBlocks@ClassDesc2@@UEAAXPEAVReferenceMaker@@@Z

; 440  : 	texout = NULL;				

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+816], 0

; 441  : 	berconXYZ.mode2D = TRUE;

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+684], 1

; 442  : 	Reset();

	mov	rcx, QWORD PTR this$[rsp]
	call	?Reset@BerconTile@@UEAAXXZ		; BerconTile::Reset
	npad	1

; 443  : }

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconTile@@QEAA@XZ ENDP				; BerconTile::BerconTile
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA PROC		; `BerconTile::BerconTile'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA ENDP		; `BerconTile::BerconTile'::`1'::dtor$0
i$1 = 32
$T2 = 40
this$ = 64
?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA PROC		; `BerconTile::BerconTile'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 312				; 00000138H
	call	??1TilePattern@@QEAA@XZ			; TilePattern::~TilePattern
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA ENDP		; `BerconTile::BerconTile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA PROC		; `BerconTile::BerconTile'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Texmap@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconTile@@QEAA@XZ@4HA ENDP		; `BerconTile::BerconTile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
$T2 = 40
this$ = 64
?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA PROC		; `BerconTile::BerconTile'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 312				; 00000138H
	call	??1TilePattern@@QEAA@XZ			; TilePattern::~TilePattern
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0BerconTile@@QEAA@XZ@4HA ENDP		; `BerconTile::BerconTile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?DeleteThis@BerconTile@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconTile@@UEAAXXZ PROC			; BerconTile::DeleteThis, COMDAT

; 143  : 		void DeleteThis() { delete this; }		

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconTile@@UEAAXXZ ENDP			; BerconTile::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z
_TEXT	SEGMENT
this$ = 48
id$ = 56
?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z PROC ; BerconTile::GetParamBlockByID, COMDAT

; 137  : 		IParamBlock2* GetParamBlockByID(BlockID id) { 

$LN6:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 138  : 			if (pblock->ID() == id) return pblock;			

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN2@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	jmp	SHORT $LN1@GetParamBl
$LN2@GetParamBl:

; 139  : 			if (pbMap->ID() == id) return pbMap;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+408]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+408]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN3@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+408]
	jmp	SHORT $LN1@GetParamBl
$LN3@GetParamBl:

; 140  : 			if (pbXYZ->ID() == id) return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+416]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1384]
	cwde
	movsx	ecx, WORD PTR id$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN4@GetParamBl
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	jmp	SHORT $LN1@GetParamBl
$LN4@GetParamBl:

; 141  : 			return NULL;			

	xor	eax, eax
$LN1@GetParamBl:

; 142  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?GetParamBlockByID@BerconTile@@UEAAPEAVIParamBlock2@@F@Z ENDP ; BerconTile::GetParamBlockByID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z PROC ; BerconTile::GetParamBlock, COMDAT

; 136  : 		IParamBlock2* GetParamBlock(int i) { switch (i) { case 0: return pblock; case 1: return pbMap; case 2: return pbXYZ; } return NULL; }

$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@GetParamBl
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@GetParamBl
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN6@GetParamBl
	jmp	SHORT $LN2@GetParamBl
$LN4@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	jmp	SHORT $LN1@GetParamBl
$LN5@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+408]
	jmp	SHORT $LN1@GetParamBl
$LN6@GetParamBl:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	jmp	SHORT $LN1@GetParamBl
$LN2@GetParamBl:
	xor	eax, eax
$LN1@GetParamBl:
	add	rsp, 24
	ret	0
?GetParamBlock@BerconTile@@UEAAPEAVIParamBlock2@@H@Z ENDP ; BerconTile::GetParamBlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?NumParamBlocks@BerconTile@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumParamBlocks@BerconTile@@UEAAHXZ PROC		; BerconTile::NumParamBlocks, COMDAT

; 135  : 		int	NumParamBlocks() { return 3; } // return number of ParamBlocks in this instance

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3
	ret	0
?NumParamBlocks@BerconTile@@UEAAHXZ ENDP		; BerconTile::NumParamBlocks
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
rtarg$ = 48
?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z PROC ; BerconTile::SetReference, COMDAT

; 762  : void BerconTile::SetReference(int i, RefTargetHandle rtarg) {	

$LN10:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 763  : 	switch(i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@SetReferen
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@SetReferen
	cmp	DWORD PTR tv64[rsp], 9
	je	SHORT $LN6@SetReferen
	cmp	DWORD PTR tv64[rsp], 10
	je	SHORT $LN7@SetReferen
	jmp	SHORT $LN8@SetReferen
$LN4@SetReferen:

; 764  : 		case COORD_REF: pbXYZ = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+416], rcx
	jmp	SHORT $LN2@SetReferen
$LN5@SetReferen:

; 765  : 		case PBLOCK_REF: pblock = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+400], rcx
	jmp	SHORT $LN2@SetReferen
$LN6@SetReferen:

; 766  : 		case OUTPUT_REF: texout = (TextureOutput *)rtarg; break;		

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+816], rcx
	jmp	SHORT $LN2@SetReferen
$LN7@SetReferen:

; 767  : 		case PBMAP_REF: pbMap = (IParamBlock2 *)rtarg; break;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rax+408], rcx
	jmp	SHORT $LN2@SetReferen
$LN8@SetReferen:

; 768  : 		default: subtex[i-2] = (Texmap *)rtarg; break;

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR rtarg$[rsp]
	mov	QWORD PTR [rcx+rax*8+728], rdx
$LN2@SetReferen:

; 769  : 	}
; 770  : }

	add	rsp, 24
	ret	0
?SetReference@BerconTile@@UEAAXHPEAVReferenceTarget@@@Z ENDP ; BerconTile::SetReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z PROC ; BerconTile::GetReference, COMDAT

; 752  : RefTargetHandle BerconTile::GetReference(int i)  {

$LN10:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 753  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@GetReferen
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@GetReferen
	cmp	DWORD PTR tv64[rsp], 9
	je	SHORT $LN6@GetReferen
	cmp	DWORD PTR tv64[rsp], 10
	je	SHORT $LN7@GetReferen
	jmp	SHORT $LN8@GetReferen
$LN4@GetReferen:

; 754  : 		case COORD_REF: return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	jmp	SHORT $LN1@GetReferen
$LN5@GetReferen:

; 755  : 		case PBLOCK_REF: return pblock;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	jmp	SHORT $LN1@GetReferen
$LN6@GetReferen:

; 756  : 		case OUTPUT_REF: return texout;		

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+816]
	jmp	SHORT $LN1@GetReferen
$LN7@GetReferen:

; 757  : 		case PBMAP_REF: return pbMap;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+408]
	jmp	SHORT $LN1@GetReferen
$LN8@GetReferen:

; 758  : 		default: return subtex[i-2];

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+728]
$LN1@GetReferen:

; 759  : 	}
; 760  : }

	add	rsp, 24
	ret	0
?GetReference@BerconTile@@UEAAPEAVReferenceTarget@@H@Z ENDP ; BerconTile::GetReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?NumRefs@BerconTile@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumRefs@BerconTile@@UEAAHXZ PROC			; BerconTile::NumRefs, COMDAT

; 131  : 		int NumRefs() { return 11; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 11
	ret	0
?NumRefs@BerconTile@@UEAAHXZ ENDP			; BerconTile::NumRefs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z
_TEXT	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z PROC		; BerconTile::SubAnimName, COMDAT

; 799  : TSTR BerconTile::SubAnimName(int i) {	

$LN12:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 800  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 9
	je	SHORT $LN6@SubAnimNam
	cmp	DWORD PTR tv64[rsp], 10
	je	$LN7@SubAnimNam
	jmp	$LN8@SubAnimNam
$LN4@SubAnimNam:

; 801  : 		case COORD_REF: return GetString(IDS_COORDS);		

	mov	ecx, 7
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN5@SubAnimNam:

; 802  : 		case PBLOCK_REF: return GetString(IDS_PARAMS);		

	mov	ecx, 4
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@SubAnimNam
$LN6@SubAnimNam:

; 803  : 		case OUTPUT_REF: return GetString(IDS_OUTPUT);

	mov	ecx, 8
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@SubAnimNam
$LN7@SubAnimNam:

; 804  : 		case PBMAP_REF: return GetString(IDS_PBMAP);

	mov	ecx, 72					; 00000048H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@SubAnimNam
$LN8@SubAnimNam:

; 805  : 		default: return GetSubTexmapTVName(i-2);

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 64					; 00000040H
	mov	r8d, eax
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_?GetSubTexmapTVName@ISubMap@@QEAA?AVWStr@@H@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@SubAnimNam:

; 806  : 	}
; 807  : }

	add	rsp, 56					; 00000038H
	ret	0
	int	3
?SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z ENDP		; BerconTile::SubAnimName
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconTile::SubAnimName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN11@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN11@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconTile::SubAnimName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconTile::SubAnimName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN11@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN11@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??SubAnimName@BerconTile@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconTile::SubAnimName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z
_TEXT	SEGMENT
tv64 = 0
this$ = 32
i$ = 40
?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z PROC	; BerconTile::SubAnim, COMDAT

; 789  : Animatable* BerconTile::SubAnim(int i) {

$LN10:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 790  : 	switch (i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN4@SubAnim
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN5@SubAnim
	cmp	DWORD PTR tv64[rsp], 9
	je	SHORT $LN6@SubAnim
	cmp	DWORD PTR tv64[rsp], 10
	je	SHORT $LN7@SubAnim
	jmp	SHORT $LN8@SubAnim
$LN4@SubAnim:

; 791  : 		case COORD_REF: return pbXYZ;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	jmp	SHORT $LN1@SubAnim
$LN5@SubAnim:

; 792  : 		case PBLOCK_REF: return pblock;	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	jmp	SHORT $LN1@SubAnim
$LN6@SubAnim:

; 793  : 		case OUTPUT_REF: return texout;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+816]
	jmp	SHORT $LN1@SubAnim
$LN7@SubAnim:

; 794  : 		case PBMAP_REF: return pbMap;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+408]
	jmp	SHORT $LN1@SubAnim
$LN8@SubAnim:

; 795  : 		default: return subtex[i-2];

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+728]
$LN1@SubAnim:

; 796  : 	}
; 797  : }

	add	rsp, 24
	ret	0
?SubAnim@BerconTile@@UEAAPEAVAnimatable@@H@Z ENDP	; BerconTile::SubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?NumSubs@BerconTile@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSubs@BerconTile@@UEAAHXZ PROC			; BerconTile::NumSubs, COMDAT

; 127  : 		int NumSubs() { return 11; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 11
	ret	0
?NumSubs@BerconTile@@UEAAHXZ ENDP			; BerconTile::NumSubs
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z
_TEXT	SEGMENT
changing_param$1 = 32
changing_param$2 = 36
tv64 = 40
this$ = 64
changeInt$ = 72
hTarget$ = 80
partID$ = 88
message$ = 96
propagate$ = 104
?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z PROC ; BerconTile::NotifyRefChanged, COMDAT

; 809  : RefResult BerconTile::NotifyRefChanged(NOTIFY_REF_CHANGED_ARGS) {

$LN11:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 810  : 	switch (message) {

	mov	eax, DWORD PTR message$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 80			; 00000050H
	je	SHORT $LN4@NotifyRefC
	jmp	$LN2@NotifyRefC
$LN4@NotifyRefC:

; 811  : 		case REFMSG_CHANGE:
; 812  : 			ivalid.SetEmpty();			

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 813  : 			if (hTarget == pblock) {

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN5@NotifyRefC

; 814  : 				ParamID changing_param = pblock->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$1[rsp], ax

; 815  : 				BerconTile_param_blk.InvalidateUI(changing_param);				

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$1[rsp]
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 816  : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$1[rsp]
	cmp	eax, -1
	je	SHORT $LN7@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconTile@@QEAAXXZ	; BerconTile::DiscardTexHandle
$LN7@NotifyRefC:

; 817  : 			}  else if (hTarget == pbXYZ) {

	jmp	SHORT $LN6@NotifyRefC
$LN5@NotifyRefC:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	cmp	QWORD PTR hTarget$[rsp], rax
	jne	SHORT $LN8@NotifyRefC

; 818  : 				ParamID changing_param = pbXYZ->LastNotifyParamID();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+416]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+416]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+2288]
	mov	WORD PTR changing_param$2[rsp], ax

; 819  : 				xyz_blk.InvalidateUI(changing_param);				

	mov	r8d, -1
	movzx	edx, WORD PTR changing_param$2[rsp]
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 820  : 				if (changing_param != -1) DiscardTexHandle();

	movsx	eax, WORD PTR changing_param$2[rsp]
	cmp	eax, -1
	je	SHORT $LN9@NotifyRefC
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconTile@@QEAAXXZ	; BerconTile::DiscardTexHandle
$LN9@NotifyRefC:
$LN8@NotifyRefC:
$LN6@NotifyRefC:
$LN2@NotifyRefC:

; 821  : 			}
; 822  : 			break;
; 823  : 		}
; 824  : 	return(REF_SUCCEED);

	mov	eax, 1

; 825  : }

	add	rsp, 56					; 00000038H
	ret	0
?NotifyRefChanged@BerconTile@@UEAA?AW4RefResult@@AEBVInterval@@PEAVReferenceTarget@@AEA_KIH@Z ENDP ; BerconTile::NotifyRefChanged
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z
_TEXT	SEGMENT
i$1 = 32
mnew$ = 40
$T2 = 48
tv76 = 56
$T3 = 64
tv249 = 72
$T4 = 80
this$ = 112
remap$ = 120
?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z PROC ; BerconTile::Clone, COMDAT

; 772  : RefTargetHandle BerconTile::Clone(RemapDir &remap) {

$LN10:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	QWORD PTR $T4[rsp], -2

; 773  : 	BerconTile *mnew = new BerconTile();

	mov	ecx, 848				; 00000350H
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN7@Clone
	mov	edx, 848				; 00000350H
	mov	rcx, QWORD PTR $T2[rsp]
	call	?__autoclassinit2@BerconTile@@QEAAX_K@Z
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0BerconTile@@QEAA@XZ			; BerconTile::BerconTile
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN8@Clone
$LN7@Clone:
	mov	QWORD PTR tv76[rsp], 0
$LN8@Clone:
	mov	rax, QWORD PTR tv76[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR mnew$[rsp], rax

; 774  : 	*((MtlBase*)mnew) = *((MtlBase*)this); // copy superclass stuff

	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_??4MtlBase@@QEAAAEAV0@AEBV0@@Z

; 775  : 	mnew->ReplaceReference(COORD_REF,remap.CloneRef(pbXYZ));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+416]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 776  : 	mnew->ReplaceReference(OUTPUT_REF,remap.CloneRef(texout));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+816]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 9
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 777  : 	mnew->ReplaceReference(PBLOCK_REF,remap.CloneRef(pblock));	

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+400]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 1
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 778  : 	mnew->ReplaceReference(PBMAP_REF,remap.CloneRef(pbMap));

	mov	rax, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+408]
	mov	rcx, QWORD PTR remap$[rsp]
	call	QWORD PTR [rax+8]
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 10
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 779  : 	mnew->ivalid.SetEmpty();		

	mov	rax, QWORD PTR mnew$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 780  : 	for (int i = 0; i<TILE_NSUBTEX; i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Clone
$LN2@Clone:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Clone:
	cmp	DWORD PTR i$1[rsp], 7
	jge	SHORT $LN3@Clone

; 781  : 		mnew->subtex[i] = NULL;

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR mnew$[rsp]
	mov	QWORD PTR [rcx+rax*8+728], 0

; 782  : 		if (subtex[i])

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+728], 0
	je	SHORT $LN5@Clone

; 783  : 			mnew->ReplaceReference(i+2,remap.CloneRef(subtex[i]));		

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR remap$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv249[rsp], rcx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+rax*8+728]
	mov	rcx, QWORD PTR remap$[rsp]
	mov	rax, QWORD PTR tv249[rsp]
	call	QWORD PTR [rax+8]
	mov	ecx, DWORD PTR i$1[rsp]
	add	ecx, 2
	mov	r9d, 1
	mov	r8, rax
	mov	edx, ecx
	mov	rcx, QWORD PTR mnew$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z
$LN5@Clone:

; 784  : 	}

	jmp	$LN2@Clone
$LN3@Clone:

; 785  : 	BaseClone(this, mnew, remap);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9, QWORD PTR remap$[rsp]
	mov	r8, QWORD PTR mnew$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1320]

; 786  : 	return (RefTargetHandle)mnew;

	mov	rax, QWORD PTR mnew$[rsp]

; 787  : }

	add	rsp, 104				; 00000068H
	ret	0
?Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z ENDP ; BerconTile::Clone
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
mnew$ = 40
$T2 = 48
tv76 = 56
$T3 = 64
tv249 = 72
$T4 = 80
this$ = 112
remap$ = 120
?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA PROC ; `BerconTile::Clone'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA ENDP ; `BerconTile::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
mnew$ = 40
$T2 = 48
tv76 = 56
$T3 = 64
tv249 = 72
$T4 = 80
this$ = 112
remap$ = 120
?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA PROC ; `BerconTile::Clone'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Clone@BerconTile@@UEAAPEAVReferenceTarget@@AEAVRemapDir@@@Z@4HA ENDP ; `BerconTile::Clone'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z
_TEXT	SEGMENT
this$ = 48
s$ = 56
?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z PROC	; BerconTile::GetClassName, COMDAT

; 122  : 		void GetClassName(TSTR& s) {s = GetString(IDS_BERCON_TILE);}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	ecx, 52					; 00000034H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR s$[rsp]
	call	QWORD PTR __imp_??4WStr@@QEAAAEAV0@PEB_W@Z
	add	rsp, 40					; 00000028H
	ret	0
?GetClassName@BerconTile@@UEAAXAEAVWStr@@@Z ENDP	; BerconTile::GetClassName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?SuperClassID@BerconTile@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?SuperClassID@BerconTile@@UEAAKXZ PROC			; BerconTile::SuperClassID, COMDAT

; 121  : 		SClass_ID SuperClassID() { return TEXMAP_CLASS_ID; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3088				; 00000c10H
	ret	0
?SuperClassID@BerconTile@@UEAAKXZ ENDP			; BerconTile::SuperClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ PROC		; BerconTile::ClassID, COMDAT

; 120  : 		Class_ID ClassID() {return BerconTile_CLASS_ID;}		

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8d, 738369057				; 2c029e21H
	mov	edx, 2092439444				; 7cb81794H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@BerconTile@@UEAA?AVClass_ID@@XZ ENDP		; BerconTile::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?SubNumToRefNum@BerconTile@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?SubNumToRefNum@BerconTile@@UEAAHH@Z PROC		; BerconTile::SubNumToRefNum, COMDAT

; 115  : 		int SubNumToRefNum(int subNum) { return subNum; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, DWORD PTR subNum$[rsp]
	ret	0
?SubNumToRefNum@BerconTile@@UEAAHH@Z ENDP		; BerconTile::SubNumToRefNum
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
f2$ = 32
f1$ = 36
$T1 = 40
$T2 = 48
$T3 = 56
tv214 = 64
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 96
$T8 = 104
tv516 = 112
tv524 = 120
$T9 = 128
tv537 = 136
tv349 = 144
$T10 = 152
$T11 = 160
$T12 = 172
$T13 = 184
$T14 = 200
$T15 = 216
$T16 = 232
$T17 = 248
$T18 = 264
$T19 = 280
$T20 = 296
$T21 = 308
$T22 = 320
$T23 = 332
$T24 = 344
$T25 = 360
$T26 = 376
$T27 = 392
$T28 = 408
$T29 = 424
$T30 = 436
$T31 = 448
$T32 = 464
$T33 = 480
$T34 = 496
$T35 = 508
$T36 = 520
$T37 = 532
$T38 = 544
$T39 = 556
$T40 = 568
$T41 = 580
np$ = 592
tp$ = 608
p$ = 640
v2$ = 656
v1$ = 672
tp1$42 = 688
tp2$43 = 720
tp1$44 = 752
tp2$45 = 784
tp3$46 = 816
t$ = 848
bsc$47 = 992
M$ = 1696
__$ArrayPad$ = 1736
this$ = 1776
__$ReturnUdt$ = 1784
sc$ = 1792
?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z PROC ; BerconTile::EvalNormalPerturb, COMDAT

; 917  : Point3 BerconTile::EvalNormalPerturb(ShadeContext& sc) {	

$LN29:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 1752				; 000006d8H
	mov	QWORD PTR $T10[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 918  : 	
; 919  : 	if (!sc.doMaps) return Point3(0,0,0);

	mov	rax, QWORD PTR sc$[rsp]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN2@EvalNormal
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@HHH@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN2@EvalNormal:

; 920  : 	if (gbufID) sc.SetGBufferID(gbufID);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN3@EvalNormal
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rcx+120]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+464]
$LN3@EvalNormal:

; 921  : 
; 922  : 	// Evaulate maps and tiling parameters
; 923  : 	TileParam t	= EvalParameters(sc);

	mov	edx, 136				; 00000088H
	lea	rcx, QWORD PTR t$[rsp]
	call	?__autoclassinit2@TileParam@@QEAAX_K@Z
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z ; BerconTile::EvalParameters

; 924  : 
; 925  : 	// UVW, Distortion and size
; 926  : 	Point3 p;

	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 927  : 	Point3 M[3];

	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	lea	rcx, QWORD PTR M$[rsp]
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 928  : 	berconXYZ.get(sc, p, M);	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	lea	r9, QWORD PTR M$[rsp]
	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, rax
	call	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@PEAV3@@Z ; BerconXYZ::get

; 929  : 
; 930  : 	if (useDistortion) p += getDistVector(sc);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+388], 0
	je	SHORT $LN4@EvalNormal
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T15[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z ; BerconTile::getDistVector
	mov	rdx, rax
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z
$LN4@EvalNormal:

; 931  : 	p /= tileSize;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+152]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??_0Point3@@QEAAAEAV0@M@Z

; 932  : 
; 933  : 	TilePoint tp =  Tile::draw(p, t);

	lea	rax, QWORD PTR $T16[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp$[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw

; 934  : 	if (tp.d < 0) return getNormal(sc, 1);

	movss	xmm0, DWORD PTR tp$[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN5@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN5@EvalNormal:

; 935  : 
; 936  : 	Point3 np;

	lea	rcx, QWORD PTR np$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 937  : 	if (berconXYZ.req()) {		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	mov	rcx, rax
	call	?req@BerconXYZ@@QEAAKXZ			; BerconXYZ::req
	test	eax, eax
	je	$LN6@EvalNormal

; 938  : 		TilePoint tp1 = Tile::draw(p + Point3(DELTA,0.f,0.f), t); if (tp1.d < 0) return getNormal(sc, 1);				

	lea	rax, QWORD PTR $T17[rsp]
	mov	QWORD PTR $T2[rsp], rax
	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T18[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	r8, rax
	mov	rdx, QWORD PTR $T2[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp1$42[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw
	movss	xmm0, DWORD PTR tp1$42[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN8@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN8@EvalNormal:

; 939  : 		TilePoint tp2 = Tile::draw(p + Point3(0.f,DELTA,0.f), t); if (tp2.d < 0) return getNormal(sc, 1);

	lea	rax, QWORD PTR $T19[rsp]
	mov	QWORD PTR $T3[rsp], rax
	xorps	xmm3, xmm3
	movss	xmm2, DWORD PTR __real@3a83126f
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T20[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	r8, rax
	mov	rdx, QWORD PTR $T3[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp2$43[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw
	movss	xmm0, DWORD PTR tp2$43[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN9@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN9@EvalNormal:

; 940  : 		np.x = (tp1.d - tp.d) / DELTA;

	movss	xmm0, DWORD PTR tp1$42[rsp+24]
	subss	xmm0, DWORD PTR tp$[rsp+24]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR np$[rsp], xmm0

; 941  : 		np.y = (tp2.d - tp.d) / DELTA;

	movss	xmm0, DWORD PTR tp2$43[rsp+24]
	subss	xmm0, DWORD PTR tp$[rsp+24]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR np$[rsp+4], xmm0

; 942  : 		np = M[0]*np.x + M[1]*np.y;

	mov	eax, 12
	imul	rax, rax, 1
	lea	rax, QWORD PTR M$[rsp+rax]
	movss	xmm2, DWORD PTR np$[rsp+4]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T21[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	QWORD PTR tv214[rsp], rax
	mov	ecx, 12
	imul	rcx, rcx, 0
	lea	rcx, QWORD PTR M$[rsp+rcx]
	movss	xmm2, DWORD PTR np$[rsp]
	mov	rdx, rcx
	lea	rcx, QWORD PTR $T22[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	rcx, QWORD PTR tv214[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T23[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rcx, QWORD PTR np$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 943  : 	} else {

	jmp	$LN7@EvalNormal
$LN6@EvalNormal:

; 944  : 		TilePoint tp1 = Tile::draw(p + DELTA*M[0], t); if (tp1.d < 0) return getNormal(sc, 1);				

	lea	rax, QWORD PTR $T24[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	eax, 12
	imul	rax, rax, 0
	lea	rax, QWORD PTR M$[rsp+rax]
	mov	r8, rax
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T25[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp1$44[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw
	movss	xmm0, DWORD PTR tp1$44[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN10@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN10@EvalNormal:

; 945  : 		TilePoint tp2 = Tile::draw(p + DELTA*M[1], t); if (tp2.d < 0) return getNormal(sc, 1);

	lea	rax, QWORD PTR $T26[rsp]
	mov	QWORD PTR $T5[rsp], rax
	mov	eax, 12
	imul	rax, rax, 1
	lea	rax, QWORD PTR M$[rsp+rax]
	mov	r8, rax
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T27[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T5[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp2$45[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw
	movss	xmm0, DWORD PTR tp2$45[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN11@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN11@EvalNormal:

; 946  : 		TilePoint tp3 = Tile::draw(p + DELTA*M[2], t); if (tp3.d < 0) return getNormal(sc, 1);	

	lea	rax, QWORD PTR $T28[rsp]
	mov	QWORD PTR $T6[rsp], rax
	mov	eax, 12
	imul	rax, rax, 2
	lea	rax, QWORD PTR M$[rsp+rax]
	mov	r8, rax
	movss	xmm1, DWORD PTR __real@3a83126f
	lea	rcx, QWORD PTR $T29[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	r8, rax
	mov	rdx, QWORD PTR $T6[rsp]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp3$46[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw
	movss	xmm0, DWORD PTR tp3$46[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN12@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalNormal
$LN12@EvalNormal:

; 947  : 		np.x = (tp1.d - tp.d) / DELTA;

	movss	xmm0, DWORD PTR tp1$44[rsp+24]
	subss	xmm0, DWORD PTR tp$[rsp+24]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR np$[rsp], xmm0

; 948  : 		np.y = (tp2.d - tp.d) / DELTA;

	movss	xmm0, DWORD PTR tp2$45[rsp+24]
	subss	xmm0, DWORD PTR tp$[rsp+24]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR np$[rsp+4], xmm0

; 949  : 		np.z = (tp3.d - tp.d) / DELTA;

	movss	xmm0, DWORD PTR tp3$46[rsp+24]
	subss	xmm0, DWORD PTR tp$[rsp+24]
	divss	xmm0, DWORD PTR __real@3a83126f
	movss	DWORD PTR np$[rsp+8], xmm0

; 950  : 		np = -sc.VectorFromNoScale(np, REF_OBJECT);

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r9d, 2
	lea	r8, QWORD PTR np$[rsp]
	lea	rdx, QWORD PTR $T30[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+456]
	lea	rdx, QWORD PTR $T31[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??GPoint3@@QEBA?AV0@XZ
	lea	rcx, QWORD PTR np$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
$LN7@EvalNormal:

; 951  : 	}
; 952  : 	
; 953  : 	// Eval sub maps
; 954  : 	float f1, f2;
; 955  : 	Point3 v1, v2;

	lea	rcx, QWORD PTR v1$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	lea	rcx, QWORD PTR v2$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 956  : 
; 957  : 	if (tileParam.mapUV || tileParam.tileID || tileParam.center) { // Then if we map UV coordinates

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+220], 0
	jne	SHORT $LN15@EvalNormal
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+260], 0
	jne	SHORT $LN15@EvalNormal
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+264], 0
	je	$LN13@EvalNormal
$LN15@EvalNormal:

; 958  : 			
; 959  : 		BerconSC bsc = BerconSC(&sc);			

	mov	edx, 696				; 000002b8H
	lea	rcx, QWORD PTR bsc$47[rsp]
	call	?__autoclassinit2@BerconSC@@QEAAX_K@Z
	mov	rdx, QWORD PTR sc$[rsp]
	lea	rcx, QWORD PTR bsc$47[rsp]
	call	??0BerconSC@@QEAA@QEAVShadeContext@@@Z	; BerconSC::BerconSC
	npad	1

; 960  : 		if (tileParam.mapUV)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+220], 0
	je	SHORT $LN16@EvalNormal

; 961  : 			bsc.setUV1(tp.uvw, uvChan);

	lea	rax, QWORD PTR $T32[rsp]
	mov	QWORD PTR $T7[rsp], rax
	lea	rdx, QWORD PTR tp$[rsp+12]
	mov	rcx, QWORD PTR $T7[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+300]
	mov	rdx, rax
	lea	rcx, QWORD PTR bsc$47[rsp]
	call	?setUV1@BerconSC@@QEAAXVPoint3@@H@Z	; BerconSC::setUV1
$LN16@EvalNormal:

; 962  : 		if (tileParam.center)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+264], 0
	je	SHORT $LN17@EvalNormal

; 963  : 			bsc.setUV2(tp.center, uvChan2);

	lea	rax, QWORD PTR $T33[rsp]
	mov	QWORD PTR $T8[rsp], rax
	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR $T8[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+304]
	mov	rdx, rax
	lea	rcx, QWORD PTR bsc$47[rsp]
	call	?setUV2@BerconSC@@QEAAXVPoint3@@H@Z	; BerconSC::setUV2
$LN17@EvalNormal:

; 964  : 		if (tileParam.tileID)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+260], 0
	je	SHORT $LN18@EvalNormal

; 965  : 			bsc.setMultiTexture((float)tp.id);

	cvtsi2ss xmm0, DWORD PTR tp$[rsp+28]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bsc$47[rsp]
	call	?setMultiTexture@BerconSC@@QEAAXM@Z	; BerconSC::setMultiTexture
$LN18@EvalNormal:

; 966  : 
; 967  : 		              f1 = getFloat(bsc, 0);

	xor	r8d, r8d
	lea	rdx, QWORD PTR bsc$47[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
	movss	DWORD PTR f1$[rsp], xmm0

; 968  : 		if (lockEdge) f2 = getFloat(bsc, 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN19@EvalNormal
	mov	r8d, 1
	lea	rdx, QWORD PTR bsc$47[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
	movss	DWORD PTR f2$[rsp], xmm0
	jmp	SHORT $LN20@EvalNormal
$LN19@EvalNormal:

; 969  : 		else		  f2 = getFloat(bsc, 2);

	mov	r8d, 2
	lea	rdx, QWORD PTR bsc$47[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
	movss	DWORD PTR f2$[rsp], xmm0
$LN20@EvalNormal:

; 970  : 
; 971  : 		              v1 = getNormal(bsc, 0);

	xor	r9d, r9d
	lea	r8, QWORD PTR bsc$47[rsp]
	lea	rdx, QWORD PTR $T34[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	lea	rcx, QWORD PTR v1$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 972  : 		if (lockEdge) v2 = getNormal(bsc, 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN21@EvalNormal
	mov	r9d, 1
	lea	r8, QWORD PTR bsc$47[rsp]
	lea	rdx, QWORD PTR $T35[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	lea	rcx, QWORD PTR v2$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	jmp	SHORT $LN22@EvalNormal
$LN21@EvalNormal:

; 973  : 		else		  v2 = getNormal(bsc, 2);

	mov	r9d, 2
	lea	r8, QWORD PTR bsc$47[rsp]
	lea	rdx, QWORD PTR $T36[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	lea	rcx, QWORD PTR v2$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
$LN22@EvalNormal:

; 974  : 	} else { // And finally just normal eval

	lea	rcx, QWORD PTR bsc$47[rsp]
	call	??1BerconSC@@UEAA@XZ
	jmp	$LN14@EvalNormal
$LN13@EvalNormal:

; 975  : 		              f1 = getFloat(sc, 0);

	xor	r8d, r8d
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
	movss	DWORD PTR f1$[rsp], xmm0

; 976  : 		if (lockEdge) f2 = getFloat(sc, 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN23@EvalNormal
	mov	r8d, 1
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
	movss	DWORD PTR f2$[rsp], xmm0
	jmp	SHORT $LN24@EvalNormal
$LN23@EvalNormal:

; 977  : 		else		  f2 = getFloat(sc, 2);

	mov	r8d, 2
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ; BerconTile::getFloat
	movss	DWORD PTR f2$[rsp], xmm0
$LN24@EvalNormal:

; 978  : 
; 979  : 		              v1 = getNormal(sc, 0);

	xor	r9d, r9d
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T37[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	lea	rcx, QWORD PTR v1$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 980  : 		if (lockEdge) v2 = getNormal(sc, 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN25@EvalNormal
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T38[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	lea	rcx, QWORD PTR v2$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
	jmp	SHORT $LN14@EvalNormal
$LN25@EvalNormal:

; 981  : 		else		  v2 = getNormal(sc, 2);

	mov	r9d, 2
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T39[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ; BerconTile::getNormal
	lea	rcx, QWORD PTR v2$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
$LN14@EvalNormal:

; 982  : 	}
; 983  : 
; 984  : 	np = (f2-f1)*np + tp.d*v2 + (1.f-tp.d)*v1;

	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR tp$[rsp+24]
	lea	r8, QWORD PTR v1$[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T40[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	QWORD PTR tv524[rsp], rax
	lea	r8, QWORD PTR v2$[rsp]
	movss	xmm1, DWORD PTR tp$[rsp+24]
	lea	rcx, QWORD PTR $T41[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	QWORD PTR tv516[rsp], rax
	movss	xmm0, DWORD PTR f2$[rsp]
	subss	xmm0, DWORD PTR f1$[rsp]
	lea	r8, QWORD PTR np$[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T11[rsp]
	call	??D@YA?AVPoint3@@MAEBV0@@Z		; operator*
	mov	rcx, QWORD PTR tv516[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T12[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	mov	rcx, QWORD PTR tv524[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T13[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??HPoint3@@QEBA?AV0@AEBV0@@Z
	lea	rcx, QWORD PTR np$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb

; 985  : 	
; 986  : 	return texout->Filter(np); // Does this filter actually do something?*/

	lea	rax, QWORD PTR $T14[rsp]
	mov	QWORD PTR $T9[rsp], rax
	lea	rdx, QWORD PTR np$[rsp]
	mov	rcx, QWORD PTR $T9[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+816]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+816]
	mov	QWORD PTR tv537[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv349[rsp], rcx
	mov	r8, rax
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rax, QWORD PTR tv537[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv349[rsp]
	call	QWORD PTR [rax+1504]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalNormal:

; 987  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1752				; 000006d8H
	pop	rdi
	pop	rsi
	ret	0
?EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z ENDP ; BerconTile::EvalNormalPerturb
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
f2$ = 32
f1$ = 36
$T1 = 40
$T2 = 48
$T3 = 56
tv214 = 64
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 96
$T8 = 104
tv516 = 112
tv524 = 120
$T9 = 128
tv537 = 136
tv349 = 144
$T10 = 152
$T11 = 160
$T12 = 172
$T13 = 184
$T14 = 200
$T15 = 216
$T16 = 232
$T17 = 248
$T18 = 264
$T19 = 280
$T20 = 296
$T21 = 308
$T22 = 320
$T23 = 332
$T24 = 344
$T25 = 360
$T26 = 376
$T27 = 392
$T28 = 408
$T29 = 424
$T30 = 436
$T31 = 448
$T32 = 464
$T33 = 480
$T34 = 496
$T35 = 508
$T36 = 520
$T37 = 532
$T38 = 544
$T39 = 556
$T40 = 568
$T41 = 580
np$ = 592
tp$ = 608
p$ = 640
v2$ = 656
v1$ = 672
tp1$42 = 688
tp2$43 = 720
tp1$44 = 752
tp2$45 = 784
tp3$46 = 816
t$ = 848
bsc$47 = 992
M$ = 1696
__$ArrayPad$ = 1736
this$ = 1776
__$ReturnUdt$ = 1784
sc$ = 1792
?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA PROC ; `BerconTile::EvalNormalPerturb'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bsc$47[rbp]
	call	??1BerconSC@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA ENDP ; `BerconTile::EvalNormalPerturb'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
f2$ = 32
f1$ = 36
$T1 = 40
$T2 = 48
$T3 = 56
tv214 = 64
$T4 = 72
$T5 = 80
$T6 = 88
$T7 = 96
$T8 = 104
tv516 = 112
tv524 = 120
$T9 = 128
tv537 = 136
tv349 = 144
$T10 = 152
$T11 = 160
$T12 = 172
$T13 = 184
$T14 = 200
$T15 = 216
$T16 = 232
$T17 = 248
$T18 = 264
$T19 = 280
$T20 = 296
$T21 = 308
$T22 = 320
$T23 = 332
$T24 = 344
$T25 = 360
$T26 = 376
$T27 = 392
$T28 = 408
$T29 = 424
$T30 = 436
$T31 = 448
$T32 = 464
$T33 = 480
$T34 = 496
$T35 = 508
$T36 = 520
$T37 = 532
$T38 = 544
$T39 = 556
$T40 = 568
$T41 = 580
np$ = 592
tp$ = 608
p$ = 640
v2$ = 656
v1$ = 672
tp1$42 = 688
tp2$43 = 720
tp1$44 = 752
tp2$45 = 784
tp3$46 = 816
t$ = 848
bsc$47 = 992
M$ = 1696
__$ArrayPad$ = 1736
this$ = 1776
__$ReturnUdt$ = 1784
sc$ = 1792
?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA PROC ; `BerconTile::EvalNormalPerturb'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bsc$47[rbp]
	call	??1BerconSC@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??EvalNormalPerturb@BerconTile@@UEAA?AVPoint3@@AEAVShadeContext@@@Z@4HA ENDP ; `BerconTile::EvalNormalPerturb'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
sc$ = 72
?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z PROC	; BerconTile::EvalMono, COMDAT

; 910  : float BerconTile::EvalMono(ShadeContext& sc) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 911  : 	return Intens(EvalColor(sc));

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1504]
	mov	rcx, rax
	call	?Intens@@YAMAEBVAColor@@@Z		; Intens

; 912  : }

	add	rsp, 56					; 00000038H
	ret	0
?EvalMono@BerconTile@@UEAAMAEAVShadeContext@@@Z ENDP	; BerconTile::EvalMono
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
tv189 = 32
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
tv300 = 72
$T5 = 80
tv311 = 88
tv368 = 96
$T6 = 104
$T7 = 112
$T8 = 128
$T9 = 144
$T10 = 160
$T11 = 176
$T12 = 192
$T13 = 208
$T14 = 224
$T15 = 240
$T16 = 256
$T17 = 272
$T18 = 288
$T19 = 304
$T20 = 320
$T21 = 336
$T22 = 352
$T23 = 368
tp$ = 384
c$ = 416
p$ = 432
c2$24 = 448
c1$25 = 464
t$ = 480
bsc$26 = 624
__$ArrayPad$ = 1328
this$ = 1376
__$ReturnUdt$ = 1384
sc$ = 1392
?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z PROC ; BerconTile::EvalColor, COMDAT

; 854  : AColor BerconTile::EvalColor(ShadeContext& sc) {	

$LN22:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 1352				; 00000548H
	mov	QWORD PTR $T6[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 855  : 	Point3 p;	

	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 856  : 	if (!sc.doMaps) return black;

	mov	rax, QWORD PTR sc$[rsp]
	cmp	DWORD PTR [rax+12], 0
	jne	SHORT $LN2@EvalColor
	lea	rdx, OFFSET FLAT:?black@@3VAColor@@A
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN2@EvalColor:

; 857  : 
; 858  : 	// If we've already evalutated the color at this point we'll use it and stop here
; 859  : 	AColor c;

	lea	rcx, QWORD PTR c$[rsp]
	call	??0AColor@@QEAA@XZ			; AColor::AColor

; 860  : 	if (sc.GetCache(this,c)) 

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR c$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+504]
	test	eax, eax
	je	SHORT $LN3@EvalColor

; 861  : 		return c; 	

	lea	rdx, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalColor
$LN3@EvalColor:

; 862  : 	if (gbufID) sc.SetGBufferID(gbufID);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+120], 0
	je	SHORT $LN4@EvalColor
	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rcx+120]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+464]
$LN4@EvalColor:

; 863  : 
; 864  : 	// Evaulate maps and tiling parameters
; 865  : 	TileParam t	= EvalParameters(sc);

	mov	edx, 136				; 00000088H
	lea	rcx, QWORD PTR t$[rsp]
	call	?__autoclassinit2@TileParam@@QEAAX_K@Z
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z ; BerconTile::EvalParameters

; 866  : 
; 867  : 	// UVW, Distortion and size
; 868  : 	berconXYZ.get(sc,p);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	lea	r8, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR sc$[rsp]
	mov	rcx, rax
	call	?get@BerconXYZ@@QEAAHAEAVShadeContext@@AEAVPoint3@@@Z ; BerconXYZ::get

; 869  : 	if (useDistortion) p += getDistVector(sc);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+388], 0
	je	SHORT $LN5@EvalColor
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T7[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z ; BerconTile::getDistVector
	mov	rdx, rax
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z
$LN5@EvalColor:

; 870  : 	p /= tileSize;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+152]
	lea	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??_0Point3@@QEAAAEAV0@M@Z

; 871  : 
; 872  : 	// Caluclate tiling	
; 873  : 	TilePoint tp = Tile::draw(p, t);

	lea	rax, QWORD PTR $T8[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	lea	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp$[rsp]
	call	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw

; 874  : 
; 875  : 	// Calculate color	
; 876  : 	if (tp.d < -.5f) // First check if we are on edge		

	movss	xmm0, DWORD PTR tp$[rsp+24]
	comiss	xmm0, DWORD PTR __real@bf000000
	jae	$LN6@EvalColor

; 877  : 		c = mapOn[1]&&subtex[1]?subtex[1]->EvalColor(sc): col[1];

	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+784], 0
	je	SHORT $LN19@EvalColor
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+728], 0
	je	SHORT $LN19@EvalColor
	mov	eax, 8
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+728]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+728]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T11[rsp]
	call	QWORD PTR [rax+1504]
	mov	QWORD PTR tv189[rsp], rax
	jmp	SHORT $LN20@EvalColor
$LN19@EvalColor:
	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+688]
	movss	xmm2, DWORD PTR __real@3f800000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T12[rsp]
	call	??0AColor@@QEAA@AEBVColor@@M@Z		; AColor::AColor
	mov	QWORD PTR tv189[rsp], rax
$LN20@EvalColor:
	mov	rax, QWORD PTR tv189[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rax, QWORD PTR c$[rsp]
	mov	rdi, rax
	mov	rsi, QWORD PTR $T2[rsp]
	mov	ecx, 16
	rep movsb

; 878  : 	else {

	jmp	$LN7@EvalColor
$LN6@EvalColor:

; 879  : 		RGBA c1, c2;

	lea	rcx, QWORD PTR c1$25[rsp]
	call	??0AColor@@QEAA@XZ			; AColor::AColor
	lea	rcx, QWORD PTR c2$24[rsp]
	call	??0AColor@@QEAA@XZ			; AColor::AColor

; 880  : 
; 881  : 		if (tileParam.mapUV || tileParam.tileID || tileParam.center) { // Then if we map UV coordinates

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+220], 0
	jne	SHORT $LN10@EvalColor
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+260], 0
	jne	SHORT $LN10@EvalColor
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+264], 0
	je	$LN8@EvalColor
$LN10@EvalColor:

; 882  : 			
; 883  : 			BerconSC bsc = BerconSC(&sc);			

	mov	edx, 696				; 000002b8H
	lea	rcx, QWORD PTR bsc$26[rsp]
	call	?__autoclassinit2@BerconSC@@QEAAX_K@Z
	mov	rdx, QWORD PTR sc$[rsp]
	lea	rcx, QWORD PTR bsc$26[rsp]
	call	??0BerconSC@@QEAA@QEAVShadeContext@@@Z	; BerconSC::BerconSC
	npad	1

; 884  : 			if (tileParam.mapUV)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+220], 0
	je	SHORT $LN11@EvalColor

; 885  : 				bsc.setUV1(tp.uvw, uvChan);

	lea	rax, QWORD PTR $T9[rsp]
	mov	QWORD PTR $T3[rsp], rax
	lea	rdx, QWORD PTR tp$[rsp+12]
	mov	rcx, QWORD PTR $T3[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+300]
	mov	rdx, rax
	lea	rcx, QWORD PTR bsc$26[rsp]
	call	?setUV1@BerconSC@@QEAAXVPoint3@@H@Z	; BerconSC::setUV1
$LN11@EvalColor:

; 886  : 			if (tileParam.center)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+264], 0
	je	SHORT $LN12@EvalColor

; 887  : 				bsc.setUV2(tp.center, uvChan2);

	lea	rax, QWORD PTR $T10[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+304]
	mov	rdx, rax
	lea	rcx, QWORD PTR bsc$26[rsp]
	call	?setUV2@BerconSC@@QEAAXVPoint3@@H@Z	; BerconSC::setUV2
$LN12@EvalColor:

; 888  : 			if (tileParam.tileID)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+260], 0
	je	SHORT $LN13@EvalColor

; 889  : 				bsc.setMultiTexture((float)tp.id);

	cvtsi2ss xmm0, DWORD PTR tp$[rsp+28]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR bsc$26[rsp]
	call	?setMultiTexture@BerconSC@@QEAAXM@Z	; BerconSC::setMultiTexture
$LN13@EvalColor:

; 890  : 
; 891  : 			              c1 = getColor(bsc, 0);

	xor	r9d, r9d
	lea	r8, QWORD PTR bsc$26[rsp]
	lea	rdx, QWORD PTR $T13[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
	lea	rcx, QWORD PTR c1$25[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 892  : 			if (lockEdge) c2 = getColor(bsc, 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN14@EvalColor
	mov	r9d, 1
	lea	r8, QWORD PTR bsc$26[rsp]
	lea	rdx, QWORD PTR $T14[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
	lea	rcx, QWORD PTR c2$24[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN15@EvalColor
$LN14@EvalColor:

; 893  : 			else          c2 = getColor(bsc, 2);

	mov	r9d, 2
	lea	r8, QWORD PTR bsc$26[rsp]
	lea	rdx, QWORD PTR $T15[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
	lea	rcx, QWORD PTR c2$24[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN15@EvalColor:

; 894  : 		
; 895  : 		} else { // Normal eval

	lea	rcx, QWORD PTR bsc$26[rsp]
	call	??1BerconSC@@UEAA@XZ
	jmp	$LN9@EvalColor
$LN8@EvalColor:

; 896  : 			              c1 = getColor(sc, 0);

	xor	r9d, r9d
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T16[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
	lea	rcx, QWORD PTR c1$25[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 897  : 			if (lockEdge) c2 = getColor(sc, 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN16@EvalColor
	mov	r9d, 1
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T17[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
	lea	rcx, QWORD PTR c2$24[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN9@EvalColor
$LN16@EvalColor:

; 898  : 			else		  c2 = getColor(sc, 2);

	mov	r9d, 2
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T18[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ; BerconTile::getColor
	lea	rcx, QWORD PTR c2$24[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN9@EvalColor:

; 899  : 		}
; 900  : 		c = (1.0f-tp.d)*c2 + tp.d*c1;

	lea	r8, QWORD PTR c1$25[rsp]
	movss	xmm1, DWORD PTR tp$[rsp+24]
	lea	rcx, QWORD PTR $T19[rsp]
	call	??D@YA?AVAColor@@MAEBV0@@Z		; operator*
	mov	QWORD PTR tv300[rsp], rax
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR tp$[rsp+24]
	lea	r8, QWORD PTR c2$24[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T20[rsp]
	call	??D@YA?AVAColor@@MAEBV0@@Z		; operator*
	mov	rcx, QWORD PTR tv300[rsp]
	mov	r8, rcx
	lea	rdx, QWORD PTR $T21[rsp]
	mov	rcx, rax
	call	??HAColor@@QEBA?AV0@AEBV0@@Z		; AColor::operator+
	lea	rcx, QWORD PTR c$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN7@EvalColor:

; 901  : 	}
; 902  : 
; 903  : 	c = texout->Filter(c);

	lea	rax, QWORD PTR $T22[rsp]
	mov	QWORD PTR $T5[rsp], rax
	lea	rdx, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR $T5[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+816]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+816]
	mov	QWORD PTR tv311[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv368[rsp], rcx
	mov	r8, rax
	lea	rdx, QWORD PTR $T23[rsp]
	mov	rax, QWORD PTR tv311[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv368[rsp]
	call	QWORD PTR [rax+1520]
	lea	rcx, QWORD PTR c$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 16
	rep movsb

; 904  : 
; 905  : 	// Cache
; 906  : 	sc.PutCache(this,c); 

	mov	rax, QWORD PTR sc$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR c$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+528]

; 907  : 	return c;	

	lea	rdx, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalColor:

; 908  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1352				; 00000548H
	pop	rdi
	pop	rsi
	ret	0
?EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z ENDP ; BerconTile::EvalColor
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv189 = 32
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
tv300 = 72
$T5 = 80
tv311 = 88
tv368 = 96
$T6 = 104
$T7 = 112
$T8 = 128
$T9 = 144
$T10 = 160
$T11 = 176
$T12 = 192
$T13 = 208
$T14 = 224
$T15 = 240
$T16 = 256
$T17 = 272
$T18 = 288
$T19 = 304
$T20 = 320
$T21 = 336
$T22 = 352
$T23 = 368
tp$ = 384
c$ = 416
p$ = 432
c2$24 = 448
c1$25 = 464
t$ = 480
bsc$26 = 624
__$ArrayPad$ = 1328
this$ = 1376
__$ReturnUdt$ = 1384
sc$ = 1392
?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA PROC ; `BerconTile::EvalColor'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bsc$26[rbp]
	call	??1BerconSC@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA ENDP ; `BerconTile::EvalColor'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv189 = 32
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
tv300 = 72
$T5 = 80
tv311 = 88
tv368 = 96
$T6 = 104
$T7 = 112
$T8 = 128
$T9 = 144
$T10 = 160
$T11 = 176
$T12 = 192
$T13 = 208
$T14 = 224
$T15 = 240
$T16 = 256
$T17 = 272
$T18 = 288
$T19 = 304
$T20 = 320
$T21 = 336
$T22 = 352
$T23 = 368
tp$ = 384
c$ = 416
p$ = 432
c2$24 = 448
c1$25 = 464
t$ = 480
bsc$26 = 624
__$ArrayPad$ = 1328
this$ = 1376
__$ReturnUdt$ = 1384
sc$ = 1392
?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA PROC ; `BerconTile::EvalColor'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR bsc$26[rbp]
	call	??1BerconSC@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??EvalColor@BerconTile@@UEAA?AVAColor@@AEAVShadeContext@@@Z@4HA ENDP ; `BerconTile::EvalColor'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z
_TEXT	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z PROC	; BerconTile::GetSubTexmapSlotName, COMDAT

; 737  : TSTR BerconTile::GetSubTexmapSlotName(int i)  {	

$LN16:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 738  : 	switch(i) {

	mov	eax, DWORD PTR i$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 6
	ja	$LN11@GetSubTexm
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN15@GetSubTexm[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@GetSubTexm:

; 739  : 		case 0:  return TSTR(GetString(IDS_DS_COLOR1)); 

	mov	ecx, 1051				; 0000041bH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN5@GetSubTexm:

; 740  : 		case 1:  return TSTR(GetString(IDS_DS_COLOR2)); 

	mov	ecx, 1052				; 0000041cH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN6@GetSubTexm:

; 741  : 		case 2:  return TSTR(GetString(IDS_DS_COLOR3)); 

	mov	ecx, 41					; 00000029H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN7@GetSubTexm:

; 742  : 		case 3:  return TSTR(GetString(IDS_DISTORTION_MAP)); 

	mov	ecx, 13
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@GetSubTexm
$LN8@GetSubTexm:

; 743  : 		case 4:  return TSTR(GetString(IDS_DISTORTION_MAP2)); 

	mov	ecx, 38					; 00000026H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN9@GetSubTexm:

; 744  : 
; 745  : 		case BMAP1_NUM: return TSTR(GetString(IDS_MAP1)); 

	mov	ecx, 73					; 00000049H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN10@GetSubTexm:

; 746  : 		case BMAP2_NUM: return TSTR(GetString(IDS_MAP2)); 

	mov	ecx, 74					; 0000004aH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@GetSubTexm
$LN11@GetSubTexm:

; 747  : 
; 748  : 		default: return TSTR(_T(""));

	lea	rdx, OFFSET FLAT:$SG219788
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0WStr@@QEAA@PEB_W@Z
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@GetSubTexm:

; 749  : 	}
; 750  : }

	add	rsp, 56					; 00000038H
	ret	0
	int	3
	npad	3
$LN15@GetSubTexm:
	DD	$LN4@GetSubTexm
	DD	$LN5@GetSubTexm
	DD	$LN6@GetSubTexm
	DD	$LN7@GetSubTexm
	DD	$LN8@GetSubTexm
	DD	$LN9@GetSubTexm
	DD	$LN10@GetSubTexm
?GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z ENDP	; BerconTile::GetSubTexmapSlotName
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconTile::GetSubTexmapSlotName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN14@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN14@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconTile::GetSubTexmapSlotName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv64 = 36
$T2 = 40
this$ = 64
__$ReturnUdt$ = 72
i$ = 80
?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA PROC ; `BerconTile::GetSubTexmapSlotName'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN14@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	QWORD PTR __imp_??1WStr@@QEAA@XZ
$LN14@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??GetSubTexmapSlotName@BerconTile@@UEAA?AVWStr@@H@Z@4HA ENDP ; `BerconTile::GetSubTexmapSlotName'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
m$ = 64
?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z PROC	; BerconTile::SetSubTexmap, COMDAT

; 712  : void BerconTile::SetSubTexmap(int i, Texmap *m)  {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 713  : 	ReplaceReference(i+2,m);

	mov	eax, DWORD PTR i$[rsp]
	add	eax, 2
	mov	rcx, QWORD PTR this$[rsp]
	sub	rcx, 64					; 00000040H
	mov	r9d, 1
	mov	r8, QWORD PTR m$[rsp]
	mov	edx, eax
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z

; 714  : 	if (i==0) {

	cmp	DWORD PTR i$[rsp], 0
	jne	SHORT $LN2@SetSubTexm

; 715  : 		BerconTile_param_blk.InvalidateUI(noise_map1);

	mov	r8d, -1
	mov	dx, 36					; 00000024H
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 716  : 		ivalid.SetEmpty();		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 760				; 000002f8H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	$LN3@SetSubTexm
$LN2@SetSubTexm:

; 717  : 	} else if (i==1) {

	cmp	DWORD PTR i$[rsp], 1
	jne	SHORT $LN4@SetSubTexm

; 718  : 		BerconTile_param_blk.InvalidateUI(noise_map2);

	mov	r8d, -1
	mov	dx, 37					; 00000025H
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 719  : 		ivalid.SetEmpty();		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 760				; 000002f8H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	$LN5@SetSubTexm
$LN4@SetSubTexm:

; 720  : 	} else if (i==2) {

	cmp	DWORD PTR i$[rsp], 2
	jne	SHORT $LN6@SetSubTexm

; 721  : 		BerconTile_param_blk.InvalidateUI(noise_map3);

	mov	r8d, -1
	mov	dx, 38					; 00000026H
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 722  : 		ivalid.SetEmpty();	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 760				; 000002f8H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	SHORT $LN7@SetSubTexm
$LN6@SetSubTexm:

; 723  : 	} else if (i==3) {

	cmp	DWORD PTR i$[rsp], 3
	jne	SHORT $LN8@SetSubTexm

; 724  : 		BerconTile_param_blk.InvalidateUI(distortion_map);

	mov	r8d, -1
	mov	dx, 28
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 725  : 		ivalid.SetEmpty();	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 760				; 000002f8H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	jmp	SHORT $LN9@SetSubTexm
$LN8@SetSubTexm:

; 726  : 	} else if (i==4) {

	cmp	DWORD PTR i$[rsp], 4
	jne	SHORT $LN10@SetSubTexm

; 727  : 		BerconTile_param_blk.InvalidateUI(distortion_map2);

	mov	r8d, -1
	mov	dx, 29
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 728  : 		ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 760				; 000002f8H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
$LN10@SetSubTexm:
$LN9@SetSubTexm:
$LN7@SetSubTexm:
$LN5@SetSubTexm:
$LN3@SetSubTexm:

; 729  : 	}
; 730  : 
; 731  : 	if (BMAP1_NUM <= i && i <= BMAP2_NUM) {  // TODO: Make range is correct

	cmp	DWORD PTR i$[rsp], 5
	jl	SHORT $LN11@SetSubTexm
	cmp	DWORD PTR i$[rsp], 6
	jg	SHORT $LN11@SetSubTexm

; 732  : 		BerconMap_param_blk.InvalidateUI(i-BMAP1_NUM);

	mov	eax, DWORD PTR i$[rsp]
	sub	eax, 5
	mov	r8d, -1
	movzx	edx, ax
	lea	rcx, OFFSET FLAT:?BerconMap_param_blk@@3VParamBlockDesc2@@A
	call	QWORD PTR __imp_?InvalidateUI@ParamBlockDesc2@@QEAAXFH@Z

; 733  : 		ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 760				; 000002f8H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
$LN11@SetSubTexm:

; 734  : 	}
; 735  : }

	add	rsp, 40					; 00000028H
	ret	0
?SetSubTexmap@BerconTile@@UEAAXHPEAVTexmap@@@Z ENDP	; BerconTile::SetSubTexmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?GetSubTexmap@BerconTile@@UEAAPEAVTexmap@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetSubTexmap@BerconTile@@UEAAPEAVTexmap@@H@Z PROC	; BerconTile::GetSubTexmap, COMDAT

; 106  : 		Texmap* GetSubTexmap(int i) { return subtex[i]; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+664]
	ret	0
?GetSubTexmap@BerconTile@@UEAAPEAVTexmap@@H@Z ENDP	; BerconTile::GetSubTexmap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?NumSubTexmaps@BerconTile@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSubTexmaps@BerconTile@@UEAAHXZ PROC			; BerconTile::NumSubTexmaps, COMDAT

; 105  : 		int NumSubTexmaps() { return TILE_NSUBTEX; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 7
	ret	0
?NumSubTexmaps@BerconTile@@UEAAHXZ ENDP			; BerconTile::NumSubTexmaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
mapreq$ = 64
bumpreq$ = 72
?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z PROC ; BerconTile::MappingsRequired, COMDAT

; 103  : 		void MappingsRequired(int subMtlNum, BitArray& mapreq, BitArray& bumpreq) { berconXYZ.map(subMtlNum, mapreq, bumpreq); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	mov	r9, QWORD PTR bumpreq$[rsp]
	mov	r8, QWORD PTR mapreq$[rsp]
	mov	edx, DWORD PTR subMtlNum$[rsp]
	mov	rcx, rax
	call	?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z	; BerconXYZ::map
	add	rsp, 40					; 00000028H
	ret	0
?MappingsRequired@BerconTile@@UEAAXHAEAVBitArray@@0@Z ENDP ; BerconTile::MappingsRequired
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?LocalRequirements@BerconTile@@UEAAKH@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
?LocalRequirements@BerconTile@@UEAAKH@Z PROC		; BerconTile::LocalRequirements, COMDAT

; 102  : 		ULONG LocalRequirements(int subMtlNum) { return berconXYZ.req(); }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	mov	rcx, rax
	call	?req@BerconXYZ@@QEAAKXZ			; BerconXYZ::req
	add	rsp, 40					; 00000028H
	ret	0
?LocalRequirements@BerconTile@@UEAAKH@Z ENDP		; BerconTile::LocalRequirements
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?Validity@BerconTile@@UEAA?AVInterval@@H@Z
_TEXT	SEGMENT
v$ = 32
__$ArrayPad$ = 40
this$ = 64
__$ReturnUdt$ = 72
t$ = 80
?Validity@BerconTile@@UEAA?AVInterval@@H@Z PROC		; BerconTile::Validity, COMDAT

; 626  : Interval BerconTile::Validity(TimeValue t) {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 627  : 	Interval v;

	lea	rcx, QWORD PTR v$[rsp]
	call	??0Interval@@QEAA@XZ			; Interval::Interval

; 628  : 	Update(t,v);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	r8, QWORD PTR v$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+1400]

; 629  : 	return ivalid;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+824]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 630  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?Validity@BerconTile@@UEAA?AVInterval@@H@Z ENDP		; BerconTile::Validity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?Reset@BerconTile@@UEAAXXZ
_TEXT	SEGMENT
t$ = 64
i$1 = 68
i$2 = 72
tv66 = 80
tv141 = 88
tv645 = 96
tv157 = 104
tv644 = 112
tv173 = 120
tv643 = 128
$T3 = 136
$T4 = 148
$T5 = 160
this$ = 192
?Reset@BerconTile@@UEAAXXZ PROC				; BerconTile::Reset, COMDAT

; 447  : void BerconTile::Reset() {

$LN11:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 184				; 000000b8H

; 448  : 	TimeValue t = GetCOREInterface()->GetTime();

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR tv66[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv66[rsp]
	call	QWORD PTR [rax+1448]
	mov	DWORD PTR t$[rsp], eax

; 449  : 
; 450  : 	if (texout) texout->Reset();

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+816], 0
	je	SHORT $LN8@Reset
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+816]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+816]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+1408]
	jmp	SHORT $LN9@Reset
$LN8@Reset:

; 451  : 	else ReplaceReference( OUTPUT_REF, GetNewDefaultTextureOutput());

	call	QWORD PTR __imp_?GetNewDefaultTextureOutput@@YAPEAVTextureOutput@@XZ
	mov	r9d, 1
	mov	r8, rax
	mov	edx, 9
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?ReplaceReference@ReferenceMaker@@QEAA?AW4RefResult@@HPEAVReferenceTarget@@H@Z
$LN9@Reset:

; 452  : 									   
; 453  : 	for (int i=0; i<TILE_NSUBTEX; i++) 

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Reset
$LN2@Reset:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Reset:
	cmp	DWORD PTR i$1[rsp], 7
	jge	SHORT $LN3@Reset

; 454  : 		DeleteReference(i+2);	

	mov	eax, DWORD PTR i$1[rsp]
	add	eax, 2
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?DeleteReference@ReferenceMaker@@QEAA?AW4RefResult@@H@Z
	jmp	SHORT $LN2@Reset
$LN3@Reset:

; 455  : 
; 456  : 	pblock->SetValue( noise_color1, t, Color(1.f, 1.f, 1.f));

	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR __real@3f800000
	movss	xmm1, DWORD PTR __real@3f800000
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	QWORD PTR tv141[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv645[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 33					; 00000021H
	mov	rax, QWORD PTR tv141[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv645[rsp]
	call	QWORD PTR [rax+1544]

; 457  : 	pblock->SetValue( noise_color2, t, Color(0.f, 0.f, 0.f));

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T4[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	QWORD PTR tv157[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv644[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 34					; 00000022H
	mov	rax, QWORD PTR tv157[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv644[rsp]
	call	QWORD PTR [rax+1544]

; 458  : 	pblock->SetValue( noise_color3, t, Color(.5f, .5f, .5f));

	movss	xmm3, DWORD PTR __real@3f000000
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f000000
	lea	rcx, QWORD PTR $T5[rsp]
	call	??0Color@@QEAA@MMM@Z			; Color::Color
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	QWORD PTR tv173[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv643[rsp], rcx
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 35					; 00000023H
	mov	rax, QWORD PTR tv173[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv643[rsp]
	call	QWORD PTR [rax+1544]

; 459  : 	pblock->SetValue( noise_map1_on, t, TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 39					; 00000027H
	call	QWORD PTR [rax+1576]

; 460  : 	pblock->SetValue( noise_map2_on, t,	TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 40					; 00000028H
	call	QWORD PTR [rax+1576]

; 461  : 	pblock->SetValue( noise_map2_on, t,	TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 40					; 00000028H
	call	QWORD PTR [rax+1576]

; 462  : 	pblock->SetValue( distortion_str, t, .1f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3dcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 31
	call	QWORD PTR [rax+1584]

; 463  : 	pblock->SetValue( use_distortion, t, FALSE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 30
	call	QWORD PTR [rax+1576]

; 464  : 	pblock->SetValue( lock_edge, t, TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 32					; 00000020H
	call	QWORD PTR [rax+1576]

; 465  : 
; 466  : 	pblock->SetValue( tile_style,    t, 3);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 3
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	call	QWORD PTR [rax+1576]

; 467  : 	pblock->SetValue( tile_size,     t, 1.0f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3f800000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 1
	call	QWORD PTR [rax+1584]

; 468  : 	pblock->SetValue( tile_width,    t, 4.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@40800000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	call	QWORD PTR [rax+1584]

; 469  : 	pblock->SetValue( tile_height,   t, 2.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@40000000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 3
	call	QWORD PTR [rax+1584]

; 470  : 	pblock->SetValue( edge_width,    t, .1f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3dcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 4
	call	QWORD PTR [rax+1584]

; 471  : 	pblock->SetValue( edge_height,   t, .1f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3dcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 5
	call	QWORD PTR [rax+1584]

; 472  : 	pblock->SetValue( tile_width2,   t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 6
	call	QWORD PTR [rax+1584]

; 473  : 	pblock->SetValue( tile_height2,  t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	call	QWORD PTR [rax+1584]

; 474  : 	pblock->SetValue( edge_width2,   t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 8
	call	QWORD PTR [rax+1584]

; 475  : 	pblock->SetValue( edge_height2,  t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 9
	call	QWORD PTR [rax+1584]

; 476  : 
; 477  : 	pblock->SetValue( soften, t, 2);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 2
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	call	QWORD PTR [rax+1576]

; 478  : 	pblock->SetValue( soften_rad, t, .1f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3dcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	call	QWORD PTR [rax+1584]

; 479  : 	pblock->SetValue( pb_round, t,	TRUE);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	call	QWORD PTR [rax+1576]

; 480  : 	pblock->SetValue( round_rad, t, .1f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@3dcccccd
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	call	QWORD PTR [rax+1584]

; 481  : 
; 482  : 	pblock->SetValue( pb_map_uv, t, FALSE);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	call	QWORD PTR [rax+1576]

; 483  : 	pblock->SetValue( pb_uv_channel, t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 15
	call	QWORD PTR [rax+1576]

; 484  : 	pblock->SetValue( pb_auto, t, 2);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 2
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 44					; 0000002cH
	call	QWORD PTR [rax+1576]

; 485  : 	
; 486  : 	pblock->SetValue( pb_randX,   t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 16
	call	QWORD PTR [rax+1584]

; 487  : 	pblock->SetValue( pb_randY,   t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	call	QWORD PTR [rax+1584]

; 488  : 	pblock->SetValue( pb_randSX,  t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	call	QWORD PTR [rax+1584]

; 489  : 	pblock->SetValue( pb_randSY,  t, 0.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xorps	xmm3, xmm3
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	call	QWORD PTR [rax+1584]

; 490  : 	pblock->SetValue( pb_lock,  t, 1);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 27
	call	QWORD PTR [rax+1576]

; 491  : 
; 492  : 	pblock->SetValue( pb_rotUV,  t, 0);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	call	QWORD PTR [rax+1576]

; 493  : 	pblock->SetValue( pb_randRot,  t, 180.f);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	movss	xmm3, DWORD PTR __real@43340000
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 21
	call	QWORD PTR [rax+1584]

; 494  : 
; 495  : 	pblock->SetValue( pb_center,  t, 0);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 25
	call	QWORD PTR [rax+1576]

; 496  : 	pblock->SetValue( pb_center_channel,  t, 2);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 2
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 26
	call	QWORD PTR [rax+1576]

; 497  : 
; 498  : 	pblock->SetValue( pb_flipX,  t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 22
	call	QWORD PTR [rax+1576]

; 499  : 	pblock->SetValue( pb_flipY,  t, 1);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 23
	call	QWORD PTR [rax+1576]

; 500  : 
; 501  : 	pblock->SetValue( pb_randZ,  t, 1);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 24
	call	QWORD PTR [rax+1576]

; 502  : 
; 503  : 	pblock->SetValue(pb_pattern, t, L"0,1,1/.5,.5,1");

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	lea	r9, OFFSET FLAT:$SG219669
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 43					; 0000002bH
	call	QWORD PTR [rax+1528]

; 504  : 
; 505  : 	// Maps
; 506  : 	for (int i=2; i<4; i++)

	mov	DWORD PTR i$2[rsp], 2
	jmp	SHORT $LN7@Reset
$LN5@Reset:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN7@Reset:
	cmp	DWORD PTR i$2[rsp], 4
	jge	SHORT $LN6@Reset

; 507  : 		pbMap->SetValue(i, t, TRUE);	

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+408]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+408]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, DWORD PTR t$[rsp]
	movzx	edx, WORD PTR i$2[rsp]
	call	QWORD PTR [rax+1576]
	jmp	SHORT $LN5@Reset
$LN6@Reset:

; 508  : 
; 509  : 	berconXYZ.reset(pbXYZ, ivalid, 1, 0, 0, 0);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 424				; 000001a8H
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8, rax
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+416]
	call	?reset@BerconXYZ@@QEAAXPEAVIParamBlock2@@AEAVInterval@@HHHH@Z ; BerconXYZ::reset

; 510  : 
; 511  : 	ivalid.SetEmpty();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, rax
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty

; 512  : }

	add	rsp, 184				; 000000b8H
	ret	0
?Reset@BerconTile@@UEAAXXZ ENDP				; BerconTile::Reset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?Update@BerconTile@@UEAAXHAEAVInterval@@@Z
_TEXT	SEGMENT
i$1 = 48
i$2 = 52
i$3 = 56
tv83 = 64
tv887 = 72
tv93 = 80
tv886 = 88
tv145 = 96
tv885 = 104
tv165 = 112
tv884 = 120
tv202 = 128
tv883 = 136
tv212 = 144
tv882 = 152
tv228 = 160
tv881 = 168
tv244 = 176
tv880 = 184
tv260 = 192
tv879 = 200
tv274 = 208
tv878 = 216
tv289 = 224
tv877 = 232
tv304 = 240
tv876 = 248
tv319 = 256
tv875 = 264
tv334 = 272
tv874 = 280
tv349 = 288
tv873 = 296
tv364 = 304
tv872 = 312
tv379 = 320
tv871 = 328
tv394 = 336
tv870 = 344
tv409 = 352
tv869 = 360
tv424 = 368
tv868 = 376
tv439 = 384
tv867 = 392
tv454 = 400
tv866 = 408
tv469 = 416
tv865 = 424
tv483 = 432
tv864 = 440
tv498 = 448
tv863 = 456
tv513 = 464
tv862 = 472
tv528 = 480
tv861 = 488
tv542 = 496
tv860 = 504
tv557 = 512
tv859 = 520
tv572 = 528
tv858 = 536
tv587 = 544
tv857 = 552
tv602 = 560
tv856 = 568
tv617 = 576
tv855 = 584
tv632 = 592
tv854 = 600
tv647 = 608
tv853 = 616
tv662 = 624
tv852 = 632
tv677 = 640
tv851 = 648
tv692 = 656
tv850 = 664
tv706 = 672
tv849 = 680
tv720 = 688
tv848 = 696
tv736 = 704
tv847 = 712
tv777 = 720
tv846 = 728
$T4 = 736
tv844 = 744
tv843 = 752
$T5 = 760
$T6 = 768
s$7 = 808
__$ArrayPad$ = 816
this$ = 848
t$ = 856
valid$ = 864
?Update@BerconTile@@UEAAXHAEAVInterval@@@Z PROC		; BerconTile::Update, COMDAT

; 514  : void BerconTile::Update(TimeValue t, Interval& valid) {	

$LN21:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 840				; 00000348H
	mov	QWORD PTR $T5[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 515  : 	if (pblock == NULL) return;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+400], 0
	jne	SHORT $LN11@Update
	jmp	$LN1@Update
$LN11@Update:

; 516  : 
; 517  : 	if (!ivalid.InInterval(t)) {

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?InInterval@Interval@@QEBAHH@Z
	test	eax, eax
	jne	$LN12@Update

; 518  : 		ivalid.SetInfinite();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, rax
	call	?SetInfinite@Interval@@QEAAXXZ		; Interval::SetInfinite

; 519  : 
; 520  : 		if (texout != NULL)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+816], 0
	je	SHORT $LN13@Update

; 521  : 			texout->Update(t,ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+816]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+816]
	mov	QWORD PTR tv83[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv887[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv83[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv887[rsp]
	call	QWORD PTR [rax+1400]
$LN13@Update:

; 522  : 		pblock->GetValue( noise_color1, t, col[0], ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, 12
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+688]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv93[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv886[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 33					; 00000021H
	mov	rax, QWORD PTR tv93[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv886[rsp]
	call	QWORD PTR [rax+1672]

; 523  : 		col[0].ClampMinMax();

	mov	eax, 12
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+688]
	mov	rcx, rax
	call	QWORD PTR __imp_?ClampMinMax@Color@@QEAAXXZ

; 524  : 		pblock->GetValue( noise_color2, t, col[1], ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, 12
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+688]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv145[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv885[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 34					; 00000022H
	mov	rax, QWORD PTR tv145[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv885[rsp]
	call	QWORD PTR [rax+1672]

; 525  : 		col[1].ClampMinMax();

	mov	eax, 12
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+688]
	mov	rcx, rax
	call	QWORD PTR __imp_?ClampMinMax@Color@@QEAAXXZ

; 526  : 		pblock->GetValue( noise_color3, t, col[2], ivalid );

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, 12
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+688]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv165[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv884[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 35					; 00000023H
	mov	rax, QWORD PTR tv165[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv884[rsp]
	call	QWORD PTR [rax+1672]

; 527  : 		col[2].ClampMinMax();

	mov	eax, 12
	imul	rax, rax, 2
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+688]
	mov	rcx, rax
	call	QWORD PTR __imp_?ClampMinMax@Color@@QEAAXXZ

; 528  : 
; 529  : 		for (int i=0; i<TILE_NSUBTEX; i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@Update
$LN2@Update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@Update:
	cmp	DWORD PTR i$1[rsp], 7
	jge	$LN3@Update

; 530  : 			if (subtex[i]) 

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+728], 0
	je	SHORT $LN14@Update

; 531  : 				subtex[i]->Update(t,ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	movsxd	rcx, DWORD PTR i$1[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8+728]
	movsxd	rdx, DWORD PTR i$1[rsp]
	mov	r8, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [r8+rdx*8+728]
	mov	QWORD PTR tv202[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv883[rsp], rcx
	mov	r8, rax
	mov	edx, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv202[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv883[rsp]
	call	QWORD PTR [rax+1400]
$LN14@Update:

; 532  : 
; 533  : 		pblock->GetValue( noise_map1_on, t, mapOn[0], ivalid);

	jmp	$LN2@Update
$LN3@Update:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+784]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv212[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv882[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 39					; 00000027H
	mov	rax, QWORD PTR tv212[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv882[rsp]
	call	QWORD PTR [rax+1704]

; 534  : 		pblock->GetValue( noise_map2_on, t, mapOn[1], ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+784]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv228[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv881[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 40					; 00000028H
	mov	rax, QWORD PTR tv228[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv881[rsp]
	call	QWORD PTR [rax+1704]

; 535  : 		pblock->GetValue( noise_map3_on, t, mapOn[2], ivalid);					

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, 4
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx+784]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv244[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv880[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 41					; 00000029H
	mov	rax, QWORD PTR tv244[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv880[rsp]
	call	QWORD PTR [rax+1704]

; 536  : 
; 537  : 		pblock->GetValue( tile_size, t, tileSize, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 152				; 00000098H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv260[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv879[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 1
	mov	rax, QWORD PTR tv260[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv879[rsp]
	call	QWORD PTR [rax+1712]

; 538  : 
; 539  : 		// Tile params
; 540  : 		pblock->GetValue( tile_style, t, tileParam.tilingType, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 160				; 000000a0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv274[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv878[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rax, QWORD PTR tv274[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv878[rsp]
	call	QWORD PTR [rax+1704]

; 541  : 
; 542  : 		pblock->GetValue( tile_width, t, tileParam.tileWidth, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 168				; 000000a8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv289[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv877[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 2
	mov	rax, QWORD PTR tv289[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv877[rsp]
	call	QWORD PTR [rax+1712]

; 543  : 		pblock->GetValue( tile_height, t, tileParam.tileHeight, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 164				; 000000a4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv304[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv876[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 3
	mov	rax, QWORD PTR tv304[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv876[rsp]
	call	QWORD PTR [rax+1712]

; 544  : 		pblock->GetValue( edge_width, t, tileParam.edgeWidth, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 176				; 000000b0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv319[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv875[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 4
	mov	rax, QWORD PTR tv319[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv875[rsp]
	call	QWORD PTR [rax+1712]

; 545  : 		pblock->GetValue( edge_height, t, tileParam.edgeHeight, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 172				; 000000acH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv334[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv874[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 5
	mov	rax, QWORD PTR tv334[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv874[rsp]
	call	QWORD PTR [rax+1712]

; 546  : 
; 547  : 		pblock->GetValue( tile_width2, t, tileParam.tileWidthVar, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 184				; 000000b8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv349[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv873[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 6
	mov	rax, QWORD PTR tv349[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv873[rsp]
	call	QWORD PTR [rax+1712]

; 548  : 		pblock->GetValue( tile_height2, t, tileParam.tileHeightVar, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 180				; 000000b4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv364[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv872[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 7
	mov	rax, QWORD PTR tv364[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv872[rsp]
	call	QWORD PTR [rax+1712]

; 549  : 		pblock->GetValue( edge_width2, t, tileParam.edgeWidthVar, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 192				; 000000c0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv379[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv871[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 8
	mov	rax, QWORD PTR tv379[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv871[rsp]
	call	QWORD PTR [rax+1712]

; 550  : 		pblock->GetValue( edge_height2, t, tileParam.edgeHeightVar, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 188				; 000000bcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv394[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv870[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 9
	mov	rax, QWORD PTR tv394[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv870[rsp]
	call	QWORD PTR [rax+1712]

; 551  : 
; 552  : 		pblock->GetValue( soften, t, tileParam.tileBlur, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 204				; 000000ccH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv409[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv869[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 10
	mov	rax, QWORD PTR tv409[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv869[rsp]
	call	QWORD PTR [rax+1704]

; 553  : 		pblock->GetValue( soften_rad, t, tileParam.tileBlurRad, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 208				; 000000d0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv424[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv868[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	mov	rax, QWORD PTR tv424[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv868[rsp]
	call	QWORD PTR [rax+1712]

; 554  : 		pblock->GetValue( pb_round, t, tileParam.tileRound, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 200				; 000000c8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv439[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv867[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rax, QWORD PTR tv439[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv867[rsp]
	call	QWORD PTR [rax+1704]

; 555  : 		pblock->GetValue( round_rad, t, tileParam.tileCrnrRad, ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 212				; 000000d4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv454[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv866[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rax, QWORD PTR tv454[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv866[rsp]
	call	QWORD PTR [rax+1712]

; 556  : 		
; 557  : 		pblock->GetValue( lock_edge, t, lockEdge, ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 296				; 00000128H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv469[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv865[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 32					; 00000020H
	mov	rax, QWORD PTR tv469[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv865[rsp]
	call	QWORD PTR [rax+1704]

; 558  : 
; 559  : 		pblock->GetValue( pb_auto, t, tileParam.autoScale, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 216				; 000000d8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv483[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv864[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 44					; 0000002cH
	mov	rax, QWORD PTR tv483[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv864[rsp]
	call	QWORD PTR [rax+1704]

; 560  : 
; 561  : 		pblock->GetValue( pb_map_uv, t, tileParam.mapUV, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 220				; 000000dcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv498[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv863[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 14
	mov	rax, QWORD PTR tv498[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv863[rsp]
	call	QWORD PTR [rax+1704]

; 562  : 		pblock->GetValue( pb_rotUV, t, tileParam.rotUV, ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 244				; 000000f4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv513[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv862[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 20
	mov	rax, QWORD PTR tv513[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv862[rsp]
	call	QWORD PTR [rax+1704]

; 563  : 		pblock->GetValue( pb_uv_channel, t, uvChan, ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 300				; 0000012cH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv528[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv861[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 15
	mov	rax, QWORD PTR tv528[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv861[rsp]
	call	QWORD PTR [rax+1704]

; 564  : 		pblock->GetValue( pb_randRot, t, tileParam.randRot, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 248				; 000000f8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv542[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv860[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 21
	mov	rax, QWORD PTR tv542[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv860[rsp]
	call	QWORD PTR [rax+1712]

; 565  : 
; 566  : 		pblock->GetValue( pb_randX, t, tileParam.randX, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 224				; 000000e0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv557[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv859[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 16
	mov	rax, QWORD PTR tv557[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv859[rsp]
	call	QWORD PTR [rax+1712]

; 567  : 		pblock->GetValue( pb_randY, t, tileParam.randY, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 228				; 000000e4H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv572[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv858[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 17
	mov	rax, QWORD PTR tv572[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv858[rsp]
	call	QWORD PTR [rax+1712]

; 568  : 
; 569  : 		pblock->GetValue( pb_randSX, t, tileParam.randSX, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 232				; 000000e8H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv587[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv857[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 18
	mov	rax, QWORD PTR tv587[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv857[rsp]
	call	QWORD PTR [rax+1712]

; 570  : 		pblock->GetValue( pb_randSY, t, tileParam.randSY, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 236				; 000000ecH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv602[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv856[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 19
	mov	rax, QWORD PTR tv602[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv856[rsp]
	call	QWORD PTR [rax+1712]

; 571  : 		
; 572  : 		pblock->GetValue( pb_lock, t, tileParam.lock, ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 240				; 000000f0H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv617[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv855[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 27
	mov	rax, QWORD PTR tv617[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv855[rsp]
	call	QWORD PTR [rax+1704]

; 573  : 	
; 574  : 		pblock->GetValue( pb_flipX, t, tileParam.flipX, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 252				; 000000fcH
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv632[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv854[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 22
	mov	rax, QWORD PTR tv632[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv854[rsp]
	call	QWORD PTR [rax+1704]

; 575  : 		pblock->GetValue( pb_flipY, t, tileParam.flipY, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 256				; 00000100H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv647[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv853[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 23
	mov	rax, QWORD PTR tv647[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv853[rsp]
	call	QWORD PTR [rax+1704]

; 576  : 		pblock->GetValue( pb_randZ, t, tileParam.tileID, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 260				; 00000104H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv662[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv852[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 24
	mov	rax, QWORD PTR tv662[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv852[rsp]
	call	QWORD PTR [rax+1704]

; 577  : 	
; 578  : 	
; 579  : 		pblock->GetValue( pb_center, t, tileParam.center, ivalid);	

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 264				; 00000108H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv677[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv851[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 25
	mov	rax, QWORD PTR tv677[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv851[rsp]
	call	QWORD PTR [rax+1704]

; 580  : 		pblock->GetValue( pb_center_channel, t, uvChan2, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 304				; 00000130H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv692[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv850[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 26
	mov	rax, QWORD PTR tv692[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv850[rsp]
	call	QWORD PTR [rax+1704]

; 581  : 
; 582  : 		// Dist params
; 583  : 		pblock->GetValue( distortion_str, t, distortionStr, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 392				; 00000188H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv706[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv849[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 31
	mov	rax, QWORD PTR tv706[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv849[rsp]
	call	QWORD PTR [rax+1712]

; 584  : 		pblock->GetValue( use_distortion, t, useDistortion, ivalid);			

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 388				; 00000184H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv720[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv848[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 30
	mov	rax, QWORD PTR tv720[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv848[rsp]
	call	QWORD PTR [rax+1704]

; 585  : 
; 586  : 		// Update maps
; 587  : 		for (int i = 0; i<2; i++)

	mov	DWORD PTR i$2[rsp], 0
	jmp	SHORT $LN7@Update
$LN5@Update:
	mov	eax, DWORD PTR i$2[rsp]
	inc	eax
	mov	DWORD PTR i$2[rsp], eax
$LN7@Update:
	cmp	DWORD PTR i$2[rsp], 2
	jge	$LN6@Update

; 588  : 			pbMap->GetValue((i+2), t, mapOn[i+5], ivalid);		

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	ecx, DWORD PTR i$2[rsp]
	add	ecx, 5
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR [rdx+rcx*4+784]
	mov	edx, DWORD PTR i$2[rsp]
	add	edx, 2
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+408]
	mov	r9, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [r9+408]
	mov	QWORD PTR tv736[rsp], r9
	mov	r8, QWORD PTR [r8]
	mov	QWORD PTR tv847[rsp], r8
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	mov	r8d, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR tv736[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv847[rsp]
	call	QWORD PTR [rax+1704]
	jmp	$LN5@Update
$LN6@Update:

; 589  : 
; 590  : 		// Slight optimization
; 591  : 		mappedParameters = false;

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+384], 0

; 592  : 		for (int i=5;i<=6;i++)

	mov	DWORD PTR i$3[rsp], 5
	jmp	SHORT $LN10@Update
$LN8@Update:
	mov	eax, DWORD PTR i$3[rsp]
	inc	eax
	mov	DWORD PTR i$3[rsp], eax
$LN10@Update:
	cmp	DWORD PTR i$3[rsp], 6
	jg	SHORT $LN9@Update

; 593  : 			if (mapOn[i] && subtex[i])

	movsxd	rax, DWORD PTR i$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax*4+784], 0
	je	SHORT $LN15@Update
	movsxd	rax, DWORD PTR i$3[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+728], 0
	je	SHORT $LN15@Update

; 594  : 				mappedParameters = true;	

	mov	rax, QWORD PTR this$[rsp]
	mov	BYTE PTR [rax+384], 1
$LN15@Update:

; 595  : 
; 596  : 		berconXYZ.update(pbXYZ, t, ivalid);

	jmp	SHORT $LN8@Update
$LN9@Update:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 424				; 000001a8H
	mov	r9, rax
	mov	r8d, DWORD PTR t$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+416]
	call	?update@BerconXYZ@@QEAAXPEAVIParamBlock2@@HAEAVInterval@@@Z ; BerconXYZ::update

; 597  : 
; 598  : /*#if MAX_RELEASE >= 12000 //MAX_RELEASE_R12
; 599  : 		const char *s;
; 600  : #else
; 601  : 		char *s;
; 602  : #endif*/
; 603  : 		const wchar_t *s;
; 604  : 
; 605  : 
; 606  : 		pblock->GetValue(pb_pattern, t, s, ivalid);			

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	QWORD PTR tv777[rsp], rdx
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv846[rsp], rcx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR s$7[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 43					; 0000002bH
	mov	rax, QWORD PTR tv777[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv846[rsp]
	call	QWORD PTR [rax+1656]

; 607  : 		
; 608  : 		if (tileParam.tilingType == 0)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 0
	jne	SHORT $LN16@Update

; 609  : 			pattern.setPattern(std::wstring(s));

	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rdx, QWORD PTR s$7[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv844[rsp], rax
	mov	rax, QWORD PTR tv844[rsp]
	mov	QWORD PTR tv843[rsp], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	rdx, QWORD PTR tv843[rsp]
	mov	rcx, rax
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	SHORT $LN17@Update
$LN16@Update:

; 610  : 		else if (tileParam.tilingType != 1)

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 1
	je	SHORT $LN17@Update

; 611  : 			pattern.setPreset(tileParam.tilingType-2);

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+160]
	sub	eax, 2
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 312				; 00000138H
	mov	edx, eax
	call	?setPreset@TilePattern@@QEAAXH@Z	; TilePattern::setPreset
$LN17@Update:

; 612  : 		//pattern.setPattern("0, 1, 1 / .5, 0.5, 1");
; 613  : 
; 614  : 		tileParam.tileHeightVar /= 200.f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+180]
	divss	xmm0, DWORD PTR __real@43480000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+180], xmm0

; 615  : 		tileParam.tileWidthVar /= 200.f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+184]
	divss	xmm0, DWORD PTR __real@43480000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+184], xmm0

; 616  : 		tileParam.edgeHeightVar /= 100.f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+188]
	divss	xmm0, DWORD PTR __real@42c80000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+188], xmm0

; 617  : 		tileParam.edgeWidthVar /= 100.f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+192]
	divss	xmm0, DWORD PTR __real@42c80000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+192], xmm0

; 618  : 		tileParam.randRot *= DEG2RAD;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+248]
	mulss	xmm0, DWORD PTR __real@3c8efa35
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+248], xmm0

; 619  : 		tileParam.checkValues();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 160				; 000000a0H
	mov	rcx, rax
	call	?checkValues@TileParam@@QEAAXXZ		; TileParam::checkValues

; 620  : 
; 621  : 		EnableStuff(t);		

	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?EnableStuff@BerconTile@@QEAAXH@Z	; BerconTile::EnableStuff
$LN12@Update:

; 622  : 	}
; 623  : 	valid &= ivalid;

	mov	rax, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rax+824]
	mov	rcx, QWORD PTR valid$[rsp]
	call	??_4Interval@@QEAAAEAV0@V0@@Z		; Interval::operator&=
$LN1@Update:

; 624  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 840				; 00000348H
	ret	0
?Update@BerconTile@@UEAAXHAEAVInterval@@@Z ENDP		; BerconTile::Update
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 48
i$2 = 52
i$3 = 56
tv83 = 64
tv887 = 72
tv93 = 80
tv886 = 88
tv145 = 96
tv885 = 104
tv165 = 112
tv884 = 120
tv202 = 128
tv883 = 136
tv212 = 144
tv882 = 152
tv228 = 160
tv881 = 168
tv244 = 176
tv880 = 184
tv260 = 192
tv879 = 200
tv274 = 208
tv878 = 216
tv289 = 224
tv877 = 232
tv304 = 240
tv876 = 248
tv319 = 256
tv875 = 264
tv334 = 272
tv874 = 280
tv349 = 288
tv873 = 296
tv364 = 304
tv872 = 312
tv379 = 320
tv871 = 328
tv394 = 336
tv870 = 344
tv409 = 352
tv869 = 360
tv424 = 368
tv868 = 376
tv439 = 384
tv867 = 392
tv454 = 400
tv866 = 408
tv469 = 416
tv865 = 424
tv483 = 432
tv864 = 440
tv498 = 448
tv863 = 456
tv513 = 464
tv862 = 472
tv528 = 480
tv861 = 488
tv542 = 496
tv860 = 504
tv557 = 512
tv859 = 520
tv572 = 528
tv858 = 536
tv587 = 544
tv857 = 552
tv602 = 560
tv856 = 568
tv617 = 576
tv855 = 584
tv632 = 592
tv854 = 600
tv647 = 608
tv853 = 616
tv662 = 624
tv852 = 632
tv677 = 640
tv851 = 648
tv692 = 656
tv850 = 664
tv706 = 672
tv849 = 680
tv720 = 688
tv848 = 696
tv736 = 704
tv847 = 712
tv777 = 720
tv846 = 728
$T4 = 736
tv844 = 744
tv843 = 752
$T5 = 760
$T6 = 768
s$7 = 808
__$ArrayPad$ = 816
this$ = 848
t$ = 856
valid$ = 864
?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA PROC ; `BerconTile::Update'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA ENDP ; `BerconTile::Update'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 48
i$2 = 52
i$3 = 56
tv83 = 64
tv887 = 72
tv93 = 80
tv886 = 88
tv145 = 96
tv885 = 104
tv165 = 112
tv884 = 120
tv202 = 128
tv883 = 136
tv212 = 144
tv882 = 152
tv228 = 160
tv881 = 168
tv244 = 176
tv880 = 184
tv260 = 192
tv879 = 200
tv274 = 208
tv878 = 216
tv289 = 224
tv877 = 232
tv304 = 240
tv876 = 248
tv319 = 256
tv875 = 264
tv334 = 272
tv874 = 280
tv349 = 288
tv873 = 296
tv364 = 304
tv872 = 312
tv379 = 320
tv871 = 328
tv394 = 336
tv870 = 344
tv409 = 352
tv869 = 360
tv424 = 368
tv868 = 376
tv439 = 384
tv867 = 392
tv454 = 400
tv866 = 408
tv469 = 416
tv865 = 424
tv483 = 432
tv864 = 440
tv498 = 448
tv863 = 456
tv513 = 464
tv862 = 472
tv528 = 480
tv861 = 488
tv542 = 496
tv860 = 504
tv557 = 512
tv859 = 520
tv572 = 528
tv858 = 536
tv587 = 544
tv857 = 552
tv602 = 560
tv856 = 568
tv617 = 576
tv855 = 584
tv632 = 592
tv854 = 600
tv647 = 608
tv853 = 616
tv662 = 624
tv852 = 632
tv677 = 640
tv851 = 648
tv692 = 656
tv850 = 664
tv706 = 672
tv849 = 680
tv720 = 688
tv848 = 696
tv736 = 704
tv847 = 712
tv777 = 720
tv846 = 728
$T4 = 736
tv844 = 744
tv843 = 752
$T5 = 760
$T6 = 768
s$7 = 808
__$ArrayPad$ = 816
this$ = 848
t$ = 856
valid$ = 864
?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA PROC ; `BerconTile::Update'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??Update@BerconTile@@UEAAXHAEAVInterval@@@Z@4HA ENDP ; `BerconTile::Update'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z
_TEXT	SEGMENT
this$ = 48
dlg$ = 56
?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z PROC	; BerconTile::SetDlgThing, COMDAT

; 704  : BOOL BerconTile::SetDlgThing(ParamDlg* dlg) {	

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 705  : 	if (dlg == texoutDlg)

	mov	rax, QWORD PTR ?texoutDlg@BerconTile@@2PEAVParamDlg@@EA ; BerconTile::texoutDlg
	cmp	QWORD PTR dlg$[rsp], rax
	jne	SHORT $LN2@SetDlgThin

; 706  : 		texoutDlg->SetThing(texout);

	mov	rax, QWORD PTR ?texoutDlg@BerconTile@@2PEAVParamDlg@@EA ; BerconTile::texoutDlg
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rcx+752]
	mov	rcx, QWORD PTR ?texoutDlg@BerconTile@@2PEAVParamDlg@@EA ; BerconTile::texoutDlg
	call	QWORD PTR [rax+24]

; 707  : 	else 

	jmp	SHORT $LN3@SetDlgThin
$LN2@SetDlgThin:

; 708  : 		return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@SetDlgThin
$LN3@SetDlgThin:

; 709  : 	return TRUE;

	mov	eax, 1
$LN1@SetDlgThin:

; 710  : }

	add	rsp, 40					; 00000028H
	ret	0
?SetDlgThing@BerconTile@@UEAAHPEAVParamDlg@@@Z ENDP	; BerconTile::SetDlgThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
masterDlg$ = 48
tv144 = 56
tv171 = 64
tv176 = 72
$T3 = 80
$T4 = 88
$T5 = 96
this$ = 128
hwMtlEdit$ = 136
imp$ = 144
?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z PROC ; BerconTile::CreateParamDlg, COMDAT

; 694  : ParamDlg* BerconTile::CreateParamDlg(HWND hwMtlEdit, IMtlParams *imp) {	

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T5[rsp], -2

; 695  : 	IAutoMParamDlg* masterDlg = BerconTileDesc.CreateParamDlgs(hwMtlEdit, imp, this);

	mov	r9, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR imp$[rsp]
	mov	rdx, QWORD PTR hwMtlEdit$[rsp]
	lea	rcx, OFFSET FLAT:?BerconTileDesc@@3VBerconTileClassDesc@@A
	call	QWORD PTR __imp_?CreateParamDlgs@ClassDesc2@@QEAAPEAVIAutoMParamDlg@@PEAUHWND__@@PEAVIMtlParams@@PEAVReferenceTarget@@@Z
	mov	QWORD PTR masterDlg$[rsp], rax

; 696  : 	texoutDlg = texout->CreateParamDlg(hwMtlEdit, imp);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+816]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+816]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR imp$[rsp]
	mov	rdx, QWORD PTR hwMtlEdit$[rsp]
	call	QWORD PTR [rax+1424]
	mov	QWORD PTR ?texoutDlg@BerconTile@@2PEAVParamDlg@@EA, rax ; BerconTile::texoutDlg

; 697  : 	masterDlg->AddDlg(texoutDlg);

	mov	rax, QWORD PTR masterDlg$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR ?texoutDlg@BerconTile@@2PEAVParamDlg@@EA ; BerconTile::texoutDlg
	mov	rcx, QWORD PTR masterDlg$[rsp]
	call	QWORD PTR [rax+120]

; 698  : 	BerconTile_param_blk.SetUserDlgProc(new BerconTileDlgProc(this));

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T1[rsp]
	call	?__autoclassinit2@BerconTileDlgProc@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0BerconTileDlgProc@@QEAA@PEAVBerconTile@@@Z ; BerconTileDlgProc::BerconTileDlgProc
	mov	QWORD PTR tv144[rsp], rax
	jmp	SHORT $LN4@CreatePara
$LN3@CreatePara:
	mov	QWORD PTR tv144[rsp], 0
$LN4@CreatePara:
	mov	rax, QWORD PTR tv144[rsp]
	mov	QWORD PTR $T3[rsp], rax
	mov	rdx, QWORD PTR $T3[rsp]
	lea	rcx, OFFSET FLAT:?BerconTile_param_blk@@3VParamBlockDesc2@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 699  : 	xyz_blk.SetUserDlgProc(new BerconXYZDlgProc(this));

	mov	ecx, 16
	call	QWORD PTR __imp_??2MaxHeapOperators@@SAPEAX_K@Z
	mov	QWORD PTR $T2[rsp], rax
	cmp	QWORD PTR $T2[rsp], 0
	je	SHORT $LN5@CreatePara
	mov	edx, 16
	mov	rcx, QWORD PTR $T2[rsp]
	call	?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ; BerconXYZDlgProc::BerconXYZDlgProc
	mov	QWORD PTR tv171[rsp], rax
	jmp	SHORT $LN6@CreatePara
$LN5@CreatePara:
	mov	QWORD PTR tv171[rsp], 0
$LN6@CreatePara:
	mov	rax, QWORD PTR tv171[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rdx, QWORD PTR $T4[rsp]
	lea	rcx, OFFSET FLAT:?xyz_blk@@3VXYZ_Desc@@A
	call	?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ; ParamBlockDesc2::SetUserDlgProc

; 700  : 	EnableStuff(GetCOREInterface()->GetTime());

	call	QWORD PTR __imp_?GetCOREInterface@@YAPEAVInterface@@XZ
	mov	QWORD PTR tv176[rsp], rax
	mov	rax, QWORD PTR tv176[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv176[rsp]
	call	QWORD PTR [rax+1448]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	?EnableStuff@BerconTile@@QEAAXH@Z	; BerconTile::EnableStuff

; 701  : 	return masterDlg;	

	mov	rax, QWORD PTR masterDlg$[rsp]

; 702  : }

	add	rsp, 120				; 00000078H
	ret	0
?CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z ENDP ; BerconTile::CreateParamDlg
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
masterDlg$ = 48
tv144 = 56
tv171 = 64
tv176 = 72
$T3 = 80
$T4 = 88
$T5 = 96
this$ = 128
hwMtlEdit$ = 136
imp$ = 144
?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconTile::CreateParamDlg'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconTile::CreateParamDlg'::`1'::dtor$0
$T1 = 32
$T2 = 40
masterDlg$ = 48
tv144 = 56
tv171 = 64
tv176 = 72
$T3 = 80
$T4 = 88
$T5 = 96
this$ = 128
hwMtlEdit$ = 136
imp$ = 144
?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconTile::CreateParamDlg'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconTile::CreateParamDlg'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
masterDlg$ = 48
tv144 = 56
tv171 = 64
tv176 = 72
$T3 = 80
$T4 = 88
$T5 = 96
this$ = 128
hwMtlEdit$ = 136
imp$ = 144
?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconTile::CreateParamDlg'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconTile::CreateParamDlg'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
masterDlg$ = 48
tv144 = 56
tv171 = 64
tv176 = 72
$T3 = 80
$T4 = 88
$T5 = 96
this$ = 128
hwMtlEdit$ = 136
imp$ = 144
?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA PROC ; `BerconTile::CreateParamDlg'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??CreateParamDlg@BerconTile@@UEAAPEAVParamDlg@@PEAUHWND__@@PEAVIMtlParams@@@Z@4HA ENDP ; `BerconTile::CreateParamDlg'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z
_TEXT	SEGMENT
tv143 = 64
tv142 = 72
this$ = 96
t$ = 104
thmaker$ = 112
?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z PROC ; BerconTile::GetActiveTexHandle, COMDAT

; 684  : DWORD_PTR BerconTile::GetActiveTexHandle(TimeValue t, TexHandleMaker& thmaker) {

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 685  : 	if (texHandle) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+832], 0
	je	SHORT $LN2@GetActiveT

; 686  : 		if (texHandleValid.InInterval(t))

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 840				; 00000348H
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?InInterval@Interval@@QEBAHH@Z
	test	eax, eax
	je	SHORT $LN3@GetActiveT

; 687  : 			return texHandle->GetHandle();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+832]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+832]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
	jmp	$LN1@GetActiveT
	jmp	SHORT $LN4@GetActiveT
$LN3@GetActiveT:

; 688  : 		else DiscardTexHandle();

	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconTile@@QEAAXXZ	; BerconTile::DiscardTexHandle
$LN4@GetActiveT:
$LN2@GetActiveT:

; 689  : 		}
; 690  : 	texHandle = thmaker.MakeHandle(GetVPDisplayDIB(t,thmaker,texHandleValid));

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 840				; 00000348H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv143[rsp], rcx
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	mov	r9, rax
	mov	r8, QWORD PTR thmaker$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv143[rsp]
	call	QWORD PTR [rax+1536]
	mov	rcx, QWORD PTR thmaker$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv142[rsp], rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR thmaker$[rsp]
	mov	rax, QWORD PTR tv142[rsp]
	call	QWORD PTR [rax+32]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+832], rax

; 691  : 	return texHandle->GetHandle();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+832]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+832]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+8]
$LN1@GetActiveT:

; 692  : }

	add	rsp, 88					; 00000058H
	ret	0
?GetActiveTexHandle@BerconTile@@UEAA_KHAEAVTexHandleMaker@@@Z ENDP ; BerconTile::GetActiveTexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?ActivateTexDisplay@BerconTile@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 48
onoff$ = 56
?ActivateTexDisplay@BerconTile@@UEAAXH@Z PROC		; BerconTile::ActivateTexDisplay, COMDAT

; 93   : 		void ActivateTexDisplay(BOOL onoff) { if (!onoff) DiscardTexHandle(); }

$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	cmp	DWORD PTR onoff$[rsp], 0
	jne	SHORT $LN2@ActivateTe
	mov	rcx, QWORD PTR this$[rsp]
	call	?DiscardTexHandle@BerconTile@@QEAAXXZ	; BerconTile::DiscardTexHandle
$LN2@ActivateTe:
	add	rsp, 40					; 00000028H
	ret	0
?ActivateTexDisplay@BerconTile@@UEAAXH@Z ENDP		; BerconTile::ActivateTexDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?SupportTexDisplay@BerconTile@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportTexDisplay@BerconTile@@UEAAHXZ PROC		; BerconTile::SupportTexDisplay, COMDAT

; 92   : 		BOOL SupportTexDisplay() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SupportTexDisplay@BerconTile@@UEAAHXZ ENDP		; BerconTile::SupportTexDisplay
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?DiscardTexHandle@BerconTile@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?DiscardTexHandle@BerconTile@@QEAAXXZ PROC		; BerconTile::DiscardTexHandle, COMDAT

; 91   : 		void DiscardTexHandle() { if (texHandle) { texHandle->DeleteThis(); texHandle = NULL; } }

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+832], 0
	je	SHORT $LN2@DiscardTex
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+832]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+832]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+832], 0
$LN2@DiscardTex:
	add	rsp, 40					; 00000028H
	ret	0
?DiscardTexHandle@BerconTile@@QEAAXXZ ENDP		; BerconTile::DiscardTexHandle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z
_TEXT	SEGMENT
tv129 = 32
$T1 = 40
$T2 = 48
$T3 = 60
this$ = 96
__$ReturnUdt$ = 104
sc$ = 112
i$ = 120
?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z PROC ; BerconTile::getNormal, COMDAT

; 86   : 		inline Point3 BerconTile::getNormal(ShadeContext &sc, int i) { return mapOn[i]&&subtex[i] ? subtex[i]->EvalNormalPerturb(sc): Point3(0,0,0); }

$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax*4+784], 0
	je	SHORT $LN3@getNormal
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+728], 0
	je	SHORT $LN3@getNormal
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+728]
	movsxd	rcx, DWORD PTR i$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8+728]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	call	QWORD PTR [rax+1520]
	mov	QWORD PTR tv129[rsp], rax
	jmp	SHORT $LN4@getNormal
$LN3@getNormal:
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR $T3[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@HHH@Z
	mov	QWORD PTR tv129[rsp], rax
$LN4@getNormal:
	mov	rax, QWORD PTR tv129[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 88					; 00000058H
	ret	0
?getNormal@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@H@Z ENDP ; BerconTile::getNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z
_TEXT	SEGMENT
tv95 = 32
this$ = 64
sc$ = 72
i$ = 80
?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z PROC	; BerconTile::getFloat, COMDAT

; 85   : 		inline float  BerconTile::getFloat(ShadeContext &sc, int i)  { return mapOn[i]&&subtex[i] ? subtex[i]->EvalMono(sc): Intens(col[i]); }

$LN5:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax*4+784], 0
	je	SHORT $LN3@getFloat
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+728], 0
	je	SHORT $LN3@getFloat
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+728]
	movsxd	rcx, DWORD PTR i$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8+728]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	movss	DWORD PTR tv95[rsp], xmm0
	jmp	SHORT $LN4@getFloat
$LN3@getFloat:
	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+688]
	mov	rcx, rax
	call	?Intens@@YAMAEBVColor@@@Z		; Intens
	movss	DWORD PTR tv95[rsp], xmm0
$LN4@getFloat:
	movss	xmm0, DWORD PTR tv95[rsp]
	add	rsp, 56					; 00000038H
	ret	0
?getFloat@BerconTile@@QEAAMAEAVShadeContext@@H@Z ENDP	; BerconTile::getFloat
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z
_TEXT	SEGMENT
tv132 = 32
$T1 = 40
$T2 = 48
$T3 = 64
this$ = 96
__$ReturnUdt$ = 104
sc$ = 112
i$ = 120
?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z PROC ; BerconTile::getColor, COMDAT

; 84   : 		inline AColor BerconTile::getColor(ShadeContext &sc, int i)  { return mapOn[i]&&subtex[i] ? subtex[i]->EvalColor(sc): col[i]; }

$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax*4+784], 0
	je	SHORT $LN3@getColor
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax*8+728], 0
	je	SHORT $LN3@getColor
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax*8+728]
	movsxd	rcx, DWORD PTR i$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8+728]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	call	QWORD PTR [rax+1504]
	mov	QWORD PTR tv132[rsp], rax
	jmp	SHORT $LN4@getColor
$LN3@getColor:
	movsxd	rax, DWORD PTR i$[rsp]
	imul	rax, rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	lea	rax, QWORD PTR [rcx+rax+688]
	movss	xmm2, DWORD PTR __real@3f800000
	mov	rdx, rax
	lea	rcx, QWORD PTR $T3[rsp]
	call	??0AColor@@QEAA@AEBVColor@@M@Z		; AColor::AColor
	mov	QWORD PTR tv132[rsp], rax
$LN4@getColor:
	mov	rax, QWORD PTR tv132[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@AEBV0@@Z		; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 88					; 00000058H
	ret	0
?getColor@BerconTile@@QEAA?AVAColor@@AEAVShadeContext@@H@Z ENDP ; BerconTile::getColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?EnableStuff@BerconTile@@QEAAXH@Z
_TEXT	SEGMENT
map$1 = 64
type$2 = 72
tv129 = 76
tv147 = 80
tv157 = 84
tv167 = 88
tv236 = 92
tv273 = 96
tv290 = 100
tv299 = 104
tv308 = 108
tv80 = 112
tv401 = 120
this$ = 144
t$ = 152
?EnableStuff@BerconTile@@QEAAXH@Z PROC			; BerconTile::EnableStuff, COMDAT

; 632  : void BerconTile::EnableStuff(TimeValue t) {

$LN23:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H

; 633  : 	if (pblock) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+400], 0
	je	$LN2@EnableStuf

; 634  : 		IParamMap2 *map = pblock->GetMap();

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+400]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+400]
	mov	rax, QWORD PTR [rax]
	xor	edx, edx
	call	QWORD PTR [rax+2328]
	mov	QWORD PTR map$1[rsp], rax

; 635  : 		if (map) {

	cmp	QWORD PTR map$1[rsp], 0
	je	$LN3@EnableStuf

; 636  : 			// Update values we need to know
; 637  : 			
; 638  : 			//pblock->GetValue( tile_style, 0, tilingType, ivalid);
; 639  : 			pblock->GetValue( use_distortion, 0, useDistortion, ivalid);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 824				; 00000338H
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 388				; 00000184H
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx+400]
	mov	r8, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [r8+400]
	mov	QWORD PTR tv80[rsp], r8
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR tv401[rsp], rdx
	mov	DWORD PTR [rsp+40], 0
	mov	QWORD PTR [rsp+32], rax
	mov	r9, rcx
	xor	r8d, r8d
	mov	dx, 30
	mov	rax, QWORD PTR tv80[rsp]
	mov	rcx, rax
	mov	rax, QWORD PTR tv401[rsp]
	call	QWORD PTR [rax+1704]

; 640  : 
; 641  : 			// Update parameters			
; 642  : 			map->Enable(soften_rad, tileParam.tileBlur!=0?TRUE:FALSE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+204], 0
	je	SHORT $LN5@EnableStuf
	mov	DWORD PTR tv129[rsp], 1
	jmp	SHORT $LN6@EnableStuf
$LN5@EnableStuf:
	mov	DWORD PTR tv129[rsp], 0
$LN6@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv129[rsp]
	mov	dx, 11
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 643  : 			map->Enable(round_rad, tileParam.tileRound);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+200]
	mov	dx, 13
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 644  : 
; 645  : 			map->Enable(tile_height, tileParam.tilingType != 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 1
	je	SHORT $LN7@EnableStuf
	mov	DWORD PTR tv147[rsp], 1
	jmp	SHORT $LN8@EnableStuf
$LN7@EnableStuf:
	mov	DWORD PTR tv147[rsp], 0
$LN8@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv147[rsp]
	mov	dx, 3
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 646  : 			map->Enable(tile_width2, tileParam.tilingType != 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 1
	je	SHORT $LN9@EnableStuf
	mov	DWORD PTR tv157[rsp], 1
	jmp	SHORT $LN10@EnableStuf
$LN9@EnableStuf:
	mov	DWORD PTR tv157[rsp], 0
$LN10@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv157[rsp]
	mov	dx, 6
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 647  : 			map->Enable(tile_height2, tileParam.tilingType != 1);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+160], 1
	je	SHORT $LN11@EnableStuf
	mov	DWORD PTR tv167[rsp], 1
	jmp	SHORT $LN12@EnableStuf
$LN11@EnableStuf:
	mov	DWORD PTR tv167[rsp], 0
$LN12@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv167[rsp]
	mov	dx, 7
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 648  : 
; 649  : 			map->Enable(pb_uv_channel, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 15
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 650  : 			map->Enable(pb_auto, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 44					; 0000002cH
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 651  : 			map->Enable(pb_rotUV, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 20
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 652  : 			map->Enable(pb_uv_channel, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 15
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 653  : 			map->Enable(pb_randX, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 16
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 654  : 			map->Enable(pb_randY, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 17
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 655  : 			map->Enable(pb_randSX, tileParam.mapUV);			

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 18
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 656  : 			map->Enable(pb_randSY, tileParam.mapUV && (!tileParam.lock));			

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+220], 0
	je	SHORT $LN13@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+240], 0
	jne	SHORT $LN13@EnableStuf
	mov	DWORD PTR tv236[rsp], 1
	jmp	SHORT $LN14@EnableStuf
$LN13@EnableStuf:
	mov	DWORD PTR tv236[rsp], 0
$LN14@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv236[rsp]
	mov	dx, 19
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 657  : 			map->Enable(pb_lock, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 27
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 658  : 			map->Enable(pb_flipX, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 22
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 659  : 			map->Enable(pb_flipY, tileParam.mapUV);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+220]
	mov	dx, 23
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 660  : 			map->Enable(pb_randRot, tileParam.mapUV && (tileParam.rotUV==3));	

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+220], 0
	je	SHORT $LN15@EnableStuf
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+244], 3
	jne	SHORT $LN15@EnableStuf
	mov	DWORD PTR tv273[rsp], 1
	jmp	SHORT $LN16@EnableStuf
$LN15@EnableStuf:
	mov	DWORD PTR tv273[rsp], 0
$LN16@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv273[rsp]
	mov	dx, 21
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 661  : 			map->Enable(pb_center_channel, tileParam.center);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+264]
	mov	dx, 26
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 662  : 
; 663  : 			map->Enable(noise_color3, lockEdge?FALSE:TRUE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN17@EnableStuf
	mov	DWORD PTR tv290[rsp], 0
	jmp	SHORT $LN18@EnableStuf
$LN17@EnableStuf:
	mov	DWORD PTR tv290[rsp], 1
$LN18@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv290[rsp]
	mov	dx, 35					; 00000023H
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 664  : 			map->Enable(noise_map3, lockEdge?FALSE:TRUE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN19@EnableStuf
	mov	DWORD PTR tv299[rsp], 0
	jmp	SHORT $LN20@EnableStuf
$LN19@EnableStuf:
	mov	DWORD PTR tv299[rsp], 1
$LN20@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv299[rsp]
	mov	dx, 38					; 00000026H
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 665  : 			map->Enable(noise_map3_on, lockEdge?FALSE:TRUE);

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+296], 0
	je	SHORT $LN21@EnableStuf
	mov	DWORD PTR tv308[rsp], 0
	jmp	SHORT $LN22@EnableStuf
$LN21@EnableStuf:
	mov	DWORD PTR tv308[rsp], 1
$LN22@EnableStuf:
	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	r8d, DWORD PTR tv308[rsp]
	mov	dx, 41					; 00000029H
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 666  : 
; 667  : 			map->Enable(distortion_str, useDistortion);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+388]
	mov	dx, 31
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 668  : 			map->Enable(distortion_map, useDistortion);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+388]
	mov	dx, 28
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 669  : 			map->Enable(distortion_map2, useDistortion);

	mov	rax, QWORD PTR map$1[rsp]
	mov	rax, QWORD PTR [rax]
	xor	r9d, r9d
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8d, DWORD PTR [rcx+388]
	mov	dx, 29
	mov	rcx, QWORD PTR map$1[rsp]
	call	QWORD PTR [rax+184]

; 670  : 
; 671  : 			int type = berconXYZ.isRealworld();

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 424				; 000001a8H
	mov	rcx, rax
	call	?isRealworld@BerconXYZ@@QEAAHXZ		; BerconXYZ::isRealworld
	mov	DWORD PTR type$2[rsp], eax

; 672  : 
; 673  : 			setSpinnerType(map, t, tile_width,  IDC_TILEWIDTH_EDIT,  IDC_TILEWIDTH_SPIN,  type);	

	mov	BYTE PTR [rsp+48], 0
	mov	eax, DWORD PTR type$2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], 1023		; 000003ffH
	mov	r9d, 1021				; 000003fdH
	mov	r8d, 2
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR map$1[rsp]
	call	?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ; setSpinnerType

; 674  : 			setSpinnerType(map, t, tile_height, IDC_TILEHEIGHT_EDIT, IDC_TILEHEIGHT_SPIN, type);

	mov	BYTE PTR [rsp+48], 0
	mov	eax, DWORD PTR type$2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], 1025		; 00000401H
	mov	r9d, 1024				; 00000400H
	mov	r8d, 3
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR map$1[rsp]
	call	?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ; setSpinnerType

; 675  : 			setSpinnerType(map, t, edge_width,  IDC_EDGEWIDTH_EDIT,  IDC_EDGEWIDTH_SPIN,  type);

	mov	BYTE PTR [rsp+48], 0
	mov	eax, DWORD PTR type$2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], 1027		; 00000403H
	mov	r9d, 1026				; 00000402H
	mov	r8d, 4
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR map$1[rsp]
	call	?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ; setSpinnerType

; 676  : 			setSpinnerType(map, t, edge_height, IDC_EDGEHEIGHT_EDIT, IDC_EDGEHEIGHT_SPIN, type);

	mov	BYTE PTR [rsp+48], 0
	mov	eax, DWORD PTR type$2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], 1029		; 00000405H
	mov	r9d, 1028				; 00000404H
	mov	r8d, 5
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR map$1[rsp]
	call	?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ; setSpinnerType

; 677  : 
; 678  : 			setSpinnerType(map, t, soften_rad, IDC_SOFTENRAD_EDIT, IDC_SOFTENRAD_SPIN, type);

	mov	BYTE PTR [rsp+48], 0
	mov	eax, DWORD PTR type$2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], 1070		; 0000042eH
	mov	r9d, 1069				; 0000042dH
	mov	r8d, 11
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR map$1[rsp]
	call	?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ; setSpinnerType

; 679  : 			setSpinnerType(map, t, round_rad,  IDC_CORNER_EDIT,    IDC_CORNER_SPIN,    type);

	mov	BYTE PTR [rsp+48], 0
	mov	eax, DWORD PTR type$2[rsp]
	mov	DWORD PTR [rsp+40], eax
	mov	DWORD PTR [rsp+32], 1072		; 00000430H
	mov	r9d, 1071				; 0000042fH
	mov	r8d, 13
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR map$1[rsp]
	call	?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ; setSpinnerType
$LN3@EnableStuf:
$LN2@EnableStuf:

; 680  : 		}
; 681  : 	}
; 682  : }

	add	rsp, 136				; 00000088H
	ret	0
?EnableStuff@BerconTile@@QEAAXH@Z ENDP			; BerconTile::EnableStuff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
tv84 = 32
$T1 = 36
$T2 = 48
$T3 = 60
this$ = 96
__$ReturnUdt$ = 104
sc$ = 112
?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z PROC ; BerconTile::getDistVector, COMDAT

; 831  : Point3 BerconTile::getDistVector(ShadeContext& sc) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 832  : 	if (subtex[3])

	mov	eax, 8
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+728], 0
	je	$LN2@getDistVec

; 833  : 		if (subtex[4])

	mov	eax, 8
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+728], 0
	je	$LN4@getDistVec

; 834  : 			return subtex[3]->EvalNormalPerturb(sc)*distortionStr*subtex[4]->EvalMono(sc);

	mov	eax, 8
	imul	rax, rax, 4
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+728]
	mov	ecx, 8
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+728]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	movss	DWORD PTR tv84[rsp], xmm0
	mov	eax, 8
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+728]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+728]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax+1520]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rcx+392]
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	movss	xmm0, DWORD PTR tv84[rsp]
	movaps	xmm2, xmm0
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@getDistVec

; 835  : 		else					

	jmp	SHORT $LN5@getDistVec
$LN4@getDistVec:

; 836  : 			return subtex[3]->EvalNormalPerturb(sc)*distortionStr;

	mov	eax, 8
	imul	rax, rax, 3
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+728]
	mov	ecx, 8
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+728]
	mov	rax, QWORD PTR [rax]
	mov	r8, QWORD PTR sc$[rsp]
	lea	rdx, QWORD PTR $T3[rsp]
	call	QWORD PTR [rax+1520]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm2, DWORD PTR [rcx+392]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??D@YA?AVPoint3@@AEBV0@M@Z		; operator*
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@getDistVec
$LN5@getDistVec:

; 837  : 	else		  

	jmp	SHORT $LN3@getDistVec
$LN2@getDistVec:

; 838  : 		return Point3(0.f, 0.f, 0.f);

	xorps	xmm3, xmm3
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN3@getDistVec:
$LN1@getDistVec:

; 839  : }

	add	rsp, 88					; 00000058H
	ret	0
?getDistVector@BerconTile@@QEAA?AVPoint3@@AEAVShadeContext@@@Z ENDP ; BerconTile::getDistVector
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z
_TEXT	SEGMENT
tv130 = 32
tv157 = 36
t$ = 48
__$ArrayPad$ = 192
this$ = 240
__$ReturnUdt$ = 248
sc$ = 256
?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z PROC ; BerconTile::EvalParameters, COMDAT

; 841  : TileParam BerconTile::EvalParameters(ShadeContext& sc) {

$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 216				; 000000d8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 842  : 	TileParam t = tileParam;

	mov	edx, 136				; 00000088H
	lea	rcx, QWORD PTR t$[rsp]
	call	?__autoclassinit2@TileParam@@QEAAX_K@Z
	lea	rax, QWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+160]
	mov	ecx, 136				; 00000088H
	rep movsb

; 843  : 	t.pattern = &pattern;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 312				; 00000138H
	mov	QWORD PTR t$[rsp+112], rax

; 844  : 
; 845  : 	if (!mappedParameters)

	mov	rax, QWORD PTR this$[rsp]
	movzx	eax, BYTE PTR [rax+384]
	test	eax, eax
	jne	SHORT $LN2@EvalParame

; 846  : 		return t;

	lea	rax, QWORD PTR t$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 136				; 00000088H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@EvalParame
$LN2@EvalParame:

; 847  : 			
; 848  : 	t.tileBlurRad = (mapOn[5] && subtex[5])?subtex[5]->EvalMono(sc)*tileParam.tileBlurRad:tileParam.tileBlurRad;

	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+784], 0
	je	SHORT $LN4@EvalParame
	mov	eax, 8
	imul	rax, rax, 5
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+728], 0
	je	SHORT $LN4@EvalParame
	mov	eax, 8
	imul	rax, rax, 5
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+728]
	mov	ecx, 8
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+728]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+208]
	movss	DWORD PTR tv130[rsp], xmm0
	jmp	SHORT $LN5@EvalParame
$LN4@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+208]
	movss	DWORD PTR tv130[rsp], xmm0
$LN5@EvalParame:
	movss	xmm0, DWORD PTR tv130[rsp]
	movss	DWORD PTR t$[rsp+48], xmm0

; 849  : 	t.tileCrnrRad = (mapOn[6] && subtex[6])?subtex[6]->EvalMono(sc)*tileParam.tileCrnrRad:tileParam.tileCrnrRad;

	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rcx+rax+784], 0
	je	SHORT $LN6@EvalParame
	mov	eax, 8
	imul	rax, rax, 6
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+rax+728], 0
	je	SHORT $LN6@EvalParame
	mov	eax, 8
	imul	rax, rax, 6
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rcx+rax+728]
	mov	ecx, 8
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rdx+rcx+728]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR sc$[rsp]
	call	QWORD PTR [rax+1512]
	mov	rax, QWORD PTR this$[rsp]
	mulss	xmm0, DWORD PTR [rax+212]
	movss	DWORD PTR tv157[rsp], xmm0
	jmp	SHORT $LN7@EvalParame
$LN6@EvalParame:
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+212]
	movss	DWORD PTR tv157[rsp], xmm0
$LN7@EvalParame:
	movss	xmm0, DWORD PTR tv157[rsp]
	movss	DWORD PTR t$[rsp+52], xmm0

; 850  : 	
; 851  : 	return t;

	lea	rax, QWORD PTR t$[rsp]
	mov	rdi, QWORD PTR __$ReturnUdt$[rsp]
	mov	rsi, rax
	mov	ecx, 136				; 00000088H
	rep movsb
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@EvalParame:

; 852  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 216				; 000000d8H
	pop	rdi
	pop	rsi
	ret	0
?EvalParameters@BerconTile@@QEAA?AVTileParam@@AEAVShadeContext@@@Z ENDP ; BerconTile::EvalParameters
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.h
;	COMDAT ?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z
_TEXT	SEGMENT
tv84 = 64
minVal$ = 68
spin$ = 72
hWnd$ = 80
tv74 = 88
val$ = 96
__$ArrayPad$ = 104
map$ = 128
t$ = 136
pb_id$ = 144
edit_id$ = 152
spin_id$ = 160
spinnerTypeWorld$ = 168
allowNegative$ = 176
?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z PROC	; setSpinnerType, COMDAT

; 25   : static void setSpinnerType(IParamMap2 *map, TimeValue t, int pb_id, int edit_id, int spin_id, int spinnerTypeWorld = 1, bool allowNegative = false) {

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 26   : 	HWND hWnd = map->GetHWnd();

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+112]
	mov	QWORD PTR hWnd$[rsp], rax

; 27   : 	if (!hWnd) return;

	cmp	QWORD PTR hWnd$[rsp], 0
	jne	SHORT $LN2@setSpinner
	jmp	$LN1@setSpinner
$LN2@setSpinner:

; 28   : 
; 29   : 	float val;
; 30   : 	map->GetParamBlock()->GetValue(pb_id, t, val, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv74[rsp], rax
	mov	rax, QWORD PTR tv74[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR val$[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	movzx	edx, WORD PTR pb_id$[rsp]
	mov	rcx, QWORD PTR tv74[rsp]
	call	QWORD PTR [rax+1712]

; 31   : 
; 32   : 	float minVal = allowNegative ? -1000000.f : 0.f;

	movzx	eax, BYTE PTR allowNegative$[rsp]
	test	eax, eax
	je	SHORT $LN6@setSpinner
	movss	xmm0, DWORD PTR __real@c9742400
	movss	DWORD PTR tv84[rsp], xmm0
	jmp	SHORT $LN7@setSpinner
$LN6@setSpinner:
	xorps	xmm0, xmm0
	movss	DWORD PTR tv84[rsp], xmm0
$LN7@setSpinner:
	movss	xmm0, DWORD PTR tv84[rsp]
	movss	DWORD PTR minVal$[rsp], xmm0

; 33   : 
; 34   : 	ISpinnerControl* spin;
; 35   : 	if (spinnerTypeWorld)

	cmp	DWORD PTR spinnerTypeWorld$[rsp], 0
	je	SHORT $LN3@setSpinner

; 36   : 		spin = SetupUniverseSpinner(hWnd, spin_id, edit_id, minVal, 1000000.f, val);

	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR val$[rsp]
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@49742400
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR minVal$[rsp]
	mov	r8d, DWORD PTR edit_id$[rsp]
	mov	edx, DWORD PTR spin_id$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_?SetupUniverseSpinner@@YAPEAVISpinnerControl@@PEAUHWND__@@HHMMMM@Z
	mov	QWORD PTR spin$[rsp], rax

; 37   : 	else

	jmp	SHORT $LN4@setSpinner
$LN3@setSpinner:

; 38   : 		spin = SetupFloatSpinner(hWnd, spin_id, edit_id, minVal, 1000000.f, val);

	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rsp+48], xmm0
	movss	xmm0, DWORD PTR val$[rsp]
	movss	DWORD PTR [rsp+40], xmm0
	movss	xmm0, DWORD PTR __real@49742400
	movss	DWORD PTR [rsp+32], xmm0
	movss	xmm3, DWORD PTR minVal$[rsp]
	mov	r8d, DWORD PTR edit_id$[rsp]
	mov	edx, DWORD PTR spin_id$[rsp]
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_?SetupFloatSpinner@@YAPEAVISpinnerControl@@PEAUHWND__@@HHMMMM@Z
	mov	QWORD PTR spin$[rsp], rax
$LN4@setSpinner:

; 39   : 	spin->SetAutoScale(TRUE);

	mov	rax, QWORD PTR spin$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR spin$[rsp]
	call	QWORD PTR [rax+88]

; 40   : 	ReleaseISpinner(spin);

	mov	rcx, QWORD PTR spin$[rsp]
	call	QWORD PTR __imp_?ReleaseISpinner@@YAXPEAVISpinnerControl@@@Z
$LN1@setSpinner:

; 41   : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	ret	0
?setSpinnerType@@YAXPEAVIParamMap2@@HHHHH_N@Z ENDP	; setSpinnerType
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@TileParam@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@TileParam@@QEAAX_K@Z PROC		; TileParam::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@TileParam@@QEAAX_K@Z ENDP		; TileParam::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ?checkValues@TileParam@@QEAAXXZ
_TEXT	SEGMENT
tv130 = 0
tv135 = 4
tv142 = 8
tv149 = 12
this$ = 32
?checkValues@TileParam@@QEAAXXZ PROC			; TileParam::checkValues, COMDAT

; 134  : 	void checkValues() {

$LN17:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 135  : 		if (tileHeightVar > .5f) tileHeightVar = .5f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR [rax+20]
	jae	SHORT $LN2@checkValue
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [rax+20], xmm0
$LN2@checkValue:

; 136  : 		if (tileWidthVar > .5f) tileWidthVar = .5f;		

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f000000
	comiss	xmm0, DWORD PTR [rax+24]
	jae	SHORT $LN3@checkValue
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR [rax+24], xmm0
$LN3@checkValue:

; 137  : 		if (edgeHeightVar > 1.f) edgeHeightVar = 1.f;		

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [rax+28]
	jae	SHORT $LN4@checkValue
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+28], xmm0
$LN4@checkValue:

; 138  : 		if (edgeWidthVar > 1.f) edgeWidthVar = 1.f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	comiss	xmm0, DWORD PTR [rax+32]
	jae	SHORT $LN5@checkValue
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rax+32], xmm0
$LN5@checkValue:

; 139  : 
; 140  : 		if (tilingType == 1) { // Herringbond can't have variation in these

	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN6@checkValue

; 141  : 			tileMaxHeight = tileWidth * .5f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+120], xmm0

; 142  : 			tileMaxWidth = tileWidth;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+124], xmm0

; 143  : 		} else {

	jmp	SHORT $LN7@checkValue
$LN6@checkValue:

; 144  : 			tileMaxHeight = tileHeight * (1.f + tileHeightVar * 2.f);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+20]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+120], xmm0

; 145  : 			tileMaxWidth = tileWidth * (1.f + tileWidthVar * 2.f);

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rax+24]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+124], xmm0
$LN7@checkValue:

; 146  : 		}
; 147  : 
; 148  : 		eW_var = edgeWidthVar > 0.0001f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [rax+32]
	jae	SHORT $LN9@checkValue
	mov	DWORD PTR tv130[rsp], 1
	jmp	SHORT $LN10@checkValue
$LN9@checkValue:
	mov	DWORD PTR tv130[rsp], 0
$LN10@checkValue:
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR tv130[rsp]
	mov	BYTE PTR [rax+36], cl

; 149  : 		eH_var = edgeHeightVar > 0.0001f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [rax+28]
	jae	SHORT $LN11@checkValue
	mov	DWORD PTR tv135[rsp], 1
	jmp	SHORT $LN12@checkValue
$LN11@checkValue:
	mov	DWORD PTR tv135[rsp], 0
$LN12@checkValue:
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR tv135[rsp]
	mov	BYTE PTR [rax+37], cl

; 150  : 		
; 151  : 		randScale  = randSX > 0.0001f || randSY > 0.0001f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [rax+72]
	jb	SHORT $LN13@checkValue
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [rax+76]
	jb	SHORT $LN13@checkValue
	mov	DWORD PTR tv142[rsp], 0
	jmp	SHORT $LN14@checkValue
$LN13@checkValue:
	mov	DWORD PTR tv142[rsp], 1
$LN14@checkValue:
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR tv142[rsp]
	mov	BYTE PTR [rax+128], cl

; 152  : 		randOffset = randX  > 0.0001f || randY  > 0.0001f;

	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [rax+64]
	jb	SHORT $LN15@checkValue
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@38d1b717
	comiss	xmm0, DWORD PTR [rax+68]
	jb	SHORT $LN15@checkValue
	mov	DWORD PTR tv149[rsp], 0
	jmp	SHORT $LN16@checkValue
$LN15@checkValue:
	mov	DWORD PTR tv149[rsp], 1
$LN16@checkValue:
	mov	rax, QWORD PTR this$[rsp]
	movzx	ecx, BYTE PTR tv149[rsp]
	mov	BYTE PTR [rax+129], cl

; 153  : 	}

	add	rsp, 24
	ret	0
?checkValues@TileParam@@QEAAXXZ ENDP			; TileParam::checkValues
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ??0TileParam@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0TileParam@@QEAA@XZ PROC				; TileParam::TileParam, COMDAT

; 132  : 	TileParam() { pattern = NULL; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+112], 0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0TileParam@@QEAA@XZ ENDP				; TileParam::TileParam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ?update@TilePattern@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
tv66 = 40
this$ = 64
?update@TilePattern@@QEAAXXZ PROC			; TilePattern::update, COMDAT

; 81   : 	void update() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 82   : 		totalHeight = 0.f;

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0

; 83   : 		for (int i=0; i<rows.size(); i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@update
$LN2@update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@update:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 40					; 00000028H
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	mov	rcx, QWORD PTR tv66[rsp]
	cmp	rcx, rax
	jae	SHORT $LN3@update

; 84   : 			rows[i].update();

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 40					; 00000028H
	mov	rdx, rax
	call	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
	mov	rcx, rax
	call	?update@TileRow@@QEAAXXZ		; TileRow::update

; 85   : 			totalHeight += heights[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	addss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 86   : 		}

	jmp	SHORT $LN2@update
$LN3@update:

; 87   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?update@TilePattern@@QEAAXXZ ENDP			; TilePattern::update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv82 = 32
tv135 = 40
tv143 = 48
tv150 = 56
this$ = 80
?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Tidy, COMDAT

; 1636 : 		{	// free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rcx, QWORD PTR tv82[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	QWORD PTR tv135[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv135[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR tv143[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	rcx, QWORD PTR tv143[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv150[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR [rax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1646 : 			}
; 1647 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy, COMDAT

; 1580 : 		{	// destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>

; 1582 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Pos$ = 72
??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::operator[], COMDAT

; 1230 : 		{	// subscript mutable sequence

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1231 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1232 : 		if (size() <= _Pos)

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	cmp	rax, QWORD PTR _Pos$[rsp]
	ja	$LN2@operator

; 1233 : 			{	// report error
; 1234 : 			_DEBUG_ERROR("vector subscript out of range");

	mov	r8d, 1234				; 000004d2H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z

; 1235 : 			_SCL_SECURE_OUT_OF_RANGE;

	lea	rax, OFFSET FLAT:??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	rax, rax
	je	SHORT $LN4@operator
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN5@operator
$LN4@operator:
	lea	rax, OFFSET FLAT:??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1235				; 000004d3H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
	xor	eax, eax
$LN5@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1235				; 000004d3H
	lea	r8, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	lea	rcx, OFFSET FLAT:??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@operator:

; 1236 : 			}
; 1237 : 
; 1238 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1239 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1240 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1241 : 
; 1242 : 		return (*(this->_Myfirst() + _Pos));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	imul	rcx, QWORD PTR _Pos$[rsp], 40		; 00000028H
	add	rcx, QWORD PTR [rax]
	mov	rax, rcx

; 1243 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::size, COMDAT

; 1179 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1181 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >, COMDAT

; 975  : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 976  : 		_Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXXZ ; std::vector<TileRow,std::allocator<TileRow> >::_Tidy
	npad	1

; 977  : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >, COMDAT

; 707  : 		{	// construct empty vector

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 706  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
	npad	1

; 708  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<TileRow> >::~_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >, COMDAT

; 488  : 		{	// initialize values

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	npad	1

; 485  : 		: _Myfirst(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 486  : 		_Mylast(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0

; 487  : 		_Myend()

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 489  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<TileRow> >::_Vector_val<std::_Simple_types<TileRow> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend, COMDAT

; 662  : 		{	// return reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 663  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 24

; 664  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast, COMDAT

; 657  : 		{	// return const reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 658  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 16

; 659  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast, COMDAT

; 652  : 		{	// return reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 653  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 16

; 654  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst, COMDAT

; 647  : 		{	// return const reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 648  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 8

; 649  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst, COMDAT

; 642  : 		{	// return reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 643  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 8

; 644  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data, COMDAT

; 637  : 		{	// return const reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 638  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second

; 639  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data, COMDAT

; 632  : 		{	// return reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 633  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second

; 634  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal, COMDAT

; 622  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 623  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first

; 624  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all, COMDAT

; 612  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 613  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy, COMDAT

; 601  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 602  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data

; 603  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Free_proxy, COMDAT

; 586  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>

; 589  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	mov	r8d, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 593  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv70 = 32
tv80 = 40
tv92 = 48
$T1 = 56
_Alproxy$ = 72
__$ArrayPad$ = 80
this$ = 112
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Alloc_proxy, COMDAT

; 577  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<TileRow> > & __ptr64>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rax], rcx

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv80[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	QWORD PTR [rax], rcx

; 583  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >, COMDAT

; 558  : 		{	// destroy proxy

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 559  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Free_proxy
	npad	1

; 560  : 		}

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::~_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >, COMDAT

; 544  : 		{	// default construct allocator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1><>
	npad	1

; 545  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Alloc_proxy
	npad	1

; 546  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::allocator<TileRow>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::_Wrap_alloc<std::allocator<TileRow> >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 935  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@VTileRow@@@std@@QEAA@XZ	; std::allocator<TileRow>::allocator<TileRow>

; 937  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::_Wrap_alloc<std::allocator<TileRow> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z PROC ; std::allocator<TileRow>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 40					; 00000028H
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z ENDP ; std::allocator<TileRow>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@VTileRow@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@VTileRow@@@std@@QEAA@XZ PROC		; std::allocator<TileRow>::allocator<TileRow>, COMDAT

; 699  : 	allocator() _THROW0()

	mov	QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@VTileRow@@@std@@QEAA@XZ ENDP		; std::allocator<TileRow>::allocator<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ??1TilePattern@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1TilePattern@@QEAA@XZ PROC				; TilePattern::~TilePattern, COMDAT

; 73   : 	~TilePattern() {}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1TilePattern@@QEAA@XZ ENDP				; TilePattern::~TilePattern
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::~TilePattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::~TilePattern'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::~TilePattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::~TilePattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::~TilePattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::~TilePattern'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::~TilePattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::~TilePattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ??0TilePattern@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0TilePattern@@QEAA@XZ PROC				; TilePattern::TilePattern, COMDAT

; 72   : 	TilePattern() {update();}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	??0?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::vector<TileRow,std::allocator<TileRow> >
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	?update@TilePattern@@QEAAXXZ		; TilePattern::update
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TilePattern@@QEAA@XZ ENDP				; TilePattern::TilePattern
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::TilePattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::TilePattern'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::TilePattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::TilePattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::TilePattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::TilePattern'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA PROC		; `TilePattern::TilePattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 40					; 00000028H
	call	??1?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAA@XZ ; std::vector<TileRow,std::allocator<TileRow> >::~vector<TileRow,std::allocator<TileRow> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0TilePattern@@QEAA@XZ@4HA ENDP		; `TilePattern::TilePattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GTileRow@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GTileRow@@QEAAPEAXI@Z PROC				; TileRow::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1TileRow@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GTileRow@@QEAAPEAXI@Z ENDP				; TileRow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1TileRow@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1TileRow@@QEAA@XZ PROC				; TileRow::~TileRow, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1TileRow@@QEAA@XZ ENDP				; TileRow::~TileRow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA PROC			; `TileRow::~TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA ENDP			; `TileRow::~TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA PROC			; `TileRow::~TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA ENDP			; `TileRow::~TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ?update@TileRow@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
tv66 = 40
this$ = 64
?update@TileRow@@QEAAXXZ PROC				; TileRow::update, COMDAT

; 63   : 	void update() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 64   : 		totalWidth = 0.f;

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 65   : 		for (int i=0; i<tiles.size(); i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@update
$LN2@update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@update:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	mov	rcx, QWORD PTR tv66[rsp]
	cmp	rcx, rax
	jae	SHORT $LN3@update

; 66   : 			totalWidth += tiles[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	addss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	jmp	SHORT $LN2@update
$LN3@update:

; 67   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?update@TileRow@@QEAAXXZ ENDP				; TileRow::update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv82 = 32
tv135 = 40
tv143 = 48
tv150 = 56
this$ = 80
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ PROC	; std::vector<float,std::allocator<float> >::_Tidy, COMDAT

; 1636 : 		{	// free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR tv82[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR tv135[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv135[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	QWORD PTR tv143[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rcx, QWORD PTR tv143[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv150[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR [rax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1646 : 			}
; 1647 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ENDP	; std::vector<float,std::allocator<float> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Destroy, COMDAT

; 1580 : 		{	// destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::allocator<float>,float * __ptr64>

; 1582 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
_TEXT	SEGMENT
this$ = 64
_Pos$ = 72
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z PROC ; std::vector<float,std::allocator<float> >::operator[], COMDAT

; 1230 : 		{	// subscript mutable sequence

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1231 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1232 : 		if (size() <= _Pos)

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	cmp	rax, QWORD PTR _Pos$[rsp]
	ja	$LN2@operator

; 1233 : 			{	// report error
; 1234 : 			_DEBUG_ERROR("vector subscript out of range");

	mov	r8d, 1234				; 000004d2H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z

; 1235 : 			_SCL_SECURE_OUT_OF_RANGE;

	lea	rax, OFFSET FLAT:??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	rax, rax
	je	SHORT $LN4@operator
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN5@operator
$LN4@operator:
	lea	rax, OFFSET FLAT:??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1235				; 000004d3H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
	xor	eax, eax
$LN5@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1235				; 000004d3H
	lea	r8, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@
	lea	rcx, OFFSET FLAT:??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@operator:

; 1236 : 			}
; 1237 : 
; 1238 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1239 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1240 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1241 : 
; 1242 : 		return (*(this->_Myfirst() + _Pos));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pos$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]

; 1243 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ENDP ; std::vector<float,std::allocator<float> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC	; std::vector<float,std::allocator<float> >::size, COMDAT

; 1179 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2

; 1181 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP	; std::vector<float,std::allocator<float> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >, COMDAT

; 975  : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 976  : 		_Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
	npad	1

; 977  : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT

; 707  : 		{	// construct empty vector

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 706  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	npad	1

; 708  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >, COMDAT

; 488  : 		{	// initialize values

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	npad	1

; 485  : 		: _Myfirst(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 486  : 		_Mylast(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0

; 487  : 		_Myend()

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 489  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend, COMDAT

; 662  : 		{	// return reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 663  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 24

; 664  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast, COMDAT

; 657  : 		{	// return const reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 658  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 16

; 659  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast, COMDAT

; 652  : 		{	// return reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 653  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 16

; 654  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst, COMDAT

; 647  : 		{	// return const reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 648  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 8

; 649  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst, COMDAT

; 642  : 		{	// return reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 643  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 8

; 644  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data, COMDAT

; 637  : 		{	// return const reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 638  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second

; 639  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data, COMDAT

; 632  : 		{	// return reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 633  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second

; 634  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal, COMDAT

; 622  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 623  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first

; 624  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all, COMDAT

; 612  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 613  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy, COMDAT

; 601  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 602  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data

; 603  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy, COMDAT

; 586  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>

; 589  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	mov	r8d, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 593  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv70 = 32
tv80 = 40
tv92 = 48
$T1 = 56
_Alproxy$ = 72
__$ArrayPad$ = 80
this$ = 112
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy, COMDAT

; 577  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rax], rcx

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv80[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	QWORD PTR [rax], rcx

; 583  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >, COMDAT

; 558  : 		{	// destroy proxy

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 559  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
	npad	1

; 560  : 		}

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >, COMDAT

; 544  : 		{	// default construct allocator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>
	npad	1

; 545  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
	npad	1

; 546  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z ; std::allocator<float>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 935  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@M@std@@QEAA@XZ		; std::allocator<float>::allocator<float>

; 937  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z PROC	; std::allocator<float>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 4
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z ENDP	; std::allocator<float>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@M@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@M@std@@QEAA@XZ PROC			; std::allocator<float>::allocator<float>, COMDAT

; 699  : 	allocator() _THROW0()

	mov	QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@M@std@@QEAA@XZ ENDP			; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 2282 : 		{	// report an out_of_range error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2283 : 		_Xout_of_range("invalid string position");

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
$LN2@Xran:

; 2284 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2271 : 		if (this->_Mysize() < _Off)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Off$[rsp]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN2@Check_offs

; 2272 : 			_Xran();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2273 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 2265 : 		{	// report a length_error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2266 : 		_Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
$LN2@Xlen:

; 2267 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
_Ptr$1 = 32
tv87 = 40
tv132 = 48
tv155 = 56
this$ = 80
_Built$ = 88
_Newsize$ = 96
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT

; 2248 : 		{	// initialize buffer, deallocating any storage

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 2249 : 		if (!_Built)

	movzx	eax, BYTE PTR _Built$[rsp]
	test	eax, eax
	jne	SHORT $LN2@Tidy
	jmp	$LN3@Tidy
$LN2@Tidy:

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	cmp	QWORD PTR [rax], 8
	jb	$LN4@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rcx, rax
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t * __ptr64>
	mov	QWORD PTR tv87[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv87[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>

; 2255 : 			if (0 < _Newsize)

	cmp	QWORD PTR _Newsize$[rsp], 0
	jbe	SHORT $LN5@Tidy

; 2256 : 				_Traits::copy(this->_Bx()._Buf,

	mov	rcx, QWORD PTR _Ptr$1[rsp]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR tv132[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR tv132[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
$LN5@Tidy:

; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	QWORD PTR tv155[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv155[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR _Ptr$1[rsp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN4@Tidy:
$LN3@Tidy:

; 2259 : 			}
; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR [rax], 7

; 2261 : 		_Eos(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos

; 2262 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z
_TEXT	SEGMENT
tv77 = 32
this$ = 64
_Ptr$ = 72
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT

; 2238 : 		{	// test if _Ptr points inside string

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

	cmp	QWORD PTR _Ptr$[rsp], 0
	je	SHORT $LN4@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	cmp	QWORD PTR _Ptr$[rsp], rax
	jb	SHORT $LN4@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	QWORD PTR tv77[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv77[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	cmp	rax, QWORD PTR _Ptr$[rsp]
	ja	SHORT $LN2@Inside
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN1@Inside

; 2242 : 		else

	jmp	SHORT $LN3@Inside
$LN2@Inside:

; 2243 : 			return (true);

	mov	al, 1
$LN3@Inside:
$LN1@Inside:

; 2244 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
tv140 = 32
tv133 = 40
this$ = 64
_Newsize$ = 72
_Trim$ = 80
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN13:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2225 : 		if (max_size() < _Newsize)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	rax, QWORD PTR _Newsize$[rsp]
	jae	SHORT $LN2@Grow

; 2226 : 			_Xlen();	// result too long

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@Grow:

; 2227 : 		if (this->_Myres() < _Newsize)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rcx, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	eax, BYTE PTR _Trim$[rsp]
	test	eax, eax
	je	SHORT $LN5@Grow
	cmp	QWORD PTR _Newsize$[rsp], 8
	jae	SHORT $LN5@Grow

; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN9@Grow
	mov	rax, QWORD PTR _Newsize$[rsp]
	mov	QWORD PTR tv133[rsp], rax
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv133[rsp], rax
$LN10@Grow:
	mov	r8, QWORD PTR tv133[rsp]
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	jmp	SHORT $LN6@Grow
$LN5@Grow:

; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

	cmp	QWORD PTR _Newsize$[rsp], 0
	jne	SHORT $LN7@Grow

; 2233 : 			_Eos(0);	// new size is zero, just null terminate

	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN7@Grow:
$LN6@Grow:
$LN4@Grow:

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	QWORD PTR _Newsize$[rsp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv140[rsp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv140[rsp], 0
$LN12@Grow:
	movzx	eax, BYTE PTR tv140[rsp]
$LN8@Grow:

; 2235 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
_Dx$ = 40
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT

; 2217 : 		{	// set new length and null terminator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2218 : 		auto& _Dx = this->_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	QWORD PTR _Dx$[rsp], rax

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

	xor	eax, eax
	mov	WORD PTR $T1[rsp], ax
	mov	rax, QWORD PTR _Dx$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	mov	QWORD PTR [rax+24], rcx
	mov	rcx, QWORD PTR _Dx$[rsp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::char_traits<wchar_t>::assign

; 2220 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN23:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	rax, QWORD PTR _Newsize$[rsp]
	or	rax, 7
	mov	QWORD PTR _Newres$[rsp], rax

; 2184 : 		if (max_size() < _Newres)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	rax, QWORD PTR _Newres$[rsp]
	jae	SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	rax, QWORD PTR _Newsize$[rsp]
	mov	QWORD PTR _Newres$[rsp], rax
	jmp	$LN3@Copy
$LN2@Copy:

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	xor	edx, edx
	mov	rax, QWORD PTR [rax]
	mov	ecx, 2
	div	rcx
	mov	QWORD PTR tv74[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Newres$[rsp]
	mov	ecx, 3
	div	rcx
	mov	rcx, QWORD PTR tv74[rsp]
	cmp	rcx, rax
	ja	SHORT $LN4@Copy
	jmp	$LN3@Copy
$LN4@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	QWORD PTR tv84[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	xor	edx, edx
	mov	rax, QWORD PTR [rax]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv84[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR tv82[rsp]
	cmp	QWORD PTR [rcx], rax
	ja	SHORT $LN6@Copy

; 2189 : 			_Newres = this->_Myres()

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR tv131[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	xor	edx, edx
	mov	rax, QWORD PTR [rax]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv131[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newres$[rsp], rax

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else

	jmp	SHORT $LN3@Copy
$LN6@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	QWORD PTR _Newres$[rsp], rax
$LN3@Copy:

; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN
; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	rax, QWORD PTR _Newres$[rsp]
	inc	rax
	mov	QWORD PTR tv152[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv152[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	QWORD PTR _Ptr$[rsp], rax
	jmp	SHORT $LN18@Copy
$LN19@Copy:
$LN18@Copy:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END
; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	QWORD PTR _Oldlen$[rsp], 0
	jbe	SHORT $LN10@Copy

; 2208 : 			_Traits::copy(_Unfancy(_Ptr), this->_Myptr(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	QWORD PTR tv181[rsp], rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	r8, QWORD PTR _Oldlen$[rsp]
	mov	rcx, QWORD PTR tv181[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
$LN10@Copy:

; 2209 : 				_Oldlen);	// copy existing elements
; 2210 : 		_Tidy(true);

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 2211 : 		this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rcx, rax
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t * __ptr64>
	mov	QWORD PTR tv196[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	lea	r8, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR tv196[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 2212 : 		this->_Myres() = _Newres;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rcx, QWORD PTR _Newres$[rsp]
	mov	QWORD PTR [rax], rcx

; 2213 : 		_Eos(_Oldlen);

	mov	rdx, QWORD PTR _Oldlen$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos

; 2214 : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	ret	0
$LN20@Copy:
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1

; 2197 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$0:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	rax, QWORD PTR _Newsize$[rbp]
	mov	QWORD PTR _Newres$[rbp], rax

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	rax, QWORD PTR _Newres$[rbp]
	inc	rax
	mov	QWORD PTR tv165[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv165[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	QWORD PTR _Ptr$[rbp], rax
	jmp	SHORT $LN16@catch$1
$LN17@catch$1:
$LN16@catch$1:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

	lea	rax, $LN19@catch$1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$1:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END

	lea	rax, $LN17@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1

; 2197 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$0:

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	rax, QWORD PTR _Newsize$[rbp]
	mov	QWORD PTR _Newres$[rbp], rax

; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	rax, QWORD PTR _Newres$[rbp]
	inc	rax
	mov	QWORD PTR tv165[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv165[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	QWORD PTR _Ptr$[rbp], rax
	jmp	SHORT $LN16@catch$1
$LN17@catch$1:
$LN16@catch$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

	lea	rax, $LN19@catch$1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0

; 2201 : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$1:

; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 2203 : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 2204 : 			_CATCH_END

	lea	rax, $LN17@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
_Max_effective_size$ = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT

; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Off$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Max_effective_size$[rsp], rax

; 2113 : 		if (_Size <= _Max_effective_size)

	mov	rax, QWORD PTR _Max_effective_size$[rsp]
	cmp	QWORD PTR _Size$[rsp], rax
	ja	SHORT $LN2@Clamp_suff

; 2114 : 			return (_Size);

	mov	rax, QWORD PTR _Size$[rsp]
	jmp	SHORT $LN1@Clamp_suff

; 2115 : 		else

	jmp	SHORT $LN3@Clamp_suff
$LN2@Clamp_suff:

; 2116 : 			return (_Max_effective_size);

	mov	rax, QWORD PTR _Max_effective_size$[rsp]
$LN3@Clamp_suff:
$LN1@Clamp_suff:

; 2117 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
_Num$ = 40
tv75 = 48
this$ = 80
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 1769 : 		{	// return maximum possible length of sequence

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1770 : 		const size_type _Num = this->_Getal().max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
	mov	QWORD PTR _Num$[rsp], rax

; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	QWORD PTR _Num$[rsp], 1
	ja	SHORT $LN3@max_size
	mov	QWORD PTR tv75[rsp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	rax, QWORD PTR _Num$[rsp]
	dec	rax
	mov	QWORD PTR tv75[rsp], rax
$LN4@max_size:
	mov	rax, QWORD PTR tv75[rsp]

; 1772 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
_Ptr$1 = 32
_Newsize$2 = 40
this$ = 64
_Off$ = 72
_Count$ = 80
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1348 : 		_Check_offset(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset

; 1349 : 		if (this->_Mysize() - _Off <= _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Off$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cmp	rax, QWORD PTR _Count$[rsp]
	ja	SHORT $LN2@erase

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
	jmp	SHORT $LN3@erase
$LN2@erase:

; 1351 : 		else if (0 < _Count)

	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN4@erase

; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Off$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Newsize$2[rsp], rax

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	rax, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _Newsize$2[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Ptr$1[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	lea	rcx, QWORD PTR [rcx+rdx*2]
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR _Ptr$1[rsp]
	call	?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::move

; 1356 : 			_Eos(_Newsize);

	mov	rdx, QWORD PTR _Newsize$2[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@erase:
$LN3@erase:

; 1357 : 			}
; 1358 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 1359 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT

; 1340 : 		{	// erase elements [_Off, ...)

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1341 : 		_Check_offset(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset

; 1342 : 		_Eos(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos

; 1343 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 1344 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1180 : 		{	// assign [_Ptr, <null>)

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1181 : 		_DEBUG_POINTER(_Ptr);

	mov	r8d, 1181				; 0000049dH
	lea	rdx, OFFSET FLAT:??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z ; std::_Debug_pointer<wchar_t const >

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?length@?$char_traits@_W@std@@SA_KPEB_W@Z ; std::char_traits<wchar_t>::length
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 1183 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
_TEXT	SEGMENT
tv68 = 32
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN5@assign
	mov	BYTE PTR tv68[rsp], 1
	jmp	SHORT $LN6@assign
$LN5@assign:
	mov	BYTE PTR tv68[rsp], 0
$LN6@assign:
	mov	r9d, 1166				; 0000048eH
	lea	r8, OFFSET FLAT:??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	rdx, QWORD PTR _Ptr$[rsp]
	movzx	ecx, BYTE PTR tv68[rsp]
	call	??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z ; std::_Debug_pointer_if<wchar_t const >

; 1167 : 		if (_Inside(_Ptr))

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1168 : 			return (assign(*this,

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Ptr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	r9, QWORD PTR _Count$[rsp]
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	jmp	SHORT $LN1@assign
$LN2@assign:

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

	xor	r8d, r8d
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@assign

; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy

; 1174 : 			_Eos(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN3@assign:

; 1175 : 			}
; 1176 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]
$LN1@assign:

; 1177 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
tv92 = 32
this$ = 64
_Right$ = 72
_Roff$ = 80
_Count$ = 88
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1150 : 		_Right._Check_offset(_Roff);

	mov	rdx, QWORD PTR _Roff$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset

; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Roff$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
	mov	QWORD PTR _Count$[rsp], rax

; 1152 : 
; 1153 : 		if (this == &_Right)

	mov	rax, QWORD PTR _Right$[rsp]
	cmp	QWORD PTR this$[rsp], rax
	jne	SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Roff$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	r8, QWORD PTR _Roff$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1155 : 		else if (_Grow(_Count))

	xor	r8d, r8d
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@assign

; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Roff$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy

; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@assign:
$LN3@assign:

; 1160 : 			}
; 1161 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 1162 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 1016 : 		{	// destroy the string

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 1017 : 		_Tidy(true);

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	npad	1

; 1018 : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 836  : 		{	// construct from [_Ptr, <null>)

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 835  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	npad	1

; 837  : 		_Tidy();

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 838  : 		assign(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	npad	1

; 839  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 299  : 		{	// return const reference to first

	mov	QWORD PTR [rsp+8], rcx

; 300  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 301  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT

; 733  : 		{	// return reference to _Myres

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 734  : 		return (_Get_data()._Myres);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 32					; 00000020H

; 735  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 48
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT

; 728  : 		{	// return const reference to _Mysize

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 729  : 		return (_Get_data()._Mysize);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 24

; 730  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT

; 723  : 		{	// return reference to _Mysize

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 724  : 		return (_Get_data()._Mysize);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 24

; 725  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx, COMDAT

; 713  : 		{	// return reference to _Bx

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 714  : 		return (_Get_data()._Bx);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 8

; 715  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT

; 706  : 		{	// return const reference to _String_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 707  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second

; 708  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT

; 701  : 		{	// return reference to _String_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 702  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second

; 703  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT

; 696  : 		{	// return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 697  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 698  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT

; 691  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 692  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 693  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT

; 681  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 682  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 683  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy, COMDAT

; 670  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 671  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data

; 672  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy, COMDAT

; 655  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 656  : 		typename _Alty::template rebind<_Container_proxy>::other
; 657  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>

; 658  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all

; 659  : 		_Alproxy.destroy(_Myproxy());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 660  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	mov	r8d, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 661  : 		_Myproxy() = 0;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 662  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv70 = 32
tv80 = 40
tv92 = 48
$T1 = 56
_Alproxy$ = 72
__$ArrayPad$ = 80
this$ = 112
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy, COMDAT

; 646  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 647  : 		typename _Alty::template rebind<_Container_proxy>::other
; 648  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>

; 649  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rax], rcx

; 650  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv80[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 651  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	QWORD PTR [rax], rcx

; 652  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT

; 627  : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 628  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
	npad	1

; 629  : 		}

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT

; 613  : 		{	// default construct allocator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 612  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
	npad	1

; 614  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
	npad	1

; 615  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT

; 582  : 		{	// determine current pointer to buffer for nonmutable string

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 583  : 		return (_Get_data()._Myptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 584  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 48
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT

; 577  : 		{	// determine current pointer to buffer for mutable string

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 578  : 		return (_Get_data()._Myptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 579  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT

; 533  : 			{	// user-provided, for fancy pointers

	mov	QWORD PTR [rsp+8], rcx

; 534  : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT

; 528  : 		_Bxty()

	mov	QWORD PTR [rsp+8], rcx

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 520  : 		{	// determine current pointer to buffer for nonmutable string

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 521  : 		return (this->_BUF_SIZE <= _Myres

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 8
	jb	SHORT $LN3@Myptr
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR tv72[rsp], rax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR tv72[rsp], rax
$LN4@Myptr:
	mov	rax, QWORD PTR tv72[rsp]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 513  : 		{	// determine current pointer to buffer for mutable string

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 514  : 		return (this->_BUF_SIZE <= _Myres

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 8
	jb	SHORT $LN3@Myptr
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR tv72[rsp], rax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR tv72[rsp], rax
$LN4@Myptr:
	mov	rax, QWORD PTR tv72[rsp]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 498  : 		{	// initialize values

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	npad	1

; 495  : 		: _Bx(),

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
	npad	1

; 496  : 		_Mysize(0),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 497  : 		_Myres(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0

; 499  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT

; 1007 : 		{	// get maximum size

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size

; 1009 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ; std::allocator<wchar_t>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 935  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@_W@std@@QEAA@XZ		; std::allocator<wchar_t>::allocator<wchar_t>

; 937  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
_Al$ = 48
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 868  : 		{	// get maximum size

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 869  : 		return (_Al.max_size());

	mov	rcx, QWORD PTR _Al$[rsp]
	call	?max_size@?$allocator@_W@std@@QEBA_KXZ	; std::allocator<wchar_t>::max_size

; 870  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@_W@std@@QEBA_KXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT

; 748  : 		{	// estimate maximum array size

	mov	QWORD PTR [rsp+8], rcx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 750  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QEBA_KXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 2
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 2
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 699  : 	allocator() _THROW0()

	mov	QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?isRealworld@BerconXYZ@@QEAAHXZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?isRealworld@BerconXYZ@@QEAAHXZ PROC			; BerconXYZ::isRealworld, COMDAT

; 333  : 	int isRealworld() { return mappingType == 0 || mappingType == 4 ? 0 : 1; }

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@isRealworl
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 4
	je	SHORT $LN3@isRealworl
	mov	DWORD PTR tv68[rsp], 1
	jmp	SHORT $LN4@isRealworl
$LN3@isRealworl:
	mov	DWORD PTR tv68[rsp], 0
$LN4@isRealworl:
	mov	eax, DWORD PTR tv68[rsp]
	add	rsp, 24
	ret	0
?isRealworld@BerconXYZ@@QEAAHXZ ENDP			; BerconXYZ::isRealworld
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 48
subMtlNum$ = 56
mapreq$ = 64
bumpreq$ = 72
?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z PROC		; BerconXYZ::map, COMDAT

; 327  : 	void map(int subMtlNum, BitArray& mapreq, BitArray& bumpreq) { if (mappingType==0 || mappingType==1) mapreq.Set(mappingChannel); }	

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@map
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@map
$LN3@map:
	mov	rax, QWORD PTR this$[rsp]
	mov	edx, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR mapreq$[rsp]
	call	?Set@BitArray@@QEAAXH@Z			; BitArray::Set
$LN2@map:
	add	rsp, 40					; 00000028H
	ret	0
?map@BerconXYZ@@QEAAXHAEAVBitArray@@0@Z ENDP		; BerconXYZ::map
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?req@BerconXYZ@@QEAAKXZ
_TEXT	SEGMENT
this$ = 8
?req@BerconXYZ@@QEAAKXZ PROC				; BerconXYZ::req, COMDAT

; 326  : 	ULONG req() { if (mappingType==0 || mappingType==1) return MTLREQ_UV; return 0; };

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN3@req
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@req
$LN3@req:
	mov	eax, 16
	jmp	SHORT $LN1@req
$LN2@req:
	xor	eax, eax
$LN1@req:
	ret	0
?req@BerconXYZ@@QEAAKXZ ENDP				; BerconXYZ::req
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0BerconXYZ@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0BerconXYZ@@QEAA@XZ PROC				; BerconXYZ::BerconXYZ, COMDAT

; 323  : 	BerconXYZ() {offX=0; offY=0; offZ=0; mode2D = FALSE; update();}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 314  : 	bool variance;

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 120				; 00000078H
	mov	r9, QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	r8d, 3
	mov	edx, 12
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z

; 323  : 	BerconXYZ() {offX=0; offY=0; offZ=0; mode2D = FALSE; update();}

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 156				; 0000009cH
	mov	rcx, rax
	call	??0Matrix3@@QEAA@XZ			; Matrix3::Matrix3
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 208				; 000000d0H
	mov	rcx, rax
	call	??0Matrix3@@QEAA@XZ			; Matrix3::Matrix3
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+16], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+260], 0
	mov	rcx, QWORD PTR this$[rsp]
	call	?update@BerconXYZ@@QEAAXXZ		; BerconXYZ::update
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0BerconXYZ@@QEAA@XZ ENDP				; BerconXYZ::BerconXYZ
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBerconXYZDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBerconXYZDlgProc@@UEAAPEAXI@Z PROC			; BerconXYZDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1BerconXYZDlgProc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBerconXYZDlgProc@@UEAAPEAXI@Z ENDP			; BerconXYZDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z PROC	; BerconXYZDlgProc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@BerconXYZDlgProc@@QEAAX_K@Z ENDP	; BerconXYZDlgProc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1BerconXYZDlgProc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1BerconXYZDlgProc@@UEAA@XZ PROC			; BerconXYZDlgProc::~BerconXYZDlgProc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1BerconXYZDlgProc@@UEAA@XZ ENDP			; BerconXYZDlgProc::~BerconXYZDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA PROC	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA ENDP	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA PROC	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1BerconXYZDlgProc@@UEAA@XZ@4HA ENDP	; `BerconXYZDlgProc::~BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
m$ = 16
?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; BerconXYZDlgProc::SetThing, COMDAT

; 296  : 		void SetThing(ReferenceTarget *m) { reftarg = m; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	ret	0
?SetThing@BerconXYZDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; BerconXYZDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?DeleteThis@BerconXYZDlgProc@@UEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
this$ = 80
?DeleteThis@BerconXYZDlgProc@@UEAAXXZ PROC		; BerconXYZDlgProc::DeleteThis, COMDAT

; 295  : 		void DeleteThis() {delete this;}

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@DeleteThis
	mov	rax, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR [rax]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@DeleteThis
$LN3@DeleteThis:
	mov	QWORD PTR tv74[rsp], 0
$LN4@DeleteThis:
	add	rsp, 72					; 00000048H
	ret	0
?DeleteThis@BerconXYZDlgProc@@UEAAXXZ ENDP		; BerconXYZDlgProc::DeleteThis
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
hwndMap$ = 48
tv64 = 56
custButton$ = 64
tv244 = 72
tv265 = 80
tv286 = 88
tv307 = 96
tv254 = 104
tv275 = 112
tv296 = 120
tv317 = 128
curIndex$1 = 136
__$ArrayPad$ = 144
this$ = 176
t$ = 184
map$ = 192
hWnd$ = 200
msg$ = 208
wParam$ = 216
IParam$ = 224
?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z PROC ; BerconXYZDlgProc::DlgProc, COMDAT

; 239  : 		INT_PTR DlgProc(TimeValue t,IParamMap2 *map,HWND hWnd,UINT msg,WPARAM wParam,LPARAM IParam) {

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 240  : 			HWND hwndMap;
; 241  : 			ICustButton* custButton;
; 242  : 			switch (msg) {

	mov	eax, DWORD PTR msg$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 24
	je	$LN5@DlgProc
	cmp	DWORD PTR tv64[rsp], 272		; 00000110H
	je	SHORT $LN4@DlgProc
	jmp	$LN6@DlgProc
$LN4@DlgProc:

; 243  : 				case WM_INITDIALOG:
; 244  : 					custButton = GetICustButton(GetDlgItem(hWnd, IDC_LOCK));

	mov	edx, 1115				; 0000045bH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	rcx, rax
	call	QWORD PTR __imp_?GetICustButton@@YAPEAVICustButton@@PEAUHWND__@@@Z
	mov	QWORD PTR custButton$[rsp], rax

; 245  : 					custButton->SetText(_T("L"));

	mov	rax, QWORD PTR custButton$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, OFFSET FLAT:??_C@_13PHJMHGG@?$AAL?$AA?$AA@
	mov	rcx, QWORD PTR custButton$[rsp]
	call	QWORD PTR [rax+88]

; 246  : 					ReleaseICustButton(custButton);

	mov	rcx, QWORD PTR custButton$[rsp]
	call	QWORD PTR __imp_?ReleaseICustButton@@YAXPEAVICustButton@@@Z

; 247  : 
; 248  : 					// UVW
; 249  : 					hwndMap = GetDlgItem(hWnd, IDC_TYPE);  

	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 250  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_UVW));

	mov	ecx, 217				; 000000d9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 251  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_UVW2));

	mov	ecx, 222				; 000000deH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 252  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_OBJ));

	mov	ecx, 218				; 000000daH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 253  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_WOR));

	mov	ecx, 219				; 000000dbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 254  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_XYZ_SCR));

	mov	ecx, 220				; 000000dcH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 255  : 
; 256  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_X);  

	mov	edx, 1065				; 00000429H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 257  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 258  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 259  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 260  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 261  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 262  : 
; 263  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_Y);  

	mov	edx, 1066				; 0000042aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 264  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 265  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 266  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 267  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 268  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 269  : 
; 270  : 					hwndMap = GetDlgItem(hWnd, IDC_TIL_Z);

	mov	edx, 1071				; 0000042fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	mov	QWORD PTR hwndMap$[rsp], rax

; 271  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_CONT));

	mov	ecx, 221				; 000000ddH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 272  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_STRETCH));

	mov	ecx, 184				; 000000b8H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 273  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_TILE));

	mov	ecx, 185				; 000000b9H
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 274  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_MIRROR));

	mov	ecx, 186				; 000000baH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW

; 275  : 					SendMessage(hwndMap, CB_ADDSTRING, 0, (LPARAM)GetString(IDS_LOOP_NONE));

	mov	ecx, 187				; 000000bbH
	call	?GetString@@YAPEA_WH@Z			; GetString
	mov	r9, rax
	xor	r8d, r8d
	mov	edx, 323				; 00000143H
	mov	rcx, QWORD PTR hwndMap$[rsp]
	call	QWORD PTR __imp_SendMessageW
$LN5@DlgProc:

; 276  : 
; 277  : 					// NO BREAK HERE, WE WANT TO UPDATE DROPDOWN VALUES TOO
; 278  : 				case WM_SHOWWINDOW: 
; 279  : 					// Set correct dropdown value
; 280  : 					int curIndex;
; 281  : 					map->GetParamBlock()->GetValue(xyz_map, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv244[rsp], rax
	mov	rax, QWORD PTR tv244[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv244[rsp]
	call	QWORD PTR [rax+1704]

; 282  : 					SendMessage(GetDlgItem(hWnd, IDC_TYPE), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv254[rsp], rax
	mov	edx, 1018				; 000003faH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv254[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 283  : 					map->GetParamBlock()->GetValue(xyz_tile_x, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv265[rsp], rax
	mov	rax, QWORD PTR tv265[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 11
	mov	rcx, QWORD PTR tv265[rsp]
	call	QWORD PTR [rax+1704]

; 284  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_X), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv275[rsp], rax
	mov	edx, 1065				; 00000429H
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv275[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 285  : 					map->GetParamBlock()->GetValue(xyz_tile_y, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv286[rsp], rax
	mov	rax, QWORD PTR tv286[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 12
	mov	rcx, QWORD PTR tv286[rsp]
	call	QWORD PTR [rax+1704]

; 286  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_Y), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv296[rsp], rax
	mov	edx, 1066				; 0000042aH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv296[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 287  : 					map->GetParamBlock()->GetValue(xyz_tile_z, t, curIndex, intvalid);

	mov	rax, QWORD PTR map$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR map$[rsp]
	call	QWORD PTR [rax+136]
	mov	QWORD PTR tv307[rsp], rax
	mov	rax, QWORD PTR tv307[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rsp+40], 0
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	mov	QWORD PTR [rsp+32], rcx
	lea	r9, QWORD PTR curIndex$1[rsp]
	mov	r8d, DWORD PTR t$[rsp]
	mov	dx, 13
	mov	rcx, QWORD PTR tv307[rsp]
	call	QWORD PTR [rax+1704]

; 288  : 					SendMessage(GetDlgItem(hWnd, IDC_TIL_Z), CB_SETCURSEL, (WPARAM)curIndex, 0);

	movsxd	rax, DWORD PTR curIndex$1[rsp]
	mov	QWORD PTR tv317[rsp], rax
	mov	edx, 1071				; 0000042fH
	mov	rcx, QWORD PTR hWnd$[rsp]
	call	QWORD PTR __imp_GetDlgItem
	xor	r9d, r9d
	mov	rcx, QWORD PTR tv317[rsp]
	mov	r8, rcx
	mov	edx, 334				; 0000014eH
	mov	rcx, rax
	call	QWORD PTR __imp_SendMessageW

; 289  : 					break;

	jmp	SHORT $LN2@DlgProc
$LN6@DlgProc:

; 290  : 				case WM_DESTROY:			
; 291  : 				default: return FALSE;

	xor	eax, eax
	jmp	SHORT $LN1@DlgProc
$LN2@DlgProc:

; 292  : 			}
; 293  : 			return TRUE;

	mov	eax, 1
$LN1@DlgProc:

; 294  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	ret	0
?DlgProc@BerconXYZDlgProc@@UEAA_JHPEAVIParamMap2@@PEAUHWND__@@I_K_J@Z ENDP ; BerconXYZDlgProc::DlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z PROC	; BerconXYZDlgProc::BerconXYZDlgProc, COMDAT

; 238  : 		BerconXYZDlgProc(ReferenceTarget *m) {reftarg = m;}		

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0ParamMap2UserDlgProc@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BerconXYZDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR m$[rsp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z ENDP	; BerconXYZDlgProc::BerconXYZDlgProc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA PROC ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA ENDP ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
m$ = 72
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA PROC ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BerconXYZDlgProc@@QEAA@PEAVReferenceTarget@@@Z@4HA ENDP ; `BerconXYZDlgProc::BerconXYZDlgProc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GXYZ_Desc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GXYZ_Desc@@UEAAPEAXI@Z PROC				; XYZ_Desc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1XYZ_Desc@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 128				; 00000080H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GXYZ_Desc@@UEAAPEAXI@Z ENDP				; XYZ_Desc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z PROC		; XYZ_Desc::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@XYZ_Desc@@QEAAX_K@Z ENDP		; XYZ_Desc::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1XYZ_Desc@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1XYZ_Desc@@UEAA@XZ PROC				; XYZ_Desc::~XYZ_Desc, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1XYZ_Desc@@UEAA@XZ ENDP				; XYZ_Desc::~XYZ_Desc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA PROC		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA ENDP		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA PROC		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1XYZ_Desc@@UEAA@XZ@4HA ENDP		; `XYZ_Desc::~XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z
_TEXT	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z PROC	; XYZ_Desc::XYZ_Desc, COMDAT

; 232  : 	p_end) {}

$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 3720				; 00000e88H
	mov	QWORD PTR $T1[rsp], -2

; 108  : 	XYZ_Desc(ClassDesc2* pointer, int ref, int blkID, int type, int x, int y, int z, int closed=1) : ParamBlockDesc2(blkID, _T("Mapping"),  0, pointer, 

	mov	DWORD PTR [rsp+3688], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3680], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3672], xmm0
	mov	DWORD PTR [rsp+3664], 1075		; 00000433H
	mov	DWORD PTR [rsp+3656], 1074		; 00000432H
	mov	DWORD PTR [rsp+3648], 1
	mov	QWORD PTR [rsp+3640], 0
	mov	DWORD PTR [rsp+3632], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3624], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3616], xmm0
	mov	DWORD PTR [rsp+3608], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3600], xmm0
	mov	DWORD PTR [rsp+3592], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	mov	QWORD PTR [rsp+3584], rax
	mov	DWORD PTR [rsp+3576], 1
	mov	QWORD PTR [rsp+3568], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@LCALCDFD@?$AAx?$AAy?$AAz?$AA_?$AAf?$AAi?$AAl?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@
	mov	QWORD PTR [rsp+3560], rax
	mov	DWORD PTR [rsp+3552], 28
	mov	DWORD PTR [rsp+3544], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+3536], 1115		; 0000045bH
	mov	DWORD PTR [rsp+3528], 6
	mov	DWORD PTR [rsp+3520], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+3512], 1
	mov	DWORD PTR [rsp+3504], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
	mov	QWORD PTR [rsp+3496], rax
	mov	DWORD PTR [rsp+3488], 1
	mov	DWORD PTR [rsp+3480], 4
	lea	rax, OFFSET FLAT:??_C@_1BC@JCCAEAIN@?$AAx?$AAy?$AAz?$AA_?$AAl?$AAo?$AAc?$AAk?$AA?$AA@
	mov	QWORD PTR [rsp+3472], rax
	mov	DWORD PTR [rsp+3464], 27
	mov	DWORD PTR [rsp+3456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3448], xmm0
	mov	DWORD PTR [rsp+3440], 1113		; 00000459H
	mov	DWORD PTR [rsp+3432], 1112		; 00000458H
	mov	DWORD PTR [rsp+3424], 1
	mov	QWORD PTR [rsp+3416], 0
	mov	DWORD PTR [rsp+3408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3400], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3392], xmm0
	mov	DWORD PTR [rsp+3384], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3376], xmm0
	mov	DWORD PTR [rsp+3368], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3360], rax
	mov	DWORD PTR [rsp+3352], 1
	mov	QWORD PTR [rsp+3344], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@FLPLJMAJ@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3336], rax
	mov	DWORD PTR [rsp+3328], 22
	mov	DWORD PTR [rsp+3320], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3312], xmm0
	mov	DWORD PTR [rsp+3304], 1106		; 00000452H
	mov	DWORD PTR [rsp+3296], 1105		; 00000451H
	mov	DWORD PTR [rsp+3288], 1
	mov	QWORD PTR [rsp+3280], 0
	mov	DWORD PTR [rsp+3272], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3264], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3256], xmm0
	mov	DWORD PTR [rsp+3248], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3240], xmm0
	mov	DWORD PTR [rsp+3232], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3224], rax
	mov	DWORD PTR [rsp+3216], 1
	mov	QWORD PTR [rsp+3208], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@NNGPOOKH@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3200], rax
	mov	DWORD PTR [rsp+3192], 21
	mov	DWORD PTR [rsp+3184], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3176], xmm0
	mov	DWORD PTR [rsp+3168], 1099		; 0000044bH
	mov	DWORD PTR [rsp+3160], 1098		; 0000044aH
	mov	DWORD PTR [rsp+3152], 1
	mov	QWORD PTR [rsp+3144], 0
	mov	DWORD PTR [rsp+3136], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+3128], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3120], xmm0
	mov	DWORD PTR [rsp+3112], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+3104], xmm0
	mov	DWORD PTR [rsp+3096], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3088], rax
	mov	DWORD PTR [rsp+3080], 1
	mov	QWORD PTR [rsp+3072], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@BGDDDNAC@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+3064], rax
	mov	DWORD PTR [rsp+3056], 20
	mov	DWORD PTR [rsp+3048], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+3040], xmm0
	mov	DWORD PTR [rsp+3032], 1111		; 00000457H
	mov	DWORD PTR [rsp+3024], 1110		; 00000456H
	mov	DWORD PTR [rsp+3016], 1
	mov	QWORD PTR [rsp+3008], 0
	mov	DWORD PTR [rsp+3000], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2992], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2984], xmm0
	mov	DWORD PTR [rsp+2976], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2968], xmm0
	mov	DWORD PTR [rsp+2960], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2952], rax
	mov	DWORD PTR [rsp+2944], 1
	mov	QWORD PTR [rsp+2936], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@MHJCJGME@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2928], rax
	mov	DWORD PTR [rsp+2920], 19
	mov	DWORD PTR [rsp+2912], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2904], xmm0
	mov	DWORD PTR [rsp+2896], 1104		; 00000450H
	mov	DWORD PTR [rsp+2888], 1103		; 0000044fH
	mov	DWORD PTR [rsp+2880], 1
	mov	QWORD PTR [rsp+2872], 0
	mov	DWORD PTR [rsp+2864], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2856], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2848], xmm0
	mov	DWORD PTR [rsp+2840], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2832], xmm0
	mov	DWORD PTR [rsp+2824], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2816], rax
	mov	DWORD PTR [rsp+2808], 1
	mov	QWORD PTR [rsp+2800], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@EBAGOEGK@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2792], rax
	mov	DWORD PTR [rsp+2784], 18
	mov	DWORD PTR [rsp+2776], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2768], xmm0
	mov	DWORD PTR [rsp+2760], 1097		; 00000449H
	mov	DWORD PTR [rsp+2752], 1096		; 00000448H
	mov	DWORD PTR [rsp+2744], 1
	mov	QWORD PTR [rsp+2736], 0
	mov	DWORD PTR [rsp+2728], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2720], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2712], xmm0
	mov	DWORD PTR [rsp+2704], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2696], xmm0
	mov	DWORD PTR [rsp+2688], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2680], rax
	mov	DWORD PTR [rsp+2672], 1
	mov	QWORD PTR [rsp+2664], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@IKFKDHMP@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2656], rax
	mov	DWORD PTR [rsp+2648], 17
	mov	DWORD PTR [rsp+2640], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2632], xmm0
	mov	DWORD PTR [rsp+2624], 1109		; 00000455H
	mov	DWORD PTR [rsp+2616], 1108		; 00000454H
	mov	DWORD PTR [rsp+2608], 1
	mov	QWORD PTR [rsp+2600], 0
	mov	DWORD PTR [rsp+2592], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2584], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2576], xmm0
	mov	DWORD PTR [rsp+2568], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2560], xmm0
	mov	DWORD PTR [rsp+2552], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2544], rax
	mov	DWORD PTR [rsp+2536], 1
	mov	QWORD PTR [rsp+2528], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@HJOOPID@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2520], rax
	mov	DWORD PTR [rsp+2512], 16
	mov	DWORD PTR [rsp+2504], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2496], xmm0
	mov	DWORD PTR [rsp+2488], 1102		; 0000044eH
	mov	DWORD PTR [rsp+2480], 1101		; 0000044dH
	mov	DWORD PTR [rsp+2472], 1
	mov	QWORD PTR [rsp+2464], 0
	mov	DWORD PTR [rsp+2456], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2448], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2440], xmm0
	mov	DWORD PTR [rsp+2432], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2424], xmm0
	mov	DWORD PTR [rsp+2416], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2408], rax
	mov	DWORD PTR [rsp+2400], 1
	mov	QWORD PTR [rsp+2392], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@IBAKJNCN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2384], rax
	mov	DWORD PTR [rsp+2376], 15
	mov	DWORD PTR [rsp+2368], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+2360], xmm0
	mov	DWORD PTR [rsp+2352], 1095		; 00000447H
	mov	DWORD PTR [rsp+2344], 1094		; 00000446H
	mov	DWORD PTR [rsp+2336], 1
	mov	QWORD PTR [rsp+2328], 0
	mov	DWORD PTR [rsp+2320], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+2312], xmm0
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2304], xmm0
	mov	DWORD PTR [rsp+2296], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+2288], xmm0
	mov	DWORD PTR [rsp+2280], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2272], rax
	mov	DWORD PTR [rsp+2264], 1
	mov	QWORD PTR [rsp+2256], 0
	lea	rax, OFFSET FLAT:??_C@_1BM@EKFGEOII@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA2?$AA?$AA@
	mov	QWORD PTR [rsp+2248], rax
	mov	DWORD PTR [rsp+2240], 14
	mov	DWORD PTR [rsp+2232], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2224], 1034		; 0000040aH
	mov	DWORD PTR [rsp+2216], 2
	mov	DWORD PTR [rsp+2208], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2200], 0
	mov	DWORD PTR [rsp+2192], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2184], 166		; 000000a6H
	mov	DWORD PTR [rsp+2176], 1
	mov	DWORD PTR [rsp+2168], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@PALBIMHK@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAP?$AAa?$AAr?$AA?$AA@
	mov	QWORD PTR [rsp+2160], rax
	mov	DWORD PTR [rsp+2152], 26
	mov	DWORD PTR [rsp+2144], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2136], 1033		; 00000409H
	mov	DWORD PTR [rsp+2128], 2
	mov	DWORD PTR [rsp+2120], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+2112], 1
	mov	DWORD PTR [rsp+2104], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2096], 165		; 000000a5H
	mov	DWORD PTR [rsp+2088], 1
	mov	DWORD PTR [rsp+2080], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@EGBDKCCD@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAO?$AAb?$AAj?$AA?$AA@
	mov	QWORD PTR [rsp+2072], rax
	mov	DWORD PTR [rsp+2064], 25
	mov	DWORD PTR [rsp+2056], -1073740800	; ffffffffc0000400H
	mov	DWORD PTR [rsp+2048], 1051		; 0000041bH
	mov	DWORD PTR [rsp+2040], 2
	mov	DWORD PTR [rsp+2032], -1073741821	; ffffffffc0000003H
	mov	QWORD PTR [rsp+2024], 0
	mov	DWORD PTR [rsp+2016], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+2008], 164		; 000000a4H
	mov	DWORD PTR [rsp+2000], 1
	mov	DWORD PTR [rsp+1992], 4
	lea	rax, OFFSET FLAT:??_C@_1BE@DCGEPHFM@?$AAr?$AAa?$AAn?$AAd?$AAB?$AAy?$AAM?$AAa?$AAt?$AA?$AA@
	mov	QWORD PTR [rsp+1984], rax
	mov	DWORD PTR [rsp+1976], 24
	mov	DWORD PTR [rsp+1968], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1960], xmm0
	mov	DWORD PTR [rsp+1952], 1017		; 000003f9H
	mov	DWORD PTR [rsp+1944], 1015		; 000003f7H
	mov	QWORD PTR [rsp+1936], 0
	mov	QWORD PTR [rsp+1928], 0
	mov	DWORD PTR [rsp+1920], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+1912], 99999		; 0001869fH
	mov	DWORD PTR [rsp+1904], 1
	mov	DWORD PTR [rsp+1896], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+1888], 12345		; 00003039H
	mov	DWORD PTR [rsp+1880], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+1872], 50		; 00000032H
	mov	DWORD PTR [rsp+1864], 1
	mov	DWORD PTR [rsp+1856], 1
	lea	rax, OFFSET FLAT:??_C@_19HFHNPJHA@?$AAs?$AAe?$AAe?$AAd?$AA?$AA@
	mov	QWORD PTR [rsp+1848], rax
	mov	DWORD PTR [rsp+1840], 23
	mov	DWORD PTR [rsp+1832], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1824], 0
	mov	DWORD PTR [rsp+1816], 1071		; 0000042fH
	mov	DWORD PTR [rsp+1808], 13
	mov	DWORD PTR [rsp+1800], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR z$[rsp]
	mov	DWORD PTR [rsp+1792], eax
	mov	DWORD PTR [rsp+1784], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1776], rax
	mov	DWORD PTR [rsp+1768], 1
	mov	DWORD PTR [rsp+1760], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@EDCBABDD@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1752], rax
	mov	DWORD PTR [rsp+1744], 13
	mov	DWORD PTR [rsp+1736], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1728], 0
	mov	DWORD PTR [rsp+1720], 1066		; 0000042aH
	mov	DWORD PTR [rsp+1712], 13
	mov	DWORD PTR [rsp+1704], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR y$[rsp]
	mov	DWORD PTR [rsp+1696], eax
	mov	DWORD PTR [rsp+1688], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1680], rax
	mov	DWORD PTR [rsp+1672], 1
	mov	DWORD PTR [rsp+1664], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@FBJEKONN@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1656], rax
	mov	DWORD PTR [rsp+1648], 12
	mov	DWORD PTR [rsp+1640], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+1632], 0
	mov	DWORD PTR [rsp+1624], 1065		; 00000429H
	mov	DWORD PTR [rsp+1616], 13
	mov	DWORD PTR [rsp+1608], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR x$[rsp]
	mov	DWORD PTR [rsp+1600], eax
	mov	DWORD PTR [rsp+1592], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1584], rax
	mov	DWORD PTR [rsp+1576], 1
	mov	DWORD PTR [rsp+1568], 1
	lea	rax, OFFSET FLAT:??_C@_1BG@OJCIMJLI@?$AAx?$AAy?$AAz?$AA_?$AAt?$AAi?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1560], rax
	mov	DWORD PTR [rsp+1552], 11
	mov	DWORD PTR [rsp+1544], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1536], xmm0
	mov	DWORD PTR [rsp+1528], 1070		; 0000042eH
	mov	DWORD PTR [rsp+1520], 1069		; 0000042dH
	mov	DWORD PTR [rsp+1512], 1
	mov	QWORD PTR [rsp+1504], 0
	mov	DWORD PTR [rsp+1496], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1488], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1480], xmm0
	mov	DWORD PTR [rsp+1472], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1464], xmm0
	mov	DWORD PTR [rsp+1456], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1448], rax
	mov	DWORD PTR [rsp+1440], 1
	mov	QWORD PTR [rsp+1432], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@LALGELMD@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1424], rax
	mov	DWORD PTR [rsp+1416], 10
	mov	DWORD PTR [rsp+1408], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1400], xmm0
	mov	DWORD PTR [rsp+1392], 1062		; 00000426H
	mov	DWORD PTR [rsp+1384], 1061		; 00000425H
	mov	DWORD PTR [rsp+1376], 1
	mov	QWORD PTR [rsp+1368], 0
	mov	DWORD PTR [rsp+1360], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1352], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1344], xmm0
	mov	DWORD PTR [rsp+1336], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1328], xmm0
	mov	DWORD PTR [rsp+1320], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1312], rax
	mov	DWORD PTR [rsp+1304], 1
	mov	QWORD PTR [rsp+1296], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@KCADOECN@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+1288], rax
	mov	DWORD PTR [rsp+1280], 9
	mov	DWORD PTR [rsp+1272], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1264], xmm0
	mov	DWORD PTR [rsp+1256], 1058		; 00000422H
	mov	DWORD PTR [rsp+1248], 1057		; 00000421H
	mov	DWORD PTR [rsp+1240], 1
	mov	QWORD PTR [rsp+1232], 0
	mov	DWORD PTR [rsp+1224], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1216], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+1208], xmm0
	mov	DWORD PTR [rsp+1200], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+1192], xmm0
	mov	DWORD PTR [rsp+1184], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1176], rax
	mov	DWORD PTR [rsp+1168], 1
	mov	QWORD PTR [rsp+1160], 0
	lea	rax, OFFSET FLAT:??_C@_1BI@BKLPIDEI@?$AAx?$AAy?$AAz?$AA_?$AAa?$AAn?$AAg?$AAl?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+1152], rax
	mov	DWORD PTR [rsp+1144], 8
	mov	DWORD PTR [rsp+1136], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+1128], xmm0
	mov	DWORD PTR [rsp+1120], 1068		; 0000042cH
	mov	DWORD PTR [rsp+1112], 1067		; 0000042bH
	mov	DWORD PTR [rsp+1104], 1
	mov	QWORD PTR [rsp+1096], 0
	mov	DWORD PTR [rsp+1088], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+1080], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+1072], xmm0
	mov	DWORD PTR [rsp+1064], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+1056], xmm0
	mov	DWORD PTR [rsp+1048], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1040], rax
	mov	DWORD PTR [rsp+1032], 1
	mov	QWORD PTR [rsp+1024], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@MFMFKFM@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+1016], rax
	mov	DWORD PTR [rsp+1008], 7
	mov	DWORD PTR [rsp+1000], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+992], xmm0
	mov	DWORD PTR [rsp+984], 1060		; 00000424H
	mov	DWORD PTR [rsp+976], 1059		; 00000423H
	mov	DWORD PTR [rsp+968], 1
	mov	QWORD PTR [rsp+960], 0
	mov	DWORD PTR [rsp+952], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+944], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+936], xmm0
	mov	DWORD PTR [rsp+928], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+920], xmm0
	mov	DWORD PTR [rsp+912], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+904], rax
	mov	DWORD PTR [rsp+896], 1
	mov	QWORD PTR [rsp+888], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@BOOJPFLC@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+880], rax
	mov	DWORD PTR [rsp+872], 6
	mov	DWORD PTR [rsp+864], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+856], xmm0
	mov	DWORD PTR [rsp+848], 1056		; 00000420H
	mov	DWORD PTR [rsp+840], 1055		; 0000041fH
	mov	DWORD PTR [rsp+832], 1
	mov	QWORD PTR [rsp+824], 0
	mov	DWORD PTR [rsp+816], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+808], xmm0
	movsd	xmm0, QWORD PTR __real@3f1a36e2e0000000
	movsd	QWORD PTR [rsp+800], xmm0
	mov	DWORD PTR [rsp+792], -1073741822	; ffffffffc0000002H
	movsd	xmm0, QWORD PTR __real@3ff0000000000000
	movsd	QWORD PTR [rsp+784], xmm0
	mov	DWORD PTR [rsp+776], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+768], rax
	mov	DWORD PTR [rsp+760], 1
	mov	QWORD PTR [rsp+752], 0
	lea	rax, OFFSET FLAT:??_C@_1BG@KGFFJCNH@?$AAx?$AAy?$AAz?$AA_?$AAs?$AAi?$AAz?$AAe?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+744], rax
	mov	DWORD PTR [rsp+736], 5
	mov	DWORD PTR [rsp+728], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+720], xmm0
	mov	DWORD PTR [rsp+712], 1064		; 00000428H
	mov	DWORD PTR [rsp+704], 1063		; 00000427H
	mov	DWORD PTR [rsp+696], 1
	mov	QWORD PTR [rsp+688], 0
	mov	DWORD PTR [rsp+680], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+672], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+664], xmm0
	mov	DWORD PTR [rsp+656], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+648], xmm0
	mov	DWORD PTR [rsp+640], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+632], rax
	mov	DWORD PTR [rsp+624], 1
	mov	QWORD PTR [rsp+616], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@HPJLBIGD@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAz?$AA?$AA@
	mov	QWORD PTR [rsp+608], rax
	mov	DWORD PTR [rsp+600], 4
	mov	DWORD PTR [rsp+592], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+584], xmm0
	mov	DWORD PTR [rsp+576], 1054		; 0000041eH
	mov	DWORD PTR [rsp+568], 1053		; 0000041dH
	mov	DWORD PTR [rsp+560], 1
	mov	QWORD PTR [rsp+552], 0
	mov	DWORD PTR [rsp+544], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+536], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+528], xmm0
	mov	DWORD PTR [rsp+520], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+512], xmm0
	mov	DWORD PTR [rsp+504], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+496], rax
	mov	DWORD PTR [rsp+488], 1
	mov	QWORD PTR [rsp+480], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@GNCOLHIN@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAy?$AA?$AA@
	mov	QWORD PTR [rsp+472], rax
	mov	DWORD PTR [rsp+464], 3
	mov	DWORD PTR [rsp+456], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+448], xmm0
	mov	DWORD PTR [rsp+440], 1073		; 00000431H
	mov	DWORD PTR [rsp+432], 1072		; 00000430H
	mov	DWORD PTR [rsp+424], 1
	mov	QWORD PTR [rsp+416], 0
	mov	DWORD PTR [rsp+408], -1073741821	; ffffffffc0000003H
	movsd	xmm0, QWORD PTR __real@412e848000000000
	movsd	QWORD PTR [rsp+400], xmm0
	movsd	xmm0, QWORD PTR __real@c12e848000000000
	movsd	QWORD PTR [rsp+392], xmm0
	mov	DWORD PTR [rsp+384], -1073741822	; ffffffffc0000002H
	xorps	xmm0, xmm0
	movsd	QWORD PTR [rsp+376], xmm0
	mov	DWORD PTR [rsp+368], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+360], rax
	mov	DWORD PTR [rsp+352], 1
	mov	QWORD PTR [rsp+344], 0
	lea	rax, OFFSET FLAT:??_C@_1BK@NFJCNAOI@?$AAx?$AAy?$AAz?$AA_?$AAo?$AAf?$AAf?$AAs?$AAe?$AAt?$AA_?$AAx?$AA?$AA@
	mov	QWORD PTR [rsp+336], rax
	mov	DWORD PTR [rsp+328], 2
	mov	DWORD PTR [rsp+320], -1073740800	; ffffffffc0000400H
	movsd	xmm0, QWORD PTR __real@bff0000000000000
	movsd	QWORD PTR [rsp+312], xmm0
	mov	DWORD PTR [rsp+304], 1511		; 000005e7H
	mov	DWORD PTR [rsp+296], 1510		; 000005e6H
	mov	QWORD PTR [rsp+288], 0
	mov	QWORD PTR [rsp+280], 0
	mov	DWORD PTR [rsp+272], -1073741821	; ffffffffc0000003H
	mov	DWORD PTR [rsp+264], 100		; 00000064H
	mov	QWORD PTR [rsp+256], 0
	mov	DWORD PTR [rsp+248], -1073741822	; ffffffffc0000002H
	mov	DWORD PTR [rsp+240], 1
	mov	DWORD PTR [rsp+232], -1073741824	; ffffffffc0000000H
	mov	DWORD PTR [rsp+224], 50			; 00000032H
	mov	DWORD PTR [rsp+216], 1
	mov	DWORD PTR [rsp+208], 1
	lea	rax, OFFSET FLAT:??_C@_1BC@BDPIEDCA@?$AAx?$AAy?$AAz?$AA_?$AAc?$AAh?$AAa?$AAn?$AA?$AA@
	mov	QWORD PTR [rsp+200], rax
	mov	DWORD PTR [rsp+192], 1
	mov	DWORD PTR [rsp+184], -1073740800	; ffffffffc0000400H
	mov	QWORD PTR [rsp+176], 0
	mov	DWORD PTR [rsp+168], 1018		; 000003faH
	mov	DWORD PTR [rsp+160], 13
	mov	DWORD PTR [rsp+152], -1073741821	; ffffffffc0000003H
	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR [rsp+144], eax
	mov	DWORD PTR [rsp+136], -1073741824	; ffffffffc0000000H
	lea	rax, OFFSET FLAT:??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
	mov	QWORD PTR [rsp+128], rax
	mov	DWORD PTR [rsp+120], 1
	mov	DWORD PTR [rsp+112], 1
	lea	rax, OFFSET FLAT:??_C@_1BA@JOBDKJKA@?$AAx?$AAy?$AAz?$AA_?$AAm?$AAa?$AAp?$AA?$AA@
	mov	QWORD PTR [rsp+104], rax
	mov	QWORD PTR [rsp+96], 0
	mov	QWORD PTR [rsp+88], 0
	mov	eax, DWORD PTR closed$[rsp]
	mov	DWORD PTR [rsp+80], eax
	mov	QWORD PTR [rsp+72], 0
	mov	DWORD PTR [rsp+64], 216			; 000000d8H
	mov	DWORD PTR [rsp+56], 112			; 00000070H
	mov	eax, DWORD PTR ref$[rsp]
	mov	DWORD PTR [rsp+48], eax
	mov	WORD PTR [rsp+40], 6
	mov	rax, QWORD PTR pointer$[rsp]
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	lea	r8, OFFSET FLAT:??_C@_1BA@KMAKHADK@?$AAM?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?$AA@
	movsx	edx, WORD PTR blkID$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0ParamBlockDesc2@@QEAA@FPEB_W_JPEAVClassDesc2@@GZZ
	npad	1

; 232  : 	p_end) {}

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7XYZ_Desc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 3720				; 00000e88H
	ret	0
??0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z ENDP	; XYZ_Desc::XYZ_Desc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA PROC ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA ENDP ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 3696
this$ = 3728
pointer$ = 3736
ref$ = 3744
blkID$ = 3752
type$ = 3760
x$ = 3768
y$ = 3776
z$ = 3784
closed$ = 3792
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA PROC ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1ParamBlockDesc2@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0XYZ_Desc@@QEAA@PEAVClassDesc2@@HHHHHHH@Z@4HA ENDP ; `XYZ_Desc::XYZ_Desc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\berconcommon.h
;	COMDAT ??__Eintvalid@@YAXXZ
text$di	SEGMENT
??__Eintvalid@@YAXXZ PROC				; `dynamic initializer for 'intvalid'', COMDAT

; 83   : static Interval intvalid = Interval(TIME_NegInfinity, TIME_PosInfinity);

	sub	rsp, 40					; 00000028H
	mov	r8d, 2147483647				; 7fffffffH
	mov	edx, -2147483648			; ffffffff80000000H
	lea	rcx, OFFSET FLAT:?intvalid@@3VInterval@@A
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	add	rsp, 40					; 00000028H
	ret	0
??__Eintvalid@@YAXXZ ENDP				; `dynamic initializer for 'intvalid''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ResourceMakerCallback@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ResourceMakerCallback@@QEAA@XZ PROC			; ResourceMakerCallback::ResourceMakerCallback, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ResourceMakerCallback@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ResourceMakerCallback@@QEAA@XZ ENDP			; ResourceMakerCallback::ResourceMakerCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z
_TEXT	SEGMENT
this$ = 8
id$ = 16
?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z PROC	; ResourceMakerCallback::GetInterface, COMDAT

; 746  : 	virtual void* GetInterface(ULONG id) {return NULL;}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetInterface@ResourceMakerCallback@@UEAAPEAXK@Z ENDP	; ResourceMakerCallback::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
curvenum$ = 16
pCCtl$ = 24
?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::NewCurveCreatedCallback, COMDAT

; 744  : 	virtual void NewCurveCreatedCallback(int curvenum, ICurveCtl *pCCtl){}

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?NewCurveCreatedCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::NewCurveCreatedCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
curvenum$ = 16
pCCtl$ = 24
?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::ResetCallback, COMDAT

; 732  : 	virtual void ResetCallback(int curvenum, ICurveCtl *pCCtl){}

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ResetCallback@ResourceMakerCallback@@UEAAXHPEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::ResetCallback
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
iButton$ = 16
ToolTip$ = 24
pCCtl$ = 32
?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::GetToolTip, COMDAT

; 720  : 	virtual BOOL GetToolTip(int iButton, MSTR &ToolTip,ICurveCtl *pCCtl){return FALSE;}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetToolTip@ResourceMakerCallback@@UEAAHHAEAVWStr@@PEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::GetToolTip
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\icurvctl.h
;	COMDAT ?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z
_TEXT	SEGMENT
this$ = 8
hCTools$ = 16
pCCtl$ = 24
?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z PROC ; ResourceMakerCallback::SetCustomImageList, COMDAT

; 697  : 	virtual BOOL SetCustomImageList(HIMAGELIST& hCTools, ICurveCtl* pCCtl){return FALSE;} 

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SetCustomImageList@ResourceMakerCallback@@UEAAHAEAPEAU_IMAGELIST@@PEAVICurveCtl@@@Z ENDP ; ResourceMakerCallback::SetCustomImageList
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GParamMap2UserDlgProc@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GParamMap2UserDlgProc@@UEAAPEAXI@Z PROC		; ParamMap2UserDlgProc::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ParamMap2UserDlgProc@@UEAA@XZ	; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 8
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GParamMap2UserDlgProc@@UEAAPEAXI@Z ENDP		; ParamMap2UserDlgProc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0ParamMap2UserDlgProc@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0ParamMap2UserDlgProc@@QEAA@XZ PROC			; ParamMap2UserDlgProc::ParamMap2UserDlgProc, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ParamMap2UserDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0ParamMap2UserDlgProc@@QEAA@XZ ENDP			; ParamMap2UserDlgProc::ParamMap2UserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z
_TEXT	SEGMENT
this$ = 48
t$ = 56
valid$ = 64
pmap$ = 72
?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z PROC ; ParamMap2UserDlgProc::Update, COMDAT

; 89   : 		virtual void Update(TimeValue t, Interval& valid, IParamMap2* pmap) { this->Update(t); }

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR t$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+40]
	add	rsp, 40					; 00000028H
	ret	0
?Update@ParamMap2UserDlgProc@@UEAAXHAEAVInterval@@PEAVIParamMap2@@@Z ENDP ; ParamMap2UserDlgProc::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z
_TEXT	SEGMENT
this$ = 8
pb$ = 16
?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z PROC ; ParamMap2UserDlgProc::SetParamBlock, COMDAT

; 76   : 		virtual void SetParamBlock(IParamBlock2 *pb) { }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetParamBlock@ParamMap2UserDlgProc@@UEAAXPEAVIParamBlock2@@@Z ENDP ; ParamMap2UserDlgProc::SetParamBlock
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?Update@ParamMap2UserDlgProc@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?Update@ParamMap2UserDlgProc@@UEAAXH@Z PROC		; ParamMap2UserDlgProc::Update, COMDAT

; 75   : 		virtual void Update(TimeValue t) { }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?Update@ParamMap2UserDlgProc@@UEAAXH@Z ENDP		; ParamMap2UserDlgProc::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
m$ = 16
?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z PROC ; ParamMap2UserDlgProc::SetThing, COMDAT

; 74   : 		virtual void SetThing(ReferenceTarget *m) { }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetThing@ParamMap2UserDlgProc@@UEAAXPEAVReferenceTarget@@@Z ENDP ; ParamMap2UserDlgProc::SetThing
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamm2.h
;	COMDAT ??1ParamMap2UserDlgProc@@UEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1ParamMap2UserDlgProc@@UEAA@XZ PROC			; ParamMap2UserDlgProc::~ParamMap2UserDlgProc, COMDAT

; 59   : 		virtual ~ParamMap2UserDlgProc() { }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ParamMap2UserDlgProc@@6B@
	mov	QWORD PTR [rax], rcx
	ret	0
??1ParamMap2UserDlgProc@@UEAA@XZ ENDP			; ParamMap2UserDlgProc::~ParamMap2UserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z PROC	; ParamBlockDesc2::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@ParamBlockDesc2@@QEAAX_K@Z ENDP	; ParamBlockDesc2::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.h
;	COMDAT ?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z
_TEXT	SEGMENT
this$ = 48
proc$ = 56
?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z PROC ; ParamBlockDesc2::SetUserDlgProc, COMDAT

; 3969 : 	inline void		SetUserDlgProc(ParamMap2UserDlgProc* proc=NULL) { SetUserDlgProc(0, proc); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r8, QWORD PTR proc$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?SetUserDlgProc@ParamBlockDesc2@@QEAAXFPEAVParamMap2UserDlgProc@@@Z
	add	rsp, 40					; 00000028H
	ret	0
?SetUserDlgProc@ParamBlockDesc2@@QEAAXPEAVParamMap2UserDlgProc@@@Z ENDP ; ParamBlockDesc2::SetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.inline.h
;	COMDAT ?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
__formal$ = 24
__formal$ = 32
__formal$ = 40
__formal$ = 48
__formal$ = 56
?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z PROC ; ClassDesc2::CreateQtWidget, COMDAT

; 290  : {

	mov	WORD PTR [rsp+32], r9w
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 291  :     // Default implementation returns null, only needs to be implemented for new Qt-based plugins.
; 292  :     return nullptr;

	xor	eax, eax

; 293  : }

	ret	0
?CreateQtWidget@ClassDesc2@@UEAAPEAVQMaxParamBlockWidget@MaxSDK@@AEAVReferenceMaker@@AEAVIParamBlock2@@FAEAVWStr@@AEAH3@Z ENDP ; ClassDesc2::CreateQtWidget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\iparamb2.h
;	COMDAT ?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z
_TEXT	SEGMENT
this$ = 48
pbd$ = 56
proc$ = 64
?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z PROC ; ClassDesc2::SetUserDlgProc, COMDAT

; 2653 : 	inline bool SetUserDlgProc(ParamBlockDesc2* pbd, ParamMap2UserDlgProc* proc=NULL) { return SetUserDlgProc(pbd, 0, proc); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r9, QWORD PTR proc$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR pbd$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?SetUserDlgProc@ClassDesc2@@QEAA_NPEAVParamBlockDesc2@@FPEAVParamMap2UserDlgProc@@@Z
	add	rsp, 40					; 00000028H
	ret	0
?SetUserDlgProc@ClassDesc2@@UEAA_NPEAVParamBlockDesc2@@PEAVParamMap2UserDlgProc@@@Z ENDP ; ClassDesc2::SetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\triobj.h
;	COMDAT ??__EkTriObjNormalXTCID@@YAXXZ
text$di	SEGMENT
??__EkTriObjNormalXTCID@@YAXXZ PROC			; `dynamic initializer for 'kTriObjNormalXTCID'', COMDAT

; 289  : const Class_ID kTriObjNormalXTCID = Class_ID(0x730a33d7, 0x27246c55);

	sub	rsp, 40					; 00000028H
	mov	r8d, 656698453				; 27246c55H
	mov	edx, 1930048471				; 730a33d7H
	lea	rcx, OFFSET FLAT:?kTriObjNormalXTCID@@3VClass_ID@@B
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	add	rsp, 40					; 00000028H
	ret	0
??__EkTriObjNormalXTCID@@YAXXZ ENDP			; `dynamic initializer for 'kTriObjNormalXTCID''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1Texmap@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1Texmap@@UEAA@XZ PROC					; Texmap::~Texmap, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1Texmap@@UEAA@XZ ENDP					; Texmap::~Texmap
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA PROC			; `Texmap::~Texmap'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA ENDP			; `Texmap::~Texmap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA PROC			; `Texmap::~Texmap'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1MtlBase@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1Texmap@@UEAA@XZ@4HA ENDP			; `Texmap::~Texmap'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?IsHighDynamicRange@Texmap@@UEBAHXZ
_TEXT	SEGMENT
this$ = 8
?IsHighDynamicRange@Texmap@@UEBAHXZ PROC		; Texmap::IsHighDynamicRange, COMDAT

; 483  : 			virtual int IsHighDynamicRange( ) const { return false; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsHighDynamicRange@Texmap@@UEBAHXZ ENDP		; Texmap::IsHighDynamicRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?LoadMapFiles@Texmap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?LoadMapFiles@Texmap@@UEAAHH@Z PROC			; Texmap::LoadMapFiles, COMDAT

; 450  : 			virtual int LoadMapFiles(TimeValue t) { return 1; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?LoadMapFiles@Texmap@@UEAAHH@Z ENDP			; Texmap::LoadMapFiles
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z
_TEXT	SEGMENT
this$ = 8
sc$ = 16
?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z PROC ; Texmap::IsLocalOutputMeaningful, COMDAT

; 364  : 			virtual bool IsLocalOutputMeaningful( ShadeContext& sc ) { return false; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?IsLocalOutputMeaningful@Texmap@@UEAA_NAEAVShadeContext@@@Z ENDP ; Texmap::IsLocalOutputMeaningful
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?SetOutputLevel@Texmap@@UEAAXHM@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
v$ = 24
?SetOutputLevel@Texmap@@UEAAXHM@Z PROC			; Texmap::SetOutputLevel, COMDAT

; 338  : 			virtual void SetOutputLevel(TimeValue t, float v) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetOutputLevel@Texmap@@UEAAXHM@Z ENDP			; Texmap::SetOutputLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ
_TEXT	SEGMENT
this$ = 8
?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ PROC		; Texmap::GetTheXYZGen, COMDAT

; 317  : 			virtual XYZGen *GetTheXYZGen() { return NULL; } // maps with a XYZGen should implement this

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetTheXYZGen@Texmap@@UEAAPEAVXYZGen@@XZ ENDP		; Texmap::GetTheXYZGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ
_TEXT	SEGMENT
this$ = 8
?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ PROC		; Texmap::GetTheUVGen, COMDAT

; 312  : 			virtual UVGen *GetTheUVGen() { return NULL; }  // maps with a UVGen should implement this

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetTheUVGen@Texmap@@UEAAPEAVUVGen@@XZ ENDP		; Texmap::GetTheUVGen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?MapSlotType@Texmap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?MapSlotType@Texmap@@UEAAHH@Z PROC			; Texmap::MapSlotType, COMDAT

; 303  : 			virtual int MapSlotType(int i) { return defaultSlotType; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+20]
	ret	0
?MapSlotType@Texmap@@UEAAHH@Z ENDP			; Texmap::MapSlotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?InitSlotType@Texmap@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sType$ = 16
?InitSlotType@Texmap@@UEAAXH@Z PROC			; Texmap::InitSlotType, COMDAT

; 302  : 			virtual void InitSlotType(int sType) { defaultSlotType = sType; }          

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR sType$[rsp]
	mov	DWORD PTR [rax+84], ecx
	ret	0
?InitSlotType@Texmap@@UEAAXH@Z ENDP			; Texmap::InitSlotType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetMapChannel@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetMapChannel@Texmap@@UEAAHXZ PROC			; Texmap::GetMapChannel, COMDAT

; 287  : 			virtual int GetMapChannel () { return 1; }   // only relevant if above returns UVWSRC_EXPLICIT

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetMapChannel@Texmap@@UEAAHXZ ENDP			; Texmap::GetMapChannel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetUVWSource@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetUVWSource@Texmap@@UEAAHXZ PROC			; Texmap::GetUVWSource, COMDAT

; 281  : 			virtual int GetUVWSource() { return UVWSRC_EXPLICIT; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetUVWSource@Texmap@@UEAAHXZ ENDP			; Texmap::GetUVWSource
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetTextureTiling@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetTextureTiling@Texmap@@UEAAHXZ PROC			; Texmap::GetTextureTiling, COMDAT

; 256  : 			virtual int GetTextureTiling() { return  U_WRAP|V_WRAP; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 3
	ret	0
?GetTextureTiling@Texmap@@UEAAHXZ ENDP			; Texmap::GetTextureTiling
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z
_TEXT	SEGMENT
this$ = 48
uvtrans$ = 56
?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z PROC	; Texmap::GetUVTransform, COMDAT

; 247  : 			virtual  void GetUVTransform(Matrix3 &uvtrans) { uvtrans.IdentityMatrix(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR uvtrans$[rsp]
	call	QWORD PTR __imp_?IdentityMatrix@Matrix3@@QEAAXXZ
	add	rsp, 40					; 00000028H
	ret	0
?GetUVTransform@Texmap@@UEAAXAEAVMatrix3@@@Z ENDP	; Texmap::GetUVTransform
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\texmap.h
;	COMDAT ?HandleOwnViewPerturb@Texmap@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?HandleOwnViewPerturb@Texmap@@UEAAHXZ PROC		; Texmap::HandleOwnViewPerturb, COMDAT

; 207  : 			virtual BOOL HandleOwnViewPerturb() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?HandleOwnViewPerturb@Texmap@@UEAAHXZ ENDP		; Texmap::HandleOwnViewPerturb
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
valid$ = 24
?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z PROC ; MtlBase::GetTransparencyHint, COMDAT

; 752  : 			virtual BOOL GetTransparencyHint(TimeValue t, Interval& valid) { return TRUE; }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetTransparencyHint@MtlBase@@UEAAHHAEAVInterval@@@Z ENDP ; MtlBase::GetTransparencyHint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ
_TEXT	SEGMENT
this$ = 8
?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ PROC	; MtlBase::GetRefTarget, COMDAT

; 738  : 			virtual ReferenceTarget *GetRefTarget(){return this;}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 64					; 00000040H
	ret	0
?GetRefTarget@MtlBase@@UEAAPEAVReferenceTarget@@XZ ENDP	; MtlBase::GetRefTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
id$ = 72
?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z PROC ; MtlBase::GetInterface, COMDAT

; 737  :             virtual BaseInterface *GetInterface(Interface_ID id) { return ReferenceTarget::GetInterface(id); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR id$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0Interface_ID@@QEAA@AEBV0@@Z		; Interface_ID::Interface_ID
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?GetInterface@ReferenceTarget@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z
	add	rsp, 56					; 00000038H
	ret	0
?GetInterface@MtlBase@@UEAAPEAVBaseInterface@@VInterface_ID@@@Z ENDP ; MtlBase::GetInterface
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
mtl$ = 24
cb$ = 32
?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z PROC ; MtlBase::SetupGfxMultiMaps, COMDAT

; 732  : 			virtual void SetupGfxMultiMaps(TimeValue t, Material *mtl, MtlMakerCallback &cb) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetupGfxMultiMaps@MtlBase@@UEAAXHPEAVMaterial@@AEAVMtlMakerCallback@@@Z ENDP ; MtlBase::SetupGfxMultiMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ PROC	; MtlBase::SupportsMultiMapsInViewport, COMDAT

; 702  : 			virtual BOOL SupportsMultiMapsInViewport() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SupportsMultiMapsInViewport@MtlBase@@UEAAHXZ ENDP	; MtlBase::SupportsMultiMapsInViewport
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?IsMultiMtl@MtlBase@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsMultiMtl@MtlBase@@UEAAHXZ PROC			; MtlBase::IsMultiMtl, COMDAT

; 368  : 			virtual  BOOL IsMultiMtl() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsMultiMtl@MtlBase@@UEAAHXZ ENDP			; MtlBase::IsMultiMtl
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z
_TEXT	SEGMENT
this$ = 8
subMtlNum$ = 16
mapreq$ = 24
bumpreq$ = 32
?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z PROC ; MtlBase::LocalMappingsRequired, COMDAT

; 350  : 			virtual void LocalMappingsRequired(int subMtlNum, BitArray & mapreq, BitArray &bumpreq) {  }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?LocalMappingsRequired@MtlBase@@UEAAXHAEAVBitArray@@0@Z ENDP ; MtlBase::LocalMappingsRequired
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\mtlbase.h
;	COMDAT ?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
rmc$ = 24
?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z PROC ; MtlBase::BuildMaps, COMDAT

; 258  : 			virtual int BuildMaps(TimeValue t, RenderMapsContext &rmc) { return 1; }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?BuildMaps@MtlBase@@UEAAHHAEAVRenderMapsContext@@@Z ENDP ; MtlBase::BuildMaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\materials\isubmap.h
;	COMDAT ?SubTexmapOn@ISubMap@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?SubTexmapOn@ISubMap@@UEAAHH@Z PROC			; ISubMap::SubTexmapOn, COMDAT

; 99   : 	virtual int SubTexmapOn(int i) { return 1; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?SubTexmapOn@ISubMap@@UEAAHH@Z ENDP			; ISubMap::SubTexmapOn
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GShadeContext@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GShadeContext@@UEAAPEAXI@Z PROC			; ShadeContext::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ShadeContext@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 640				; 00000280H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GShadeContext@@UEAAPEAXI@Z ENDP			; ShadeContext::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ShadeContext@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ShadeContext@@UEAA@XZ PROC				; ShadeContext::~ShadeContext, COMDAT
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 72					; 00000048H
	mov	rcx, rax
	call	??1ShadeOutput@@UEAA@XZ
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1ShadeContext@@UEAA@XZ ENDP				; ShadeContext::~ShadeContext
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA PROC		; `ShadeContext::~ShadeContext'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA ENDP		; `ShadeContext::~ShadeContext'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA PROC		; `ShadeContext::~ShadeContext'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 72					; 00000048H
	call	??1ShadeOutput@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA ENDP		; `ShadeContext::~ShadeContext'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA PROC		; `ShadeContext::~ShadeContext'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1ShadeContext@@UEAA@XZ@4HA ENDP		; `ShadeContext::~ShadeContext'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA PROC		; `ShadeContext::~ShadeContext'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 72					; 00000048H
	call	??1ShadeOutput@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1ShadeContext@@UEAA@XZ@4HA ENDP		; `ShadeContext::~ShadeContext'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ??0ShadeContext@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0ShadeContext@@QEAA@XZ PROC				; ShadeContext::ShadeContext, COMDAT

; 1059 : 	ShadeContext() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0InterfaceServer@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ShadeContext@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0Color@@QEAA@XZ			; Color::Color
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 72					; 00000048H
	mov	rcx, rax
	call	??0ShadeOutput@@QEAA@XZ			; ShadeOutput::ShadeOutput
	npad	1

; 1060 : 		mode = SCMODE_NORMAL; nLights = 0; shadow = TRUE;  rayLevel = 0; 

	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+44], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+20], 1
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+48], 0

; 1061 : 		globContext = NULL; atmosSkipLight = NULL; 

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+64], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+56], 0

; 1062 : 	}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0ShadeContext@@QEAA@XZ ENDP				; ShadeContext::ShadeContext
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA PROC		; `ShadeContext::ShadeContext'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA ENDP		; `ShadeContext::ShadeContext'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA PROC		; `ShadeContext::ShadeContext'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 72					; 00000048H
	call	??1ShadeOutput@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA ENDP		; `ShadeContext::ShadeContext'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA PROC		; `ShadeContext::ShadeContext'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0ShadeContext@@QEAA@XZ@4HA ENDP		; `ShadeContext::ShadeContext'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA PROC		; `ShadeContext::ShadeContext'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 72					; 00000048H
	call	??1ShadeOutput@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0ShadeContext@@QEAA@XZ@4HA ENDP		; `ShadeContext::ShadeContext'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z
_TEXT	SEGMENT
tv70 = 32
this$ = 64
n$ = 72
?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z PROC ; ShadeContext::GetRenderElement, COMDAT

; 1022 : 	virtual IRenderElement *GetRenderElement(int n) { 

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1023 : 		return globContext ? globContext->GetRenderElement(n) : NULL;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+64], 0
	je	SHORT $LN3@GetRenderE
	mov	edx, DWORD PTR n$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+64]
	call	?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z ; RenderGlobalContext::GetRenderElement
	mov	QWORD PTR tv70[rsp], rax
	jmp	SHORT $LN4@GetRenderE
$LN3@GetRenderE:
	mov	QWORD PTR tv70[rsp], 0
$LN4@GetRenderE:
	mov	rax, QWORD PTR tv70[rsp]

; 1024 : 	}

	add	rsp, 56					; 00000038H
	ret	0
?GetRenderElement@ShadeContext@@UEAAPEAVIRenderElement@@H@Z ENDP ; ShadeContext::GetRenderElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?NRenderElements@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?NRenderElements@ShadeContext@@UEAAHXZ PROC		; ShadeContext::NRenderElements, COMDAT

; 1013 : 	virtual int NRenderElements() { 

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1014 : 		return globContext ? globContext->NRenderElements():0;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+64], 0
	je	SHORT $LN3@NRenderEle
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+64]
	call	?NRenderElements@RenderGlobalContext@@QEAAHXZ ; RenderGlobalContext::NRenderElements
	mov	DWORD PTR tv69[rsp], eax
	jmp	SHORT $LN4@NRenderEle
$LN3@NRenderEle:
	mov	DWORD PTR tv69[rsp], 0
$LN4@NRenderEle:
	mov	eax, DWORD PTR tv69[rsp]

; 1015 : 	}

	add	rsp, 56					; 00000038H
	ret	0
?NRenderElements@ShadeContext@@UEAAHXZ ENDP		; ShadeContext::NRenderElements
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?Execute@ShadeContext@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
arg1$ = 24
arg2$ = 32
arg3$ = 40
?Execute@ShadeContext@@UEAA_JH_K00@Z PROC		; ShadeContext::Execute, COMDAT

; 967  : 	virtual INT_PTR Execute(int cmd, ULONG_PTR arg1=0, ULONG_PTR arg2=0, ULONG_PTR arg3=0) { return 0; } 

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Execute@ShadeContext@@UEAA_JH_K00@Z ENDP		; ShadeContext::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?TossCache@ShadeContext@@UEAAXPEAVTexmap@@@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
?TossCache@ShadeContext@@UEAAXPEAVTexmap@@@Z PROC	; ShadeContext::TossCache, COMDAT

; 949  : 	virtual void TossCache(Texmap *map) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?TossCache@ShadeContext@@UEAAXPEAVTexmap@@@Z ENDP	; ShadeContext::TossCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
p$ = 24
?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z PROC ; ShadeContext::PutCache, COMDAT

; 941  : 	virtual void PutCache(Texmap *map, const Point3 &p){}

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVPoint3@@@Z ENDP ; ShadeContext::PutCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?PutCache@ShadeContext@@UEAAXPEAVTexmap@@M@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
f$ = 24
?PutCache@ShadeContext@@UEAAXPEAVTexmap@@M@Z PROC	; ShadeContext::PutCache, COMDAT

; 930  : 	virtual void PutCache(Texmap *map, const float f) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PutCache@ShadeContext@@UEAAXPEAVTexmap@@M@Z ENDP	; ShadeContext::PutCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVAColor@@@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
c$ = 24
?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVAColor@@@Z PROC ; ShadeContext::PutCache, COMDAT

; 919  : 	virtual void PutCache(Texmap *map, const AColor &c){}

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PutCache@ShadeContext@@UEAAXPEAVTexmap@@AEBVAColor@@@Z ENDP ; ShadeContext::PutCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
p$ = 24
?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z PROC ; ShadeContext::GetCache, COMDAT

; 908  : 	virtual BOOL GetCache(Texmap *map, Point3 &p){ return FALSE; }

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVPoint3@@@Z ENDP ; ShadeContext::GetCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAM@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
f$ = 24
?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAM@Z PROC	; ShadeContext::GetCache, COMDAT

; 896  : 	virtual BOOL GetCache(Texmap *map, float &f) { return FALSE; }

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAM@Z ENDP	; ShadeContext::GetCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVAColor@@@Z
_TEXT	SEGMENT
this$ = 8
map$ = 16
c$ = 24
?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVAColor@@@Z PROC ; ShadeContext::GetCache, COMDAT

; 884  : 	virtual BOOL GetCache(Texmap *map, AColor &c){ return FALSE; }

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetCache@ShadeContext@@UEAAHPEAVTexmap@@AEAVAColor@@@Z ENDP ; ShadeContext::GetCache
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
dir$ = 80
?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z PROC ; ShadeContext::EvalGlobalEnvironMap, COMDAT

; 849  : 	virtual AColor EvalGlobalEnvironMap(Point3 dir) { return AColor(0,0,0,0); }

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@HHHH@Z			; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
?EvalGlobalEnvironMap@ShadeContext@@UEAA?AVAColor@@VPoint3@@@Z ENDP ; ShadeContext::EvalGlobalEnvironMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?DebugFile@ShadeContext@@UEAAPEAU_iobuf@@XZ
_TEXT	SEGMENT
this$ = 8
?DebugFile@ShadeContext@@UEAAPEAU_iobuf@@XZ PROC	; ShadeContext::DebugFile, COMDAT

; 840  : 	virtual FILE* DebugFile() { return NULL; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?DebugFile@ShadeContext@@UEAAPEAU_iobuf@@XZ ENDP	; ShadeContext::DebugFile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?SetGBufferID@ShadeContext@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
gbid$ = 16
?SetGBufferID@ShadeContext@@UEAAXH@Z PROC		; ShadeContext::SetGBufferID, COMDAT

; 836  : 	virtual void SetGBufferID(int gbid) { out.gbufId = gbid; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR gbid$[rsp]
	mov	DWORD PTR [rax+120], ecx
	ret	0
?SetGBufferID@ShadeContext@@UEAAXH@Z ENDP		; ShadeContext::SetGBufferID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?CamFarRange@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?CamFarRange@ShadeContext@@UEAAMXZ PROC			; ShadeContext::CamFarRange, COMDAT

; 729  : 	virtual float CamFarRange() {return 0.0f;}

	mov	QWORD PTR [rsp+8], rcx
	xorps	xmm0, xmm0
	ret	0
?CamFarRange@ShadeContext@@UEAAMXZ ENDP			; ShadeContext::CamFarRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?CamNearRange@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?CamNearRange@ShadeContext@@UEAAMXZ PROC		; ShadeContext::CamNearRange, COMDAT

; 726  : 	virtual float CamNearRange() {return 0.0f;}

	mov	QWORD PTR [rsp+8], rcx
	xorps	xmm0, xmm0
	ret	0
?CamNearRange@ShadeContext@@UEAAMXZ ENDP		; ShadeContext::CamNearRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?RayConeAngle@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?RayConeAngle@ShadeContext@@UEAAMXZ PROC		; ShadeContext::RayConeAngle, COMDAT

; 699  : 	virtual float RayConeAngle() { return 0.0f; } 

	mov	QWORD PTR [rsp+8], rcx
	xorps	xmm0, xmm0
	ret	0
?RayConeAngle@ShadeContext@@UEAAMXZ ENDP		; ShadeContext::RayConeAngle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?RayDiam@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?RayDiam@ShadeContext@@UEAAMXZ PROC			; ShadeContext::RayDiam, COMDAT

; 683  : 	virtual float RayDiam() { return Length(DP()); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+224]
	mov	rcx, rax
	call	QWORD PTR __imp_?Length@@YAMAEBVPoint3@@@Z
	add	rsp, 56					; 00000038H
	ret	0
?RayDiam@ShadeContext@@UEAAMXZ ENDP			; ShadeContext::RayDiam
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
channel$ = 64
?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z PROC	; ShadeContext::UVWNormal, COMDAT

; 675  : 	virtual Point3 UVWNormal(int channel=0) { return Point3(0,0,1); }  

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	r9d, 1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@HHH@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?UVWNormal@ShadeContext@@UEAA?AVPoint3@@H@Z ENDP	; ShadeContext::UVWNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetSampleSizeScale@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?GetSampleSizeScale@ShadeContext@@UEAAMXZ PROC		; ShadeContext::GetSampleSizeScale, COMDAT

; 658  : 	virtual float GetSampleSizeScale(){ return 1.0f; }

	mov	QWORD PTR [rsp+8], rcx
	movss	xmm0, DWORD PTR __real@3f800000
	ret	0
?GetSampleSizeScale@ShadeContext@@UEAAMXZ ENDP		; ShadeContext::GetSampleSizeScale
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetNSuperSample@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetNSuperSample@ShadeContext@@UEAAHXZ PROC		; ShadeContext::GetNSuperSample, COMDAT

; 657  : 	virtual int GetNSuperSample(){ return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetNSuperSample@ShadeContext@@UEAAHXZ ENDP		; ShadeContext::GetNSuperSample
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?IsTextureSuperSampleOn@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsTextureSuperSampleOn@ShadeContext@@UEAAHXZ PROC	; ShadeContext::IsTextureSuperSampleOn, COMDAT

; 656  : 	virtual BOOL IsTextureSuperSampleOn(){ return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsTextureSuperSampleOn@ShadeContext@@UEAAHXZ ENDP	; ShadeContext::IsTextureSuperSampleOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?IsSuperSampleOn@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsSuperSampleOn@ShadeContext@@UEAAHXZ PROC		; ShadeContext::IsSuperSampleOn, COMDAT

; 655  : 	virtual BOOL IsSuperSampleOn(){ return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsSuperSampleOn@ShadeContext@@UEAAHXZ ENDP		; ShadeContext::IsSuperSampleOn
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?BumpBasisVectors@ShadeContext@@UEAAHQEAVPoint3@@HH@Z
_TEXT	SEGMENT
this$ = 8
dP$ = 16
axis$ = 24
channel$ = 32
?BumpBasisVectors@ShadeContext@@UEAAHQEAVPoint3@@HH@Z PROC ; ShadeContext::BumpBasisVectors, COMDAT

; 652  : 	virtual int BumpBasisVectors(Point3 dP[2], int axis, int channel=0) { return 0; } 

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BumpBasisVectors@ShadeContext@@UEAAHQEAVPoint3@@HH@Z ENDP ; ShadeContext::BumpBasisVectors
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ PROC	; ShadeContext::SurfacePtScreen, COMDAT

; 587  : 	virtual Point2 SurfacePtScreen(){ return Point2(0.0,0.0); } // return the surface point in screen coords

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point2@@QEAA@NN@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?SurfacePtScreen@ShadeContext@@UEAA?AVPoint2@@XZ ENDP	; ShadeContext::SurfacePtScreen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?DP@ShadeContext@@UEAAXAEAVPoint3@@0@Z
_TEXT	SEGMENT
this$ = 8
dpdx$ = 16
dpdy$ = 24
?DP@ShadeContext@@UEAAXAEAVPoint3@@0@Z PROC		; ShadeContext::DP, COMDAT

; 553  : 	virtual void DP(Point3& dpdx, Point3& dpdy){};  // deriv of P, relative to pixel

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DP@ShadeContext@@UEAAXAEAVPoint3@@0@Z ENDP		; ShadeContext::DP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetIOR@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?GetIOR@ShadeContext@@UEAAMXZ PROC			; ShadeContext::GetIOR, COMDAT

; 541  : 	virtual float GetIOR() { return 1.0f; } // Get index of refraction

	mov	QWORD PTR [rsp+8], rcx
	movss	xmm0, DWORD PTR __real@3f800000
	ret	0
?GetIOR@ShadeContext@@UEAAMXZ ENDP			; ShadeContext::GetIOR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?SetIOR@ShadeContext@@UEAAXM@Z
_TEXT	SEGMENT
this$ = 8
ior$ = 16
?SetIOR@ShadeContext@@UEAAXM@Z PROC			; ShadeContext::SetIOR, COMDAT

; 537  : 	virtual void SetIOR(float ior) {} // Set index of refraction

	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetIOR@ShadeContext@@UEAAXM@Z ENDP			; ShadeContext::SetIOR
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ PROC		; ShadeContext::OrigView, COMDAT

; 518  : 	virtual Point3 OrigView() { return V(); } // Original view vector: not affected by SetView();

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+144]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?OrigView@ShadeContext@@UEAA?AVPoint3@@XZ ENDP		; ShadeContext::OrigView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?Curve@ShadeContext@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?Curve@ShadeContext@@UEAAMXZ PROC			; ShadeContext::Curve, COMDAT

; 505  : 	virtual float  Curve() { return 0.0f; }          // estimate of dN/dsx, dN/dsy

	mov	QWORD PTR [rsp+8], rcx
	xorps	xmm0, xmm0
	ret	0
?Curve@ShadeContext@@UEAAMXZ ENDP			; ShadeContext::Curve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ PROC	; ShadeContext::OrigNormal, COMDAT

; 495  : 	virtual Point3 OrigNormal() { return Normal(); } // original surface normal: not affected by SetNormal();

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR __$ReturnUdt$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+104]
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?OrigNormal@ShadeContext@@UEAA?AVPoint3@@XZ ENDP	; ShadeContext::OrigNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?SetNormal@ShadeContext@@UEAAXVPoint3@@@Z
_TEXT	SEGMENT
this$ = 8
p$ = 16
?SetNormal@ShadeContext@@UEAAXVPoint3@@@Z PROC		; ShadeContext::SetNormal, COMDAT

; 490  : 	virtual void SetNormal(Point3 p) {} // used for perturbing normal

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetNormal@ShadeContext@@UEAAXVPoint3@@@Z ENDP		; ShadeContext::SetNormal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ PROC	; ShadeContext::BarycentricCoords, COMDAT

; 469  : 	virtual Point3 BarycentricCoords() { return Point3(0,0,0);}  // coords relative to triangular face 

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@HHH@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?BarycentricCoords@ShadeContext@@UEAA?AVPoint3@@XZ ENDP	; ShadeContext::BarycentricCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?GetEvalObject@ShadeContext@@UEAAPEAVObject@@XZ
_TEXT	SEGMENT
this$ = 8
?GetEvalObject@ShadeContext@@UEAAPEAVObject@@XZ PROC	; ShadeContext::GetEvalObject, COMDAT

; 452  : 	virtual Object *GetEvalObject() { return NULL; } // Returns the evaluated object for this node. 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetEvalObject@ShadeContext@@UEAAPEAVObject@@XZ ENDP	; ShadeContext::GetEvalObject
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?Node@ShadeContext@@UEAAPEAVINode@@XZ
_TEXT	SEGMENT
this$ = 8
?Node@ShadeContext@@UEAAPEAVINode@@XZ PROC		; ShadeContext::Node, COMDAT

; 436  : 	virtual INode *Node() { return NULL; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Node@ShadeContext@@UEAAPEAVINode@@XZ ENDP		; ShadeContext::Node
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?NodeID@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NodeID@ShadeContext@@UEAAHXZ PROC			; ShadeContext::NodeID, COMDAT

; 430  : 	virtual int NodeID() { return -1; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?NodeID@ShadeContext@@UEAAHXZ ENDP			; ShadeContext::NodeID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?ProjType@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?ProjType@ShadeContext@@UEAAHXZ PROC			; ShadeContext::ProjType, COMDAT

; 415  : 	virtual int ProjType() { return 0;} // returns: 0: perspective, 1: parallel

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ProjType@ShadeContext@@UEAAHXZ ENDP			; ShadeContext::ProjType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?Antialias@ShadeContext@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?Antialias@ShadeContext@@UEAAHXZ PROC			; ShadeContext::Antialias, COMDAT

; 409  : 	virtual int Antialias() {return 0;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Antialias@ShadeContext@@UEAAHXZ ENDP			; ShadeContext::Antialias
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ PROC		; ShadeContext::ClassID, COMDAT

; 401  : 	virtual Class_ID ClassID() { return Class_ID(0,0); }  // to distinguish different ShadeContexts.

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?ClassID@ShadeContext@@UEAA?AVClass_ID@@XZ ENDP		; ShadeContext::ClassID
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GShadeOutput@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GShadeOutput@@UEAAPEAXI@Z PROC			; ShadeOutput::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1ShadeOutput@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 568				; 00000238H
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GShadeOutput@@UEAAPEAXI@Z ENDP			; ShadeOutput::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1ShadeOutput@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1ShadeOutput@@UEAA@XZ PROC				; ShadeOutput::~ShadeOutput, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1BaseInterfaceServer@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1ShadeOutput@@UEAA@XZ ENDP				; ShadeOutput::~ShadeOutput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA PROC		; `ShadeOutput::~ShadeOutput'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1BaseInterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA ENDP		; `ShadeOutput::~ShadeOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA PROC		; `ShadeOutput::~ShadeOutput'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1BaseInterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1ShadeOutput@@UEAA@XZ@4HA ENDP		; `ShadeOutput::~ShadeOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z
_TEXT	SEGMENT
i$1 = 0
tv148 = 8
this$ = 48
a$ = 56
??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z PROC			; ShadeOutput::operator=, COMDAT

; 267  : 			ShadeOutput& operator = ( const ShadeOutput& a ){

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 24

; 268  : 				 flags = a.flags;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax+16], ecx

; 269  : 				 c = a.c; t = a.t; 

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	lea	rdi, QWORD PTR [rax+20]
	lea	rsi, QWORD PTR [rcx+20]
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	lea	rdi, QWORD PTR [rax+32]
	lea	rsi, QWORD PTR [rcx+32]
	mov	ecx, 12
	rep movsb

; 270  : 				 ior = a.ior;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rcx+44]
	movss	DWORD PTR [rax+44], xmm0

; 271  : 				 gbufId = a.gbufId;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+48]
	mov	DWORD PTR [rax+48], ecx

; 272  : 				 nElements = a.nElements;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR a$[rsp]
	mov	ecx, DWORD PTR [rcx+52]
	mov	DWORD PTR [rax+52], ecx

; 273  : 				 for( int i = 0; i < nElements; ++i )

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@operator:
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+52]
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@operator

; 274  : 						elementVals[i] = a.elementVals[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, rax, 16
	movsxd	rcx, DWORD PTR i$1[rsp]
	imul	rcx, rcx, 16
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdi, QWORD PTR a$[rsp]
	mov	QWORD PTR tv148[rsp], rdi
	lea	rdi, QWORD PTR [rdx+rcx+56]
	mov	rcx, QWORD PTR tv148[rsp]
	lea	rsi, QWORD PTR [rcx+rax+56]
	mov	ecx, 16
	rep movsb
	jmp	SHORT $LN2@operator
$LN3@operator:

; 275  : 				 return *this;

	mov	rax, QWORD PTR this$[rsp]

; 276  : 			}

	add	rsp, 24
	pop	rdi
	pop	rsi
	ret	0
??4ShadeOutput@@QEAAAEAV0@AEBV0@@Z ENDP			; ShadeOutput::operator=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\shadecontext.h
;	COMDAT ??0ShadeOutput@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0ShadeOutput@@QEAA@XZ PROC				; ShadeOutput::ShadeOutput, COMDAT

; 179  : 			ShadeOutput():nElements(0), flags(0), gbufId(0){};

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0BaseInterfaceServer@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7ShadeOutput@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 20
	mov	rcx, rax
	call	??0Color@@QEAA@XZ			; Color::Color
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0Color@@QEAA@XZ			; Color::Color
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+48], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+52], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 56					; 00000038H
	lea	r9, OFFSET FLAT:??0AColor@@QEAA@XZ	; AColor::AColor
	mov	r8d, 32					; 00000020H
	mov	edx, 16
	mov	rcx, rax
	call	??_H@YAXPEAX_K1P6APEAX0@Z@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0ShadeOutput@@QEAA@XZ ENDP				; ShadeOutput::ShadeOutput
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA PROC		; `ShadeOutput::ShadeOutput'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1BaseInterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA ENDP		; `ShadeOutput::ShadeOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA PROC		; `ShadeOutput::ShadeOutput'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1BaseInterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0ShadeOutput@@QEAA@XZ@4HA ENDP		; `ShadeOutput::ShadeOutput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\renderglobalcontext.h
;	COMDAT ?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z
_TEXT	SEGMENT
tv75 = 32
this$ = 64
n$ = 72
?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z PROC ; RenderGlobalContext::GetRenderElement, COMDAT

; 201  : 	 {

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 202  : 		return mpIRenderElementMgr ? mpIRenderElementMgr->GetRenderElement(n) : NULL;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN3@GetRenderE
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	mov	edx, DWORD PTR n$[rsp]
	call	QWORD PTR [rax+272]
	mov	QWORD PTR tv75[rsp], rax
	jmp	SHORT $LN4@GetRenderE
$LN3@GetRenderE:
	mov	QWORD PTR tv75[rsp], 0
$LN4@GetRenderE:
	mov	rax, QWORD PTR tv75[rsp]

; 203  : 	 }

	add	rsp, 56					; 00000038H
	ret	0
?GetRenderElement@RenderGlobalContext@@QEAAPEAVIRenderElement@@H@Z ENDP ; RenderGlobalContext::GetRenderElement
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\rendering\renderglobalcontext.h
;	COMDAT ?NRenderElements@RenderGlobalContext@@QEAAHXZ
_TEXT	SEGMENT
tv74 = 32
this$ = 64
?NRenderElements@RenderGlobalContext@@QEAAHXZ PROC	; RenderGlobalContext::NRenderElements, COMDAT

; 193  : 	 {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 194  : 		return mpIRenderElementMgr ? mpIRenderElementMgr->NumRenderElements() : 0;

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN3@NRenderEle
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	rax, QWORD PTR [rax]
	call	QWORD PTR [rax+264]
	mov	DWORD PTR tv74[rsp], eax
	jmp	SHORT $LN4@NRenderEle
$LN3@NRenderEle:
	mov	DWORD PTR tv74[rsp], 0
$LN4@NRenderEle:
	mov	eax, DWORD PTR tv74[rsp]

; 195  : 	 } 

	add	rsp, 56					; 00000038H
	ret	0
?NRenderElements@RenderGlobalContext@@QEAAHXZ ENDP	; RenderGlobalContext::NRenderElements
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z
_TEXT	SEGMENT
this$ = 8
message$ = 16
hMaker$ = 24
?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z PROC ; ReferenceTarget::NotifyTarget, COMDAT

; 2150 : 		virtual void NotifyTarget(int message, ReferenceMaker* hMaker) { UNUSED_PARAM(message); UNUSED_PARAM(hMaker); }

	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?NotifyTarget@ReferenceTarget@@UEAAXHPEAVReferenceMaker@@@Z ENDP ; ReferenceTarget::NotifyTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyForeground@ReferenceTarget@@UEAAXH@Z
_TEXT	SEGMENT
tv71 = 64
$T1 = 72
this$ = 96
t$ = 104
?NotifyForeground@ReferenceTarget@@UEAAXH@Z PROC	; ReferenceTarget::NotifyForeground, COMDAT

; 2139 : 		virtual void NotifyForeground(TimeValue t) {

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 2140 : 			NotifyDependents(Interval(t,t),PART_PUT_IN_FG,REFMSG_FLAGDEPENDENTS);

	mov	r8d, DWORD PTR t$[rsp]
	mov	edx, DWORD PTR t$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Interval@@QEAA@HH@Z
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv71[rsp], rcx
	mov	DWORD PTR [rsp+56], 0
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 1
	mov	DWORD PTR [rsp+32], -16			; fffffff0H
	mov	r9d, 112				; 00000070H
	mov	r8d, 1
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR tv71[rsp]
	call	QWORD PTR [rax+1200]

; 2141 : 		}

	add	rsp, 88					; 00000058H
	ret	0
?NotifyForeground@ReferenceTarget@@UEAAXH@Z ENDP	; ReferenceTarget::NotifyForeground
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ PROC	; ReferenceTarget::RefDeletedUndoRedo, COMDAT

; 1955 : 		virtual void RefDeletedUndoRedo() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefDeletedUndoRedo@ReferenceTarget@@UEAAXXZ ENDP	; ReferenceTarget::RefDeletedUndoRedo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefDeleted@ReferenceTarget@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RefDeleted@ReferenceTarget@@UEAAXXZ PROC		; ReferenceTarget::RefDeleted, COMDAT

; 1946 : 		virtual void RefDeleted() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefDeleted@ReferenceTarget@@UEAAXXZ ENDP		; ReferenceTarget::RefDeleted
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z
_TEXT	SEGMENT
this$ = 8
rm$ = 16
?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z PROC ; ReferenceTarget::RefAddedUndoRedo, COMDAT

; 1935 : 		virtual void RefAddedUndoRedo(RefMakerHandle rm) { UNUSED_PARAM(rm); }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RefAddedUndoRedo@ReferenceTarget@@UEAAXPEAVReferenceMaker@@@Z ENDP ; ReferenceTarget::RefAddedUndoRedo
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRefTarget@ReferenceTarget@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsRefTarget@ReferenceTarget@@UEAAHXZ PROC		; ReferenceTarget::IsRefTarget, COMDAT

; 1874 : 		virtual BOOL IsRefTarget() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRefTarget@ReferenceTarget@@UEAAHXZ ENDP		; ReferenceTarget::IsRefTarget
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
rtarg$ = 16
?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::ShouldPersistWeakRef, COMDAT

; 1664 : 		virtual BOOL ShouldPersistWeakRef(RefTargetHandle rtarg) { UNUSED_PARAM(rtarg); return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ShouldPersistWeakRef@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::ShouldPersistWeakRef
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
rtarg$ = 16
?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::IsRealDependency, COMDAT

; 1639 : 		virtual BOOL IsRealDependency(ReferenceTarget *rtarg) { UNUSED_PARAM(rtarg); return TRUE;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRealDependency@ReferenceMaker@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::IsRealDependency
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?IsRefMaker@ReferenceMaker@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsRefMaker@ReferenceMaker@@UEAAHXZ PROC		; ReferenceMaker::IsRefMaker, COMDAT

; 1620 : 		virtual BOOL IsRefMaker() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?IsRefMaker@ReferenceMaker@@UEAAHXZ ENDP		; ReferenceMaker::IsRefMaker
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
changeInt$ = 16
partID$ = 24
message$ = 32
sclass$ = 40
propagate$ = 48
hTarg$ = 56
?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z PROC ; ReferenceMaker::NotifyDependents, COMDAT

; 1371 : 		{

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1372 : 			UNUSED_PARAM(changeInt); UNUSED_PARAM(partID);
; 1373 : 			UNUSED_PARAM(message); UNUSED_PARAM(sclass);
; 1374 : 			UNUSED_PARAM(propagate); UNUSED_PARAM(hTarg);
; 1375 : 			DbgAssert(false);
; 1376 : 			return REF_FAIL;

	xor	eax, eax

; 1377 : 		};

	ret	0
?NotifyDependents@ReferenceMaker@@EEAA?AW4RefResult@@AEBVInterval@@_KIKHPEAVReferenceTarget@@@Z ENDP ; ReferenceMaker::NotifyDependents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
iref$ = 16
?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z PROC		; ReferenceMaker::RemapRefOnLoad, COMDAT

; 1337 : 		virtual int RemapRefOnLoad(int iref) { return iref; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, DWORD PTR iref$[rsp]
	ret	0
?RemapRefOnLoad@ReferenceMaker@@UEAAHH@Z ENDP		; ReferenceMaker::RemapRefOnLoad
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\ref.h
;	COMDAT ?CanTransferReference@ReferenceMaker@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?CanTransferReference@ReferenceMaker@@UEAAHH@Z PROC	; ReferenceMaker::CanTransferReference, COMDAT

; 1238 : 		virtual BOOL CanTransferReference(int i) { UNUSED_PARAM(i); return TRUE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanTransferReference@ReferenceMaker@@UEAAHH@Z ENDP	; ReferenceMaker::CanTransferReference
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z
_TEXT	SEGMENT
this$ = 8
used_as_rhs_value$ = 16
objectSpecifiedName$ = 24
?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z PROC ; Animatable::GetMacroRecorderName, COMDAT

; 2981 : 		virtual bool GetMacroRecorderName(bool used_as_rhs_value, MSTR &objectSpecifiedName) { return false; }

	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?GetMacroRecorderName@Animatable@@UEAA_N_NAEAVWStr@@@Z ENDP ; Animatable::GetMacroRecorderName
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
desc$ = 16
?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z PROC ; Animatable::IsParamBlockDesc2Used, COMDAT

; 2970 : 		virtual bool IsParamBlockDesc2Used(ParamBlockDesc2 * desc) { return true; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	al, 1
	ret	0
?IsParamBlockDesc2Used@Animatable@@UEAA_NPEAVParamBlockDesc2@@@Z ENDP ; Animatable::IsParamBlockDesc2Used
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
classID$ = 72
?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z PROC	; Animatable::IsSubClassOf, COMDAT

; 2285 : 		virtual BOOL IsSubClassOf(Class_ID classID) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2286 : 			return (classID == ClassID());

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+40]
	mov	rdx, rax
	mov	rcx, QWORD PTR classID$[rsp]
	call	??8Class_ID@@QEBA_NAEBV0@@Z		; Class_ID::operator==
	movzx	eax, al

; 2287 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?IsSubClassOf@Animatable@@UEAAHVClass_ID@@@Z ENDP	; Animatable::IsSubClassOf
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z
_TEXT	SEGMENT
this$ = 8
nodes$ = 16
Context$ = 24
?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z PROC ; Animatable::GetSystemNodes, COMDAT

; 2265 : 		virtual void GetSystemNodes(INodeTab &nodes, SysNodeContext Context) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?GetSystemNodes@Animatable@@UEAAXAEAVINodeTab@@W4SysNodeContext@@@Z ENDP ; Animatable::GetSystemNodes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FreeAllBitmaps@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?FreeAllBitmaps@Animatable@@UEAAXXZ PROC		; Animatable::FreeAllBitmaps, COMDAT

; 2237 : 		virtual void FreeAllBitmaps() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FreeAllBitmaps@Animatable@@UEAAXXZ ENDP		; Animatable::FreeAllBitmaps
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubAnim@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?SelectSubAnim@Animatable@@UEAAHH@Z PROC		; Animatable::SelectSubAnim, COMDAT

; 2163 : 		virtual BOOL SelectSubAnim(int subNum) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SelectSubAnim@Animatable@@UEAAHH@Z ENDP		; Animatable::SelectSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z
_TEXT	SEGMENT
this$ = 8
hwnd$ = 16
message$ = 24
wParam$ = 32
lParam$ = 40
?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z PROC ; Animatable::TrackViewWinProc, COMDAT

; 2146 : 			LPARAM lParam ) { return 0;}

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?TrackViewWinProc@Animatable@@UEAA_JPEAUHWND__@@I_K_J@Z ENDP ; Animatable::TrackViewWinProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z PROC ; Animatable::GetParamDimension, COMDAT

; 2137 : 		virtual ParamDimension* GetParamDimension(int i) { return defaultDim; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR __imp_?defaultDim@@3PEAVParamDimension@@EA
	mov	rax, QWORD PTR [rax]
	ret	0
?GetParamDimension@Animatable@@UEAAPEAVParamDimension@@H@Z ENDP ; Animatable::GetParamDimension
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
min$ = 32
max$ = 40
flags$ = 48
?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z PROC ; Animatable::GetSubFCurveExtents, COMDAT

; 2128 : 			DWORD flags) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetSubFCurveExtents@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAM1K@Z ENDP ; Animatable::GetSubFCurveExtents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
min$ = 24
max$ = 32
flags$ = 40
?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z PROC ; Animatable::GetFCurveExtents, COMDAT

; 2097 : 			DWORD flags) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetFCurveExtents@Animatable@@UEAAHPEAVParamDimensionBase@@AEAM1K@Z ENDP ; Animatable::GetFCurveExtents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?TrackParamsType@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?TrackParamsType@Animatable@@UEAAHXZ PROC		; Animatable::TrackParamsType, COMDAT

; 2069 : 		virtual int TrackParamsType() {return TRACKPARAMS_NONE;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?TrackParamsType@Animatable@@UEAAHXZ ENDP		; Animatable::TrackParamsType
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
dim$ = 24
pname$ = 32
hParent$ = 40
ip$ = 48
flags$ = 56
?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z PROC ; Animatable::EditTrackParams, COMDAT

; 2048 : 			DWORD flags) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTrackParams@Animatable@@UEAAXHPEAVParamDimensionBase@@PEB_WPEAUHWND__@@PEAVIObjParam@@K@Z ENDP ; Animatable::EditTrackParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hits$ = 32
rcHit$ = 40
rcGraph$ = 48
tzoom$ = 56
tscroll$ = 64
vzoom$ = 72
vscroll$ = 80
flags$ = 88
?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::HitTestSubFCurves, COMDAT

; 2013 : 			DWORD flags ) { return HITCURVE_NONE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?HitTestSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::HitTestSubFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hdc$ = 32
rcGraph$ = 40
rcPaint$ = 48
tzoom$ = 56
tscroll$ = 64
vzoom$ = 72
vscroll$ = 80
flags$ = 88
?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::PaintSubFCurves, COMDAT

; 1959 : 			DWORD flags ) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?PaintSubFCurves@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::PaintSubFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hits$ = 24
rcHit$ = 32
rcGraph$ = 40
tzoom$ = 48
tscroll$ = 56
vzoom$ = 64
vscroll$ = 72
flags$ = 80
?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::HitTestFCurves, COMDAT

; 1912 : 			DWORD flags ) { return HITCURVE_NONE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 4
	ret	0
?HitTestFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@AEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::HitTestFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hdc$ = 24
rcGraph$ = 32
rcPaint$ = 40
tzoom$ = 48
tscroll$ = 56
vzoom$ = 64
vscroll$ = 72
flags$ = 80
?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z PROC ; Animatable::PaintFCurves, COMDAT

; 1858 : 			DWORD flags ) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?PaintFCurves@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHMHK@Z ENDP ; Animatable::PaintFCurves
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
dim$ = 24
hdc$ = 32
rcTrack$ = 40
rcPaint$ = 48
zoom$ = 56
scroll$ = 64
flags$ = 72
?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z PROC ; Animatable::PaintSubTrack, COMDAT

; 1811 : 			DWORD flags) {return TRACK_DORANGE;}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?PaintSubTrack@Animatable@@UEAAHHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ENDP ; Animatable::PaintSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
hdc$ = 24
rcTrack$ = 32
rcPaint$ = 40
zoom$ = 48
scroll$ = 56
flags$ = 64
?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z PROC ; Animatable::PaintTrack, COMDAT

; 1776 : 			DWORD flags ) { return TRACK_DORANGE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?PaintTrack@Animatable@@UEAAHPEAVParamDimensionBase@@PEAUHDC__@@AEAVBox2@@2MHK@Z ENDP ; Animatable::PaintTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z
_TEXT	SEGMENT
this$ = 8
hits$ = 16
rcHit$ = 24
rcTrack$ = 32
zoom$ = 40
scroll$ = 48
flags$ = 56
?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z PROC ; Animatable::HitTestTrack, COMDAT

; 1736 : 			DWORD flags ) { return TRACK_DORANGE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2
	ret	0
?HitTestTrack@Animatable@@UEAAHAEAV?$Tab@VTrackHitRecord@@@@AEAVBox2@@1MHK@Z ENDP ; Animatable::HitTestTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetTrackVSpace@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
lineHeight$ = 16
?GetTrackVSpace@Animatable@@UEAAHH@Z PROC		; Animatable::GetTrackVSpace, COMDAT

; 1694 : 		virtual int GetTrackVSpace( int lineHeight ) { return 1; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?GetTrackVSpace@Animatable@@UEAAHH@Z ENDP		; Animatable::GetTrackVSpace
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
cobj$ = 24
iv$ = 32
flags$ = 40
?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::PasteSubTrack, COMDAT

; 1685 : 		virtual void PasteSubTrack(int subNum, TrackClipObject *cobj, Interval iv, DWORD flags) {}

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PasteSubTrack@Animatable@@UEAAXHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::PasteSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
iv$ = 24
flags$ = 32
?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z PROC ; Animatable::CopySubTrack, COMDAT

; 1672 : 		virtual TrackClipObject *CopySubTrack(int subNum, Interval iv, DWORD flags) { return NULL; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CopySubTrack@Animatable@@UEAAPEAVTrackClipObject@@HVInterval@@K@Z ENDP ; Animatable::CopySubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
cobj$ = 24
iv$ = 32
flags$ = 40
?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CanPasteSubTrack, COMDAT

; 1657 : 		virtual BOOL CanPasteSubTrack(int subNum,TrackClipObject *cobj, Interval iv, DWORD flags) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanPasteSubTrack@Animatable@@UEAAHHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CanPasteSubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
iv$ = 24
flags$ = 32
?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z PROC	; Animatable::CanCopySubTrack, COMDAT

; 1637 : 		virtual BOOL CanCopySubTrack(int subNum, Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanCopySubTrack@Animatable@@UEAAHHVInterval@@K@Z ENDP	; Animatable::CanCopySubTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
cobj$ = 16
iv$ = 24
flags$ = 32
?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::PasteTrack, COMDAT

; 1615 : 		virtual void PasteTrack(TrackClipObject *cobj, Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?PasteTrack@Animatable@@UEAAXPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::PasteTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CopyTrack, COMDAT

; 1606 : 		virtual TrackClipObject *CopyTrack(Interval iv, DWORD flags) { return NULL; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CopyTrack@Animatable@@UEAAPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CopyTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
cobj$ = 16
iv$ = 24
flags$ = 32
?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z PROC ; Animatable::CanPasteTrack, COMDAT

; 1594 : 		virtual BOOL CanPasteTrack(TrackClipObject *cobj, Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanPasteTrack@Animatable@@UEAAHPEAVTrackClipObject@@VInterval@@K@Z ENDP ; Animatable::CanPasteTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z PROC	; Animatable::CanCopyTrack, COMDAT

; 1582 : 		virtual BOOL CanCopyTrack(Interval iv, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanCopyTrack@Animatable@@UEAAHVInterval@@K@Z ENDP	; Animatable::CanCopyTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RevertSetKeyBuffer@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?RevertSetKeyBuffer@Animatable@@UEAAXXZ PROC		; Animatable::RevertSetKeyBuffer, COMDAT

; 1557 : 		virtual void RevertSetKeyBuffer() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?RevertSetKeyBuffer@Animatable@@UEAAXXZ ENDP		; Animatable::RevertSetKeyBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CommitSetKeyBuffer@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?CommitSetKeyBuffer@Animatable@@UEAAXH@Z PROC		; Animatable::CommitSetKeyBuffer, COMDAT

; 1538 : 		virtual void CommitSetKeyBuffer(TimeValue t) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CommitSetKeyBuffer@Animatable@@UEAAXH@Z ENDP		; Animatable::CommitSetKeyBuffer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetKeyBufferPresent@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SetKeyBufferPresent@Animatable@@UEAAHXZ PROC		; Animatable::SetKeyBufferPresent, COMDAT

; 1517 : 		virtual BOOL SetKeyBufferPresent() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SetKeyBufferPresent@Animatable@@UEAAHXZ ENDP		; Animatable::SetKeyBufferPresent
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
dim$ = 24
angle$ = 32
length$ = 40
flags$ = 48
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z PROC ; Animatable::AdjustTangents, COMDAT

; 1488 : 			DWORD flags) {};

	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@MMK@Z ENDP ; Animatable::AdjustTangents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
dim$ = 24
rcGraph$ = 32
tzoom$ = 40
tscroll$ = 48
vzoom$ = 56
vscroll$ = 64
dx$ = 72
dy$ = 80
flags$ = 88
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z PROC ; Animatable::AdjustTangents, COMDAT

; 1465 : 			DWORD flags) {};

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AdjustTangents@Animatable@@UEAAXVTrackHitRecord@@PEAVParamDimensionBase@@AEAVBox2@@MHMHHHK@Z ENDP ; Animatable::AdjustTangents
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
timeExpr$ = 24
valExpr$ = 32
flags$ = 40
?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z PROC ; Animatable::SetSelKeyCoordsExpr, COMDAT

; 1428 : 			DWORD flags) {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1429 : 				return KEYCOORDS_EXPR_UNSUPPORTED;

	xor	eax, eax

; 1430 : 		}

	ret	0
?SetSelKeyCoordsExpr@Animatable@@UEAAHPEAVParamDimension@@PEB_W1K@Z ENDP ; Animatable::SetSelKeyCoordsExpr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SetSelKeyCoords@Animatable@@UEAAXHMK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
val$ = 24
flags$ = 32
?SetSelKeyCoords@Animatable@@UEAAXHMK@Z PROC		; Animatable::SetSelKeyCoords, COMDAT

; 1385 : 		virtual void SetSelKeyCoords(TimeValue t, float val,DWORD flags) {}

	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SetSelKeyCoords@Animatable@@UEAAXHMK@Z ENDP		; Animatable::SetSelKeyCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
val$ = 24
flags$ = 32
?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z PROC	; Animatable::GetSelKeyCoords, COMDAT

; 1370 : 		virtual int GetSelKeyCoords(TimeValue &t, float &val, DWORD flags) { 

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1371 : 			return KEYS_NONESELECTED; 

	mov	eax, 1

; 1372 : 		}

	ret	0
?GetSelKeyCoords@Animatable@@UEAAHAEAHAEAMK@Z ENDP	; Animatable::GetSelKeyCoords
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsSubCurveSelected@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?IsSubCurveSelected@Animatable@@UEAAHH@Z PROC		; Animatable::IsSubCurveSelected, COMDAT

; 1343 : 		virtual BOOL IsSubCurveSelected(int subNum) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsSubCurveSelected@Animatable@@UEAAHH@Z ENDP		; Animatable::IsSubCurveSelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsCurveSelected@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsCurveSelected@Animatable@@UEAAHXZ PROC		; Animatable::IsCurveSelected, COMDAT

; 1338 : 		virtual BOOL IsCurveSelected() { return FALSE; }		

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsCurveSelected@Animatable@@UEAAHXZ ENDP		; Animatable::IsCurveSelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectCurve@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
?SelectCurve@Animatable@@UEAAXH@Z PROC			; Animatable::SelectCurve, COMDAT

; 1333 : 		virtual void SelectCurve(BOOL sel) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectCurve@Animatable@@UEAAXH@Z ENDP			; Animatable::SelectCurve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
origin$ = 24
scale$ = 32
flags$ = 40
?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z PROC ; Animatable::ScaleKeyValues, COMDAT

; 1326 : 			DWORD flags) {}

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ScaleKeyValues@Animatable@@UEAAXPEAVParamDimensionBase@@MMK@Z ENDP ; Animatable::ScaleKeyValues
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z
_TEXT	SEGMENT
this$ = 8
dim$ = 16
delta$ = 24
flags$ = 32
?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z PROC ; Animatable::MoveKeys, COMDAT

; 1280 : 		virtual void MoveKeys(ParamDimensionBase *dim, float delta, DWORD flags) {}  

	mov	DWORD PTR [rsp+32], r9d
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?MoveKeys@Animatable@@UEAAXPEAVParamDimensionBase@@MK@Z ENDP ; Animatable::MoveKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AddNewKey@Animatable@@UEAAXHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?AddNewKey@Animatable@@UEAAXHK@Z PROC			; Animatable::AddNewKey, COMDAT

; 1256 : 		virtual void AddNewKey(TimeValue t, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?AddNewKey@Animatable@@UEAAXHK@Z ENDP			; Animatable::AddNewKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CloneSelectedKeys@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
offset$ = 16
?CloneSelectedKeys@Animatable@@UEAAXH@Z PROC		; Animatable::CloneSelectedKeys, COMDAT

; 1245 : 		virtual void CloneSelectedKeys(BOOL offset = FALSE) {}   

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CloneSelectedKeys@Animatable@@UEAAXH@Z ENDP		; Animatable::CloneSelectedKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumSelKeys@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumSelKeys@Animatable@@UEAAHXZ PROC			; Animatable::NumSelKeys, COMDAT

; 1239 : 		virtual int NumSelKeys() { return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumSelKeys@Animatable@@UEAAHXZ ENDP			; Animatable::NumSelKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetFlagKeyIndex@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?GetFlagKeyIndex@Animatable@@UEAAHXZ PROC		; Animatable::GetFlagKeyIndex, COMDAT

; 1235 : 		virtual int GetFlagKeyIndex() { return -1; } 

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?GetFlagKeyIndex@Animatable@@UEAAHXZ ENDP		; Animatable::GetFlagKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z
_TEXT	SEGMENT
this$ = 8
hit$ = 16
?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z PROC	; Animatable::FlagKey, COMDAT

; 1227 : 		virtual void FlagKey(TrackHitRecord hit) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FlagKey@Animatable@@UEAAXVTrackHitRecord@@@Z ENDP	; Animatable::FlagKey
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsKeySelected@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?IsKeySelected@Animatable@@UEAAHH@Z PROC		; Animatable::IsKeySelected, COMDAT

; 1207 : 		virtual BOOL IsKeySelected(int i) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsKeySelected@Animatable@@UEAAHH@Z ENDP		; Animatable::IsKeySelected
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectKeyByIndex@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
sel$ = 24
?SelectKeyByIndex@Animatable@@UEAAXHH@Z PROC		; Animatable::SelectKeyByIndex, COMDAT

; 1201 : 		virtual void SelectKeyByIndex(int i, BOOL sel) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectKeyByIndex@Animatable@@UEAAXHH@Z ENDP		; Animatable::SelectKeyByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubCurve@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
sel$ = 24
?SelectSubCurve@Animatable@@UEAAXHH@Z PROC		; Animatable::SelectSubCurve, COMDAT

; 1192 : 		virtual void SelectSubCurve(int subNum, BOOL sel) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectSubCurve@Animatable@@UEAAXHH@Z ENDP		; Animatable::SelectSubCurve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
sel$ = 24
flags$ = 32
?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z PROC ; Animatable::SelectSubKeys, COMDAT

; 1183 : 		virtual void SelectSubKeys(int subNum, TrackHitTab& sel, DWORD flags) {} 

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectSubKeys@Animatable@@UEAAXHAEAV?$Tab@VTrackHitRecord@@@@K@Z ENDP ; Animatable::SelectSubKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
flags$ = 24
?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z PROC ; Animatable::SelectKeys, COMDAT

; 1160 : 		virtual void SelectKeys(TrackHitTab& sel, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?SelectKeys@Animatable@@UEAAXAEAV?$Tab@VTrackHitRecord@@@@K@Z ENDP ; Animatable::SelectKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeyByIndex@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?DeleteKeyByIndex@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteKeyByIndex, COMDAT

; 1144 : 		virtual void DeleteKeyByIndex(int index) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeyByIndex@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteKeyByIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeys@Animatable@@UEAAXK@Z
_TEXT	SEGMENT
this$ = 8
flags$ = 16
?DeleteKeys@Animatable@@UEAAXK@Z PROC			; Animatable::DeleteKeys, COMDAT

; 1139 : 		virtual void DeleteKeys(DWORD flags) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeys@Animatable@@UEAAXK@Z ENDP			; Animatable::DeleteKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?SupportTimeOperations@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?SupportTimeOperations@Animatable@@UEAAHXZ PROC		; Animatable::SupportTimeOperations, COMDAT

; 1107 : 		virtual BOOL SupportTimeOperations() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?SupportTimeOperations@Animatable@@UEAAHXZ ENDP		; Animatable::SupportTimeOperations
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?InsertTime@Animatable@@UEAAXHH@Z
_TEXT	SEGMENT
this$ = 8
ins$ = 16
amount$ = 24
?InsertTime@Animatable@@UEAAXHH@Z PROC			; Animatable::InsertTime, COMDAT

; 1097 : 		virtual void InsertTime(TimeValue ins, TimeValue amount) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?InsertTime@Animatable@@UEAAXHH@Z ENDP			; Animatable::InsertTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ScaleTime@Animatable@@UEAAXVInterval@@M@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
s$ = 24
?ScaleTime@Animatable@@UEAAXVInterval@@M@Z PROC		; Animatable::ScaleTime, COMDAT

; 1087 : 		virtual void ScaleTime(Interval iv, float s) {}

	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ScaleTime@Animatable@@UEAAXVInterval@@M@Z ENDP		; Animatable::ScaleTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ReverseTime@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?ReverseTime@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::ReverseTime, COMDAT

; 1077 : 		virtual void ReverseTime(Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?ReverseTime@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::ReverseTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteTime@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
iv$ = 16
flags$ = 24
?DeleteTime@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::DeleteTime, COMDAT

; 1061 : 		virtual void DeleteTime(Interval iv, DWORD flags) {}

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteTime@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::DeleteTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
range$ = 16
flags$ = 24
?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z PROC	; Animatable::EditTimeRange, COMDAT

; 1049 : 		virtual void EditTimeRange(Interval range, DWORD flags) {};

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTimeRange@Animatable@@UEAAXVInterval@@K@Z ENDP	; Animatable::EditTimeRange
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
sel$ = 16
range$ = 24
flags$ = 32
?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z PROC ; Animatable::GetKeySelState, COMDAT

; 931  : 		virtual int GetKeySelState(BitArray& sel, Interval range, DWORD flags) { return 0; }

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeySelState@Animatable@@UEAAHAEAVBitArray@@VInterval@@K@Z ENDP ; Animatable::GetKeySelState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z
_TEXT	SEGMENT
this$ = 8
times$ = 16
range$ = 24
flags$ = 32
?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z PROC ; Animatable::GetKeyTimes, COMDAT

; 913  : 		virtual int GetKeyTimes(Tab<TimeValue>& times, Interval range, DWORD flags) { return 0; }		

	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeyTimes@Animatable@@UEAAHAEAV?$Tab@H@@VInterval@@K@Z ENDP ; Animatable::GetKeyTimes
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?IsKeyAtTime@Animatable@@UEAAHHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?IsKeyAtTime@Animatable@@UEAAHHK@Z PROC			; Animatable::IsKeyAtTime, COMDAT

; 888  : 		virtual BOOL IsKeyAtTime(TimeValue t, DWORD flags) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsKeyAtTime@Animatable@@UEAAHHK@Z ENDP			; Animatable::IsKeyAtTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteKeyAtTime@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?DeleteKeyAtTime@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteKeyAtTime, COMDAT

; 878  : 		virtual void DeleteKeyAtTime(TimeValue t) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteKeyAtTime@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteKeyAtTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CopyKeysFromTime@Animatable@@UEAAXHHK@Z
_TEXT	SEGMENT
this$ = 8
src$ = 16
dst$ = 24
flags$ = 32
?CopyKeysFromTime@Animatable@@UEAAXHHK@Z PROC		; Animatable::CopyKeysFromTime, COMDAT

; 873  : 		virtual void CopyKeysFromTime(TimeValue src, TimeValue dst, DWORD flags) {} 

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?CopyKeysFromTime@Animatable@@UEAAXHHK@Z ENDP		; Animatable::CopyKeysFromTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
nt$ = 32
?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z PROC		; Animatable::GetNextKeyTime, COMDAT

; 862  : 		virtual BOOL GetNextKeyTime(TimeValue t, DWORD flags, TimeValue &nt) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetNextKeyTime@Animatable@@UEAAHHKAEAH@Z ENDP		; Animatable::GetNextKeyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyIndex@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?GetKeyIndex@Animatable@@UEAAHH@Z PROC			; Animatable::GetKeyIndex, COMDAT

; 841  : 		virtual int GetKeyIndex(TimeValue t) { return -1; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?GetKeyIndex@Animatable@@UEAAHH@Z ENDP			; Animatable::GetKeyIndex
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetKeyTime@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?GetKeyTime@Animatable@@UEAAHH@Z PROC			; Animatable::GetKeyTime, COMDAT

; 835  : 		virtual TimeValue GetKeyTime(int index) { return 0; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetKeyTime@Animatable@@UEAAHH@Z ENDP			; Animatable::GetKeyTime
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumKeys@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumKeys@Animatable@@UEAAHXZ PROC			; Animatable::NumKeys, COMDAT

; 830  : 		virtual int NumKeys() { return NOT_KEYFRAMEABLE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, -1
	ret	0
?NumKeys@Animatable@@UEAAHXZ ENDP			; Animatable::NumKeys
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EditTrack@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?EditTrack@Animatable@@UEAAXXZ PROC			; Animatable::EditTrack, COMDAT

; 821  : 		virtual void EditTrack() { assert(0); } 

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditTrack@Animatable@@UEAAXXZ ENDP			; Animatable::EditTrack
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RenderEnd@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
?RenderEnd@Animatable@@UEAAHH@Z PROC			; Animatable::RenderEnd, COMDAT

; 817  : 		virtual int RenderEnd(TimeValue t) { return 0; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?RenderEnd@Animatable@@UEAAHH@Z ENDP			; Animatable::RenderEnd
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?RenderBegin@Animatable@@UEAAHHK@Z
_TEXT	SEGMENT
this$ = 8
t$ = 16
flags$ = 24
?RenderBegin@Animatable@@UEAAHHK@Z PROC			; Animatable::RenderBegin, COMDAT

; 810  : 		virtual int RenderBegin(TimeValue t, ULONG flags=0) { return 0; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?RenderBegin@Animatable@@UEAAHHK@Z ENDP			; Animatable::RenderBegin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?ChildAnim@Animatable@@UEAAPEAV1@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?ChildAnim@Animatable@@UEAAPEAV1@H@Z PROC		; Animatable::ChildAnim, COMDAT

; 757  : 		virtual Animatable* ChildAnim(int i) { return NULL; } 

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?ChildAnim@Animatable@@UEAAPEAV1@H@Z ENDP		; Animatable::ChildAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?NumChildren@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumChildren@Animatable@@UEAAHXZ PROC			; Animatable::NumChildren, COMDAT

; 754  : 		virtual	int NumChildren() { return 0; }   

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumChildren@Animatable@@UEAAHXZ ENDP			; Animatable::NumChildren
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanMakeUnique@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?CanMakeUnique@Animatable@@UEAAHXZ PROC			; Animatable::CanMakeUnique, COMDAT

; 749  : 		virtual BOOL CanMakeUnique() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanMakeUnique@Animatable@@UEAAHXZ ENDP			; Animatable::CanMakeUnique
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanCopyAnim@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?CanCopyAnim@Animatable@@UEAAHXZ PROC			; Animatable::CanCopyAnim, COMDAT

; 739  : 		virtual BOOL CanCopyAnim() { return TRUE; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanCopyAnim@Animatable@@UEAAHXZ ENDP			; Animatable::CanCopyAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?GetSubAnimCurveColor@Animatable@@UEAAKH@Z
_TEXT	SEGMENT
this$ = 8
subNum$ = 16
?GetSubAnimCurveColor@Animatable@@UEAAKH@Z PROC		; Animatable::GetSubAnimCurveColor, COMDAT

; 713  : 		virtual DWORD GetSubAnimCurveColor(int subNum) { return PAINTCURVE_GENCOLOR; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 16
	ret	0
?GetSubAnimCurveColor@Animatable@@UEAAKH@Z ENDP		; Animatable::GetSubAnimCurveColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?DeleteSubAnim@Animatable@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?DeleteSubAnim@Animatable@@UEAAXH@Z PROC		; Animatable::DeleteSubAnim, COMDAT

; 698  : 		virtual void DeleteSubAnim(int i) {}

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?DeleteSubAnim@Animatable@@UEAAXH@Z ENDP		; Animatable::DeleteSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanDeleteSubAnim@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?CanDeleteSubAnim@Animatable@@UEAAHH@Z PROC		; Animatable::CanDeleteSubAnim, COMDAT

; 692  : 		virtual BOOL CanDeleteSubAnim(int i) { return FALSE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanDeleteSubAnim@Animatable@@UEAAHH@Z ENDP		; Animatable::CanDeleteSubAnim
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?CanAssignController@Animatable@@UEAAHH@Z
_TEXT	SEGMENT
this$ = 8
subAnim$ = 16
?CanAssignController@Animatable@@UEAAHH@Z PROC		; Animatable::CanAssignController, COMDAT

; 674  : 		virtual BOOL CanAssignController(int subAnim) { return TRUE; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?CanAssignController@Animatable@@UEAAHH@Z ENDP		; Animatable::CanAssignController
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?AssignController@Animatable@@UEAAHPEAV1@H@Z
_TEXT	SEGMENT
this$ = 8
control$ = 16
subAnim$ = 24
?AssignController@Animatable@@UEAAHPEAV1@H@Z PROC	; Animatable::AssignController, COMDAT

; 664  : 		virtual BOOL AssignController(Animatable *control,int subAnim) { return FALSE; }

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?AssignController@Animatable@@UEAAHPEAV1@H@Z ENDP	; Animatable::AssignController
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?InvisibleProperty@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?InvisibleProperty@Animatable@@UEAAHXZ PROC		; Animatable::InvisibleProperty, COMDAT

; 653  : 		virtual BOOL InvisibleProperty() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?InvisibleProperty@Animatable@@UEAAHXZ ENDP		; Animatable::InvisibleProperty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassPropertyLevel@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?BypassPropertyLevel@Animatable@@UEAAHXZ PROC		; Animatable::BypassPropertyLevel, COMDAT

; 645  : 		virtual BOOL BypassPropertyLevel() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BypassPropertyLevel@Animatable@@UEAAHXZ ENDP		; Animatable::BypassPropertyLevel
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassTrackBar@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?BypassTrackBar@Animatable@@UEAAHXZ PROC		; Animatable::BypassTrackBar, COMDAT

; 636  : 		virtual BOOL BypassTrackBar() { return BypassTreeView(); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR [rax+128]
	add	rsp, 40					; 00000028H
	ret	0
?BypassTrackBar@Animatable@@UEAAHXZ ENDP		; Animatable::BypassTrackBar
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BypassTreeView@Animatable@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?BypassTreeView@Animatable@@UEAAHXZ PROC		; Animatable::BypassTreeView, COMDAT

; 626  : 		virtual BOOL BypassTreeView() { return FALSE; } 

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BypassTreeView@Animatable@@UEAAHXZ ENDP		; Animatable::BypassTreeView
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
_TEXT	SEGMENT
this$ = 8
ip$ = 16
flags$ = 24
next$ = 32
?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z PROC ; Animatable::EndEditParams, COMDAT

; 414  : 		virtual void EndEditParams(IObjParam *ip, ULONG flags, Animatable *next = NULL) {} 

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EndEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ENDP ; Animatable::EndEditParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z
_TEXT	SEGMENT
this$ = 8
ip$ = 16
flags$ = 24
prev$ = 32
?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z PROC ; Animatable::BeginEditParams, COMDAT

; 395  : 		virtual void BeginEditParams(IObjParam *ip, ULONG flags, Animatable *prev = NULL) {} 

	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?BeginEditParams@Animatable@@UEAAXPEAVIObjParam@@KPEAV1@@Z ENDP ; Animatable::BeginEditParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\animatable.h
;	COMDAT ?FreeCaches@Animatable@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?FreeCaches@Animatable@@UEAAXXZ PROC			; Animatable::FreeCaches, COMDAT

; 353  : 		virtual void FreeCaches() {}

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?FreeCaches@Animatable@@UEAAXXZ ENDP			; Animatable::FreeCaches
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ??_4Interval@@QEAAAEAV0@V0@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
i$ = 72
??_4Interval@@QEAAAEAV0@V0@@Z PROC			; Interval::operator&=, COMDAT

; 147  : 		Interval& operator&=(const Interval i) { return (*this = (*this&i)); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	r8, QWORD PTR i$[rsp]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??IInterval@@QEBA?AV0@V0@@Z
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??_4Interval@@QEAAAEAV0@V0@@Z ENDP			; Interval::operator&=
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ?SetInfinite@Interval@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetInfinite@Interval@@QEAAXXZ PROC			; Interval::SetInfinite, COMDAT

; 122  : 		void SetInfinite() { start = TIME_NegInfinity; end = TIME_PosInfinity; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], 2147483647		; 7fffffffH
	ret	0
?SetInfinite@Interval@@QEAAXXZ ENDP			; Interval::SetInfinite
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ?SetEmpty@Interval@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?SetEmpty@Interval@@QEAAXXZ PROC			; Interval::SetEmpty, COMDAT

; 118  : 		void SetEmpty() { start = TIME_NegInfinity; end = TIME_NegInfinity; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -2147483648		; ffffffff80000000H
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], -2147483648		; ffffffff80000000H
	ret	0
?SetEmpty@Interval@@QEAAXXZ ENDP			; Interval::SetEmpty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\interval.h
;	COMDAT ??0Interval@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0Interval@@QEAA@XZ PROC				; Interval::Interval, COMDAT

; 58   : 		Interval() { SetEmpty(); } 

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	?SetEmpty@Interval@@QEAAXXZ		; Interval::SetEmpty
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0Interval@@QEAA@XZ ENDP				; Interval::Interval
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ?Intens@@YAMAEBVAColor@@@Z
_TEXT	SEGMENT
c$ = 8
?Intens@@YAMAEBVAColor@@@Z PROC				; Intens, COMDAT

; 335  : static inline float Intens(const AColor& c) {   return (c.r+c.g+c.b)/3.0f; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rsp]
	addss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR __real@40400000
	ret	0
?Intens@@YAMAEBVAColor@@@Z ENDP				; Intens
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??D@YA?AVAColor@@MAEBV0@@Z
_TEXT	SEGMENT
tv76 = 48
__$ReturnUdt$ = 80
f$ = 88
a$ = 96
??D@YA?AVAColor@@MAEBV0@@Z PROC				; operator*, COMDAT

; 308  : inline AColor operator*(float f, const AColor& a) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 309  : 	return(AColor(a.r*f, a.g*f, a.b*f, a.a*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	mulss	xmm2, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm3, DWORD PTR [rax]
	mulss	xmm3, DWORD PTR f$[rsp]
	movss	DWORD PTR tv76[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv76[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 310  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??D@YA?AVAColor@@MAEBV0@@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??HAColor@@QEBA?AV0@AEBV0@@Z
_TEXT	SEGMENT
tv80 = 48
this$ = 80
__$ReturnUdt$ = 88
c$ = 96
??HAColor@@QEBA?AV0@AEBV0@@Z PROC			; AColor::operator+, COMDAT

; 290  : inline AColor AColor::operator+(const AColor& c) const {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 291  : 	return(AColor(r+c.r,g+c.g,b+c.b,a+c.a));

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm1, DWORD PTR [rax+8]
	addss	xmm1, DWORD PTR [rcx+8]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm2, DWORD PTR [rax+4]
	addss	xmm2, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm3, DWORD PTR [rax]
	addss	xmm3, DWORD PTR [rcx]
	movss	DWORD PTR tv80[rsp], xmm3
	movss	DWORD PTR [rsp+32], xmm0
	movaps	xmm3, xmm1
	movss	xmm0, DWORD PTR tv80[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0AColor@@QEAA@MMMM@Z			; AColor::AColor
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 292  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??HAColor@@QEBA?AV0@AEBV0@@Z ENDP			; AColor::operator+
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@AEBVColor@@M@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
alph$ = 24
??0AColor@@QEAA@AEBVColor@@M@Z PROC			; AColor::AColor, COMDAT

; 57   : 	AColor(const Color& c, float alph=1.0f) { r = c.r; g = c.g; b = c.b; a = alph; } 

	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR alph$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@AEBVColor@@M@Z ENDP			; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
c$ = 16
??0AColor@@QEAA@AEBV0@@Z PROC				; AColor::AColor, COMDAT

; 54   : 	AColor(const AColor& c) { r = c.r; g = c.g; b = c.b; a = c.a; } 

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@AEBV0@@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@HHHH@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
A$ = 40
??0AColor@@QEAA@HHHH@Z PROC				; AColor::AColor, COMDAT

; 51   : 	AColor(int R, int G, int B, int A=0) { 

	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx

; 52   : 		r = (float)R; g = (float)G; b = (float)B; a = (float)A; }

	cvtsi2ss xmm0, DWORD PTR R$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0
	cvtsi2ss xmm0, DWORD PTR G$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	cvtsi2ss xmm0, DWORD PTR B$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	cvtsi2ss xmm0, DWORD PTR A$[rsp]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@HHHH@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@MMMM@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
A$ = 40
??0AColor@@QEAA@MMMM@Z PROC				; AColor::AColor, COMDAT

; 44   : 	AColor(float R, float G, float B, float A=1.0f)  { r = R; g = G; b = B; a = A; }

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR R$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR G$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR B$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR A$[rsp]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@MMMM@Z ENDP				; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\acolor.h
;	COMDAT ??0AColor@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0AColor@@QEAA@XZ PROC					; AColor::AColor, COMDAT

; 41   : 	AColor()  {}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0AColor@@QEAA@XZ ENDP					; AColor::AColor
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ?Intens@@YAMAEBVColor@@@Z
_TEXT	SEGMENT
c$ = 8
?Intens@@YAMAEBVColor@@@Z PROC				; Intens, COMDAT

; 580  : static inline float Intens(const Color& c) { return (c.r+c.g+c.b)/3.0f; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR c$[rsp]
	mov	rcx, QWORD PTR c$[rsp]
	movss	xmm0, DWORD PTR [rax]
	addss	xmm0, DWORD PTR [rcx+4]
	mov	rax, QWORD PTR c$[rsp]
	addss	xmm0, DWORD PTR [rax+8]
	divss	xmm0, DWORD PTR __real@40400000
	ret	0
?Intens@@YAMAEBVColor@@@Z ENDP				; Intens
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@MMM@Z
_TEXT	SEGMENT
this$ = 8
R$ = 16
G$ = 24
B$ = 32
??0Color@@QEAA@MMM@Z PROC				; Color::Color, COMDAT

; 93   : 	Color(float R, float G, float B)  { r = R; g = G; b = B;  }

	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR R$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR G$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR B$[rsp]
	movss	DWORD PTR [rax+8], xmm0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@MMM@Z ENDP				; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\color.h
;	COMDAT ??0Color@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Color@@QEAA@XZ PROC					; Color::Color, COMDAT

; 83   : 	Color()  {}

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Color@@QEAA@XZ ENDP					; Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?BitMask@BitArray@@AEBA_KH@Z
_TEXT	SEGMENT
tv66 = 0
tv69 = 8
this$ = 32
i$ = 40
?BitMask@BitArray@@AEBA_KH@Z PROC			; BitArray::BitMask, COMDAT

; 516  : 	{ return (i < kMAX_LOCALBITS) ? (DWORD_PTR(1) << i) : DWORD_PTR(0); }

$LN5:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	cmp	DWORD PTR i$[rsp], 64			; 00000040H
	jge	SHORT $LN3@BitMask
	mov	eax, DWORD PTR i$[rsp]
	mov	ecx, 1
	mov	QWORD PTR tv69[rsp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv69[rsp]
	shl	rax, cl
	mov	QWORD PTR tv66[rsp], rax
	jmp	SHORT $LN4@BitMask
$LN3@BitMask:
	mov	QWORD PTR tv66[rsp], 0
$LN4@BitMask:
	mov	rax, QWORD PTR tv66[rsp]
	add	rsp, 24
	ret	0
?BitMask@BitArray@@AEBA_KH@Z ENDP			; BitArray::BitMask
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?UseLocalBits@BitArray@@AEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?UseLocalBits@BitArray@@AEBA_NXZ PROC			; BitArray::UseLocalBits, COMDAT

; 510  : 	inline bool UseLocalBits() const { return numBits <= kMAX_LOCALBITS; }

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	cmp	DWORD PTR [rax+8], 64			; 00000040H
	jg	SHORT $LN3@UseLocalBi
	mov	DWORD PTR tv66[rsp], 1
	jmp	SHORT $LN4@UseLocalBi
$LN3@UseLocalBi:
	mov	DWORD PTR tv66[rsp], 0
$LN4@UseLocalBi:
	movzx	eax, BYTE PTR tv66[rsp]
	add	rsp, 24
	ret	0
?UseLocalBits@BitArray@@AEBA_NXZ ENDP			; BitArray::UseLocalBits
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\bitarray.h
;	COMDAT ?Set@BitArray@@QEAAXH@Z
_TEXT	SEGMENT
tv93 = 32
tv79 = 40
this$ = 64
i$ = 72
?Set@BitArray@@QEAAXH@Z PROC				; BitArray::Set, COMDAT

; 290  : 	{

$LN6:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 291  : 		DbgAssert(i>-1 && i<numBits);
; 292  : 		if ((i > -1) && (i < numBits))

	cmp	DWORD PTR i$[rsp], -1
	jle	$LN2@Set
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rsp], eax
	jge	$LN2@Set

; 293  : 		{
; 294  : 			if (UseLocalBits())

	mov	rcx, QWORD PTR this$[rsp]
	call	?UseLocalBits@BitArray@@AEBA_NXZ	; BitArray::UseLocalBits
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Set

; 295  : 			{
; 296  : 				localBits |= BitMask(i);

	mov	edx, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?BitMask@BitArray@@AEBA_KH@Z		; BitArray::BitMask
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	or	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx], rax

; 297  : 			}
; 298  : 			else

	jmp	SHORT $LN4@Set
$LN3@Set:

; 299  : 			{
; 300  : 				bits[i>>NSHIFT] |= BitMask(i&BITS_PER_DWORD_PTR_MASK);

	mov	eax, DWORD PTR i$[rsp]
	sar	eax, 6
	cdqe
	mov	QWORD PTR tv79[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR tv93[rsp], rcx
	mov	edx, DWORD PTR i$[rsp]
	and	edx, 63					; 0000003fH
	mov	rcx, QWORD PTR this$[rsp]
	call	?BitMask@BitArray@@AEBA_KH@Z		; BitArray::BitMask
	mov	rdx, QWORD PTR tv93[rsp]
	mov	rcx, QWORD PTR tv79[rsp]
	mov	rcx, QWORD PTR [rdx+rcx*8]
	or	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR i$[rsp]
	sar	ecx, 6
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rsp]
	mov	rdx, QWORD PTR [rdx]
	mov	QWORD PTR [rdx+rcx*8], rax
$LN4@Set:
$LN2@Set:

; 301  : 			}
; 302  : 		}
; 303  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?Set@BitArray@@QEAAXH@Z ENDP				; BitArray::Set
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\matrix3.h
;	COMDAT ??0Matrix3@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Matrix3@@QEAA@XZ PROC				; Matrix3::Matrix3, COMDAT

; 172  :    Matrix3(){ flags = 0; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+48], 0
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Matrix3@@QEAA@XZ ENDP				; Matrix3::Matrix3
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Execute@ClassDesc@@UEAA_JH_K00@Z
_TEXT	SEGMENT
this$ = 8
cmd$ = 16
arg1$ = 24
arg2$ = 32
arg3$ = 40
?Execute@ClassDesc@@UEAA_JH_K00@Z PROC			; ClassDesc::Execute, COMDAT

; 1419 : 		virtual INT_PTR Execute(int cmd, ULONG_PTR arg1=0, ULONG_PTR arg2=0, ULONG_PTR arg3=0) { return 0; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Execute@ClassDesc@@UEAA_JH_K00@Z ENDP			; ClassDesc::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ PROC		; ClassDesc::SubClassID, COMDAT

; 1405 : 		virtual Class_ID		SubClassID() { return Class_ID(); }

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0Class_ID@@QEAA@XZ			; Class_ID::Class_ID
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
?SubClassID@ClassDesc@@UEAA?AVClass_ID@@XZ ENDP		; ClassDesc::SubClassID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?ClearInterfaces@ClassDesc@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?ClearInterfaces@ClassDesc@@UEAAXXZ PROC		; ClassDesc::ClearInterfaces, COMDAT

; 1396 : 		virtual void			ClearInterfaces() { interfaces.ZeroCount(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ ; Tab<FPInterface * __ptr64>::ZeroCount
	add	rsp, 40					; 00000028H
	ret	0
?ClearInterfaces@ClassDesc@@UEAAXXZ ENDP		; ClassDesc::ClearInterfaces
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z
_TEXT	SEGMENT
this$ = 48
i$ = 56
?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z PROC ; ClassDesc::GetInterfaceAt, COMDAT

; 1379 : 		virtual FPInterface*	GetInterfaceAt(int i) { return interfaces[i]; }

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ; Tab<FPInterface * __ptr64>::operator[]
	mov	rax, QWORD PTR [rax]
	add	rsp, 40					; 00000028H
	ret	0
?GetInterfaceAt@ClassDesc@@UEAAPEAVFPInterface@@H@Z ENDP ; ClassDesc::GetInterfaceAt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NumInterfaces@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 48
?NumInterfaces@ClassDesc@@UEAAHXZ PROC			; ClassDesc::NumInterfaces, COMDAT

; 1376 : 		virtual int				NumInterfaces() { return interfaces.Count(); }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ	; Tab<FPInterface * __ptr64>::Count
	add	rsp, 40					; 00000028H
	ret	0
?NumInterfaces@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::NumInterfaces
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z
_TEXT	SEGMENT
this$ = 8
bkColor$ = 16
hDC$ = 24
rect$ = 32
?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z PROC ; ClassDesc::DrawRepresentation, COMDAT

; 1370 : 		virtual bool DrawRepresentation(COLORREF bkColor, HDC hDC, Rect& rect) { return FALSE; }

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?DrawRepresentation@ClassDesc@@UEAA_NKPEAUHDC__@@AEAVBox2@@@Z ENDP ; ClassDesc::DrawRepresentation
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
pbd$ = 16
?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z PROC ; ClassDesc::GetUserDlgProc, COMDAT

; 1358 : 		virtual ParamMap2UserDlgProc* GetUserDlgProc(ParamBlockDesc2* pbd) { return NULL; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetUserDlgProc@ClassDesc@@UEAAPEAVParamMap2UserDlgProc@@PEAVParamBlockDesc2@@@Z ENDP ; ClassDesc::GetUserDlgProc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z
_TEXT	SEGMENT
this$ = 8
pbd$ = 16
?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z PROC ; ClassDesc::GetParamMap, COMDAT

; 1341 : 		virtual IParamMap2*		GetParamMap(ParamBlockDesc2* pbd) { return NULL; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetParamMap@ClassDesc@@UEAAPEAVIParamMap2@@PEAVParamBlockDesc2@@@Z ENDP ; ClassDesc::GetParamMap
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ
_TEXT	SEGMENT
this$ = 8
?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ PROC ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure, COMDAT

; 1263 : 		virtual bool			UseOnlyInternalNameForMAXScriptExposure() { return false; }

	mov	QWORD PTR [rsp+8], rcx
	xor	al, al
	ret	0
?UseOnlyInternalNameForMAXScriptExposure@ClassDesc@@UEAA_NXZ ENDP ; ClassDesc::UseOnlyInternalNameForMAXScriptExposure
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?InitialRollupPageState@ClassDesc@@UEAAKXZ
_TEXT	SEGMENT
this$ = 8
?InitialRollupPageState@ClassDesc@@UEAAKXZ PROC		; ClassDesc::InitialRollupPageState, COMDAT

; 1252 : 		virtual DWORD			InitialRollupPageState() { return 0x7fffffff; }

	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 2147483647				; 7fffffffH
	ret	0
?InitialRollupPageState@ClassDesc@@UEAAKXZ ENDP		; ClassDesc::InitialRollupPageState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z
_TEXT	SEGMENT
this$ = 8
iload$ = 16
?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z PROC	; ClassDesc::Load, COMDAT

; 1237 : 		virtual IOResult 		Load(ILoad *iload) { return IO_OK; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Load@ClassDesc@@UEAA?AW4IOResult@@PEAVILoad@@@Z ENDP	; ClassDesc::Load
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z
_TEXT	SEGMENT
this$ = 8
isave$ = 16
?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z PROC	; ClassDesc::Save, COMDAT

; 1230 : 		virtual IOResult 		Save(ISave *isave) { return IO_OK; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?Save@ClassDesc@@UEAA?AW4IOResult@@PEAVISave@@@Z ENDP	; ClassDesc::Save
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NeedsToSave@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NeedsToSave@ClassDesc@@UEAAHXZ PROC			; ClassDesc::NeedsToSave, COMDAT

; 1224 : 		virtual BOOL			NeedsToSave() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NeedsToSave@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::NeedsToSave
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
pNode$ = 16
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z PROC ; ClassDesc::CreateManipulator, COMDAT

; 1215 : 		virtual Manipulator* CreateManipulator(INode* pNode) {return NULL;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVINode@@@Z ENDP ; ClassDesc::CreateManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
hTarget$ = 16
pNode$ = 24
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z PROC ; ClassDesc::CreateManipulator, COMDAT

; 1207 : 			INode* pNode) { return NULL; }

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CreateManipulator@ClassDesc@@UEAAPEAVManipulator@@PEAVReferenceTarget@@PEAVINode@@@Z ENDP ; ClassDesc::CreateManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z
_TEXT	SEGMENT
this$ = 8
pNode$ = 16
?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z PROC	; ClassDesc::CanManipulateNode, COMDAT

; 1189 : 		virtual BOOL CanManipulateNode(INode* pNode) { return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanManipulateNode@ClassDesc@@UEAAHPEAVINode@@@Z ENDP	; ClassDesc::CanManipulateNode
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z
_TEXT	SEGMENT
this$ = 8
hTarget$ = 16
?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z PROC ; ClassDesc::CanManipulate, COMDAT

; 1182 : 		virtual BOOL CanManipulate(ReferenceTarget* hTarget) { return FALSE; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?CanManipulate@ClassDesc@@UEAAHPEAVReferenceTarget@@@Z ENDP ; ClassDesc::CanManipulate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?IsManipulator@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?IsManipulator@ClassDesc@@UEAAHXZ PROC			; ClassDesc::IsManipulator, COMDAT

; 1173 : 		virtual BOOL IsManipulator() { return FALSE; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?IsManipulator@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::IsManipulator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z PROC ; ClassDesc::GetActionTable, COMDAT

; 1166 : 		virtual ActionTable* GetActionTable(int i) { return NULL; }

	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?GetActionTable@ClassDesc@@UEAAPEAVActionTable@@H@Z ENDP ; ClassDesc::GetActionTable
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?NumActionTables@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?NumActionTables@ClassDesc@@UEAAHXZ PROC		; ClassDesc::NumActionTables, COMDAT

; 1159 : 		virtual int NumActionTables() { return 0; }

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?NumActionTables@ClassDesc@@UEAAHXZ ENDP		; ClassDesc::NumActionTables
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z
_TEXT	SEGMENT
this$ = 8
hParent$ = 16
?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z PROC	; ClassDesc::EditClassParams, COMDAT

; 1134 : 		virtual void			EditClassParams(HWND hParent) {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?EditClassParams@ClassDesc@@UEAAXPEAUHWND__@@@Z ENDP	; ClassDesc::EditClassParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?HasClassParams@ClassDesc@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?HasClassParams@ClassDesc@@UEAAHXZ PROC			; ClassDesc::HasClassParams, COMDAT

; 1127 : 		virtual BOOL			HasClassParams() {return FALSE;}

	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?HasClassParams@ClassDesc@@UEAAHXZ ENDP			; ClassDesc::HasClassParams
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::OkToCreate, COMDAT

; 1051 : 		virtual BOOL			OkToCreate(Interface *i) { return TRUE; }	// return FALSE to disable create button

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	eax, 1
	ret	0
?OkToCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::OkToCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::EndCreate, COMDAT

; 1018 : 		virtual int 			EndCreate(Interface *i) {return 0;};

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?EndCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::EndCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\plugapi.h
;	COMDAT ?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z
_TEXT	SEGMENT
this$ = 8
i$ = 16
?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z PROC	; ClassDesc::BeginCreate, COMDAT

; 1008 : 		virtual	int 			BeginCreate(Interface *i) {return 0;}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	xor	eax, eax
	ret	0
?BeginCreate@ClassDesc@@UEAAHPEAVInterface@@@Z ENDP	; ClassDesc::BeginCreate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
i$ = 72
??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z PROC ; Tab<FPInterface * __ptr64>::operator[], COMDAT

; 357  : 		T& operator[](const INT_PTR i) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 358  : 			DbgAssert(th);
; 359  : 			DbgAssert(i >= 0);
; 360  : 			DbgAssert(th && i < th->count);
; 361  : 			if (!th || i < 0 || (i >= th->count))

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@operator
	cmp	QWORD PTR i$[rsp], 0
	jl	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax]
	cmp	QWORD PTR i$[rsp], rax
	jl	SHORT $LN2@operator
$LN3@operator:

; 362  : 			{
; 363  : 				throw MaxSDK::Util::TabOutOfRangeException(_M("Invalid index passed into a Max SDK Tab::operator[]"));

	lea	rdx, OFFSET FLAT:??_C@_1GI@NLEIFPEJ@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAt?$AAo?$AA?5?$AAa?$AA?5?$AAM?$AAa?$AAx?$AA?5@
	lea	rcx, QWORD PTR $T1[rsp]
	call	??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
	lea	rdx, OFFSET FLAT:_TI4?AVTabOutOfRangeException@Util@MaxSDK@@
	lea	rcx, QWORD PTR $T1[rsp]
	call	_CxxThrowException
$LN2@operator:

; 364  : 			}
; 365  : 			
; 366  : 			return (th->data[i]); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR i$[rsp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
$LN4@operator:

; 367  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$Tab@PEAVFPInterface@@@@QEBAAEAPEAVFPInterface@@_J@Z ENDP ; Tab<FPInterface * __ptr64>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ PROC	; Tab<FPInterface * __ptr64>::ZeroCount, COMDAT

; 232  : 		{ 

	mov	QWORD PTR [rsp+8], rcx

; 233  : 			if (th) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@ZeroCount

; 234  : 				th->count = 0; 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rax], 0
$LN2@ZeroCount:

; 235  : 			}
; 236  : 		}

	ret	0
?ZeroCount@?$Tab@PEAVFPInterface@@@@QEAAXXZ ENDP	; Tab<FPInterface * __ptr64>::ZeroCount
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ
_TEXT	SEGMENT
this$ = 8
?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ PROC		; Tab<FPInterface * __ptr64>::Count, COMDAT

; 220  : 		{ 

	mov	QWORD PTR [rsp+8], rcx

; 221  : 			if (th) {

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Count

; 222  : 				return (th->count); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	jmp	SHORT $LN1@Count
$LN2@Count:

; 223  : 			}
; 224  : 			return 0; 

	xor	eax, eax
$LN1@Count:

; 225  : 		}  

	ret	0
?Count@?$Tab@PEAVFPInterface@@@@QEBAHXZ ENDP		; Tab<FPInterface * __ptr64>::Count
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
text$di	SEGMENT
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ PROC	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId'', COMDAT

; 32   : 		static AssetId kInvalidId;

	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A
	call	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ; MaxSDK::AssetManagement::AssetId::AssetId
	add	rsp, 40					; 00000028H
	ret	0
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ENDP	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
_TEXT	SEGMENT
this$ = 24
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ PROC		; MaxSDK::AssetManagement::AssetId::AssetId, COMDAT

; 29   : 			AssetId() { *static_cast<GUID*>(this) = CLSID_NULL; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	lea	rax, OFFSET FLAT:GUID_NULL
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	pop	rsi
	ret	0
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ENDP		; MaxSDK::AssetManagement::AssetId::AssetId
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GBaseInterfaceServer@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GBaseInterfaceServer@@UEAAPEAXI@Z PROC		; BaseInterfaceServer::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1BaseInterfaceServer@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GBaseInterfaceServer@@UEAAPEAXI@Z ENDP		; BaseInterfaceServer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0BaseInterfaceServer@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0BaseInterfaceServer@@QEAA@XZ PROC			; BaseInterfaceServer::BaseInterfaceServer, COMDAT
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0InterfaceServer@@QEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7BaseInterfaceServer@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$Tab@PEAVBaseInterface@@@@QEAA@XZ	; Tab<BaseInterface * __ptr64>::Tab<BaseInterface * __ptr64>
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0BaseInterfaceServer@@QEAA@XZ ENDP			; BaseInterfaceServer::BaseInterfaceServer
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA PROC	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA ENDP	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA PROC	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ	; Tab<BaseInterface * __ptr64>::~Tab<BaseInterface * __ptr64>
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA ENDP	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA PROC	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0BaseInterfaceServer@@QEAA@XZ@4HA ENDP	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA PROC	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ	; Tab<BaseInterface * __ptr64>::~Tab<BaseInterface * __ptr64>
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0BaseInterfaceServer@@QEAA@XZ@4HA ENDP	; `BaseInterfaceServer::BaseInterfaceServer'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ PROC		; Tab<BaseInterface * __ptr64>::~Tab<BaseInterface * __ptr64>, COMDAT

; 204  : 		~Tab() {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 205  : 			zfree((void**)&th); 

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_?zfree@@YAXPEAPEAX@Z
	npad	1

; 206  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??1?$Tab@PEAVBaseInterface@@@@QEAA@XZ ENDP		; Tab<BaseInterface * __ptr64>::~Tab<BaseInterface * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??0?$Tab@PEAVBaseInterface@@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$Tab@PEAVBaseInterface@@@@QEAA@XZ PROC		; Tab<BaseInterface * __ptr64>::Tab<BaseInterface * __ptr64>, COMDAT

; 187  : 		{

	mov	QWORD PTR [rsp+8], rcx

; 186  : 		Tab() : th(NULL)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 188  : 			ADSK_MAXSDK_IS_PLAIN_OLD_DATA_TYPE(T);
; 189  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$Tab@PEAVBaseInterface@@@@QEAA@XZ ENDP		; Tab<BaseInterface * __ptr64>::Tab<BaseInterface * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GInterfaceServer@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GInterfaceServer@@UEAAPEAXI@Z PROC			; InterfaceServer::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1InterfaceServer@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 8
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GInterfaceServer@@UEAAPEAXI@Z ENDP			; InterfaceServer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0InterfaceServer@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0InterfaceServer@@QEAA@XZ PROC			; InterfaceServer::InterfaceServer, COMDAT
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7InterfaceServer@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0InterfaceServer@@QEAA@XZ ENDP			; InterfaceServer::InterfaceServer
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\point3.h
;	COMDAT ??D@YA?AVPoint3@@AEBV0@M@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
a$ = 72
f$ = 80
??D@YA?AVPoint3@@AEBV0@M@Z PROC				; operator*, COMDAT

; 326  : __forceinline Point3 operator*(const Point3& a, float f) {

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 327  :    return(Point3(a.x*f, a.y*f, a.z*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, DWORD PTR f$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 328  :    }

	add	rsp, 56					; 00000038H
	ret	0
??D@YA?AVPoint3@@AEBV0@M@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\point3.h
;	COMDAT ??D@YA?AVPoint3@@MAEBV0@@Z
_TEXT	SEGMENT
tv73 = 32
__$ReturnUdt$ = 64
f$ = 72
a$ = 80
??D@YA?AVPoint3@@MAEBV0@@Z PROC				; operator*, COMDAT

; 320  : __forceinline Point3 operator*(float f, const Point3& a) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 321  :    return(Point3(a.x*f, a.y*f, a.z*f));

	mov	rax, QWORD PTR a$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm1, DWORD PTR [rax+4]
	mulss	xmm1, DWORD PTR f$[rsp]
	mov	rax, QWORD PTR a$[rsp]
	movss	xmm2, DWORD PTR [rax]
	mulss	xmm2, DWORD PTR f$[rsp]
	movss	DWORD PTR tv73[rsp], xmm2
	movaps	xmm3, xmm0
	movaps	xmm2, xmm1
	movss	xmm0, DWORD PTR tv73[rsp]
	movaps	xmm1, xmm0
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 322  :    }

	add	rsp, 56					; 00000038H
	ret	0
??D@YA?AVPoint3@@MAEBV0@@Z ENDP				; operator*
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr_user$1 = 48
_Ptr_container$2 = 56
_Ptr_ptr$3 = 64
_User_size$ = 72
_Ptr$ = 96
_Count$ = 104
_Sz$ = 112
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN22:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	xor	edx, edx
	mov	rax, -1
	div	QWORD PTR _Sz$[rsp]
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
	test	rax, rax
	je	SHORT $LN10@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN11@Deallocate
$LN10@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 94					; 0000005eH
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN11@Deallocate
	int	3
	xor	eax, eax
$LN11@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 94					; 0000005eH
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

	mov	rax, QWORD PTR _Count$[rsp]
	imul	rax, QWORD PTR _Sz$[rsp]
	mov	QWORD PTR _User_size$[rsp], rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	QWORD PTR _User_size$[rsp], 4096	; 00001000H
	jb	$LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR _Ptr_user$1[rsp], rax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	rax, QWORD PTR _Ptr_user$1[rsp]
	and	rax, 31
	test	rax, rax
	je	SHORT $LN4@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
	test	rax, rax
	je	SHORT $LN12@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Deallocate
$LN12@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 100				; 00000064H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN13@Deallocate
	int	3
	xor	eax, eax
$LN13@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 100				; 00000064H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

	mov	rax, QWORD PTR _Ptr_user$1[rsp]
	sub	rax, 8
	mov	QWORD PTR _Ptr_ptr$3[rsp], rax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR _Ptr_ptr$3[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_container$2[rsp], rax

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_ptr$3[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	je	SHORT $LN5@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
	test	rax, rax
	je	SHORT $LN14@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN15@Deallocate
$LN14@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN15@Deallocate
	int	3
	xor	eax, eax
$LN15@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 110				; 0000006eH
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN5@Deallocate:

; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	mov	rax, QWORD PTR _Ptr_user$1[rsp]
	cmp	QWORD PTR _Ptr_container$2[rsp], rax
	jb	SHORT $LN6@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
	test	rax, rax
	je	SHORT $LN16@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN17@Deallocate
$LN16@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 114				; 00000072H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN17@Deallocate
	int	3
	xor	eax, eax
$LN17@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 114				; 00000072H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN6@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)

	mov	rax, QWORD PTR _Ptr_container$2[rsp]
	mov	rcx, QWORD PTR _Ptr_user$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, 16
	jae	SHORT $LN7@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
	test	rax, rax
	je	SHORT $LN18@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@Deallocate
$LN18@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 118				; 00000076H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN19@Deallocate
	int	3
	xor	eax, eax
$LN19@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 118				; 00000076H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN7@Deallocate:

; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	mov	rax, QWORD PTR _Ptr_container$2[rsp]
	mov	rcx, QWORD PTR _Ptr_user$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, 47					; 0000002fH
	jbe	SHORT $LN8@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
	test	rax, rax
	je	SHORT $LN20@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN21@Deallocate
$LN20@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 126				; 0000007eH
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN21@Deallocate
	int	3
	xor	eax, eax
$LN21@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 126				; 0000007eH
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN8@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr_container$2[rsp]
	mov	QWORD PTR _Ptr$[rsp], rax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX@Z				; operator delete

; 133  : 	}

	add	rsp, 88					; 00000058H
	ret	0
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Ptr$ = 48
_User_size$ = 56
_Ptr_container$1 = 64
_Block_size$2 = 72
_Count$ = 96
_Sz$ = 104
_Try_aligned_allocation$ = 112
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN14:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 49   : 	void *_Ptr = 0;

	mov	QWORD PTR _Ptr$[rsp], 0

; 50   : 
; 51   : 	if (_Count == 0)

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	jmp	$LN1@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

	xor	edx, edx
	mov	rax, -1
	div	QWORD PTR _Sz$[rsp]
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

	mov	rax, QWORD PTR _Count$[rsp]
	imul	rax, QWORD PTR _Sz$[rsp]
	mov	QWORD PTR _User_size$[rsp], rax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	movzx	eax, BYTE PTR _Try_aligned_allocation$[rsp]
	test	eax, eax
	je	$LN4@Allocate
	cmp	QWORD PTR _User_size$[rsp], 4096	; 00001000H
	jb	$LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	mov	rax, QWORD PTR _User_size$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$2[rsp], rax

; 66   : 		if (_Block_size <= _User_size)

	mov	rax, QWORD PTR _User_size$[rsp]
	cmp	QWORD PTR _Block_size$2[rsp], rax
	ja	SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	rcx, QWORD PTR _Block_size$2[rsp]
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Ptr_container$1[rsp], rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	cmp	QWORD PTR _Ptr_container$1[rsp], 0
	jne	SHORT $LN7@Allocate
	lea	rax, OFFSET FLAT:??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
	test	rax, rax
	je	SHORT $LN10@Allocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN11@Allocate
$LN10@Allocate:
	lea	rax, OFFSET FLAT:??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 70					; 00000046H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN11@Allocate
	int	3
	xor	eax, eax
$LN11@Allocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 70					; 00000046H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	mov	rax, QWORD PTR _Ptr_container$1[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$1[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

	jmp	$LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

	mov	rcx, QWORD PTR _User_size$[rsp]
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Ptr$[rsp], rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN8@Allocate
	lea	rax, OFFSET FLAT:??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
	test	rax, rax
	je	SHORT $LN12@Allocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Allocate
$LN12@Allocate:
	lea	rax, OFFSET FLAT:??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 84					; 00000054H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN13@Allocate
	int	3
	xor	eax, eax
$LN13@Allocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 84					; 00000054H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN8@Allocate:
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN1@Allocate:
$LN9@Allocate:

; 87   : 	}

	add	rsp, 88					; 00000058H
	ret	0
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 32
$T2 = 40
_Lock$3 = 48
__$ArrayPad$ = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 215  : 	{	// orphan all iterators

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 216  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 217  : 	if (_Myproxy != 0)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN5@Orphan_all

; 218  : 		{	// proxy allocated, drain it
; 219  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 220  : 
; 221  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 223  : 			(*_Pnext)->_Myproxy = 0;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 224  : 		_Myproxy->_Myfirstiter = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 225  : 		}

	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
$LN5@Orphan_all:

; 226  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 227  : 	}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Pnext$1 = 32
$T2 = 40
_Lock$3 = 48
__$ArrayPad$ = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$3[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Pnext$1 = 32
$T2 = 40
_Lock$3 = 48
__$ArrayPad$ = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$3[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT

; 94   : 		{	// destroy the container

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 95   : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
	npad	1

; 96   : 		}

	add	rsp, 56					; 00000038H
	ret	0
??1_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 80   : 		{	// construct childless container

	mov	QWORD PTR [rsp+8], rcx

; 79   : 		: _Myproxy(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 81   : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_proxy@std@@QEAA@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT

; 68   : 		{	// construct from pointers

	mov	QWORD PTR [rsp+8], rcx

; 67   : 		: _Mycont(0), _Myfirstiter(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 69   : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Container_proxy@std@@QEAA@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 344  : 		{	// assign an element

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 345  : 		_Left = _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	mov	WORD PTR [rax], cx

; 346  : 		}

	ret	0
?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
_TEXT	SEGMENT
tv69 = 32
_First1$ = 64
_First2$ = 72
_Count$ = 80
?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 332  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 333  : 		return (_Count == 0 ? _First1

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN3@move
	mov	rax, QWORD PTR _First1$[rsp]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	wmemmove
	mov	QWORD PTR tv69[rsp], rax
$LN4@move:
	mov	rax, QWORD PTR tv69[rsp]

; 334  : 			: (_Elem *)_CSTD wmemmove(_First1, _First2, _Count));
; 335  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
_TEXT	SEGMENT
tv69 = 32
_First1$ = 64
_First2$ = 72
_Count$ = 80
?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 309  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 310  : 		return (_Count == 0 ? _First1

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN3@copy
	mov	rax, QWORD PTR _First1$[rsp]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	wmemcpy
	mov	QWORD PTR tv69[rsp], rax
$LN4@copy:
	mov	rax, QWORD PTR tv69[rsp]

; 311  : 			: (_Elem *)_CSTD wmemcpy(_First1, _First2, _Count));
; 312  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SA_KPEB_W@Z
_TEXT	SEGMENT
tv68 = 32
_First$ = 64
?length@?$char_traits@_W@std@@SA_KPEB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 302  : 		{	// find length of null-terminated sequence

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 303  : 		return (*_First == 0 ? 0

	mov	rax, QWORD PTR _First$[rsp]
	movzx	eax, WORD PTR [rax]
	test	eax, eax
	jne	SHORT $LN3@length
	mov	QWORD PTR tv68[rsp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	rcx, QWORD PTR _First$[rsp]
	call	QWORD PTR __imp_wcslen
	mov	QWORD PTR tv68[rsp], rax
$LN4@length:
	mov	rax, QWORD PTR tv68[rsp]

; 304  : 			: _CSTD wcslen(_First));
; 305  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?length@?$char_traits@_W@std@@SA_KPEB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z PROC ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor', COMDAT
$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@scalar
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??3MaxHeapOperators@@SAXPEAX@Z
	jmp	SHORT $LN5@scalar
	jmp	SHORT $LN4@scalar
$LN3@scalar:
	mov	edx, 16
	mov	rcx, QWORD PTR this$[rsp]
	call	?__global_delete@@YAXPEAX_K@Z		; __global_delete
$LN5@scalar:
$LN4@scalar:
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GTabOutOfRangeException@Util@MaxSDK@@UEAAPEAXI@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z PROC ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7TabOutOfRangeException@Util@MaxSDK@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@AEBV012@@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ PROC	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ ENDP	; MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TabOutOfRangeException@Util@MaxSDK@@UEAA@XZ@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::~TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ
_TEXT	SEGMENT
tv75 = 0
this$ = 32
?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ PROC ; MaxSDK::Util::TabOutOfRangeException::What, COMDAT

; 99   : 			{

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 100  : 				return (mMessage) ? mMessage : _M("MaxSDK::Util::TabOutOfRangeException");

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@What
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv75[rsp], rax
	jmp	SHORT $LN4@What
$LN3@What:
	lea	rax, OFFSET FLAT:??_C@_1EK@FOLBONAG@?$AAM?$AAa?$AAx?$AAS?$AAD?$AAK?$AA?3?$AA?3?$AAU?$AAt?$AAi?$AAl?$AA?3?$AA?3?$AAT?$AAa?$AAb?$AAO?$AAu?$AAt?$AAO?$AAf?$AAR?$AAa?$AAn?$AAg?$AAe?$AAE?$AAx?$AAc?$AAe?$AAp@
	mov	QWORD PTR tv75[rsp], rax
$LN4@What:
	mov	rax, QWORD PTR tv75[rsp]

; 101  : 			}

	add	rsp, 24
	ret	0
?What@TabOutOfRangeException@Util@MaxSDK@@UEBAPEB_WXZ ENDP ; MaxSDK::Util::TabOutOfRangeException::What
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\tab.h
;	COMDAT ??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z PROC ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException, COMDAT

; 96   : 			{

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 95   : 				: MaxSDK::Util::OutOfRangeException(message)

	mov	rdx, QWORD PTR message$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0OutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z
	npad	1

; 96   : 			{

	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7TabOutOfRangeException@Util@MaxSDK@@6B@
	mov	QWORD PTR [rax], rcx

; 97   : 			}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z ENDP ; MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
message$ = 72
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA PROC ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1OutOfRangeException@Util@MaxSDK@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TabOutOfRangeException@Util@MaxSDK@@QEAA@PEB_W@Z@4HA ENDP ; `MaxSDK::Util::TabOutOfRangeException::TabOutOfRangeException'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Interface_ID@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
this$ = 8
iid$ = 16
??0Interface_ID@@QEAA@AEBV0@@Z PROC			; Interface_ID::Interface_ID, COMDAT

; 215  : 	Interface_ID(const Interface_ID& iid) { a = iid.a; b = iid.b;	}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR iid$[rsp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR iid$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Interface_ID@@QEAA@AEBV0@@Z ENDP			; Interface_ID::Interface_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??8Class_ID@@QEBA_NAEBV0@@Z
_TEXT	SEGMENT
tv70 = 0
this$ = 32
cid$ = 40
??8Class_ID@@QEBA_NAEBV0@@Z PROC			; Class_ID::operator==, COMDAT

; 170  : 	bool operator==(const Class_ID& cid) const { return ((a == cid.a) && (b == cid.b)); }

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR cid$[rsp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@operator
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR cid$[rsp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv70[rsp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv70[rsp], 0
$LN4@operator:
	movzx	eax, BYTE PTR tv70[rsp]
	add	rsp, 24
	ret	0
??8Class_ID@@QEBA_NAEBV0@@Z ENDP			; Class_ID::operator==
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@KK@Z
_TEXT	SEGMENT
this$ = 8
aa$ = 16
bb$ = 24
??0Class_ID@@QEAA@KK@Z PROC				; Class_ID::Class_ID, COMDAT

; 160  : 	Class_ID(ulong aa, ulong bb) { a = aa; b = bb; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR aa$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bb$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@KK@Z ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0Class_ID@@QEAA@XZ PROC				; Class_ID::Class_ID, COMDAT

; 145  : 	Class_ID() { a = b = 0xffffffff; }

	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax+4], -1			; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	mov	DWORD PTR [rax], -1			; ffffffffH
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@XZ ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 87   :     {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 88   :         (void)_Size;
; 89   :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 90   :     }

	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemmove
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemmove PROC						; COMDAT

; 244  :     {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	rax, QWORD PTR _N$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _S2$[rsp]
	mov	rcx, QWORD PTR _S1$[rsp]
	call	QWORD PTR __imp_memmove

; 248  :         #pragma warning(pop)
; 249  :     }

	add	rsp, 40					; 00000028H
	ret	0
wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 231  :     {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	rax, QWORD PTR _N$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _S2$[rsp]
	mov	rcx, QWORD PTR _S1$[rsp]
	call	memcpy

; 235  :         #pragma warning(pop)
; 236  :     }

	add	rsp, 40					; 00000028H
	ret	0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\bercontile.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 56					; 00000038H
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
