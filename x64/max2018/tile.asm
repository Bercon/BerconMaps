; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24231.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	WinbaseIsolationAwarePrivateT_UnPgpgk
PUBLIC	IsolationAwarePrivateT_SqbjaYRiRY
PUBLIC	IsolationAwarePrivateT_SAbnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
PUBLIC	WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
;	COMDAT IsolationAwarePrivateT_SqbjaYRiRY
_BSS	SEGMENT
IsolationAwarePrivateT_SqbjaYRiRY DD 01H DUP (?)
_BSS	ENDS
;	COMDAT IsolationAwarePrivateT_SAbnPgpgk
_BSS	SEGMENT
IsolationAwarePrivateT_SAbnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpeRNgRQnPgpgk DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ
_BSS	SEGMENT
WinbaseIsolationAwarePrivateT_SpYRNahcpNYYRQ DD 01H DUP (?)
_BSS	ENDS
;	COMDAT WinbaseIsolationAwarePrivateT_UnPgpgk
_DATA	SEGMENT
WinbaseIsolationAwarePrivateT_UnPgpgk DQ ffffffffffffffffH
_DATA	ENDS
CONST	SEGMENT
$SG186884 DB	'0', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, 00H, 00H
$SG186886 DB	'0', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ' ', 00H, '/', 00H, ' ', 00H, '0', 00H, '.', 00H, '5'
	DB	00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	00H, 00H
$SG186892 DB	'0', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ',', 00H, ' ', 00H, '.', 00H, '5', 00H, ' ', 00H, '/'
	DB	00H, ' ', 00H, '.', 00H, '7', 00H, '5', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '.'
	DB	00H, '5', 00H, 00H, 00H
$SG186888 DB	'.', 00H, '2', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '.', 00H, '5'
	DB	00H, ' ', 00H, '/', 00H, ' ', 00H, '-', 00H, '.', 00H, '5', 00H
	DB	',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '1', 00H, ' '
	DB	00H, '/', 00H, ' ', 00H, '-', 00H, '.', 00H, '5', 00H, ',', 00H
	DB	' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '1', 00H, ' ', 00H, '/'
	DB	00H, ' ', 00H, '-', 00H, '.', 00H, '5', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ',', 00H, ' ', 00H, '1', 00H, ' ', 00H, '/', 00H, ' '
	DB	00H, '-', 00H, '.', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	',', 00H, ' ', 00H, '1', 00H, 00H, 00H
$SG188020 DB	'/', 00H, 00H, 00H
$SG186890 DB	'.', 00H, '2', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	',', 00H, ' ', 00H, '.', 00H, '5', 00H, ' ', 00H, '/', 00H, ' '
	DB	00H, '-', 00H, '.', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	',', 00H, ' ', 00H, '1', 00H, ' ', 00H, '/', 00H, ' ', 00H, '-'
	DB	00H, '.', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H
	DB	' ', 00H, '1', 00H, ' ', 00H, '/', 00H, ' ', 00H, '-', 00H, '.'
	DB	00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ' ', 00H, '/', 00H, ' ', 00H, '-', 00H, '.', 00H, '5'
	DB	00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	00H, 00H
	ORG $+10
$SG186894 DB	'0', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '.'
	DB	00H, '5', 00H, ' ', 00H, '/', 00H, ' ', 00H, '1', 00H, '.', 00H
	DB	'2', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' '
	DB	00H, '1', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'.', 00H, '5', 00H, 00H, 00H
	ORG $+2
$SG188021 DB	',', 00H, 00H, 00H
	ORG $+4
$SG186896 DB	'0', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '1'
	DB	00H, ',', 00H, ' ', 00H, '.', 00H, '5', 00H, ' ', 00H, '/', 00H
	DB	' ', 00H, '1', 00H, '.', 00H, '7', 00H, '5', 00H, ',', 00H, ' '
	DB	00H, '1', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H, '.'
	DB	00H, '5', 00H, 00H, 00H
	ORG $+6
$SG186898 DB	'.', 00H, '2', 00H, '5', 00H, ',', 00H, ' ', 00H, '1', 00H
	DB	',', 00H, ' ', 00H, '.', 00H, '5', 00H, ' ', 00H, '/', 00H, ' '
	DB	00H, '0', 00H, ',', 00H, ' ', 00H, '1', 00H, ',', 00H, ' ', 00H
	DB	'1', 00H, 00H, 00H
	ORG $+14
$SG186900 DB	'0', 00H, ',', 00H, '1', 00H, ',', 00H, '1', 00H, ' ', 00H
	DB	'/', 00H, ' ', 00H, '-', 00H, '.', 00H, '2', 00H, '5', 00H, ','
	DB	00H, '1', 00H, ',', 00H, '.', 00H, '5', 00H, ' ', 00H, '/', 00H
	DB	' ', 00H, '-', 00H, '.', 00H, '2', 00H, '5', 00H, ',', 00H, '1'
	DB	00H, ',', 00H, '1', 00H, ' ', 00H, '/', 00H, ' ', 00H, '-', 00H
	DB	'.', 00H, '2', 00H, '5', 00H, ',', 00H, '1', 00H, ',', 00H, '.'
	DB	00H, '5', 00H, 00H, 00H
	ORG $+14
$SG186902 DB	'0', 00H, ',', 00H, '1', 00H, ',', 00H, '.', 00H, '5', 00H
	DB	' ', 00H, '/', 00H, ' ', 00H, '-', 00H, '.', 00H, '2', 00H, '5'
	DB	00H, ',', 00H, '1', 00H, ',', 00H, '.', 00H, '5', 00H, ' ', 00H
	DB	'/', 00H, ' ', 00H, '-', 00H, '.', 00H, '2', 00H, '5', 00H, ','
	DB	00H, '1', 00H, ',', 00H, '1', 00H, ' ', 00H, '/', 00H, ' ', 00H
	DB	'-', 00H, '.', 00H, '2', 00H, '5', 00H, ',', 00H, '1', 00H, ','
	DB	00H, '1', 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
?pat_herring_dir@@3PAEA DB 00H				; pat_herring_dir
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
?pat_herring_x@@3PAMA DD 03f800000r		; 1	; pat_herring_x
	DD	03f800000r			; 1
	DD	040200000r			; 2.5
	DD	040600000r			; 3.5
	DD	000000000r			; 0
	DD	03fc00000r			; 1.5
	DD	040200000r			; 2.5
	DD	040800000r			; 4
	DD	03f000000r			; 0.5
	DD	03fc00000r			; 1.5
	DD	040400000r			; 3
	DD	040400000r			; 3
	DD	03f000000r			; 0.5
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040600000r			; 3.5
?pat_herring_y@@3PAMA DD 03f000000r		; 0.5	; pat_herring_y
	DD	03f000000r			; 0.5
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03fc00000r			; 1.5
	DD	040000000r			; 2
	DD	03f800000r			; 1
	DD	03fc00000r			; 1.5
	DD	040400000r			; 3
	DD	040000000r			; 2
	DD	040200000r			; 2.5
	DD	040200000r			; 2.5
	DD	040400000r			; 3
	DD	040600000r			; 3.5
	DD	040600000r			; 3.5
	DD	040800000r			; 4
?pat_herring_id@@3PAEA DB 01H				; pat_herring_id
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	02H
	DB	01H
	DB	04H
	DB	03H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	02H
	DB	02H
	DB	04H
_DATA	ENDS
PUBLIC	??_H@YAXPEAX_K1P6APEAX0@Z@Z			; `vector constructor iterator'
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	wmemchr
PUBLIC	wmemcpy
PUBLIC	wmemmove
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??3@YAXPEAX0@Z					; operator delete
PUBLIC	??0Class_ID@@QEAA@KK@Z				; Class_ID::Class_ID
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	?fmod@@YAMMM@Z					; fmod
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	?length@?$char_traits@_W@std@@SA_KPEB_W@Z	; std::char_traits<wchar_t>::length
PUBLIC	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
PUBLIC	?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::char_traits<wchar_t>::find
PUBLIC	?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::move
PUBLIC	?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z	; std::char_traits<wchar_t>::assign
PUBLIC	?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z		; std::char_traits<wchar_t>::eq
PUBLIC	?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z	; std::char_traits<wchar_t>::to_char_type
PUBLIC	?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z	; std::char_traits<wchar_t>::to_int_type
PUBLIC	?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z	; std::char_traits<wchar_t>::eq_int_type
PUBLIC	?not_eof@?$char_traits@_W@std@@SAGAEBG@Z	; std::char_traits<wchar_t>::not_eof
PUBLIC	?eof@?$char_traits@_W@std@@SAGXZ		; std::char_traits<wchar_t>::eof
PUBLIC	??0_Container_proxy@std@@QEAA@XZ		; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QEAA@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_all
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Clrcont@_Iterator_base12@std@@QEAAXXZ		; std::_Iterator_base12::_Clrcont
PUBLIC	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Allocate@std@@YAPEAX_K0_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPEAX_K1@Z			; std::_Deallocate
PUBLIC	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ	; MaxSDK::AssetManagement::AssetId::AssetId
PUBLIC	??0?$allocator@_W@std@@QEAA@XZ			; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	??0?$allocator@_W@std@@QEAA@AEBV01@@Z		; std::allocator<wchar_t>::allocator<wchar_t>
PUBLIC	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z	; std::allocator<wchar_t>::deallocate
PUBLIC	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z	; std::allocator<wchar_t>::allocate
PUBLIC	?max_size@?$allocator@_W@std@@QEBA_KXZ		; std::allocator<wchar_t>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
PUBLIC	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
PUBLIC	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
PUBLIC	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
PUBLIC	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
PUBLIC	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
PUBLIC	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
PUBLIC	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
PUBLIC	?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
PUBLIC	?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
PUBLIC	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
PUBLIC	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
PUBLIC	?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
PUBLIC	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
PUBLIC	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
PUBLIC	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
PUBLIC	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
PUBLIC	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
PUBLIC	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
PUBLIC	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
PUBLIC	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
PUBLIC	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
PUBLIC	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??0TileRow@@QEAA@M@Z				; TileRow::TileRow
PUBLIC	??0?$allocator@M@std@@QEAA@XZ			; std::allocator<float>::allocator<float>
PUBLIC	??0?$allocator@M@std@@QEAA@AEBV01@@Z		; std::allocator<float>::allocator<float>
PUBLIC	?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z	; std::allocator<float>::deallocate
PUBLIC	?allocate@?$allocator@M@std@@QEAAPEAM_K@Z	; std::allocator<float>::allocate
PUBLIC	?max_size@?$allocator@M@std@@QEBA_KXZ		; std::allocator<float>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ; std::allocator_traits<std::allocator<float> >::max_size
PUBLIC	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z ; std::allocator_traits<std::allocator<float> >::select_on_container_copy_construction
PUBLIC	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<float> >::select_on_container_copy_construction
PUBLIC	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
PUBLIC	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<float> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Swap_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
PUBLIC	?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<float,std::allocator<float> >::_Assign_rv
PUBLIC	?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z ; std::vector<float,std::allocator<float> >::push_back
PUBLIC	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
PUBLIC	?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::capacity
PUBLIC	?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::_Unused_capacity
PUBLIC	?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ; std::vector<float,std::allocator<float> >::begin
PUBLIC	?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ; std::vector<float,std::allocator<float> >::end
PUBLIC	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
PUBLIC	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
PUBLIC	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
PUBLIC	?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z ; std::vector<float,std::allocator<float> >::push_back
PUBLIC	?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ ; std::vector<float,std::allocator<float> >::clear
PUBLIC	?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z ; std::vector<float,std::allocator<float> >::_Buy
PUBLIC	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
PUBLIC	?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z ; std::vector<float,std::allocator<float> >::_Grow_to
PUBLIC	?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z ; std::vector<float,std::allocator<float> >::_Inside
PUBLIC	?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reallocate
PUBLIC	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reserve
PUBLIC	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
PUBLIC	?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ ; std::vector<float,std::allocator<float> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range
PUBLIC	?update@TileRow@@QEAAXXZ			; TileRow::update
PUBLIC	??1TileRow@@QEAA@XZ				; TileRow::~TileRow
PUBLIC	??0TileRow@@QEAA@AEBV0@@Z			; TileRow::TileRow
PUBLIC	??0TileRow@@QEAA@$$QEAV0@@Z			; TileRow::TileRow
PUBLIC	?__autoclassinit2@TileRow@@QEAAX_K@Z		; TileRow::__autoclassinit2
PUBLIC	??_GTileRow@@QEAAPEAXI@Z			; TileRow::`scalar deleting destructor'
PUBLIC	?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::allocator<TileRow>::deallocate
PUBLIC	?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z ; std::allocator<TileRow>::allocate
PUBLIC	?max_size@?$allocator@VTileRow@@@std@@QEBA_KXZ	; std::allocator<TileRow>::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z ; std::allocator_traits<std::allocator<TileRow> >::max_size
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::max_size
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getpfirst
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
PUBLIC	?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::capacity
PUBLIC	?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::_Unused_capacity
PUBLIC	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
PUBLIC	?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::max_size
PUBLIC	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
PUBLIC	?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z ; std::vector<TileRow,std::allocator<TileRow> >::push_back
PUBLIC	?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ ; std::vector<TileRow,std::allocator<TileRow> >::clear
PUBLIC	?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy
PUBLIC	?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Grow_to
PUBLIC	?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Inside
PUBLIC	?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Reallocate
PUBLIC	?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Reserve
PUBLIC	?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ ; std::vector<TileRow,std::allocator<TileRow> >::_Xlen
PUBLIC	?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range
PUBLIC	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
PUBLIC	?update@TilePattern@@QEAAXXZ			; TilePattern::update
PUBLIC	?setPreset@TilePattern@@QEAAXH@Z		; TilePattern::setPreset
PUBLIC	??0TilePoint@@QEAA@XZ				; TilePoint::TilePoint
PUBLIC	??0TilePoint@@QEAA@VPoint3@@M@Z			; TilePoint::TilePoint
PUBLIC	??0TilePoint@@QEAA@$$QEAV0@@Z			; TilePoint::TilePoint
PUBLIC	?edgeBlur@Tile@@CAMMMH@Z			; Tile::edgeBlur
PUBLIC	?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z ; Tile::corner
PUBLIC	?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z		; Tile::rotatePoint2
PUBLIC	?rotateUV@Tile@@CAXHMAEAVPoint3@@@Z		; Tile::rotateUV
PUBLIC	?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z ; Tile::uvMapping
PUBLIC	?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z ; Tile::drawTile
PUBLIC	?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::pat_xBond
PUBLIC	?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::pat_herring
PUBLIC	?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::draw
PUBLIC	??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
PUBLIC	?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Free_proxy
PUBLIC	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getpfirst
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>
PUBLIC	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
PUBLIC	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
PUBLIC	?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity
PUBLIC	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
PUBLIC	?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
PUBLIC	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
PUBLIC	?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
PUBLIC	?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
PUBLIC	?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
PUBLIC	?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate
PUBLIC	?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
PUBLIC	?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
PUBLIC	?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
PUBLIC	?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
PUBLIC	?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::__autoclassinit2
PUBLIC	??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
PUBLIC	?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
PUBLIC	?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
PUBLIC	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::__autoclassinit2
PUBLIC	??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
PUBLIC	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$addressof@$$CBVTileRow@@@std@@YAPEBVTileRow@@AEBV1@@Z ; std::addressof<TileRow const >
PUBLIC	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
PUBLIC	??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>
PUBLIC	??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>
PUBLIC	??$addressof@$$CBM@std@@YAPEBMAEBM@Z		; std::addressof<float const >
PUBLIC	??$_Unfancy@M@std@@YAPEAMPEAM@Z			; std::_Unfancy<float>
PUBLIC	??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float & __ptr64>
PUBLIC	??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float const & __ptr64>
PUBLIC	??$addressof@M@std@@YAPEAMAEAM@Z		; std::addressof<float>
PUBLIC	??$forward@M@std@@YA$$QEAMAEAM@Z		; std::forward<float>
PUBLIC	??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float>
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>
PUBLIC	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>
PUBLIC	??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEBAPEBMXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Unchecked
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::allocator<float>,float * __ptr64>
PUBLIC	??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
PUBLIC	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z	; std::addressof<wchar_t * __ptr64>
PUBLIC	??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
PUBLIC	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z		; std::_Unfancy<wchar_t>
PUBLIC	??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z	; std::_Debug_pointer_if<wchar_t const >
PUBLIC	??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z	; std::_Debug_pointer<wchar_t const >
PUBLIC	??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Umove<TileRow * __ptr64>
PUBLIC	??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>
PUBLIC	??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z ; std::vector<float,std::allocator<float> >::_Umove<float * __ptr64>
PUBLIC	??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z ; std::forward<TileRow & __ptr64>
PUBLIC	??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>
PUBLIC	??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z ; std::forward<TileRow const & __ptr64>
PUBLIC	??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>
PUBLIC	??$forward@AEAM@std@@YAAEAMAEAM@Z		; std::forward<float & __ptr64>
PUBLIC	??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z ; std::allocator_traits<std::allocator<float> >::construct<float,float & __ptr64>
PUBLIC	??$forward@AEBM@std@@YAAEBMAEBM@Z		; std::forward<float const & __ptr64>
PUBLIC	??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z ; std::allocator_traits<std::allocator<float> >::construct<float,float const & __ptr64>
PUBLIC	??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z ; std::allocator_traits<std::allocator<float> >::construct<float,float>
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
PUBLIC	??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>
PUBLIC	??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>
PUBLIC	??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
PUBLIC	??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
PUBLIC	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const & __ptr64>
PUBLIC	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>
PUBLIC	??$forward@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
PUBLIC	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Uninitialized_move<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
PUBLIC	??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
PUBLIC	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
PUBLIC	??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_move<float * __ptr64,float * __ptr64,std::allocator<float> >
PUBLIC	??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
PUBLIC	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z	; std::forward<wchar_t * __ptr64 & __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z ; std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>
PUBLIC	??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z ; std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>
PUBLIC	??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z ; std::allocator<float>::construct<float,float & __ptr64>
PUBLIC	??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z ; std::allocator<float>::construct<float,float const & __ptr64>
PUBLIC	??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z ; std::allocator<float>::construct<float,float>
PUBLIC	??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>
PUBLIC	??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>
PUBLIC	??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> const & __ptr64>
PUBLIC	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unchecked<TileRow * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
PUBLIC	??$_Rechecked@PEAVTileRow@@PEAV1@@std@@YAAEAPEAVTileRow@@AEAPEAV1@PEAV1@@Z ; std::_Rechecked<TileRow * __ptr64,TileRow * __ptr64>
PUBLIC	??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z		; std::_Unchecked<float * __ptr64>
PUBLIC	??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<float * __ptr64,float * __ptr64,std::allocator<float> >
PUBLIC	??$_Rechecked@PEAMPEAM@std@@YAAEAPEAMAEAPEAMPEAM@Z ; std::_Rechecked<float * __ptr64,float * __ptr64>
PUBLIC	??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
PUBLIC	??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>
PUBLIC	??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
PUBLIC	??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$move@AEAVTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ; std::move<TileRow & __ptr64>
PUBLIC	??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z ; std::_Ptr_move_cat<TileRow,TileRow>
PUBLIC	??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
PUBLIC	??$_Ptr_move_cat@MM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAM0@Z ; std::_Ptr_move_cat<float,float>
PUBLIC	??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked1<float,float,std::allocator<float> >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>
PUBLIC	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z ; std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >
PUBLIC	??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> ><std::allocator<float> >
PUBLIC	??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z ; std::allocator<TileRow>::destroy<TileRow>
PUBLIC	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
PUBLIC	??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow>
PUBLIC	??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z	; std::_Copy_memmove<float * __ptr64,float * __ptr64>
PUBLIC	??$forward@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >
PUBLIC	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >
PUBLIC	??$forward@V?$allocator@M@std@@@std@@YA$$QEAV?$allocator@M@0@AEAV10@@Z ; std::forward<std::allocator<float> >
PUBLIC	??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ; std::forward<TileRow>
PUBLIC	??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow>
PUBLIC	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >
PUBLIC	??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<float const * __ptr64,float * __ptr64,std::allocator<float> >
PUBLIC	??$move@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
PUBLIC	??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z ; std::allocator<TileRow>::construct<TileRow,TileRow>
PUBLIC	??$_Ptr_copy_cat@$$CBMM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEBMAEBQEAM@Z ; std::_Ptr_copy_cat<float const ,float>
PUBLIC	??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked1<float const ,float,std::allocator<float> >
PUBLIC	??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z ; std::_Copy_memmove<float const * __ptr64,float * __ptr64>
PUBLIC	??$forward@V?$vector@MV?$allocator@M@std@@@std@@@std@@YA$$QEAV?$vector@MV?$allocator@M@std@@@0@AEAV10@@Z ; std::forward<std::vector<float,std::allocator<float> > >
PUBLIC	??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
PUBLIC	??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@		; `string'
PUBLIC	??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ ; `string'
PUBLIC	??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ ; `string'
PUBLIC	??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ ; `string'
PUBLIC	??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ ; `string'
PUBLIC	??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ ; `string'
PUBLIC	??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ ; `string'
PUBLIC	??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ ; `string'
PUBLIC	??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ ; `string'
PUBLIC	??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ ; `string'
PUBLIC	?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
PUBLIC	??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
PUBLIC	??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
PUBLIC	??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ ; `string'
PUBLIC	??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ ; `string'
PUBLIC	??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ ; `string'
PUBLIC	??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@ ; `string'
PUBLIC	??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ ; `string'
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
PUBLIC	??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@38d1b717
PUBLIC	__real@3dfcb924
PUBLIC	__real@3f000000
PUBLIC	__real@3f490fdb
PUBLIC	__real@3f800000
PUBLIC	__real@3f9d70a4
PUBLIC	__real@3fa9999a
PUBLIC	__real@3fb504f3
PUBLIC	__real@3fc00000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@403f666666666666
PUBLIC	__real@4048f5c3
PUBLIC	__real@40490fdb
PUBLIC	__real@40dfffc000000000
PUBLIC	__real@41fb4c0b
PUBLIC	__real@bf800000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memcpy:PROC
EXTRN	__imp_memmove:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	__imp_srand:PROC
EXTRN	__imp_rand:PROC
EXTRN	__imp_cosf:PROC
EXTRN	__imp_fmodf:PROC
EXTRN	__imp_sinf:PROC
EXTRN	__imp_sqrtf:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp__CrtDbgReportW:PROC
EXTRN	__imp_?_Debug_message@std@@YAXPEB_W0I@Z:PROC
EXTRN	__imp_?_Xbad_alloc@std@@YAXXZ:PROC
EXTRN	__imp_?_Xlength_error@std@@YAXPEBD@Z:PROC
EXTRN	__imp_?_Xout_of_range@std@@YAXPEBD@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ:PROC
EXTRN	__imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??5?$basic_istream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@AEAN@Z:PROC
EXTRN	__imp_??0?$basic_iostream@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_??0Point3@@QEAA@XZ:PROC
EXTRN	__imp_??0Point3@@QEAA@MMM@Z:PROC
EXTRN	__imp_??0Point3@@QEAA@AEBV0@@Z:PROC
EXTRN	__imp_??ZPoint3@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	__imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z:PROC
EXTRN	?smooth@@YAMMMM@Z:PROC				; smooth
EXTRN	?snoise@Perlin@@SAMM@Z:PROC			; Perlin::snoise
EXTRN	??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::imbue
EXTRN	?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAPEAV12@PEA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::showmanyc
EXTRN	?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::sync
EXTRN	?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAGXZ:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEA_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEB_W_J@Z:PROC ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::xsputn
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler3:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	GUID_NULL:BYTE
EXTRN	__imp_?_BADOFF@std@@3_JB:QWORD
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
_BSS	SEGMENT
?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A DB 010H DUP (?) ; MaxSDK::AssetManagement::kInvalidId
?kTriObjNormalXTCID@@3VClass_ID@@B DQ 01H DUP (?)	; kTriObjNormalXTCID
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemmove DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$wmemmove
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?cos@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?cos@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fmod@@YAMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?fmod@@YAMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sin@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?sin@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sqrt@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?sqrt@@YAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$char_traits@_W@std@@SA_KPEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+58
	DD	imagerel $unwind$?length@?$char_traits@_W@std@@SA_KPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z DD imagerel $LN5
	DD	imagerel $LN5+59
	DD	imagerel $unwind$?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z DD imagerel $LN5
	DD	imagerel $LN5+59
	DD	imagerel $unwind$?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?not_eof@?$char_traits@_W@std@@SAGAEBG@Z DD imagerel $LN7
	DD	imagerel $LN7+99
	DD	imagerel $unwind$?not_eof@?$char_traits@_W@std@@SAGAEBG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??1_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+55
	DD	imagerel $unwind$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+173
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+180
	DD	imagerel $unwind$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN8
	DD	imagerel $LN8+154
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+216
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+25
	DD	imagerel $unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+157
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@std@@YAPEAX_K0_N@Z DD imagerel $LN14
	DD	imagerel $LN14+517
	DD	imagerel $unwind$?_Allocate@std@@YAPEAX_K0_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Deallocate@std@@YAXPEAX_K1@Z DD imagerel $LN22
	DD	imagerel $LN22+947
	DD	imagerel $unwind$?_Deallocate@std@@YAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
	DD	imagerel ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ+21
	DD	imagerel $unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EkTriObjNormalXTCID@@YAXXZ DD imagerel ??__EkTriObjNormalXTCID@@YAXXZ
	DD	imagerel ??__EkTriObjNormalXTCID@@YAXXZ+32
	DD	imagerel $unwind$??__EkTriObjNormalXTCID@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD imagerel $LN5
	DD	imagerel $LN5+66
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+52
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+75
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z DD imagerel $LN5
	DD	imagerel $LN5+283
	DD	imagerel $unwind$?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD imagerel $LN6
	DD	imagerel $LN6+229
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD imagerel $LN7
	DD	imagerel $LN7+216
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z DD imagerel $LN6
	DD	imagerel $LN6+208
	DD	imagerel $unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z DD imagerel $LN10
	DD	imagerel $LN10+267
	DD	imagerel $unwind$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z DD imagerel $LN10
	DD	imagerel $LN10+255
	DD	imagerel $unwind$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+109
	DD	imagerel $unwind$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA DD imagerel ?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD imagerel $LN23
	DD	imagerel $LN23+575
	DD	imagerel $unwind$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+82
	DD	imagerel $unwind$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+54
	DD	imagerel $unwind$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD imagerel $LN13
	DD	imagerel $LN13+238
	DD	imagerel $unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z DD imagerel $LN6
	DD	imagerel $LN6+96
	DD	imagerel $unwind$?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD imagerel $LN7
	DD	imagerel $LN7+262
	DD	imagerel $unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TileRow@@QEAA@M@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??0TileRow@@QEAA@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA DD imagerel ?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA
	DD	imagerel ?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+39
	DD	imagerel $unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN14
	DD	imagerel $LN14+297
	DD	imagerel $unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA+49
	DD	imagerel $unwind$?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+198
	DD	imagerel $unwind$?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z DD imagerel $LN7
	DD	imagerel $LN7+621
	DD	imagerel $unwind$?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+45
	DD	imagerel $unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD imagerel $LN6
	DD	imagerel $LN6+207
	DD	imagerel $unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z DD imagerel $LN7
	DD	imagerel $LN7+595
	DD	imagerel $unwind$?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z DD imagerel $LN7
	DD	imagerel $LN7+248
	DD	imagerel $unwind$?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z DD imagerel $LN6
	DD	imagerel $LN6+161
	DD	imagerel $unwind$?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD imagerel $LN11
	DD	imagerel $LN11+450
	DD	imagerel $unwind$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA DD imagerel ?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA+68
	DD	imagerel $unwind$?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+241
	DD	imagerel $unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z DD imagerel $LN10
	DD	imagerel $LN10+220
	DD	imagerel $unwind$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?update@TileRow@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+129
	DD	imagerel $unwind$?update@TileRow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1TileRow@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+41
	DD	imagerel $unwind$??1TileRow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1TileRow@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1TileRow@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1TileRow@@QEAA@XZ@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???1TileRow@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TileRow@@QEAA@AEBV0@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0TileRow@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA DD imagerel ?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TileRow@@QEAA@$$QEAV0@@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??0TileRow@@QEAA@$$QEAV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA DD imagerel ?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@TileRow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@TileRow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GTileRow@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_GTileRow@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+207
	DD	imagerel $unwind$??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z DD imagerel $LN7
	DD	imagerel $LN7+601
	DD	imagerel $unwind$?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z DD imagerel $LN6
	DD	imagerel $LN6+161
	DD	imagerel $unwind$?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD imagerel $LN11
	DD	imagerel $LN11+462
	DD	imagerel $unwind$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA DD imagerel ?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA+68
	DD	imagerel $unwind$?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z DD imagerel $LN10
	DD	imagerel $LN10+220
	DD	imagerel $unwind$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?update@TilePattern@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+156
	DD	imagerel $unwind$?update@TilePattern@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setPreset@TilePattern@@QEAAXH@Z DD imagerel $LN26
	DD	imagerel $LN26+908
	DD	imagerel $unwind$?setPreset@TilePattern@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+24
	DD	imagerel $unwind$?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+24
	DD	imagerel $unwind$?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+24
	DD	imagerel $unwind$?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD imagerel ?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	imagerel ?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA+27
	DD	imagerel $unwind$?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TilePoint@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??0TilePoint@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TilePoint@@QEAA@VPoint3@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$??0TilePoint@@QEAA@VPoint3@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0TilePoint@@QEAA@$$QEAV0@@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??0TilePoint@@QEAA@$$QEAV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?edgeBlur@Tile@@CAMMMH@Z DD imagerel $LN9
	DD	imagerel $LN9+168
	DD	imagerel $unwind$?edgeBlur@Tile@@CAMMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z DD imagerel $LN26
	DD	imagerel $LN26+1614
	DD	imagerel $unwind$?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z DD imagerel $LN3
	DD	imagerel $LN3+183
	DD	imagerel $unwind$?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z DD imagerel $LN31
	DD	imagerel $LN31+1713
	DD	imagerel $unwind$?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z DD imagerel $LN33
	DD	imagerel $LN33+2967
	DD	imagerel $unwind$?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z DD imagerel $LN7
	DD	imagerel $LN7+947
	DD	imagerel $unwind$?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z DD imagerel $LN13
	DD	imagerel $LN13+1068
	DD	imagerel $unwind$?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z DD imagerel $LN4
	DD	imagerel $LN4+134
	DD	imagerel $unwind$?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?noise@@YAMMM@Z DD imagerel ?noise@@YAMMM@Z
	DD	imagerel ?noise@@YAMMM@Z+54
	DD	imagerel $unwind$?noise@@YAMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rotate90@@YAXAEAM0@Z DD imagerel ?rotate90@@YAXAEAM0@Z
	DD	imagerel ?rotate90@@YAXAEAM0@Z+72
	DD	imagerel $unwind$?rotate90@@YAXAEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rotate270@@YAXAEAM0@Z DD imagerel ?rotate270@@YAXAEAM0@Z
	DD	imagerel ?rotate270@@YAXAEAM0@Z+72
	DD	imagerel $unwind$?rotate270@@YAXAEAM0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getAngle@@YAMHM@Z DD imagerel ?getAngle@@YAMHM@Z
	DD	imagerel ?getAngle@@YAMHM@Z+255
	DD	imagerel $unwind$?getAngle@@YAMHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z DD imagerel ?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z
	DD	imagerel ?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z+1369
	DD	imagerel $unwind$?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z DD imagerel ?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
	DD	imagerel ?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z+278
	DD	imagerel $unwind$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA DD imagerel ?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+193
	DD	imagerel $unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+39
	DD	imagerel $unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel $LN7
	DD	imagerel $LN7+627
	DD	imagerel $unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+45
	DD	imagerel $unwind$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+207
	DD	imagerel $unwind$??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z DD imagerel $LN6
	DD	imagerel $LN6+161
	DD	imagerel $unwind$?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN11
	DD	imagerel $LN11+462
	DD	imagerel $unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA DD imagerel ?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA+68
	DD	imagerel $unwind$?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD imagerel $LN10
	DD	imagerel $LN10+220
	DD	imagerel $unwind$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z DD imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+1014
	DD	imagerel $unwind$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+24
	DD	imagerel $unwind$?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD imagerel ?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	imagerel ?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA+27
	DD	imagerel $unwind$?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD imagerel $LN8
	DD	imagerel $LN8+243
	DD	imagerel $unwind$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA+46
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA+29
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA+28
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+148
	DD	imagerel $unwind$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD imagerel $LN4
	DD	imagerel $LN4+154
	DD	imagerel $unwind$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+61
	DD	imagerel $unwind$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA+25
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD imagerel $LN24
	DD	imagerel $LN24+1270
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD imagerel $LN7
	DD	imagerel $LN7+282
	DD	imagerel $unwind$?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ DD imagerel $LN11
	DD	imagerel $LN11+329
	DD	imagerel $unwind$?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN24
	DD	imagerel $LN24+862
	DD	imagerel $unwind$?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN15
	DD	imagerel $LN15+580
	DD	imagerel $unwind$?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z DD imagerel $LN9
	DD	imagerel $LN9+367
	DD	imagerel $unwind$?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+212
	DD	imagerel $unwind$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+108
	DD	imagerel $unwind$?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+27
	DD	imagerel $unwind$?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+39
	DD	imagerel $unwind$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z DD imagerel $LN4
	DD	imagerel $LN4+49
	DD	imagerel $unwind$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+79
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+34
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+67
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+56
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z DD imagerel $LN4
	DD	imagerel $LN4+68
	DD	imagerel $unwind$??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+24
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+82
	DD	imagerel $unwind$??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+82
	DD	imagerel $unwind$??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD imagerel $LN6
	DD	imagerel $LN6+110
	DD	imagerel $unwind$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA DD imagerel ?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD imagerel $LN6
	DD	imagerel $LN6+110
	DD	imagerel $unwind$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA DD imagerel ?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA
	DD	imagerel ?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA+28
	DD	imagerel $unwind$?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD imagerel $LN5
	DD	imagerel $LN5+102
	DD	imagerel $unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD imagerel $LN13
	DD	imagerel $LN13+145
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA+54
	DD	imagerel $unwind$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD imagerel $LN13
	DD	imagerel $LN13+145
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA DD imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA+54
	DD	imagerel $unwind$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z DD imagerel $LN7
	DD	imagerel $LN7+219
	DD	imagerel $unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD imagerel ?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD imagerel ?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD imagerel ?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	imagerel ?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA+24
	DD	imagerel $unwind$?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD imagerel ?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	imagerel ?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA+24
	DD	imagerel $unwind$?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+261
	DD	imagerel $unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA+27
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD imagerel ?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA+27
	DD	imagerel $unwind$?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD imagerel ?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	imagerel ?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA+24
	DD	imagerel $unwind$?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD imagerel ?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	imagerel ?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA+24
	DD	imagerel $unwind$?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z DD imagerel $LN4
	DD	imagerel $LN4+53
	DD	imagerel $unwind$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA+24
	DD	imagerel $unwind$?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z
pdata	ENDS
CRT$XCU	SEGMENT
?kInvalidId$initializer$@AssetManagement@MaxSDK@@3P6AXXZEA DQ FLAT:??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ; MaxSDK::AssetManagement::kInvalidId$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@41fb4c0b
CONST	SEGMENT
__real@41fb4c0b DD 041fb4c0br			; 31.4121
CONST	ENDS
;	COMDAT __real@40dfffc000000000
CONST	SEGMENT
__real@40dfffc000000000 DQ 040dfffc000000000r	; 32767
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@4048f5c3
CONST	SEGMENT
__real@4048f5c3 DD 04048f5c3r			; 3.14
CONST	ENDS
;	COMDAT __real@403f666666666666
CONST	SEGMENT
__real@403f666666666666 DQ 0403f666666666666r	; 31.4
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT __real@3fb504f3
CONST	SEGMENT
__real@3fb504f3 DD 03fb504f3r			; 1.41421
CONST	ENDS
;	COMDAT __real@3fa9999a
CONST	SEGMENT
__real@3fa9999a DD 03fa9999ar			; 1.325
CONST	ENDS
;	COMDAT __real@3f9d70a4
CONST	SEGMENT
__real@3f9d70a4 DD 03f9d70a4r			; 1.23
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f490fdb
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dfcb924
CONST	SEGMENT
__real@3dfcb924 DD 03dfcb924r			; 0.1234
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_ios<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_istream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_istream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_istream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	DD	imagerel ??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	imagerel ??_R2?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_iostream@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_iostream<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_iostream@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	DD	imagerel ??_R1BA@?0A@EA@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@_WU?$char_traits@_W@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	imagerel ??_R2?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$all'
	DB	'ocator@_W@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 01H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	098H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
	DD	imagerel ??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD 00H ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@@8 ; std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8 DD 00H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$alloca'
	DB	'tor@_W@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DD 01H ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@8
	DD	imagerel ??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@ DB 'invalid string posi'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@
CONST	SEGMENT
??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'f', 00H, 'l'
	DB	00H, 'o', 00H, 'a', 00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'f'
	DB	00H, 'l', 00H, 'o', 00H, 'a', 00H, 't', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H
	DB	']', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
CONST	SEGMENT
??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'T', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'R', 00H, 'o', 00H, 'w', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'T', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'R', 00H, 'o', 00H
	DB	'w', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'i'
	DB	00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a'
	DB	00H, 'r', 00H, '_', 00H, 't', 00H, ',', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't'
	DB	00H, 's', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H
	DB	'r', 00H, '_', 00H, 't', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H
	DB	'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H, 's'
	DB	00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'r', 00H, '_', 00H, 't', 00H, ',', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 't', 00H, 's', 00H, '<', 00H, 'w', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, '_', 00H, 't', 00H, '>', 00H, ',', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l'
	DB	00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'<', 00H, 'w', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
CONST	SEGMENT
??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@ DB '"'
	DB	00H, 'S', 00H, 't', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'a', 00H
	DB	'r', 00H, 'd', 00H, ' ', 00H, 'C', 00H, '+', 00H, '+', 00H, ' '
	DB	00H, 'L', 00H, 'i', 00H, 'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H
	DB	'i', 00H, 'e', 00H, 's', 00H, ' ', 00H, 'O', 00H, 'u', 00H, 't'
	DB	00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'R', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
CONST	SEGMENT
??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@ DB 'Stand'
	DB	'ard C++ Libraries Out of Range', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@ DB 'v'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@ DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@ DD 00H ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbtable'
	DD	098H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DQ	FLAT:??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vftable'
	DQ	FLAT:??_E?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
	DQ	FLAT:?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ
	DQ	FLAT:?uflow@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAGXZ
	DQ	FLAT:?xsgetn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEA_W_J@Z
	DQ	FLAT:?xsputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAA_JPEB_W_J@Z
	DQ	FLAT:?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAPEAV12@PEA_W_J@Z
	DQ	FLAT:?sync@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB
CONST	SEGMENT
?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB DQ ffffffffffffffffH ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
CONST	ENDS
;	COMDAT ??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
CONST	SEGMENT
??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '-', 00H, ' ', 00H, '_'
	DB	00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'N', 00H
	DB	'O', 00H, 'N', 00H, '_', 00H, 'U', 00H, 'S', 00H, 'E', 00H, 'R'
	DB	00H, '_', 00H, 'S', 00H, 'I', 00H, 'Z', 00H, 'E', 00H, '"', 00H
	DB	' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
CONST	SEGMENT
??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@ DB '_Ptr_u'
	DB	'ser - _Ptr_container <= _NON_USER_SIZE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
CONST	SEGMENT
??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@ DB '"'
	DB	00H, '2', 00H, ' ', 00H, '*', 00H, ' ', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'o', 00H, 'f', 00H, '(', 00H, 'v', 00H, 'o'
	DB	00H, 'i', 00H, 'd', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H
	DB	'<', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r'
	DB	00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, ' ', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H
	DB	'n', 00H, 'e', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
CONST	SEGMENT
??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@ DB '2'
	DB	' * sizeof(void *) <= _Ptr_user - _Ptr_container', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '<', 00H, ' ', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r'
	DB	00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@ DB '_Ptr_containe'
	DB	'r < _Ptr_user', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
CONST	SEGMENT
??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@ DB '"'
	DB	00H, 'r', 00H, 'e', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 't', 00H, '_', 00H, 'c'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, '<', 00H, 'u', 00H, 'i', 00H
	DB	'n', 00H, 't', 00H, 'p', 00H, 't', 00H, 'r', 00H, '_', 00H, 't'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, '(', 00H, '_', 00H, 'P', 00H
	DB	't', 00H, 'r', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, ')'
	DB	00H, '[', 00H, '-', 00H, '1', 00H, ']', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_'
	DB	00H, 'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H
	DB	'T', 00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'S', 00H, 'E'
	DB	00H, 'N', 00H, 'T', 00H, 'I', 00H, 'N', 00H, 'E', 00H, 'L', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
CONST	SEGMENT
??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@ DB 'rei'
	DB	'nterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] == _BIG_ALLOCATION_S'
	DB	'ENTINEL', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
CONST	SEGMENT
??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@ DB '"'
	DB	00H, '(', 00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H
	DB	'u', 00H, 's', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '&', 00H, ' '
	DB	00H, '(', 00H, '_', 00H, 'B', 00H, 'I', 00H, 'G', 00H, '_', 00H
	DB	'A', 00H, 'L', 00H, 'L', 00H, 'O', 00H, 'C', 00H, 'A', 00H, 'T'
	DB	00H, 'I', 00H, 'O', 00H, 'N', 00H, '_', 00H, 'A', 00H, 'L', 00H
	DB	'I', 00H, 'G', 00H, 'N', 00H, 'M', 00H, 'E', 00H, 'N', 00H, 'T'
	DB	00H, ' ', 00H, '-', 00H, ' ', 00H, '1', 00H, ')', 00H, ')', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
CONST	SEGMENT
??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@ DB '(_Ptr'
	DB	'_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@ DB '"'
	DB	00H, '_', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 's', 00H, 'i'
	DB	00H, 'z', 00H, 'e', 00H, '_', 00H, 't', 00H, ')', 00H, '(', 00H
	DB	'-', 00H, '1', 00H, ')', 00H, ' ', 00H, '/', 00H, ' ', 00H, '_'
	DB	00H, 'S', 00H, 'z', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
CONST	SEGMENT
??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@ DB '_'
	DB	'Count <= (size_t)(-1) / _Sz', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, '"', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@ DB '_Ptr != 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@ DB 'I'
	DB	00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H, 'O', 00H
	DB	'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T', 00H, ' '
	DB	00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H, 'P', 00H
	DB	'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '1', 00H, '4', 00H, '.', 00H, '0', 00H, '\', 00H, 'v'
	DB	00H, 'c', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H
	DB	'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H, 't'
	DB	00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z DD imagerel ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z+18
	DD	00H
	DD	imagerel ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z+33
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD imagerel ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z+36
	DD	01H
	DD	imagerel ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z+221
	DD	00H
	DD	imagerel ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z+235
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 022411H
	DD	015011bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD imagerel ??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 011b11H
	DD	06212H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z DD imagerel ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z
	DD	0ffffffffH
	DD	imagerel ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z+36
	DD	01H
	DD	imagerel ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z+110
	DD	02H
	DD	imagerel ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z+143
	DD	01H
	DD	imagerel ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z+179
	DD	00H
	DD	imagerel ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z+193
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
	DD	02H
	DD	imagerel ?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z
	DD	00H
	DD	00H
	DD	06H
	DD	imagerel $ip2state$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z
	DD	060H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z DD 022411H
	DD	015011bH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD imagerel ??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z+52
	DD	00H
	DD	imagerel ??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD imagerel ??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z+43
	DD	00H
	DD	imagerel ??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z+133
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA+40
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	06H
	DD	imagerel $ip2state$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 012119H
	DD	08218H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD imagerel ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	0ffffffffH
	DD	imagerel ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z+43
	DD	00H
	DD	imagerel ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z+133
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA+40
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	01H
	DD	imagerel $tryMap$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	06H
	DD	imagerel $ip2state$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z DD 012119H
	DD	08218H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z DD 020f01H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD 031501H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD imagerel ??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z+48
	DD	00H
	DD	imagerel ??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z+105
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD 011c11H
	DD	08213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD imagerel ??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
	DD	0ffffffffH
	DD	imagerel ??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z+48
	DD	00H
	DD	imagerel ??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z+105
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD 011c11H
	DD	08213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD imagerel ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z DD 011b11H
	DD	06212H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD imagerel ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 011b11H
	DD	06212H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z DD 011801H
	DD	04218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD imagerel ??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z+52
	DD	00H
	DD	imagerel ??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z DD 011701H
	DD	04217H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 011611H
	DD	0620dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z+39
	DD	00H
	DD	imagerel ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z+57
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z DD imagerel ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z+39
	DD	00H
	DD	imagerel ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z+69
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z DD 011c11H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z DD imagerel ??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD imagerel ??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD imagerel ??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 011611H
	DD	0620dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 011611H
	DD	0620dH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD imagerel ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
	DD	0ffffffffH
	DD	imagerel ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z+52
	DD	00H
	DD	imagerel ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z+63
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z DD 010d01H
	DD	0220dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 011801H
	DD	0a218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 011801H
	DD	0a218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z DD 021101H
	DD	0130111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD imagerel ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ+33
	DD	00H
	DD	imagerel ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ+44
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD imagerel ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z+40
	DD	00H
	DD	imagerel ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z+144
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
	DD	030H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD 011c11H
	DD	08213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD imagerel ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ+104
	DD	00H
	DD	imagerel ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ+124
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD imagerel ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z+100
	DD	00H
	DD	imagerel ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z+138
	DD	01H
	DD	imagerel ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z+233
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD 019930522H
	DD	03H
	DD	imagerel $stateUnwindMap$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z DD 012111H
	DD	06218H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z DD imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
	DD	0ffffffffH
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+44
	DD	00H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+116
	DD	01H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+134
	DD	02H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+161
	DD	01H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+260
	DD	03H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+278
	DD	04H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+321
	DD	03H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+358
	DD	01H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+372
	DD	00H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+386
	DD	0ffffffffH
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+408
	DD	03H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+470
	DD	05H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+557
	DD	06H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+623
	DD	07H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+748
	DD	08H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+804
	DD	07H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+891
	DD	06H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+905
	DD	05H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+919
	DD	03H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+933
	DD	01H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+959
	DD	00H
	DD	imagerel ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z+973
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	01H
	DD	imagerel ?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	03H
	DD	imagerel ?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	03H
	DD	imagerel ?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	05H
	DD	imagerel ?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	06H
	DD	imagerel ?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
	DD	07H
	DD	imagerel ?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z DD 019930522H
	DD	09H
	DD	imagerel $stateUnwindMap$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
	DD	00H
	DD	00H
	DD	017H
	DD	imagerel $ip2state$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
	DD	048H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z DD 022c19H
	DD	0870111H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
	DD	0422H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD imagerel ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
	DD	0ffffffffH
	DD	imagerel ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z+60
	DD	00H
	DD	imagerel ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z+191
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 012b19H
	DD	08213H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD imagerel ?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z+57
	DD	00H
	DD	imagerel ?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z+118
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA+54
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
	DD	06H
	DD	imagerel $ip2state$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z DD 011719H
	DD	0e20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD imagerel ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z DD 021101H
	DD	0110111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD imagerel ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ DD imagerel ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ+68
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ DD 011819H
	DD	06209H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ DD 011819H
	DD	0c209H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ+48
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z DD imagerel ?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
	DD	0ffffffffH
	DD	imagerel ?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z+177
	DD	00H
	DD	imagerel ?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z+196
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
	DD	040H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z DD 011c11H
	DD	0e213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z DD 011901H
	DD	0e219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getAngle@@YAMHM@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rotate270@@YAXAEAM0@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rotate90@@YAXAEAM0@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?noise@@YAMMM@Z DD 011001H
	DD	04210H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z DD 022819H
	DD	0150116H
	DD	imagerel __GSHandlerCheck
	DD	098H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z DD 022819H
	DD	0190116H
	DD	imagerel __GSHandlerCheck
	DD	0b8H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z DD 042f19H
	DD	019011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0b0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z DD 032919H
	DD	07016e21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	068H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z DD 010f01H
	DD	0620fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z DD 021e01H
	DD	021011eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?edgeBlur@Tile@@CAMMMH@Z DD 011501H
	DD	06215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TilePoint@@QEAA@$$QEAV0@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TilePoint@@QEAA@VPoint3@@M@Z DD 031601H
	DD	070124216H
	DD	06011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TilePoint@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?setPreset@TilePattern@@QEAAXH@Z DD imagerel ?setPreset@TilePattern@@QEAAXH@Z
	DD	0ffffffffH
	DD	imagerel ?setPreset@TilePattern@@QEAAXH@Z+72
	DD	00H
	DD	imagerel ?setPreset@TilePattern@@QEAAXH@Z+74
	DD	0ffffffffH
	DD	imagerel ?setPreset@TilePattern@@QEAAXH@Z+868
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?setPreset@TilePattern@@QEAAXH@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?setPreset@TilePattern@@QEAAXH@Z DD 019930522H
	DD	0aH
	DD	imagerel $stateUnwindMap$?setPreset@TilePattern@@QEAAXH@Z
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$?setPreset@TilePattern@@QEAAXH@Z
	DD	0118H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setPreset@TilePattern@@QEAAXH@Z DD 021c11H
	DD	0570110H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?setPreset@TilePattern@@QEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?update@TilePattern@@QEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD imagerel ?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	0ffffffffH
	DD	imagerel ?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z+23
	DD	00H
	DD	imagerel ?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z+98
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
	DD	038H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z DD 011711H
	DD	0e20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z DD imagerel ?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z
	DD	0ffffffffH
	DD	imagerel ?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z+60
	DD	00H
	DD	imagerel ?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z+191
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z DD 012b19H
	DD	08213H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD imagerel ?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z+57
	DD	00H
	DD	imagerel ?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z+118
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA+54
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
	DD	06H
	DD	imagerel $ip2state$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z DD 011719H
	DD	0e20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ DD imagerel ?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ
	DD	030H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ DD 011219H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z DD 021101H
	DD	0110111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GTileRow@@QEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@TileRow@@QEAAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TileRow@@QEAA@$$QEAV0@@Z DD imagerel ??0TileRow@@QEAA@$$QEAV0@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TileRow@@QEAA@$$QEAV0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TileRow@@QEAA@$$QEAV0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TileRow@@QEAA@$$QEAV0@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0TileRow@@QEAA@$$QEAV0@@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TileRow@@QEAA@$$QEAV0@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TileRow@@QEAA@$$QEAV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TileRow@@QEAA@AEBV0@@Z DD imagerel ??0TileRow@@QEAA@AEBV0@@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TileRow@@QEAA@AEBV0@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TileRow@@QEAA@AEBV0@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TileRow@@QEAA@AEBV0@@Z
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0TileRow@@QEAA@AEBV0@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TileRow@@QEAA@AEBV0@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TileRow@@QEAA@AEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1TileRow@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1TileRow@@QEAA@XZ DD imagerel ??1TileRow@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1TileRow@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1TileRow@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1TileRow@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1TileRow@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1TileRow@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1TileRow@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1TileRow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?update@TileRow@@QEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z DD imagerel ?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z
	DD	0ffffffffH
	DD	imagerel ?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z+60
	DD	00H
	DD	imagerel ?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z+191
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z DD 012b19H
	DD	08213H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD imagerel ?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
	DD	0ffffffffH
	DD	imagerel ?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z+57
	DD	00H
	DD	imagerel ?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z+118
	DD	0ffffffffH
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA+54
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	imagerel $handlerMap$0$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
	DD	01H
	DD	imagerel $tryMap$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
	DD	06H
	DD	imagerel $ip2state$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z DD 011719H
	DD	0e20eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ DD imagerel ?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ
	DD	030H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ DD 011219H
	DD	08209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z DD 021101H
	DD	0110111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD imagerel ?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
	DD	0ffffffffH
	DD	imagerel ?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ+80
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
	DD	030H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD 011719H
	DD	0820eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD imagerel ?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
	DD	0ffffffffH
	DD	imagerel ?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ+80
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
	DD	030H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ DD 011719H
	DD	0820eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z DD 021101H
	DD	0110111H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z+57
	DD	00H
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z+88
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z
	DD	028H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z+75
	DD	00H
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z+115
	DD	01H
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z+189
	DD	02H
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z+222
	DD	01H
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z+279
	DD	00H
	DD	imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z+281
	DD	0ffffffffH
	DD	imagerel ?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	00H
	DD	imagerel ?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA+13
	DD	04H
	DD	imagerel ?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA+35
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD 01H
	DD	03H
	DD	04H
	DD	01H
	DD	imagerel $handlerMap$0$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel ?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	02H
	DD	imagerel ?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	00H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	05H
	DD	imagerel $stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
	DD	01H
	DD	imagerel $tryMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
	DD	0aH
	DD	imagerel $ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z DD 021a19H
	DD	0150111H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD imagerel ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD imagerel ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ+68
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	06209H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	0c209H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ+48
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@M@std@@QEAAPEAM_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0TileRow@@QEAA@M@Z DD imagerel ??0TileRow@@QEAA@M@Z
	DD	0ffffffffH
	DD	imagerel ??0TileRow@@QEAA@M@Z+42
	DD	00H
	DD	imagerel ??0TileRow@@QEAA@M@Z+57
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0TileRow@@QEAA@M@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0TileRow@@QEAA@M@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0TileRow@@QEAA@M@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0TileRow@@QEAA@M@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0TileRow@@QEAA@M@Z DD 011811H
	DD	0620fH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0TileRow@@QEAA@M@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z DD 011201H
	DD	08212H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA DD 020a19H
	DD	05006320aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	0ffffffffH
	DD	imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z+322
	DD	00H
	DD	imagerel ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z+369
	DD	0ffffffffH
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+13
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+24
	DD	02H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+66
	DD	01H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+68
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+13
	DD	03H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA+40
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$1$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$0$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	00H
	DD	imagerel ?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 00H
	DD	00H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$0$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	imagerel $handlerMap$1$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 019930522H
	DD	04H
	DD	imagerel $stateUnwindMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	02H
	DD	imagerel $tryMap$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	0aH
	DD	imagerel $ip2state$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	068H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z DD 022e19H
	DD	0110116H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
	DD	07bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ DD 011d19H
	DD	0620eH
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD imagerel ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
	DD	0ffffffffH
	DD	imagerel ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z+87
	DD	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
	DD	00H
	DD	00H
	DD	02H
	DD	imagerel $ip2state$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
	DD	038H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z DD 012111H
	DD	08218H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD imagerel ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
	DD	028H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD 011c19H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD imagerel ?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
	DD	028H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z DD 011c19H
	DD	06213H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD imagerel ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ+34
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z DD 010e01H
	DD	0a20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z+57
	DD	00H
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z+98
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z DD 011719H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z+34
	DD	00H
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z+65
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z+49
	DD	00H
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z+90
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z DD 012111H
	DD	06218H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
	DD	0ffffffffH
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z+66
	DD	00H
	DD	imagerel ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z+107
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z DD 011711H
	DD	0620eH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD imagerel ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	06209H
	DD	imagerel __GSHandlerCheck
	DD	028H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ DD 011819H
	DD	0c209H
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+29
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD imagerel ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+37
	DD	00H
	DD	imagerel ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ+48
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+18
	DD	00H
	DD	imagerel ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+36
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+29
	DD	00H
	DD	imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+47
	DD	01H
	DD	imagerel ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ+73
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
	DD	00H
	DD	imagerel ?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	04H
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ DD 011211H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z DD 010d01H
	DD	0420dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkTriObjNormalXTCID@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ DD 020701H
	DD	060067007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Deallocate@std@@YAXPEAX_K1@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@std@@YAPEAX_K0_N@Z DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	0ffffffffH
	DD	imagerel ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z+63
	DD	00H
	DD	imagerel ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z+74
	DD	0ffffffffH
	DD	imagerel ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z+132
	DD	01H
	DD	imagerel ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z+187
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	0ffffffffH
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 019930522H
	DD	02H
	DD	imagerel $stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	00H
	DD	00H
	DD	05H
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 012619H
	DD	0820eH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DD imagerel ??1_Iterator_base12@std@@QEAA@XZ
	DD	0ffffffffH
	DD	imagerel ??1_Iterator_base12@std@@QEAA@XZ+50
	DD	00H
	DD	imagerel ??1_Iterator_base12@std@@QEAA@XZ+61
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 012119H
	DD	08209H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
	DD	033H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	0ffffffffH
	DD	imagerel ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z+109
	DD	00H
	DD	imagerel ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z+120
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	020H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 012619H
	DD	0820eH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	032H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel ?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	0ffffffffH
	DD	imagerel ?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z+55
	DD	00H
	DD	imagerel ?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z+151
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z DD 012619H
	DD	0820eH
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 020601H
	DD	050023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	0ffffffffH
	DD	imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ+61
	DD	00H
	DD	imagerel ?_Orphan_all@_Container_base12@std@@QEAAXXZ+144
	DD	0ffffffffH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 0ffffffffH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 019930522H
	DD	01H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	00H
	DD	00H
	DD	03H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	028H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 012119H
	DD	08209H
	DD	imagerel __GSHandlerCheck_EH
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	03aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ DD 010901H
	DD	02209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Container_base12@std@@QEAA@XZ DD imagerel ??1_Container_base12@std@@QEAA@XZ
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$??1_Container_base12@std@@QEAA@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$??1_Container_base12@std@@QEAA@XZ
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Container_base12@std@@QEAA@XZ DD 011219H
	DD	06209H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$??1_Container_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?not_eof@?$char_traits@_W@std@@SAGAEBG@Z DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z DD 010e01H
	DD	0220eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$char_traits@_W@std@@SA_KPEB_W@Z DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?sqrt@@YAMM@Z DD imagerel ?sqrt@@YAMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?sqrt@@YAMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?sqrt@@YAMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sqrt@@YAMM@Z DD 011319H
	DD	0620aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?sqrt@@YAMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?sin@@YAMM@Z DD imagerel ?sin@@YAMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?sin@@YAMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?sin@@YAMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sin@@YAMM@Z DD 011319H
	DD	0620aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?sin@@YAMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?fmod@@YAMMM@Z DD imagerel ?fmod@@YAMMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?fmod@@YAMMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?fmod@@YAMMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fmod@@YAMMM@Z DD 011919H
	DD	06210H
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?fmod@@YAMMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?cos@@YAMM@Z DD imagerel ?cos@@YAMM@Z
	DD	0ffffffffH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
$cppxdata$?cos@@YAMM@Z DD 019930522H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	imagerel $ip2state$?cos@@YAMM@Z
	DD	020H
	DD	00H
	DD	04H
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?cos@@YAMM@Z DD 011319H
	DD	0620aH
	DD	imagerel __CxxFrameHandler3
	DD	imagerel $cppxdata$?cos@@YAMM@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemmove DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 011301H
	DD	04213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_H@YAXPEAX_K1P6APEAX0@Z@Z DD 011801H
	DD	06218H
xdata	ENDS
CRT$XCU	SEGMENT
?kTriObjNormalXTCID$initializer$@@3P6AXXZEA DQ FLAT:??__EkTriObjNormalXTCID@@YAXXZ ; kTriObjNormalXTCID$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp
;	COMDAT ??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor', COMDAT
	movsxd	rax, DWORD PTR [rcx-4]
	sub	rcx, rax
	jmp	??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
??_E?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$vector@MV?$allocator@M@std@@@std@@@std@@YA$$QEAV?$vector@MV?$allocator@M@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$vector@MV?$allocator@M@std@@@std@@@std@@YA$$QEAV?$vector@MV?$allocator@M@std@@@0@AEAV10@@Z PROC ; std::forward<std::vector<float,std::allocator<float> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@V?$vector@MV?$allocator@M@std@@@std@@@std@@YA$$QEAV?$vector@MV?$allocator@M@std@@@0@AEAV10@@Z ENDP ; std::forward<std::vector<float,std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Count$ = 40
_Dest_ch$ = 48
_Last_ch$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z PROC	; std::_Copy_memmove<float const * __ptr64,float * __ptr64>, COMDAT

; 2301 : 	{	// implement copy-like function as memmove

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	rax, QWORD PTR _First$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);

	mov	rax, QWORD PTR _Last$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	QWORD PTR __imp_memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 2308 : 	}

	add	rsp, 72					; 00000048H
	ret	0
??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z ENDP	; std::_Copy_memmove<float const * __ptr64,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$ = 72
__formal$ = 80
__formal$ = 88
??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked1<float const ,float,std::allocator<float> >, COMDAT

; 239  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 240  : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Copy_memmove@PEBMPEAM@std@@YAPEAMPEBM0PEAM@Z ; std::_Copy_memmove<float const * __ptr64,float * __ptr64>

; 241  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked1<float const ,float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_copy_cat@$$CBMM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEBMAEBQEAM@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$ = 16
__formal$ = 24
??$_Ptr_copy_cat@$$CBMM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEBMAEBQEAM@Z PROC ; std::_Ptr_copy_cat<float const ,float>, COMDAT

; 792  : 	{	// return pointer copy optimization category for pointers

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 793  : 	return {};

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 794  : 	}

	ret	0
??$_Ptr_copy_cat@$$CBMM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEBMAEBQEAM@Z ENDP ; std::_Ptr_copy_cat<float const ,float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z
_TEXT	SEGMENT
$T1 = 32
tv76 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z PROC ; std::allocator<TileRow>::construct<TileRow,TileRow>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ; std::forward<TileRow>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0TileRow@@QEAA@$$QEAV0@@Z
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv76[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z ENDP ; std::allocator<TileRow>::construct<TileRow,TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<float> > & __ptr64>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	mov	QWORD PTR [rsp+8], rcx

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1293 : 	}

	ret	0
??$move@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 49
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<float const * __ptr64,float * __ptr64,std::allocator<float> >, COMDAT

; 248  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 249  : 	return (_Uninitialized_copy_al_unchecked1(_First, _Last, _Dest, _Al,

	lea	r8, QWORD PTR _Dest$[rsp]
	lea	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$_Ptr_copy_cat@$$CBMM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEBMAEBQEAM@Z ; std::_Ptr_copy_cat<float const ,float>
	movzx	ecx, BYTE PTR $T2[rsp]
	mov	BYTE PTR [rsp+40], cl
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_copy_al_unchecked1@$$CBMMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked1<float const ,float,std::allocator<float> >

; 250  : 		_Ptr_copy_cat(_First, _Dest),
; 251  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), decltype(*_First)>()));
; 252  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<float const * __ptr64,float * __ptr64,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Iter$ = 64
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z PROC ; std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >, COMDAT

; 271  : 	{	// convert to unchecked

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 272  : 	return (_Iter._Unchecked());

	mov	rcx, QWORD PTR _Iter$[rsp]
	call	?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEBAPEBMXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Unchecked
	mov	QWORD PTR $T1[rsp], rax
	mov	rcx, QWORD PTR _Iter$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR $T1[rsp]

; 273  : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z ENDP ; std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Iter$ = 64
?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA PROC ; `std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Iter$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA ENDP ; `std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
_Iter$ = 64
?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA PROC ; `std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Iter$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z@4HA ENDP ; `std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z PROC ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ; std::forward<TileRow>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@VTileRow@@V1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z ; std::allocator<TileRow>::construct<TileRow,TileRow>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z ENDP ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z PROC ; std::forward<TileRow>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ENDP ; std::forward<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@M@std@@@std@@YA$$QEAV?$allocator@M@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@M@std@@@std@@YA$$QEAV?$allocator@M@0@AEAV10@@Z PROC ; std::forward<std::allocator<float> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@V?$allocator@M@std@@@std@@YA$$QEAV?$allocator@M@0@AEAV10@@Z ENDP ; std::forward<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >, COMDAT

; 259  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	QWORD PTR $T4[rsp], -2

; 260  : 		// note: only called internally from elsewhere in the STL, debug checks
; 261  : 		// and deprecation warnings omitted
; 262  : 	return (_Rechecked(_Dest,

	lea	rax, QWORD PTR $T5[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z	; std::_Unchecked<float * __ptr64>
	mov	QWORD PTR tv69[rsp], rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	mov	QWORD PTR tv139[rsp], rax
	mov	rax, QWORD PTR tv139[rsp]
	mov	QWORD PTR tv133[rsp], rax
	mov	rcx, QWORD PTR tv133[rsp]
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >
	mov	QWORD PTR tv134[rsp], rax
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	mov	QWORD PTR tv140[rsp], rax
	mov	rax, QWORD PTR tv140[rsp]
	mov	QWORD PTR tv136[rsp], rax
	mov	rcx, QWORD PTR tv136[rsp]
	call	??$_Unchecked@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@YAPEBMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@@Z ; std::_Unchecked<std::_Vector_val<std::_Simple_types<float> > >
	mov	r9, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR tv134[rsp]
	mov	rcx, rax
	call	??$_Uninitialized_copy_al_unchecked@PEBMPEAMV?$allocator@M@std@@@std@@YAPEAMPEBM0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_copy_al_unchecked<float const * __ptr64,float * __ptr64,std::allocator<float> >
	mov	rdx, rax
	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Rechecked@PEAMPEAM@std@@YAAEAPEAMAEAPEAMPEAM@Z ; std::_Rechecked<float * __ptr64,float * __ptr64>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR $T3[rsp], rax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR $T3[rsp]

; 263  : 		_Uninitialized_copy_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 264  : 			_Unchecked(_Dest), _Al)));
; 265  : 	}

	add	rsp, 168				; 000000a8H
	ret	0
??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$0
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$1
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$2
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv139 = 40
tv133 = 48
$T2 = 56
tv140 = 64
tv136 = 72
tv69 = 80
tv134 = 88
$T3 = 96
$T4 = 104
$T5 = 112
$T6 = 136
_First$ = 176
_Last$ = 184
_Dest$ = 192
_Al$ = 200
?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0???$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >, COMDAT

; 289  : 		{	// construct from forwarded values

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	npad	1

; 290  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<float> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<float> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Count$ = 40
_Dest_ch$ = 48
_Last_ch$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z PROC	; std::_Copy_memmove<float * __ptr64,float * __ptr64>, COMDAT

; 2301 : 	{	// implement copy-like function as memmove

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 2302 : 	const char * const _First_ch = reinterpret_cast<const char *>(_First);

	mov	rax, QWORD PTR _First$[rsp]
	mov	QWORD PTR _First_ch$[rsp], rax

; 2303 : 	const char * const _Last_ch = reinterpret_cast<const char *>(_Last);

	mov	rax, QWORD PTR _Last$[rsp]
	mov	QWORD PTR _Last_ch$[rsp], rax

; 2304 : 	char * const _Dest_ch = reinterpret_cast<char *>(_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR _Dest_ch$[rsp], rax

; 2305 : 	const size_t _Count = _Last_ch - _First_ch;

	mov	rax, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Last_ch$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rsp], rax

; 2306 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First_ch$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	call	QWORD PTR __imp_memmove

; 2307 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Dest_ch$[rsp]
	add	rcx, rax
	mov	rax, rcx

; 2308 : 	}

	add	rsp, 72					; 00000048H
	ret	0
??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z ENDP	; std::_Copy_memmove<float * __ptr64,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@VTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ; std::forward<TileRow>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@VTileRow@@V1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@$$QEAV3@@Z ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 743  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 744  : 		_Ptr->~_Uty();

	xor	edx, edx
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z

; 745  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z PROC ; std::allocator<TileRow>::destroy<TileRow>, COMDAT

; 743  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 744  : 		_Ptr->~_Uty();

	xor	edx, edx
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??_GTileRow@@QEAAPEAXI@Z

; 745  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z ENDP ; std::allocator<TileRow>::destroy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> ><std::allocator<float> >, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@V?$allocator@M@std@@@std@@YA$$QEAV?$allocator@M@0@AEAV10@@Z ; std::forward<std::allocator<float> >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@M@std@@QEAA@AEBV01@@Z	; std::allocator<float>::allocator<float>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> ><std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z
_TEXT	SEGMENT
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z PROC ; std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >, COMDAT

; 1651 : 		{	// copy initializing [_First, _Last), using allocator

$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	QWORD PTR $T4[rsp], -2

; 1652 : 		return (_Uninitialized_copy(_First, _Last,

	lea	rax, QWORD PTR $T5[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	QWORD PTR tv72[rsp], rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	mov	QWORD PTR tv134[rsp], rax
	mov	rax, QWORD PTR tv134[rsp]
	mov	QWORD PTR tv129[rsp], rax
	mov	rdx, QWORD PTR _First$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
	mov	QWORD PTR tv135[rsp], rax
	mov	rax, QWORD PTR tv135[rsp]
	mov	QWORD PTR tv131[rsp], rax
	mov	rax, QWORD PTR tv72[rsp]
	mov	r9, rax
	mov	r8, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR tv129[rsp]
	mov	rcx, QWORD PTR tv131[rsp]
	call	??$_Uninitialized_copy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@PEAMV?$allocator@M@2@@std@@YAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@0@0PEAMAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_copy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >,float * __ptr64,std::allocator<float> >
	mov	QWORD PTR $T3[rsp], rax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR $T3[rsp]

; 1653 : 			_Ptr, this->_Getal()));
; 1654 : 		}

	add	rsp, 168				; 000000a8H
	ret	0
??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z ENDP ; std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$0
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$1
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$2
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _Last$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR _First$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv134 = 40
$T2 = 48
tv135 = 56
tv72 = 64
tv129 = 72
tv131 = 80
$T3 = 88
$T4 = 96
$T5 = 104
$T6 = 128
this$ = 176
_First$ = 184
_Last$ = 192
_Ptr$ = 200
?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0???$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>, COMDAT

; 553  : 		{	// construct allocator from _Al

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 551  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$forward@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > >
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T1[rsp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><std::_Wrap_alloc<std::allocator<float> > >
	npad	1

; 554  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
	npad	1

; 555  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Dest$ = 64
__formal$ = 72
__formal$ = 80
__formal$ = 88
??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<float,float,std::allocator<float> >, COMDAT

; 292  : 	{	// move [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 293  : 	return (_Copy_memmove(_First, _Last, _Dest));

	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Copy_memmove@PEAMPEAM@std@@YAPEAMPEAM00@Z ; std::_Copy_memmove<float * __ptr64,float * __ptr64>

; 294  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<float,float,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@MM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAM0@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 8
__formal$ = 16
__formal$ = 24
??$_Ptr_move_cat@MM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAM0@Z PROC ; std::_Ptr_move_cat<float,float>, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 810  : 	return {};

	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 811  : 	}

	ret	0
??$_Ptr_move_cat@MM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAM0@Z ENDP ; std::_Ptr_move_cat<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
tv68 = 32
_Next$ = 40
$T1 = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
__formal$ = 112
__formal$ = 120
??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >, COMDAT

; 273  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN13:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 274  : 	_FwdIt _Next = _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR _Next$[rsp], rax

; 275  : 
; 276  : 	_TRY_BEGIN
; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 278  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$move@AEAVTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ; std::move<TileRow & __ptr64>
	mov	QWORD PTR tv68[rsp], rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	mov	rcx, QWORD PTR tv68[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@VTileRow@@V1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@$$QEAV2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow>
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
	jmp	SHORT $LN9@Uninitiali
$LN10@Uninitiali:
$LN9@Uninitiali:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;
; 282  : 	_CATCH_END
; 283  : 
; 284  : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]

; 285  : 	}

	add	rsp, 72					; 00000048H
	ret	0
$LN11@Uninitiali:
??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv68 = 32
_Next$ = 40
$T1 = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
__formal$ = 112
__formal$ = 120
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA PROC ; `std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >'::`1'::catch$0

; 279  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR _Next$[rbp]
	call	??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;
; 282  : 	_CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv68 = 32
_Next$ = 40
$T1 = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
__formal$ = 112
__formal$ = 120
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA PROC ; `std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >'::`1'::catch$0

; 279  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 280  : 	_Destroy_range(_Next, _Dest, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR _Next$[rbp]
	call	??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>

; 281  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 282  : 	_CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z
_TEXT	SEGMENT
$T1 = 0
__formal$ = 32
__formal$ = 40
??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z PROC ; std::_Ptr_move_cat<TileRow,TileRow>, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 810  : 	return {};

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	eax, BYTE PTR $T1[rsp]

; 811  : 	}

	add	rsp, 16
	pop	rdi
	ret	0
??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z ENDP ; std::_Ptr_move_cat<TileRow,TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAVTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAVTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z PROC ; std::move<TileRow & __ptr64>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	mov	QWORD PTR [rsp+8], rcx

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1293 : 	}

	ret	0
??$move@AEAVTileRow@@@std@@YA$$QEAVTileRow@@AEAV1@@Z ENDP ; std::move<TileRow & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z PROC ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >, COMDAT

; 554  : 		constexpr _Any_tag(_Ty&&) _NOEXCEPT {}

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z
_TEXT	SEGMENT
tv68 = 32
_Next$ = 40
$T1 = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
__formal$ = 112
__formal$ = 120
??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z PROC ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 273  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

$LN13:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 274  : 	_FwdIt _Next = _Dest;

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	QWORD PTR _Next$[rsp], rax

; 275  : 
; 276  : 	_TRY_BEGIN
; 277  : 	for (; _First != _Last; ++_Dest, (void)++_First)

	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Dest$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _Dest$[rsp], rax
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Uninitiali

; 278  : 		_Al.construct(_Unfancy(_Dest), _STD move(*_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
	mov	QWORD PTR tv68[rsp], rax
	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	rcx, QWORD PTR tv68[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
	jmp	SHORT $LN9@Uninitiali
$LN10@Uninitiali:
$LN9@Uninitiali:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;
; 282  : 	_CATCH_END
; 283  : 
; 284  : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]

; 285  : 	}

	add	rsp, 72					; 00000048H
	ret	0
$LN11@Uninitiali:
??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv68 = 32
_Next$ = 40
$T1 = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
__formal$ = 112
__formal$ = 120
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA PROC ; `std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0

; 279  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR _Next$[rbp]
	call	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 279  : 	_CATCH_ALL
; 280  : 	_Destroy_range(_Next, _Dest, _Al);
; 281  : 	_RERAISE;
; 282  : 	_CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv68 = 32
_Next$ = 40
$T1 = 48
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
__formal$ = 112
__formal$ = 120
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA PROC ; `std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0

; 279  : 	_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z$0:

; 280  : 	_Destroy_range(_Next, _Dest, _Al);

	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	mov	rcx, QWORD PTR _Next$[rbp]
	call	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>

; 281  : 	_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 282  : 	_CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z@4HA ENDP ; `std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z
_TEXT	SEGMENT
$T1 = 0
__formal$ = 32
__formal$ = 40
??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z PROC ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 809  : 	{	// return pointer move optimization category for pointers

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	sub	rsp, 16

; 810  : 	return {};

	lea	rax, QWORD PTR $T1[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	eax, BYTE PTR $T1[rsp]

; 811  : 	}

	add	rsp, 16
	pop	rdi
	ret	0
??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ENDP ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	mov	QWORD PTR [rsp+8], rcx

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1293 : 	}

	ret	0
??$move@AEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z PROC ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@VTileRow@@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@@Z ; std::allocator<TileRow>::destroy<TileRow>

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z ENDP ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z PROC ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * __ptr64 & __ptr64>
	mov	rcx, QWORD PTR $T1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv73[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv73[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ENDP ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PEAMPEAM@std@@YAAEAPEAMAEAPEAMPEAM@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAMPEAM@std@@YAAEAPEAMAEAPEAMPEAM@Z PROC	; std::_Rechecked<float * __ptr64,float * __ptr64>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 458  : 	_Dest = _Src;

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR _Src$[rsp]
	mov	QWORD PTR [rax], rcx

; 459  : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]

; 460  : 	}

	ret	0
??$_Rechecked@PEAMPEAM@std@@YAAEAPEAMAEAPEAMPEAM@Z ENDP	; std::_Rechecked<float * __ptr64,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 49
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<float * __ptr64,float * __ptr64,std::allocator<float> >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

	lea	r8, QWORD PTR _Dest$[rsp]
	lea	rdx, QWORD PTR _First$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	??$_Ptr_move_cat@MM@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@AEBQEAM0@Z ; std::_Ptr_move_cat<float,float>
	movzx	ecx, BYTE PTR $T2[rsp]
	mov	BYTE PTR [rsp+40], cl
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_move_al_unchecked1@MMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_move_al_unchecked1<float,float,std::allocator<float> >

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<float * __ptr64,float * __ptr64,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z PROC		; std::_Unchecked<float * __ptr64>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	mov	QWORD PTR [rsp+8], rcx

; 428  : 	return (_Src);

	mov	rax, QWORD PTR _Src$[rsp]

; 429  : 	}

	ret	0
??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z ENDP		; std::_Unchecked<float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PEAVTileRow@@PEAV1@@std@@YAAEAPEAVTileRow@@AEAPEAV1@PEAV1@@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAVTileRow@@PEAV1@@std@@YAAEAPEAVTileRow@@AEAPEAV1@PEAV1@@Z PROC ; std::_Rechecked<TileRow * __ptr64,TileRow * __ptr64>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 458  : 	_Dest = _Src;

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR _Src$[rsp]
	mov	QWORD PTR [rax], rcx

; 459  : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]

; 460  : 	}

	ret	0
??$_Rechecked@PEAVTileRow@@PEAV1@@std@@YAAEAPEAVTileRow@@AEAPEAV1@PEAV1@@Z ENDP ; std::_Rechecked<TileRow * __ptr64,TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 49
$T3 = 50
$T4 = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Ptr_move_cat@VTileRow@@V1@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAVTileRow@@0@Z ; std::_Ptr_move_cat<TileRow,TileRow>
	mov	BYTE PTR $T1[rsp], al
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	call	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rsp+40], al
	movzx	eax, BYTE PTR $T1[rsp]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_move_al_unchecked1@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z PROC ; std::_Unchecked<TileRow * __ptr64>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	mov	QWORD PTR [rsp+8], rcx

; 428  : 	return (_Src);

	mov	rax, QWORD PTR _Src$[rsp]

; 429  : 	}

	ret	0
??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ENDP ; std::_Unchecked<TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z
_TEXT	SEGMENT
_Dest$ = 8
_Src$ = 16
??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z PROC ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 457  : 	{	// reset checked from unchecked, generic

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 458  : 	_Dest = _Src;

	mov	rax, QWORD PTR _Dest$[rsp]
	mov	rcx, QWORD PTR _Src$[rsp]
	mov	QWORD PTR [rax], rcx

; 459  : 	return (_Dest);

	mov	rax, QWORD PTR _Dest$[rsp]

; 460  : 	}

	ret	0
??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z ENDP ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 49
$T3 = 50
$T4 = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
_Al$ = 104
??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 301  : 	{	// move [_First, _Last) to raw _Dest, using _Al, choose optimization

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 302  : 	typedef decltype(_STD move(*_First)) _Src_type; // TRANSITION MODULES VSO#222794
; 303  : 	return (_Uninitialized_move_al_unchecked1(_First, _Last, _Dest, _Al,

	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, QWORD PTR _Dest$[rsp]
	lea	rcx, QWORD PTR _First$[rsp]
	call	??$_Ptr_move_cat@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@std@@YA?AU_General_ptr_iterator_tag@0@AEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0@Z ; std::_Ptr_move_cat<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	BYTE PTR $T1[rsp], al
	lea	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR $T4[rsp]
	call	??$?0U?$integral_constant@_N$00@std@@@_Any_tag@std@@QEAA@$$QEAU?$integral_constant@_N$00@1@@Z ; std::_Any_tag::_Any_tag<std::integral_constant<bool,1> >
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR [rsp+40], al
	movzx	eax, BYTE PTR $T1[rsp]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Al$[rsp]
	mov	r8, QWORD PTR _Dest$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_move_al_unchecked1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U_General_ptr_iterator_tag@0@U_Any_tag@0@@Z ; std::_Uninitialized_move_al_unchecked1<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 304  : 		_Ptr_move_cat(_First, _Dest),
; 305  : 		_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_Dest)), _Src_type>()));
; 306  : 	}

	add	rsp, 72					; 00000048H
	ret	0
??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Src$ = 8
??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z PROC ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 427  : 	{	// construct unchecked from checked, generic

	mov	QWORD PTR [rsp+8], rcx

; 428  : 	return (_Src);

	mov	rax, QWORD PTR _Src$[rsp]

; 429  : 	}

	ret	0
??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ENDP ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
_TEXT	SEGMENT
$T1 = 32
tv74 = 40
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z PROC ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	rdi, QWORD PTR $T1[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv74[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv74[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	pop	rdi
	pop	rsi
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ENDP ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z PROC ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>, COMDAT

; 743  : 		{	// destroy object at _Ptr

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ENDP ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> const & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@_W@std@@QEAA@AEBV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 8
_Ptr$ = 16
??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z PROC ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>, COMDAT

; 743  : 		{	// destroy object at _Ptr

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 744  : 		_Ptr->~_Uty();
; 745  : 		}

	ret	0
??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ENDP ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@VTileRow@@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@@Z ; std::allocator_traits<std::allocator<TileRow> >::destroy<TileRow>

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z PROC ; std::allocator<float>::construct<float,float>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 4
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	rcx, QWORD PTR $T1[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rcx], xmm0
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv73[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv73[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z ENDP ; std::allocator<float>::construct<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z PROC ; std::allocator<float>::construct<float,float const & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 4
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBM@std@@YAAEBMAEBM@Z	; std::forward<float const & __ptr64>
	mov	rcx, QWORD PTR $T1[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rcx], xmm0
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv73[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv73[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z ENDP ; std::allocator<float>::construct<float,float const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z PROC ; std::allocator<float>::construct<float,float & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 4
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAM@std@@YAAEAMAEAM@Z	; std::forward<float & __ptr64>
	mov	rcx, QWORD PTR $T1[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rcx], xmm0
	mov	rax, QWORD PTR $T1[rsp]
	mov	QWORD PTR tv73[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv73[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z ENDP ; std::allocator<float>::construct<float,float & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
_TEXT	SEGMENT
$T1 = 32
tv79 = 40
$T2 = 48
$T3 = 56
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z PROC ; std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z ; std::forward<TileRow const & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0TileRow@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv79[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv79[rsp], 0
$LN4@construct:
	mov	rax, QWORD PTR tv79[rsp]
	mov	QWORD PTR $T3[rsp], rax

; 738  : 		}

	add	rsp, 72					; 00000048H
	ret	0
??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z ENDP ; std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
$T2 = 48
$T3 = 56
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA PROC ; `std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA ENDP ; `std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
$T2 = 48
$T3 = 56
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA PROC ; `std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z@4HA ENDP ; `std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
_TEXT	SEGMENT
$T1 = 32
tv79 = 40
$T2 = 48
$T3 = 56
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z PROC ; std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z ; std::forward<TileRow & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0TileRow@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv79[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv79[rsp], 0
$LN4@construct:
	mov	rax, QWORD PTR tv79[rsp]
	mov	QWORD PTR $T3[rsp], rax

; 738  : 		}

	add	rsp, 72					; 00000048H
	ret	0
??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z ENDP ; std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
$T2 = 48
$T3 = 56
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA PROC ; `std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA ENDP ; `std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv79 = 40
$T2 = 48
$T3 = 56
this$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA PROC ; `std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??3@YAXPEAX0@Z				; operator delete
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z@4HA ENDP ; `std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z
_TEXT	SEGMENT
$T1 = 32
tv76 = 40
this$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 736  : 		{	// construct _Objty(_Types...) at _Ptr

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 737  : 		::new ((void *)_Ptr) _Objty(_STD forward<_Types>(_Args)...);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rsp], rax
	cmp	QWORD PTR $T1[rsp], 0
	je	SHORT $LN3@construct
	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	rdx, rax
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv76[rsp], rax
	jmp	SHORT $LN4@construct
$LN3@construct:
	mov	QWORD PTR tv76[rsp], 0
$LN4@construct:

; 738  : 		}

	add	rsp, 56					; 00000038H
	ret	0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z PROC ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1291 : 	{	// forward _Arg as movable

	mov	QWORD PTR [rsp+8], rcx

; 1292 : 	return (static_cast<typename remove_reference<_Ty>::type&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1293 : 	}

	ret	0
??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ENDP ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * __ptr64 & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@PEA_WAEAPEA_W@?$allocator@_W@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::allocator<wchar_t>::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z PROC	; std::forward<wchar_t * __ptr64 & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ENDP	; std::forward<wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>, COMDAT

; 709  : 		{	// construct from a related allocator (do nothing)

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 710  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
tv67 = 32
tv70 = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Uninitialized_move<float * __ptr64,float * __ptr64,std::allocator<float> >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z	; std::_Unchecked<float * __ptr64>
	mov	QWORD PTR tv67[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z	; std::_Unchecked<float * __ptr64>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unchecked@PEAM@std@@YAPEAMPEAM@Z	; std::_Unchecked<float * __ptr64>
	mov	r9, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv70[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$_Uninitialized_move_al_unchecked@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<float * __ptr64,float * __ptr64,std::allocator<float> >
	mov	rdx, rax
	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Rechecked@PEAMPEAM@std@@YAAEAPEAMAEAPEAMPEAM@Z ; std::_Rechecked<float * __ptr64,float * __ptr64>
	mov	rax, QWORD PTR [rax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Uninitialized_move<float * __ptr64,float * __ptr64,std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>, COMDAT

; 709  : 		{	// construct from a related allocator (do nothing)

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 710  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
_TEXT	SEGMENT
tv67 = 32
tv70 = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z PROC ; std::_Uninitialized_move<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unchecked<TileRow * __ptr64>
	mov	QWORD PTR tv67[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unchecked<TileRow * __ptr64>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unchecked@PEAVTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unchecked<TileRow * __ptr64>
	mov	r9, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv70[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$_Uninitialized_move_al_unchecked@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
	mov	rdx, rax
	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Rechecked@PEAVTileRow@@PEAV1@@std@@YAAEAPEAVTileRow@@AEAPEAV1@PEAV1@@Z ; std::_Rechecked<TileRow * __ptr64,TileRow * __ptr64>
	mov	rax, QWORD PTR [rax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
__formal$ = 72
??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 1099 : 	{	// destroy [_First, _Last), no special optimization

$LN6:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1100 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Destroy_ra

; 1101 : 		_Al.destroy(_Unfancy(_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::destroy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	jmp	SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1102 : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
tv67 = 32
tv70 = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 313  : 	{	// move [_First, _Last) to raw _Dest, using _Al

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 314  : 		// note: only called internally from elsewhere in the STL, debug checks
; 315  : 		// and deprecation warnings omitted
; 316  : 	return (_Rechecked(_Dest,

	mov	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
	mov	QWORD PTR tv67[rsp], rax
	mov	rcx, QWORD PTR _Last$[rsp]
	call	??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
	mov	r9, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv70[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$_Uninitialized_move_al_unchecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move_al_unchecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	mov	rdx, rax
	lea	rcx, QWORD PTR _Dest$[rsp]
	call	??$_Rechecked@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@@std@@YAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAPEAV10@PEAV10@@Z ; std::_Rechecked<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
	mov	rax, QWORD PTR [rax]

; 317  : 		_Uninitialized_move_al_unchecked(_Unchecked(_First), _Unchecked(_Last),
; 318  : 			_Unchecked(_Dest), _Al)));
; 319  : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::allocator<std::_Container_proxy>::construct<std::_Container_proxy,std::_Container_proxy>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z PROC ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::allocator<std::_Container_proxy>::destroy<std::_Container_proxy>

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 709  : 		{	// construct from a related allocator (do nothing)

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 710  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>, COMDAT

; 289  : 		{	// construct from forwarded values

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0AEBV?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> const & __ptr64>

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	npad	1

; 290  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z PROC ; std::forward<std::allocator<wchar_t> const & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ENDP ; std::forward<std::allocator<wchar_t> const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>, COMDAT

; 863  : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 864  : 		_Al.destroy(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@PEA_W@?$allocator@_W@std@@QEAAXPEAPEA_W@Z ; std::allocator<wchar_t>::destroy<wchar_t * __ptr64>

; 865  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z PROC ; std::forward<std::allocator<wchar_t> >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ENDP ; std::forward<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
__formal$ = 24
__formal$ = 32
??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>, COMDAT

; 1107 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 1108 : 		// nothing to do
; 1109 : 	}

	ret	0
??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
__formal$ = 72
??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z PROC ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>, COMDAT

; 1099 : 	{	// destroy [_First, _Last), no special optimization

$LN6:
	mov	BYTE PTR [rsp+32], r9b
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1100 : 	for (; _First != _Last; ++_First)

	jmp	SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
	mov	rax, QWORD PTR _First$[rsp]
	add	rax, 40					; 00000028H
	mov	QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
	mov	rax, QWORD PTR _Last$[rsp]
	cmp	QWORD PTR _First$[rsp], rax
	je	SHORT $LN3@Destroy_ra

; 1101 : 		_Al.destroy(_Unfancy(_First));

	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$destroy@VTileRow@@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::destroy<TileRow>
	jmp	SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1102 : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ENDP ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 289  : 		{	// construct from forwarded values

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 287  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

	mov	rcx, QWORD PTR _Val1$[rsp]
	call	??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >

; 288  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	npad	1

; 290  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_Val1$ = 80
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z PROC ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ENDP ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z PROC ; std::allocator_traits<std::allocator<float> >::construct<float,float>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@MM@?$allocator@M@std@@QEAAXPEAM$$QEAM@Z ; std::allocator<float>::construct<float,float>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z ENDP ; std::allocator_traits<std::allocator<float> >::construct<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z PROC ; std::allocator_traits<std::allocator<float> >::construct<float,float const & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBM@std@@YAAEBMAEBM@Z	; std::forward<float const & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@MAEBM@?$allocator@M@std@@QEAAXPEAMAEBM@Z ; std::allocator<float>::construct<float,float const & __ptr64>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z ENDP ; std::allocator_traits<std::allocator<float> >::construct<float,float const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEBM@std@@YAAEBMAEBM@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBM@std@@YAAEBMAEBM@Z PROC			; std::forward<float const & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEBM@std@@YAAEBMAEBM@Z ENDP			; std::forward<float const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z PROC ; std::allocator_traits<std::allocator<float> >::construct<float,float & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAM@std@@YAAEAMAEAM@Z	; std::forward<float & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@MAEAM@?$allocator@M@std@@QEAAXPEAMAEAM@Z ; std::allocator<float>::construct<float,float & __ptr64>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z ENDP ; std::allocator_traits<std::allocator<float> >::construct<float,float & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAM@std@@YAAEAMAEAM@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAM@std@@YAAEAMAEAM@Z PROC			; std::forward<float & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAM@std@@YAAEAMAEAM@Z ENDP			; std::forward<float & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z PROC ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z ; std::forward<TileRow const & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@VTileRow@@AEBV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z ; std::allocator<TileRow>::construct<TileRow,TileRow const & __ptr64>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z ENDP ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z PROC ; std::forward<TileRow const & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z ENDP ; std::forward<TileRow const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z PROC ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z ; std::forward<TileRow & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@VTileRow@@AEAV1@@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z ; std::allocator<TileRow>::construct<TileRow,TileRow & __ptr64>

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z ENDP ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z PROC ; std::forward<TileRow & __ptr64>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z ENDP ; std::forward<TileRow & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 856  : 		{	// construct _Objty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 857  : 		_Al.construct(_Ptr, _STD forward<_Types>(_Args)...);

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 858  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z
_TEXT	SEGMENT
_Val$ = 48
?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z PROC ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to, COMDAT

; 279  : 		{	// convert raw reference to pointer

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 280  : 		return (_STD addressof(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>

; 281  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z ENDP ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAPEA_W@std@@YAAEAPEA_WAEAPEA_W@Z ; std::forward<wchar_t * __ptr64 & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@PEA_WAEAPEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_WAEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0_W@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><wchar_t>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Ptr$ = 72
??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z PROC ; std::vector<float,std::allocator<float> >::_Umove<float * __ptr64>, COMDAT

; 1658 : 		{	// move initializing [_First, _Last), using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1659 : 		return (_Uninitialized_move(_First, _Last,

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_move@PEAMPEAMV?$allocator@M@std@@@std@@YAPEAMPEAM00AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Uninitialized_move<float * __ptr64,float * __ptr64,std::allocator<float> >

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z ENDP ; std::vector<float,std::allocator<float> >::_Umove<float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0M@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@M@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><float>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Ptr$ = 72
??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Umove<TileRow * __ptr64>, COMDAT

; 1658 : 		{	// move initializing [_First, _Last), using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1659 : 		return (_Uninitialized_move(_First, _Last,

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_move@PEAVTileRow@@PEAV1@V?$allocator@VTileRow@@@std@@@std@@YAPEAVTileRow@@PEAV1@00AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Uninitialized_move<TileRow * __ptr64,TileRow * __ptr64,std::allocator<TileRow> >

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Umove<TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
_First$ = 64
_Last$ = 72
_Al$ = 80
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	r9d, BYTE PTR $T1[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range1@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Ptr$ = 72
??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>, COMDAT

; 1658 : 		{	// move initializing [_First, _Last), using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1659 : 		return (_Uninitialized_move(_First, _Last,

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Uninitialized_move@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAV12@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@00AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >

; 1660 : 			_Ptr, this->_Getal()));
; 1661 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@U_Container_proxy@std@@@std@@YA$$QEAU_Container_proxy@0@AEAU10@@Z ; std::forward<std::_Container_proxy>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@$$QEAU31@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@1@PEAU_Container_proxy@1@@Z ; std::allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@std@@YAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address, COMDAT

; 925  : 		{	// return address of mutable _Val

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 926  : 		return (pointer_traits<pointer>::pointer_to(_Val));

	mov	rcx, QWORD PTR _Val$[rsp]
	call	?pointer_to@?$pointer_traits@PEAU_Container_proxy@std@@@std@@SAPEAU_Container_proxy@2@AEAU32@@Z ; std::pointer_traits<std::_Container_proxy * __ptr64>::pointer_to

; 927  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 16
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 16
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>, COMDAT

; 622  : 		{	// construct allocator from _Al

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 620  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$forward@AEBV?$allocator@_W@std@@@std@@YAAEBV?$allocator@_W@0@AEBV10@@Z ; std::forward<std::allocator<wchar_t> const & __ptr64>
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T1[rsp]
	call	??$?0AEBV?$allocator@_W@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@_W@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::allocator<wchar_t> const & __ptr64>
	npad	1

; 623  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
	npad	1

; 624  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z
_TEXT	SEGMENT
_Ptr$ = 48
_File$ = 56
_Line$ = 64
??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z PROC		; std::_Debug_pointer<wchar_t const >, COMDAT

; 923  : 	{	// test pointer for non-singularity, pointers

$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 924  : 	if (_Ptr == 0)

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN2@Debug_poin

; 925  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	r8d, DWORD PTR _Line$[rsp]
	mov	rdx, QWORD PTR _File$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z
$LN2@Debug_poin:

; 926  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z ENDP		; std::_Debug_pointer<wchar_t const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z
_TEXT	SEGMENT
_Test$ = 48
_Ptr$ = 56
_File$ = 64
_Line$ = 72
??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z PROC	; std::_Debug_pointer_if<wchar_t const >, COMDAT

; 937  : 	{	// conditionally test pointer for non-singularity, pointers

$LN4:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	BYTE PTR [rsp+8], cl
	sub	rsp, 40					; 00000028H

; 938  : 	if (_Test && _Ptr == 0)

	movzx	eax, BYTE PTR _Test$[rsp]
	test	eax, eax
	je	SHORT $LN2@Debug_poin
	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN2@Debug_poin

; 939  : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	r8d, DWORD PTR _Line$[rsp]
	mov	rdx, QWORD PTR _File$[rsp]
	lea	rcx, OFFSET FLAT:??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z
$LN2@Debug_poin:

; 940  : 	}

	add	rsp, 40					; 00000028H
	ret	0
??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z ENDP	; std::_Debug_pointer_if<wchar_t const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z PROC			; std::_Unfancy<wchar_t>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z ENDP			; std::_Unfancy<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>, COMDAT

; 1002 : 		{	// destroy object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1003 : 		_Mytraits::destroy(*this, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$destroy@PEA_W@?$allocator_traits@V?$allocator@_W@std@@@std@@SAXAEAV?$allocator@_W@1@PEAPEA_W@Z ; std::allocator_traits<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>

; 1004 : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z PROC	; std::addressof<wchar_t * __ptr64>, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ENDP	; std::addressof<wchar_t * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
	npad	1

; 281  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >, COMDAT

; 952  : 		{	// construct from a related allocator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 951  : 		: _Mybase(_STD forward<_Other>(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@V?$allocator@_W@std@@@std@@YA$$QEAV?$allocator@_W@0@AEAV10@@Z ; std::forward<std::allocator<wchar_t> >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@_W@std@@QEAA@AEBV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>

; 953  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
_First$ = 64
_Last$ = 72
_Al$ = 80
??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<float>,float * __ptr64>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	r9d, BYTE PTR $T1[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range1@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<float>,float * __ptr64>

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<float>,float * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEBAPEBMXZ
_TEXT	SEGMENT
this$ = 8
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEBAPEBMXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Unchecked, COMDAT

; 60   : 		{	// make an unchecked iterator

	mov	QWORD PTR [rsp+8], rcx

; 61   : 		return (_Ptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax+16]

; 62   : 		}

	ret	0
?_Unchecked@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEBAPEBMXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Unchecked
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Parg$ = 72
_Pvector$ = 80
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >, COMDAT

; 47   : 		{	// construct with pointer _Parg

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	npad	1

; 46   : 		: _Ptr(_Parg)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parg$[rsp]
	mov	QWORD PTR [rax+16], rcx

; 48   : 		this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
	npad	1

; 49   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Parg$ = 72
_Pvector$ = 80
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Parg$ = 72
_Pvector$ = 80
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA PROC ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z@4HA ENDP ; `std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z PROC ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rdx, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@AEBU01@@Z	; std::_Iterator_base12::_Iterator_base12
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z ENDP ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA PROC ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA ENDP ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA PROC ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@AEBU01@@Z@4HA ENDP ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA PROC ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA ENDP ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA PROC ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA ENDP ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::~_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ PROC ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ ENDP ; std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA PROC ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA ENDP ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA PROC ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Iterator012@Urandom_access_iterator_tag@std@@M_JPEBMAEBMU_Iterator_base12@2@@std@@QEAA@XZ@4HA ENDP ; `std::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>::_Iterator012<std::random_access_iterator_tag,float,__int64,float const * __ptr64,float const & __ptr64,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
	npad	1

; 281  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z
_TEXT	SEGMENT
$T1 = 32
_First$ = 64
_Last$ = 72
_Al$ = 80
??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>, COMDAT

; 1114 : 	{	// destroy [_First, _Last), choose optimization

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1115 : 		// note that this is an optimization for debug mode codegen;
; 1116 : 		// in release mode the BE removes all of this
; 1117 : 	typedef typename _Alloc::value_type _Val;
; 1118 : 	_Destroy_range1(_First, _Last, _Al, typename conjunction<

	movzx	r9d, BYTE PTR $T1[rsp]
	mov	r8, QWORD PTR _Al$[rsp]
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range1@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@U?$integral_constant@_N$0A@@0@@Z ; std::_Destroy_range1<std::allocator<TileRow>,TileRow * __ptr64>

; 1119 : 		is_trivially_destructible<_Val>,
; 1120 : 		_Uses_default_destroy<_Alloc, _Val *>>::type());
; 1121 : 	}

	add	rsp, 56					; 00000038H
	ret	0
??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>, COMDAT

; 280  : 		{	// construct from forwarded values

$LN4:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 279  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	npad	1

; 281  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 8
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT

; 67   : 		{	// return offset

	mov	QWORD PTR [rsp+8], rcx

; 68   : 		return ((streamoff)(_Myoff + _FPOSOFF(_Fpos)));

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	add	rax, QWORD PTR [rcx+8]

; 69   : 		}

	ret	0
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
_TEXT	SEGMENT
this$ = 16
_Off$ = 24
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 43   : 		{	// construct with stream offset

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi

; 42   : 		: _Myoff(_Off), _Fpos(_Fpz), _Mystate()

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Off$[rsp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 16
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 8
	rep stosb

; 44   : 		}

	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	ret	0
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>, COMDAT

; 622  : 		{	// construct allocator from _Al

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 620  : 		: _Mypair(_One_then_variadic_args_t(),

	mov	rcx, QWORD PTR _Al$[rsp]
	call	??$forward@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::forward<std::_Wrap_alloc<std::allocator<wchar_t> > >
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8, rax
	movzx	edx, BYTE PTR $T1[rsp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><std::_Wrap_alloc<std::allocator<wchar_t> > >
	npad	1

; 623  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
	npad	1

; 624  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Al$ = 72
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@MM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAM$$QEAM@Z ; std::allocator_traits<std::allocator<float> >::construct<float,float>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@M@std@@YA$$QEAMAEAM@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@M@std@@YA$$QEAMAEAM@Z PROC			; std::forward<float>, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@M@std@@YA$$QEAMAEAM@Z ENDP			; std::forward<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@M@std@@YAPEAMAEAM@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@M@std@@YAPEAMAEAM@Z PROC			; std::addressof<float>, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@M@std@@YAPEAMAEAM@Z ENDP			; std::addressof<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float const & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBM@std@@YAAEBMAEBM@Z	; std::forward<float const & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@MAEBM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEBM@Z ; std::allocator_traits<std::allocator<float> >::construct<float,float const & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAM@std@@YAAEAMAEAM@Z	; std::forward<float & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@MAEAM@?$allocator_traits@V?$allocator@M@std@@@std@@SAXAEAV?$allocator@M@1@PEAMAEAM@Z ; std::allocator_traits<std::allocator<float> >::construct<float,float & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@M@std@@YAPEAMPEAM@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@M@std@@YAPEAMPEAM@Z PROC			; std::_Unfancy<float>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@M@std@@YAPEAMPEAM@Z ENDP			; std::_Unfancy<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBM@std@@YAPEBMAEBM@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBM@std@@YAPEBMAEBM@Z PROC		; std::addressof<float const >, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@$$CBM@std@@YAPEBMAEBM@Z ENDP		; std::addressof<float const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEBVTileRow@@@std@@YAAEBVTileRow@@AEBV1@@Z ; std::forward<TileRow const & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@VTileRow@@AEBV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEBV3@@Z ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@AEAVTileRow@@@std@@YAAEAVTileRow@@AEAV1@@Z ; std::forward<TileRow & __ptr64>
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@VTileRow@@AEAV1@@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SAXAEAV?$allocator@VTileRow@@@1@PEAVTileRow@@AEAV3@@Z ; std::allocator_traits<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z PROC ; std::_Unfancy<TileRow>, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ENDP ; std::_Unfancy<TileRow>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@$$CBVTileRow@@@std@@YAPEBVTileRow@@AEBV1@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@$$CBVTileRow@@@std@@YAPEBVTileRow@@AEBV1@@Z PROC ; std::addressof<TileRow const >, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@$$CBVTileRow@@@std@@YAPEBVTileRow@@AEBV1@@Z ENDP ; std::addressof<TileRow const >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
<_Args_0>$ = 64
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 994  : 		{	// construct _Ty(_Types...) at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 995  : 		_Mytraits::construct(*this, _Ptr,

	mov	rcx, QWORD PTR <_Args_0>$[rsp]
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@1@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV31@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 996  : 			_STD forward<_Types>(_Args)...);
; 997  : 		}

	add	rsp, 40					; 00000028H
	ret	0
??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
;	COMDAT ??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 8
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 1275 : 	{	// forward an lvalue as either an lvalue or an rvalue

	mov	QWORD PTR [rsp+8], rcx

; 1276 : 	return (static_cast<_Ty&&>(_Arg));

	mov	rax, QWORD PTR _Arg$[rsp]

; 1277 : 	}

	ret	0
??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 8
??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 739  : 	{	// do nothing for plain pointers

	mov	QWORD PTR [rsp+8], rcx

; 740  : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]

; 741  : 	}

	ret	0
??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 8
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 724  : 	{	// return address of _Val

	mov	QWORD PTR [rsp+8], rcx

; 725  : 	return (__builtin_addressof(_Val));

	mov	rax, QWORD PTR _Val$[rsp]

; 726  : 	}

	ret	0
??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor', COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 152				; 00000098H
	mov	rcx, rax
	call	??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 152				; 00000098H
	mov	rcx, rax
	call	QWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 40					; 00000028H
	ret	0
??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 152				; 00000098H
	mov	rcx, rax
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 152				; 00000098H
	mov	edx, 248				; 000000f8H
	mov	rcx, rax
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 152				; 00000098H
	add	rsp, 40					; 00000028H
	ret	0
??_G?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 120				; 00000078H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_G?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z
_TEXT	SEGMENT
_State$ = 0
this$ = 32
_Mode$ = 40
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate, COMDAT

; 354  : 		{	// convert open mode to stream state bits

$LN7:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 355  : 		_Strstate _State = (_Strstate)0;

	mov	DWORD PTR _State$[rsp], 0

; 356  : 		if (!(_Mode & ios_base::in))

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN2@Getstate

; 357  : 			_State |= _Noread;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 4
	mov	DWORD PTR _State$[rsp], eax
$LN2@Getstate:

; 358  : 		if (!(_Mode & ios_base::out))

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN3@Getstate

; 359  : 			_State |= _Constant;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 2
	mov	DWORD PTR _State$[rsp], eax
$LN3@Getstate:

; 360  : 		if (_Mode & ios_base::app)

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN4@Getstate

; 361  : 			_State |= _Append;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 8
	mov	DWORD PTR _State$[rsp], eax
$LN4@Getstate:

; 362  : 		if (_Mode & ios_base::ate)

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN5@Getstate

; 363  : 			_State |= _Atend;

	mov	eax, DWORD PTR _State$[rsp]
	or	eax, 16
	mov	DWORD PTR _State$[rsp], eax
$LN5@Getstate:

; 364  : 		return (_State);

	mov	eax, DWORD PTR _State$[rsp]

; 365  : 		}

	add	rsp, 24
	ret	0
?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ
_TEXT	SEGMENT
tv88 = 32
tv128 = 40
this$ = 64
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT

; 337  : 		{	// discard any allocated buffer and clear pointers

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 338  : 		if (_Mystate & _Allocated)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@Tidy

; 339  : 			_Al.deallocate(_Mysb::eback(),

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN4@Tidy
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv88[rsp], rax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv88[rsp], rax
$LN5@Tidy:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv88[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	QWORD PTR tv128[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 116				; 00000074H
	mov	rdx, QWORD PTR tv128[rsp]
	mov	r8, rdx
	mov	rdx, rax
	call	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN2@Tidy:

; 340  : 				(_Mysb::pptr() != 0 ? _Mysb::epptr()
; 341  : 					: _Mysb::egptr()) - _Mysb::eback());
; 342  : 		_Mysb::setg(0, 0, 0);

	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 343  : 		_Mysb::setp(0, 0);

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W0@Z

; 344  : 		_Seekhigh = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+104], 0

; 345  : 		_Mystate &= ~_Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, -2
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax

; 346  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z
_TEXT	SEGMENT
_Pnew$1 = 32
tv144 = 40
this$ = 64
_Ptr$ = 72
_Count$ = 80
_State$ = 88
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init, COMDAT

; 310  : 		{	// initialize buffer to [_Ptr, _Ptr + _Count), set state

$LN9:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 311  : 		_Seekhigh = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+104], 0

; 312  : 		_Mystate = _State;

	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR _State$[rsp]
	mov	DWORD PTR [rax+112], ecx

; 313  : 
; 314  : 		if (_Count != 0
; 315  : 			&& (_Mystate & (_Noread | _Constant)) != (_Noread | _Constant))

	cmp	QWORD PTR _Count$[rsp], 0
	je	$LN2@Init
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 6
	cmp	eax, 6
	je	$LN2@Init

; 316  : 			{	// finite buffer that can be read or written, set it up
; 317  : 			_Elem *_Pnew = _Al.allocate(_Count);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	QWORD PTR _Pnew$1[rsp], rax

; 318  : 			_Traits::copy(_Pnew, _Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Pnew$1[rsp]
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy

; 319  : 			_Seekhigh = _Pnew + _Count;

	mov	rax, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax

; 320  : 
; 321  : 			if (!(_Mystate & _Noread))

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN3@Init

; 322  : 				_Mysb::setg(_Pnew, _Pnew,

	mov	rax, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	r9, rax
	mov	r8, QWORD PTR _Pnew$1[rsp]
	mov	rdx, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN3@Init:

; 323  : 					_Pnew + _Count);	// setup read buffer
; 324  : 			if (!(_Mystate & _Constant))

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN4@Init

; 325  : 				{	// setup write buffer, and maybe read buffer
; 326  : 				_Mysb::setp(_Pnew,

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 24
	test	eax, eax
	je	SHORT $LN7@Init
	mov	rax, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR tv144[rsp], rax
	jmp	SHORT $LN8@Init
$LN7@Init:
	mov	rax, QWORD PTR _Pnew$1[rsp]
	mov	QWORD PTR tv144[rsp], rax
$LN8@Init:
	mov	rax, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	r9, rax
	mov	r8, QWORD PTR tv144[rsp]
	mov	rdx, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 327  : 					(_Mystate & (_Atend | _Append)) ? _Pnew + _Count : _Pnew,
; 328  : 					_Pnew + _Count);
; 329  : 				if (_Mysb::gptr() == 0)

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	jne	SHORT $LN5@Init

; 330  : 					_Mysb::setg(_Pnew, 0, _Pnew);

	mov	r9, QWORD PTR _Pnew$1[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Pnew$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN5@Init:
$LN4@Init:

; 331  : 				}
; 332  : 			_Mystate |= _Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	or	eax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax
$LN2@Init:

; 333  : 			}
; 334  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 32
tv151 = 40
tv182 = 48
tv189 = 56
tv228 = 64
this$ = 96
__$ReturnUdt$ = 104
_Ptr$ = 112
_Mode$ = 120
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos, COMDAT

; 276  : 		{	// change position to _Pos, according to _Mode

$LN15:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 277  : 		streamoff _Off = (streamoff)_Ptr;

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	QWORD PTR _Off$[rsp], rax

; 278  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN2@seekpos
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+104], rax
	jae	SHORT $LN2@seekpos

; 279  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax
$LN2@seekpos:

; 280  : 
; 281  : 		if (_Off == _BADOFF)

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Off$[rsp], rax
	jne	SHORT $LN3@seekpos
	jmp	$LN4@seekpos
$LN3@seekpos:

; 282  : 			;
; 283  : 		else if (_Mode & ios_base::in && _Mysb::gptr() != 0)

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 1
	test	eax, eax
	je	$LN5@seekpos
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	$LN5@seekpos

; 284  : 			{	// position within read buffer
; 285  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	cmp	QWORD PTR _Off$[rsp], 0
	jl	$LN7@seekpos
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+104]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	cmp	QWORD PTR _Off$[rsp], rax
	jg	$LN7@seekpos

; 286  : 				{	// change read position
; 287  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv151[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv151[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	add	rax, QWORD PTR _Off$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z

; 288  : 				if (_Mode & ios_base::out && _Mysb::pptr() != 0)

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN9@seekpos
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN9@seekpos

; 289  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv182[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv189[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv182[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv189[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN9@seekpos:

; 290  : 						_Mysb::epptr());	// change write position to match
; 291  : 				}
; 292  : 			else

	jmp	SHORT $LN8@seekpos
$LN7@seekpos:

; 293  : 				_Off = _BADOFF;

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN8@seekpos:
	jmp	$LN6@seekpos
$LN5@seekpos:

; 294  : 			}
; 295  : 		else if (_Mode & ios_base::out && _Mysb::pptr() != 0)

	mov	eax, DWORD PTR _Mode$[rsp]
	and	eax, 2
	test	eax, eax
	je	$LN10@seekpos
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN10@seekpos

; 296  : 			{	// position within write buffer
; 297  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	cmp	QWORD PTR _Off$[rsp], 0
	jl	SHORT $LN12@seekpos
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+104]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	cmp	QWORD PTR _Off$[rsp], rax
	jg	SHORT $LN12@seekpos

; 298  : 				_Mysb::pbump((int)(_Mysb::eback()

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv228[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv228[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	add	rax, QWORD PTR _Off$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z

; 299  : 					- _Mysb::pptr() + _Off));	// change write position
; 300  : 			else

	jmp	SHORT $LN13@seekpos
$LN12@seekpos:

; 301  : 				_Off = _BADOFF;

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN13@seekpos:

; 302  : 			}
; 303  : 		else

	jmp	SHORT $LN11@seekpos
$LN10@seekpos:

; 304  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN11@seekpos:
$LN6@seekpos:
$LN4@seekpos:

; 305  : 		return (streampos(_Off));

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 306  : 		}

	add	rsp, 88					; 00000058H
	ret	0
?seekpos@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
tv146 = 32
tv178 = 40
tv209 = 48
tv216 = 56
tv251 = 64
tv283 = 72
this$ = 96
__$ReturnUdt$ = 104
_Off$ = 112
_Way$ = 120
_Which$ = 128
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff, COMDAT

; 227  : 		{	// change position by _Off, according to _Way, _Mode

$LN24:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 228  : 		if (_Mysb::pptr() != 0 && _Seekhigh < _Mysb::pptr())

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN2@seekoff
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+104], rax
	jae	SHORT $LN2@seekoff

; 229  : 			_Seekhigh = _Mysb::pptr();	// update high-water pointer

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax
$LN2@seekoff:

; 230  : 
; 231  : 		if (_Which & ios_base::in && _Mysb::gptr() != 0)

	mov	eax, DWORD PTR _Which$[rsp]
	and	eax, 1
	test	eax, eax
	je	$LN3@seekoff
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	$LN3@seekoff

; 232  : 			{	// position within read buffer
; 233  : 			if (_Way == ios_base::end)

	cmp	DWORD PTR _Way$[rsp], 2
	jne	SHORT $LN5@seekoff

; 234  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+104]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Off$[rsp], rax

; 235  : 			else if (_Way == ios_base::cur

	jmp	SHORT $LN6@seekoff
$LN5@seekoff:

; 236  : 				&& (_Which & ios_base::out) == 0)

	cmp	DWORD PTR _Way$[rsp], 1
	jne	SHORT $LN7@seekoff
	mov	eax, DWORD PTR _Which$[rsp]
	and	eax, 2
	test	eax, eax
	jne	SHORT $LN7@seekoff

; 237  : 				_Off += (off_type)(_Mysb::gptr() - _Mysb::eback());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv146[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv146[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Off$[rsp], rax
	jmp	SHORT $LN8@seekoff
$LN7@seekoff:

; 238  : 			else if (_Way != ios_base::beg)

	cmp	DWORD PTR _Way$[rsp], 0
	je	SHORT $LN9@seekoff

; 239  : 				_Off = _BADOFF;

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN9@seekoff:
$LN8@seekoff:
$LN6@seekoff:

; 240  : 
; 241  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	cmp	QWORD PTR _Off$[rsp], 0
	jl	$LN10@seekoff
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+104]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	cmp	QWORD PTR _Off$[rsp], rax
	jg	$LN10@seekoff

; 242  : 				{	// change read position
; 243  : 				_Mysb::gbump((int)(_Mysb::eback() - _Mysb::gptr() + _Off));

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv178[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv178[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	add	rax, QWORD PTR _Off$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z

; 244  : 				if (_Which & ios_base::out && _Mysb::pptr() != 0)

	mov	eax, DWORD PTR _Which$[rsp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN12@seekoff
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN12@seekoff

; 245  : 					_Mysb::setp(_Mysb::pbase(), _Mysb::gptr(),

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv209[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv216[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv209[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv216[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN12@seekoff:

; 246  : 						_Mysb::epptr());	// change write position to match
; 247  : 				}
; 248  : 			else

	jmp	SHORT $LN11@seekoff
$LN10@seekoff:

; 249  : 				_Off = _BADOFF;

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN11@seekoff:
	jmp	$LN4@seekoff
$LN3@seekoff:

; 250  : 			}
; 251  : 		else if (_Which & ios_base::out && _Mysb::pptr() != 0)

	mov	eax, DWORD PTR _Which$[rsp]
	and	eax, 2
	test	eax, eax
	je	$LN13@seekoff
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	$LN13@seekoff

; 252  : 			{	// position within write buffer
; 253  : 			if (_Way == ios_base::end)

	cmp	DWORD PTR _Way$[rsp], 2
	jne	SHORT $LN15@seekoff

; 254  : 				_Off += (off_type)(_Seekhigh - _Mysb::eback());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+104]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Off$[rsp], rax
	jmp	SHORT $LN16@seekoff
$LN15@seekoff:

; 255  : 			else if (_Way == ios_base::cur)

	cmp	DWORD PTR _Way$[rsp], 1
	jne	SHORT $LN17@seekoff

; 256  : 				_Off += (off_type)(_Mysb::pptr() - _Mysb::eback());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv251[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv251[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	rcx, QWORD PTR _Off$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Off$[rsp], rax
	jmp	SHORT $LN18@seekoff
$LN17@seekoff:

; 257  : 			else if (_Way != ios_base::beg)

	cmp	DWORD PTR _Way$[rsp], 0
	je	SHORT $LN19@seekoff

; 258  : 				_Off = _BADOFF;

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN19@seekoff:
$LN18@seekoff:
$LN16@seekoff:

; 259  : 
; 260  : 			if (0 <= _Off && _Off <= _Seekhigh - _Mysb::eback())

	cmp	QWORD PTR _Off$[rsp], 0
	jl	SHORT $LN20@seekoff
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+104]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	cmp	QWORD PTR _Off$[rsp], rax
	jg	SHORT $LN20@seekoff

; 261  : 				_Mysb::pbump((int)(_Mysb::eback()

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv283[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv283[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	add	rax, QWORD PTR _Off$[rsp]
	mov	edx, eax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z

; 262  : 					- _Mysb::pptr() + _Off));	// change write position
; 263  : 			else

	jmp	SHORT $LN21@seekoff
$LN20@seekoff:

; 264  : 				_Off = _BADOFF;

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN21@seekoff:
	jmp	SHORT $LN14@seekoff
$LN13@seekoff:

; 265  : 			}
; 266  : 
; 267  : 		else if (_Off != 0)

	cmp	QWORD PTR _Off$[rsp], 0
	je	SHORT $LN22@seekoff

; 268  : 
; 269  : 
; 270  : 			_Off = _BADOFF;	// neither read nor write buffer selected, fail

	mov	rax, QWORD PTR __imp_?_BADOFF@std@@3_JB
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Off$[rsp], rax
$LN22@seekoff:
$LN14@seekoff:
$LN4@seekoff:

; 271  : 		return (pos_type(_Off));

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 272  : 		}

	add	rsp, 88					; 00000058H
	ret	0
?seekoff@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ
_TEXT	SEGMENT
tv77 = 32
tv140 = 40
tv184 = 48
this$ = 80
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow, COMDAT

; 207  : 		{	// get an element from stream, but don't point past it

$LN11:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 208  : 		if (_Mysb::gptr() == 0)

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	jne	SHORT $LN2@underflow

; 209  : 			return (_Traits::eof());	// no character buffer, fail

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN1@underflow
	jmp	$LN3@underflow
$LN2@underflow:

; 210  : 		else if (_Mysb::gptr() < _Mysb::egptr())

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv77[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?egptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv77[rsp]
	cmp	rcx, rax
	jae	SHORT $LN4@underflow

; 211  : 			return (_Traits::to_int_type(*_Mysb::gptr()));	// return buffered

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, rax
	call	?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z ; std::char_traits<wchar_t>::to_int_type
	jmp	$LN1@underflow

; 212  : 		else if (_Mystate & _Noread || _Mysb::pptr() == 0

	jmp	$LN5@underflow
$LN4@underflow:

; 213  : 			|| (_Mysb::pptr() <= _Mysb::gptr() && _Seekhigh <= _Mysb::gptr()))

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	jne	SHORT $LN8@underflow
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN8@underflow
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv140[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv140[rsp]
	cmp	rcx, rax
	ja	SHORT $LN6@underflow
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+104], rax
	ja	SHORT $LN6@underflow
$LN8@underflow:

; 214  : 			return (_Traits::eof());	// can't read, fail

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	SHORT $LN1@underflow

; 215  : 		else

	jmp	SHORT $LN7@underflow
$LN6@underflow:

; 216  : 			{	// extend read buffer into written area, then return buffered
; 217  : 			if (_Seekhigh < _Mysb::pptr())

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rcx+104], rax
	jae	SHORT $LN9@underflow

; 218  : 				_Seekhigh = _Mysb::pptr();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax
$LN9@underflow:

; 219  : 			_Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Seekhigh);

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv184[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	mov	r9, QWORD PTR [rcx+104]
	mov	rcx, QWORD PTR tv184[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 220  : 			return (_Traits::to_int_type(*_Mysb::gptr()));

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, rax
	call	?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z ; std::char_traits<wchar_t>::to_int_type
$LN7@underflow:
$LN5@underflow:
$LN3@underflow:
$LN1@underflow:

; 221  : 			}
; 222  : 		}

	add	rsp, 72					; 00000048H
	ret	0
?underflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGXZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 34
$T3 = 36
tv155 = 38
tv76 = 40
this$ = 64
_Meta$ = 72
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail, COMDAT

; 190  : 		{	// put an element back to stream

$LN7:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 191  : 		if (_Mysb::gptr() == 0
; 192  : 			|| _Mysb::gptr() <= _Mysb::eback()
; 193  : 			|| (!_Traits::eq_int_type(_Traits::eof(), _Meta)

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	$LN4@pbackfail
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv76[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv76[rsp]
	cmp	rcx, rax
	jbe	SHORT $LN4@pbackfail
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T1[rsp], ax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z ; std::char_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@pbackfail
	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z ; std::char_traits<wchar_t>::to_char_type
	mov	WORD PTR $T2[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	ecx, 2
	imul	rcx, rcx, -1
	add	rax, rcx
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rsp]
	call	?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z	; std::char_traits<wchar_t>::eq
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@pbackfail
	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN2@pbackfail
$LN4@pbackfail:

; 194  : 			&& !_Traits::eq(_Traits::to_char_type(_Meta), _Mysb::gptr()[-1])
; 195  : 			&& _Mystate & _Constant))
; 196  : 			return (_Traits::eof());	// can't put back, fail

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	SHORT $LN1@pbackfail

; 197  : 		else

	jmp	SHORT $LN3@pbackfail
$LN2@pbackfail:

; 198  : 			{	// back up one position and store put-back character
; 199  : 			_Mysb::gbump(-1);

	mov	edx, -1
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gbump@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXH@Z

; 200  : 			if (!_Traits::eq_int_type(_Traits::eof(), _Meta))

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T3[rsp], ax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z ; std::char_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@pbackfail

; 201  : 				*_Mysb::gptr() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z ; std::char_traits<wchar_t>::to_char_type
	mov	WORD PTR tv155[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	movzx	ecx, WORD PTR tv155[rsp]
	mov	WORD PTR [rax], cx
$LN5@pbackfail:

; 202  : 			return (_Traits::not_eof(_Meta));

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?not_eof@?$char_traits@_W@std@@SAGAEBG@Z ; std::char_traits<wchar_t>::not_eof
$LN3@pbackfail:
$LN1@pbackfail:

; 203  : 			}
; 204  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?pbackfail@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z
_TEXT	SEGMENT
_Newptr$1 = 32
_Newsize$2 = 40
$T3 = 48
tv341 = 50
tv317 = 52
_Inc$4 = 56
_Oldptr$5 = 64
_Oldsize$6 = 72
tv196 = 80
tv200 = 88
tv136 = 96
tv159 = 104
tv187 = 112
tv268 = 120
tv279 = 128
tv314 = 136
this$ = 160
_Meta$ = 168
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow, COMDAT

; 120  : 		{	// put an element to stream

$LN24:
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 152				; 00000098H

; 121  : 		if (_Mystate & _Constant)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN4@overflow

; 122  : 			return (_Traits::eof());	// array nonmutable, fail

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN1@overflow
	jmp	SHORT $LN5@overflow
$LN4@overflow:

; 123  : 		else if (_Traits::eq_int_type(_Traits::eof(), _Meta))

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	mov	WORD PTR $T3[rsp], ax
	lea	rdx, QWORD PTR _Meta$[rsp]
	lea	rcx, QWORD PTR $T3[rsp]
	call	?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z ; std::char_traits<wchar_t>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@overflow

; 124  : 			return (_Traits::not_eof(_Meta));	// EOF, return success code

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?not_eof@?$char_traits@_W@std@@SAGAEBG@Z ; std::char_traits<wchar_t>::not_eof
	jmp	$LN1@overflow
$LN6@overflow:
$LN5@overflow:

; 125  : 
; 126  : 		if (_Mystate & _Append
; 127  : 			&& _Mysb::pptr() != 0 && _Mysb::pptr() < _Seekhigh)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 8
	test	eax, eax
	je	SHORT $LN7@overflow
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN7@overflow
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR this$[rsp]
	cmp	rax, QWORD PTR [rcx+104]
	jae	SHORT $LN7@overflow

; 128  : 			_Mysb::setp(_Mysb::pbase(), _Seekhigh, _Mysb::epptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv136[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv136[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR this$[rsp]
	mov	r8, QWORD PTR [rcx+104]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN7@overflow:

; 129  : 
; 130  : 		if (_Mysb::pptr() != 0
; 131  : 			&& _Mysb::pptr() < _Mysb::epptr())

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	je	SHORT $LN8@overflow
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv159[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv159[rsp]
	cmp	rcx, rax
	jae	SHORT $LN8@overflow

; 132  : 			{	// room in buffer, store it
; 133  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z ; std::char_traits<wchar_t>::to_char_type
	mov	WORD PTR tv341[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ
	movzx	ecx, WORD PTR tv341[rsp]
	mov	WORD PTR [rax], cx

; 134  : 			return (_Meta);

	movzx	eax, WORD PTR _Meta$[rsp]
	jmp	$LN1@overflow

; 135  : 			}
; 136  : 		else

	jmp	$LN9@overflow
$LN8@overflow:

; 137  : 			{	// grow buffer and store element
; 138  : 			size_t _Oldsize = _Mysb::pptr() == 0

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	test	rax, rax
	jne	SHORT $LN20@overflow
	mov	QWORD PTR tv196[rsp], 0
	jmp	SHORT $LN21@overflow
$LN20@overflow:
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?epptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR tv187[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	rcx, QWORD PTR tv187[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	QWORD PTR tv196[rsp], rax
$LN21@overflow:
	mov	rax, QWORD PTR tv196[rsp]
	mov	QWORD PTR _Oldsize$6[rsp], rax

; 139  : 				? 0 : _Mysb::epptr() - _Mysb::eback();
; 140  : 			size_t _Newsize = _Oldsize;

	mov	rax, QWORD PTR _Oldsize$6[rsp]
	mov	QWORD PTR _Newsize$2[rsp], rax

; 141  : 			size_t _Inc = _Newsize / 2 < _MINSIZE

	xor	edx, edx
	mov	rax, QWORD PTR _Newsize$2[rsp]
	mov	ecx, 2
	div	rcx
	cmp	rax, 32					; 00000020H
	jae	SHORT $LN22@overflow
	mov	QWORD PTR tv200[rsp], 32		; 00000020H
	jmp	SHORT $LN23@overflow
$LN22@overflow:
	xor	edx, edx
	mov	rax, QWORD PTR _Newsize$2[rsp]
	mov	ecx, 2
	div	rcx
	mov	QWORD PTR tv200[rsp], rax
$LN23@overflow:
	mov	rax, QWORD PTR tv200[rsp]
	mov	QWORD PTR _Inc$4[rsp], rax
$LN2@overflow:

; 142  : 				? _MINSIZE : _Newsize / 2;	// grow by 50 per cent
; 143  : 
; 144  : 			while (0 < _Inc && INT_MAX - _Inc < _Newsize)

	cmp	QWORD PTR _Inc$4[rsp], 0
	jbe	SHORT $LN3@overflow
	mov	eax, 2147483647				; 7fffffffH
	sub	rax, QWORD PTR _Inc$4[rsp]
	cmp	rax, QWORD PTR _Newsize$2[rsp]
	jae	SHORT $LN3@overflow

; 145  : 				_Inc /= 2;	// increment causes overflow, halve it

	xor	edx, edx
	mov	rax, QWORD PTR _Inc$4[rsp]
	mov	ecx, 2
	div	rcx
	mov	QWORD PTR _Inc$4[rsp], rax
	jmp	SHORT $LN2@overflow
$LN3@overflow:

; 146  : 			if (_Inc == 0)

	cmp	QWORD PTR _Inc$4[rsp], 0
	jne	SHORT $LN10@overflow

; 147  : 				return (_Traits::eof());	// buffer can't grow, fail

	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	jmp	$LN1@overflow
$LN10@overflow:

; 148  : 
; 149  : 			_Newsize += _Inc;

	mov	rax, QWORD PTR _Inc$4[rsp]
	mov	rcx, QWORD PTR _Newsize$2[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Newsize$2[rsp], rax

; 150  : 
; 151  : 			_Elem *_Newptr = _Al.allocate(_Newsize);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rdx, QWORD PTR _Newsize$2[rsp]
	mov	rcx, rax
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate
	mov	QWORD PTR _Newptr$1[rsp], rax

; 152  : 			_Elem *_Oldptr = _Mysb::eback();

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?eback@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	mov	QWORD PTR _Oldptr$5[rsp], rax

; 153  : 
; 154  : 			if (0 < _Oldsize)

	cmp	QWORD PTR _Oldsize$6[rsp], 0
	jbe	SHORT $LN11@overflow

; 155  : 				_Traits::copy(_Newptr, _Oldptr, _Oldsize);

	mov	r8, QWORD PTR _Oldsize$6[rsp]
	mov	rdx, QWORD PTR _Oldptr$5[rsp]
	mov	rcx, QWORD PTR _Newptr$1[rsp]
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
$LN11@overflow:

; 156  : 
; 157  : 			if (_Oldsize == 0)

	cmp	QWORD PTR _Oldsize$6[rsp], 0
	jne	$LN12@overflow

; 158  : 				{	// first growth, set up pointers
; 159  : 				_Seekhigh = _Newptr;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Newptr$1[rsp]
	mov	QWORD PTR [rax+104], rcx

; 160  : 				_Mysb::setp(_Newptr, _Newptr + _Newsize);

	mov	rax, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR _Newsize$2[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	r8, rax
	mov	rdx, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W0@Z

; 161  : 				if (_Mystate & _Noread)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN14@overflow

; 162  : 					_Mysb::setg(_Newptr, 0, _Newptr);

	mov	r9, QWORD PTR _Newptr$1[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 163  : 				else

	jmp	SHORT $LN15@overflow
$LN14@overflow:

; 164  : 					_Mysb::setg(_Newptr, _Newptr, _Newptr + 1);

	mov	rax, QWORD PTR _Newptr$1[rsp]
	add	rax, 2
	mov	r9, rax
	mov	r8, QWORD PTR _Newptr$1[rsp]
	mov	rdx, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN15@overflow:

; 165  : 				}
; 166  : 			else

	jmp	$LN13@overflow
$LN12@overflow:

; 167  : 				{	// not first growth, adjust pointers
; 168  : 				_Seekhigh = _Newptr + (_Seekhigh - _Oldptr);

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Oldptr$5[rsp]
	mov	rax, QWORD PTR [rax+104]
	sub	rax, rcx
	sar	rax, 1
	mov	rcx, QWORD PTR _Newptr$1[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rcx+104], rax

; 169  : 				_Mysb::setp(_Newptr + (_Mysb::pbase() - _Oldptr),

	mov	rax, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR _Newsize$2[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR tv268[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	sub	rax, QWORD PTR _Oldptr$5[rsp]
	sar	rax, 1
	mov	rcx, QWORD PTR _Newptr$1[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR tv279[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pbase@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	sub	rax, QWORD PTR _Oldptr$5[rsp]
	sar	rax, 1
	mov	rcx, QWORD PTR _Newptr$1[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	rcx, QWORD PTR tv268[rsp]
	mov	r9, rcx
	mov	rcx, QWORD PTR tv279[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setp@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 170  : 					_Newptr + (_Mysb::pptr() - _Oldptr),
; 171  : 					_Newptr + _Newsize);
; 172  : 				if (_Mystate & _Noread)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN16@overflow

; 173  : 					_Mysb::setg(_Newptr, 0, _Newptr);

	mov	r9, QWORD PTR _Newptr$1[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z

; 174  : 				else

	jmp	SHORT $LN17@overflow
$LN16@overflow:

; 175  : 					_Mysb::setg(_Newptr,

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?pptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	add	rax, 2
	mov	QWORD PTR tv314[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?gptr@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEBAPEA_WXZ
	sub	rax, QWORD PTR _Oldptr$5[rsp]
	sar	rax, 1
	mov	rcx, QWORD PTR _Newptr$1[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	rcx, QWORD PTR tv314[rsp]
	mov	r9, rcx
	mov	r8, rax
	mov	rdx, QWORD PTR _Newptr$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?setg@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAXPEA_W00@Z
$LN17@overflow:
$LN13@overflow:

; 176  : 						_Newptr + (_Mysb::gptr() - _Oldptr),
; 177  : 						_Mysb::pptr() + 1);
; 178  : 				}
; 179  : 
; 180  : 			if (_Mystate & _Allocated)

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN18@overflow

; 181  : 				_Al.deallocate(_Oldptr, _Oldsize);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	r8, QWORD PTR _Oldsize$6[rsp]
	mov	rdx, QWORD PTR _Oldptr$5[rsp]
	mov	rcx, rax
	call	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ; std::allocator<wchar_t>::deallocate
$LN18@overflow:

; 182  : 			_Mystate |= _Allocated;

	mov	rax, QWORD PTR this$[rsp]
	mov	eax, DWORD PTR [rax+112]
	or	eax, 1
	mov	rcx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rcx+112], eax

; 183  : 
; 184  : 			*_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

	lea	rcx, QWORD PTR _Meta$[rsp]
	call	?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z ; std::char_traits<wchar_t>::to_char_type
	mov	WORD PTR tv317[rsp], ax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_?_Pninc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAAPEA_WXZ
	movzx	ecx, WORD PTR tv317[rsp]
	mov	WORD PTR [rax], cx

; 185  : 			return (_Meta);

	movzx	eax, WORD PTR _Meta$[rsp]
$LN9@overflow:
$LN1@overflow:

; 186  : 			}
; 187  : 		}

	add	rsp, 152				; 00000098H
	ret	0
?overflow@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@MEAAGG@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 75   : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rax], rcx

; 76   : 		_Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXXZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	npad	1

; 77   : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
_TEXT	SEGMENT
tv84 = 32
tv88 = 40
$T1 = 48
this$ = 80
_Str$ = 88
_Mode$ = 96
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z PROC ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 34   : 	explicit basic_stringbuf(const _Mystr& _Str,

$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 35   : 		ios_base::openmode _Mode = ios_base::in | ios_base::out)
; 36   : 		{	// construct character buffer from string, mode

	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IEAA@XZ
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_7?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 116				; 00000074H
	mov	rcx, rax
	call	??0?$allocator@_W@std@@QEAA@XZ		; std::allocator<wchar_t>::allocator<wchar_t>

; 37   : 		_Init(_Str.c_str(), _Str.size(), _Getstate(_Mode));

	mov	edx, DWORD PTR _Mode$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getstate@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAHH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Getstate
	mov	DWORD PTR tv84[rsp], eax
	mov	rcx, QWORD PTR _Str$[rsp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR _Str$[rsp]
	call	?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
	mov	ecx, DWORD PTR tv84[rsp]
	mov	r9d, ecx
	mov	rcx, QWORD PTR tv88[rsp]
	mov	r8, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Init@?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAXPEB_W_KH@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Init
	npad	1

; 38   : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 72					; 00000048H
	ret	0
??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ENDP ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv84 = 32
tv88 = 40
$T1 = 48
this$ = 80
_Str$ = 88
_Mode$ = 96
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv84 = 32
tv88 = 40
$T1 = 48
this$ = 80
_Str$ = 88
_Mode$ = 96
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	QWORD PTR __imp_??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 635  : 		{	// destroy the object

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax-152]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rcx+rax-152], rdx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax-152]
	movsxd	rax, DWORD PTR [rax+4]
	sub	rax, 152				; 00000098H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx-152]
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+rcx-156], eax

; 636  : 		}

	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 128				; 00000080H
	mov	rcx, rax
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	sub	rax, 120				; 00000078H
	mov	rcx, rax
	call	QWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	sub	rcx, 152				; 00000098H
	add	rcx, 32					; 00000020H
	call	QWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	sub	rcx, 152				; 00000098H
	add	rcx, 24
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	sub	rcx, 152				; 00000098H
	add	rcx, 32					; 00000020H
	call	QWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	sub	rcx, 152				; 00000098H
	add	rcx, 24
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\sstream
;	COMDAT ??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z PROC ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 598  : 		{	// construct character buffer from NTCS

$LN8:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0
	cmp	DWORD PTR $initVBases$[rsp], 0
	je	SHORT $LN2@basic_stri
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_istream@_WU?$char_traits@_W@std@@@1@@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rsp]
	lea	rcx, OFFSET FLAT:??_8?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@7B?$basic_ostream@_WU?$char_traits@_W@std@@@1@@
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 152				; 00000098H
	mov	rcx, rax
	call	QWORD PTR __imp_??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IEAA@XZ
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
$LN2@basic_stri:

; 596  : 		: _Mybase(&_Stringbuffer),

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	xor	r8d, r8d
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	QWORD PTR __imp_??0?$basic_iostream@_WU?$char_traits@_W@std@@@std@@QEAA@PEAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z
	npad	1

; 598  : 		{	// construct character buffer from NTCS

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR this$[rsp]
	lea	rdx, OFFSET FLAT:??_7?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@6B@
	mov	QWORD PTR [rcx+rax], rdx
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	sub	rax, 152				; 00000098H
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx]
	movsxd	rcx, DWORD PTR [rcx+4]
	mov	rdx, QWORD PTR this$[rsp]
	mov	DWORD PTR [rdx+rcx-4], eax

; 597  : 			_Stringbuffer(_Str, _Mode)

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 24
	mov	r8d, DWORD PTR _Mode$[rsp]
	mov	rdx, QWORD PTR _Str$[rsp]
	mov	rcx, rax
	call	??0?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 599  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ENDP ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 152				; 00000098H
	call	QWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 32					; 00000020H
	call	QWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 24
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN5@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 152				; 00000098H
	call	QWORD PTR __imp_??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
$LN5@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 32					; 00000020H
	call	QWORD PTR __imp_??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Str$ = 72
_Mode$ = 80
$initVBases$ = 88
?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA PROC ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 24
	call	??1?$basic_stringbuf@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@UEAA@XZ ; std::basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z@4HA ENDP ; `std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z
_TEXT	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z PROC ; parsePattern, COMDAT

; 524  : static int parsePattern(std::wstring str, TilePattern* pat) {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 1080				; 00000438H
	mov	QWORD PTR $T7[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 525  : 	pat->rows.clear();

	mov	rax, QWORD PTR pat$[rsp]
	add	rax, 40					; 00000028H
	mov	rcx, rax
	call	?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ ; std::vector<TileRow,std::allocator<TileRow> >::clear

; 526  : 	pat->heights.clear();

	mov	rax, QWORD PTR pat$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ ; std::vector<float,std::allocator<float> >::clear

; 527  : 
; 528  : 	std::vector<std::wstring> rowStrings = std::vector<std::wstring>();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR rowStrings$[rsp]
	call	?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR rowStrings$[rsp]
	call	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	npad	1

; 529  : 	tokenize(str, rowStrings, L"/");

	lea	rdx, OFFSET FLAT:$SG188020
	lea	rcx, QWORD PTR $T8[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	lea	r8, QWORD PTR $T8[rsp]
	lea	rdx, QWORD PTR rowStrings$[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z ; tokenize
	npad	1
	lea	rcx, QWORD PTR $T8[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 530  : 
; 531  : 	for (int i=0; i<rowStrings.size(); i++) {		

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@parsePatte
$LN2@parsePatte:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@parsePatte:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv82[rsp], rax
	lea	rcx, QWORD PTR rowStrings$[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	mov	rcx, QWORD PTR tv82[rsp]
	cmp	rcx, rax
	jae	$LN3@parsePatte

; 532  : 		std::vector<std::wstring> row = std::vector<std::wstring>();

	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR row$11[rsp]
	call	?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR row$11[rsp]
	call	??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	npad	1

; 533  : 		tokenize(rowStrings[i], row, L",");

	lea	rdx, OFFSET FLAT:$SG188021
	lea	rcx, QWORD PTR $T9[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR rowStrings$[rsp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	lea	r8, QWORD PTR $T9[rsp]
	lea	rdx, QWORD PTR row$11[rsp]
	mov	rcx, rax
	call	?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z ; tokenize
	npad	1
	lea	rcx, QWORD PTR $T9[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 534  : 		
; 535  : 		if (row.size() < 3)

	lea	rcx, QWORD PTR row$11[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	cmp	rax, 3
	jae	SHORT $LN8@parsePatte

; 536  : 			return FALSE;	

	mov	DWORD PTR $T3[rsp], 0
	lea	rcx, QWORD PTR row$11[rsp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	npad	1
	lea	rcx, QWORD PTR rowStrings$[rsp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	npad	1
	mov	rcx, QWORD PTR str$[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T3[rsp]
	jmp	$LN1@parsePatte
$LN8@parsePatte:

; 537  : 
; 538  : 		double offset, height, width;
; 539  : 		std::wstringstream s0(row[0]);

	mov	edx, 248				; 000000f8H
	lea	rcx, QWORD PTR s0$17[rsp]
	call	?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
	xor	edx, edx
	lea	rcx, QWORD PTR row$11[rsp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	r9d, 1
	mov	r8d, 3
	mov	rdx, rax
	lea	rcx, QWORD PTR s0$17[rsp]
	call	??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 540  : 		s0 >> offset;

	lea	rdx, QWORD PTR offset$10[rsp]
	lea	rcx, QWORD PTR s0$17[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@AEAN@Z

; 541  : 		std::wstringstream s1(row[1]);

	mov	edx, 248				; 000000f8H
	lea	rcx, QWORD PTR s1$16[rsp]
	call	?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
	mov	edx, 1
	lea	rcx, QWORD PTR row$11[rsp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	r9d, 1
	mov	r8d, 3
	mov	rdx, rax
	lea	rcx, QWORD PTR s1$16[rsp]
	call	??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 542  : 		s1 >> height;

	lea	rdx, QWORD PTR height$13[rsp]
	lea	rcx, QWORD PTR s1$16[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@AEAN@Z

; 543  : 
; 544  : 		TileRow r = TileRow(offset);

	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR r$14[rsp]
	call	?__autoclassinit2@TileRow@@QEAAX_K@Z
	cvtsd2ss xmm0, QWORD PTR offset$10[rsp]
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR r$14[rsp]
	call	??0TileRow@@QEAA@M@Z			; TileRow::TileRow
	npad	1

; 545  : 
; 546  : 		for (int j=2; j<row.size(); j++) {

	mov	DWORD PTR j$2[rsp], 2
	jmp	SHORT $LN7@parsePatte
$LN5@parsePatte:
	mov	eax, DWORD PTR j$2[rsp]
	inc	eax
	mov	DWORD PTR j$2[rsp], eax
$LN7@parsePatte:
	movsxd	rax, DWORD PTR j$2[rsp]
	mov	QWORD PTR tv179[rsp], rax
	lea	rcx, QWORD PTR row$11[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	mov	rcx, QWORD PTR tv179[rsp]
	cmp	rcx, rax
	jae	$LN6@parsePatte

; 547  : 			std::wstringstream sn(row[j]);

	mov	edx, 248				; 000000f8H
	lea	rcx, QWORD PTR sn$15[rsp]
	call	?__autoclassinit2@?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
	movsxd	rax, DWORD PTR j$2[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR row$11[rsp]
	call	??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
	mov	r9d, 1
	mov	r8d, 3
	mov	rdx, rax
	lea	rcx, QWORD PTR sn$15[rsp]
	call	??0?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@H@Z ; std::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1

; 548  : 			sn >> width;

	lea	rdx, QWORD PTR width$12[rsp]
	lea	rcx, QWORD PTR sn$15[rsp]
	call	QWORD PTR __imp_??5?$basic_istream@_WU?$char_traits@_W@std@@@std@@QEAAAEAV01@AEAN@Z

; 549  : 
; 550  : 			r.tiles.push_back(width);

	cvtsd2ss xmm0, QWORD PTR width$12[rsp]
	movss	DWORD PTR $T4[rsp], xmm0
	lea	rdx, QWORD PTR $T4[rsp]
	lea	rcx, QWORD PTR r$14[rsp+8]
	call	?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z ; std::vector<float,std::allocator<float> >::push_back
	npad	1

; 551  : 		}

	lea	rcx, QWORD PTR sn$15[rsp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	jmp	$LN5@parsePatte
$LN6@parsePatte:

; 552  : 
; 553  : 		pat->rows.push_back(r);

	mov	rax, QWORD PTR pat$[rsp]
	add	rax, 40					; 00000028H
	lea	rdx, QWORD PTR r$14[rsp]
	mov	rcx, rax
	call	?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z ; std::vector<TileRow,std::allocator<TileRow> >::push_back

; 554  : 		pat->heights.push_back((float)height);

	cvtsd2ss xmm0, QWORD PTR height$13[rsp]
	movss	DWORD PTR $T5[rsp], xmm0
	mov	rax, QWORD PTR pat$[rsp]
	add	rax, 8
	lea	rdx, QWORD PTR $T5[rsp]
	mov	rcx, rax
	call	?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z ; std::vector<float,std::allocator<float> >::push_back
	npad	1

; 555  : 	}

	lea	rcx, QWORD PTR r$14[rsp]
	call	??1TileRow@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR s1$16[rsp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	npad	1
	lea	rcx, QWORD PTR s0$17[rsp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	npad	1
	lea	rcx, QWORD PTR row$11[rsp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	jmp	$LN2@parsePatte
$LN3@parsePatte:

; 556  : 
; 557  : 	return TRUE;

	mov	DWORD PTR $T6[rsp], 1
	lea	rcx, QWORD PTR rowStrings$[rsp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	npad	1
	mov	rcx, QWORD PTR str$[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR $T6[rsp]
$LN1@parsePatte:

; 558  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 1080				; 00000438H
	ret	0
?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z ENDP ; parsePattern
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR str$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$0
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR rowStrings$[rbp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$1
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$2
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR row$11[rbp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$3
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$4
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR s0$17[rbp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$5
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR s1$16[rbp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$6
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$7
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR r$14[rbp]
	call	??1TileRow@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$7
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR sn$15[rbp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR str$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR rowStrings$[rbp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR row$11[rbp]
	call	??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR s0$17[rbp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR s1$16[rbp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$7
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR r$14[rbp]
	call	??1TileRow@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$7@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
i$1 = 32
j$2 = 36
$T3 = 40
$T4 = 44
$T5 = 48
$T6 = 52
tv82 = 56
tv179 = 64
$T7 = 72
$T8 = 80
$T9 = 120
offset$10 = 160
row$11 = 168
width$12 = 200
height$13 = 208
rowStrings$ = 216
r$14 = 248
sn$15 = 288
s1$16 = 544
s0$17 = 800
__$ArrayPad$ = 1056
str$ = 1088
pat$ = 1096
?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA PROC ; `parsePattern'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR sn$15[rbp]
	call	??_D?$basic_stringstream@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAXXZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z@4HA ENDP ; `parsePattern'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range, COMDAT

; 1775 : 		{	// orphan iterators within specified (inclusive) range

$LN10:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getpfirst
	mov	QWORD PTR _Pnext$[rsp], rax

; 1778 : 		if (_Pnext != 0)

	cmp	QWORD PTR _Pnext$[rsp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _First$[rsp]
	cmp	QWORD PTR [rax+16], rcx
	jb	SHORT $LN7@Orphan_ran
	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	QWORD PTR _Pnext$[rsp], rax

; 1783 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Clrcont@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	rcx, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN6@Orphan_ran:

; 1787 : 					}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen, COMDAT

; 1764 : 		{	// report a length_error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1765 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
$LN2@Xlen:

; 1766 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ
_TEXT	SEGMENT
tv82 = 32
tv135 = 40
tv143 = 48
tv150 = 56
this$ = 80
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy, COMDAT

; 1636 : 		{	// free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rcx, QWORD PTR tv82[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	QWORD PTR tv135[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv135[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR tv143[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rcx, QWORD PTR tv143[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv150[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR [rax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1646 : 			}
; 1647 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
_TEXT	SEGMENT
tv68 = 32
this$ = 64
_Count$ = 72
?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve, COMDAT

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1627 : 		if (_Unused_capacity() < _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN2@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
	mov	QWORD PTR tv68[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	mov	rcx, QWORD PTR tv68[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN3@Reserve

; 1630 : 				_Xlen();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xlen@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	add	rax, QWORD PTR _Count$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate
$LN2@Reserve:
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate, COMDAT

; 1601 : 		{	// move to array of exactly _Count elements

$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T1[rsp], -2

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
	mov	QWORD PTR _Ptr$[rsp], rax

; 1603 : 
; 1604 : 		_TRY_BEGIN
; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv84[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	r9, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Umove@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@PEAV21@00@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Umove<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>
	npad	1
	jmp	SHORT $LN7@Reallocate
$LN8@Reallocate:
$LN7@Reallocate:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END
; 1610 : 
; 1611 : 		size_type _Size = size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	mov	QWORD PTR _Size$[rsp], rax

; 1612 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rcx, QWORD PTR tv150[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	QWORD PTR tv171[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv171[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR tv179[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	QWORD PTR tv186[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rcx, QWORD PTR tv179[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv186[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

	imul	rax, QWORD PTR _Count$[rsp], 40		; 00000028H
	mov	rcx, QWORD PTR _Ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv200[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	rcx, QWORD PTR tv200[rsp]
	mov	QWORD PTR [rax], rcx

; 1621 : 		this->_Mylast() = _Ptr + _Size;

	imul	rax, QWORD PTR _Size$[rsp], 40		; 00000028H
	mov	rcx, QWORD PTR _Ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv208[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rcx, QWORD PTR tv208[rsp]
	mov	QWORD PTR [rax], rcx

; 1622 : 		this->_Myfirst() = _Ptr;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR [rax], rcx

; 1623 : 		}

	add	rsp, 120				; 00000078H
	ret	0
$LN9@Reallocate:
?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate'::`1'::catch$0

; 1606 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate'::`1'::catch$0

; 1606 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z$0:

; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate

; 1608 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1609 : 		_CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Reallocate@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
tv82 = 32
this$ = 64
_Ptr$ = 72
?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside, COMDAT

; 1596 : 		{	// test if _Ptr points inside vector

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	cmp	QWORD PTR _Ptr$[rsp], rax
	jae	SHORT $LN3@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	cmp	rax, QWORD PTR _Ptr$[rsp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv82[rsp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv82[rsp], 0
$LN4@Inside:
	movzx	eax, BYTE PTR tv82[rsp]

; 1598 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
_Capacity$ = 32
tv73 = 40
tv67 = 48
this$ = 80
_Count$ = 88
?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to, COMDAT

; 1585 : 		{	// grow by 50% or at least to _Count

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1586 : 		size_type _Capacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
	mov	QWORD PTR _Capacity$[rsp], rax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
	mov	QWORD PTR tv67[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Capacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv67[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Capacity$[rsp]
	jae	SHORT $LN4@Grow_to
	mov	QWORD PTR tv73[rsp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	xor	edx, edx
	mov	rax, QWORD PTR _Capacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Capacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv73[rsp], rax
$LN5@Grow_to:
	mov	rax, QWORD PTR tv73[rsp]
	mov	QWORD PTR _Capacity$[rsp], rax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

	mov	rax, QWORD PTR _Count$[rsp]
	cmp	QWORD PTR _Capacity$[rsp], rax
	jae	SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

	mov	rax, QWORD PTR _Count$[rsp]
	mov	QWORD PTR _Capacity$[rsp], rax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

	mov	rax, QWORD PTR _Capacity$[rsp]

; 1593 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Grow_to@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_K_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy, COMDAT

; 1580 : 		{	// destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@PEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@std@@YAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > * __ptr64>

; 1582 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Destroy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z
_TEXT	SEGMENT
this$ = 64
_Pos$ = 72
??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[], COMDAT

; 1230 : 		{	// subscript mutable sequence

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1231 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1232 : 		if (size() <= _Pos)

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
	cmp	rax, QWORD PTR _Pos$[rsp]
	ja	$LN2@operator

; 1233 : 			{	// report error
; 1234 : 			_DEBUG_ERROR("vector subscript out of range");

	mov	r8d, 1234				; 000004d2H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z

; 1235 : 			_SCL_SECURE_OUT_OF_RANGE;

	lea	rax, OFFSET FLAT:??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	rax, rax
	je	SHORT $LN4@operator
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN5@operator
$LN4@operator:
	lea	rax, OFFSET FLAT:??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1235				; 000004d3H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
	xor	eax, eax
$LN5@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1235				; 000004d3H
	lea	r8, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1BOI@OCMBMPPD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr@
	lea	rcx, OFFSET FLAT:??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@operator:

; 1236 : 			}
; 1237 : 
; 1238 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1239 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1240 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1241 : 
; 1242 : 		return (*(this->_Myfirst() + _Pos));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	imul	rcx, QWORD PTR _Pos$[rsp], 40		; 00000028H
	add	rcx, QWORD PTR [rax]
	mov	rax, rcx

; 1243 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAAEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@_K@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 1184 : 		{	// return maximum possible length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1185 : 		return (this->_Getal().max_size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size

; 1186 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?max_size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size, COMDAT

; 1179 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1181 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?size@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity, COMDAT

; 1047 : 		{	// micro-optimization for capacity() - size()

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1048 : 		return (this->_Myend() - this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1049 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Unused_capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity, COMDAT

; 1042 : 		{	// return current length of allocated storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1044 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?capacity@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 975  : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 976  : 		_Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAXXZ ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Tidy
	npad	1

; 977  : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z
_TEXT	SEGMENT
tv178 = 32
tv235 = 40
tv71 = 48
tv88 = 56
tv136 = 64
_Idx$1 = 72
tv152 = 80
tv163 = 88
tv185 = 96
tv201 = 104
tv217 = 112
tv220 = 120
this$ = 144
_Val$ = 152
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back, COMDAT

; 896  : 		{	// insert by moving into element at end

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H

; 897  : 		if (_Inside(_STD addressof(_Val)))

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Inside@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBA_NPEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Inside
	movzx	eax, al
	test	eax, eax
	je	$LN2@push_back

; 898  : 			{	// push back an element
; 899  : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	QWORD PTR tv71[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	rcx, QWORD PTR tv71[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR _Idx$1[rsp], rax

; 900  : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv88[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN4@push_back

; 901  : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
$LN4@push_back:

; 902  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv136[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rcx, QWORD PTR tv136[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range

; 903  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
	imul	rcx, QWORD PTR _Idx$1[rsp], 40		; 00000028H
	add	rcx, QWORD PTR [rax]
	mov	rax, rcx
	mov	rcx, rax
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	QWORD PTR tv152[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	QWORD PTR tv163[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rcx, QWORD PTR tv152[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv163[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 904  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 905  : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv178[rsp], rax
	mov	rax, QWORD PTR tv178[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 40					; 00000028H
	mov	rcx, QWORD PTR tv178[rsp]
	mov	QWORD PTR [rcx], rax

; 906  : 			}
; 907  : 		else

	jmp	$LN3@push_back
$LN2@push_back:

; 908  : 			{	// push back a non-element
; 909  : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv185[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv185[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN5@push_back

; 910  : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEAAX_K@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Reserve
$LN5@push_back:

; 911  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv201[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rcx, QWORD PTR tv201[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@IEBAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@0@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Orphan_range

; 912  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	QWORD PTR tv217[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	mov	QWORD PTR tv220[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rcx, QWORD PTR tv217[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv220[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V12@@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@1@$$QEAV21@@Z ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::construct<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 913  : 				_STD forward<value_type>(_Val));
; 914  : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
	mov	QWORD PTR tv235[rsp], rax
	mov	rax, QWORD PTR tv235[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 40					; 00000028H
	mov	rcx, QWORD PTR tv235[rsp]
	mov	QWORD PTR [rcx], rax
$LN3@push_back:

; 915  : 			}
; 916  : 		}

	add	rsp, 136				; 00000088H
	ret	0
?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 707  : 		{	// construct empty vector

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 706  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
	npad	1

; 708  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA PROC ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAA@XZ@4HA ENDP ; `std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first, COMDAT

; 299  : 		{	// return const reference to first

	mov	QWORD PTR [rsp+8], rcx

; 300  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 301  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::~_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 488  : 		{	// initialize values

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	npad	1

; 485  : 		: _Myfirst(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 486  : 		_Mylast(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0

; 487  : 		_Myend()

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 489  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend, COMDAT

; 667  : 		{	// return const reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 668  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	add	rax, 24

; 669  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend, COMDAT

; 662  : 		{	// return reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 663  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	add	rax, 24

; 664  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast, COMDAT

; 657  : 		{	// return const reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 658  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	add	rax, 16

; 659  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast, COMDAT

; 652  : 		{	// return reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 653  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	add	rax, 16

; 654  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst, COMDAT

; 647  : 		{	// return const reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 648  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	add	rax, 8

; 649  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBQEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst, COMDAT

; 642  : 		{	// return reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 643  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	add	rax, 8

; 644  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data, COMDAT

; 637  : 		{	// return const reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 638  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second

; 639  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data, COMDAT

; 632  : 		{	// return reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 633  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_second

; 634  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal, COMDAT

; 627  : 		{	// return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 628  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first

; 629  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal, COMDAT

; 622  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 623  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Get_first

; 624  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all, COMDAT

; 612  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 613  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy, COMDAT

; 601  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 602  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data

; 603  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getpfirst, COMDAT

; 596  : 		{	// get address of iterator chain

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 597  : 		return (_Get_data()._Getpfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	mov	rcx, rax
	call	?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Free_proxy, COMDAT

; 586  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>

; 589  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	mov	r8d, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 593  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv70 = 32
tv80 = 40
tv92 = 48
$T1 = 56
_Alproxy$ = 72
__$ArrayPad$ = 80
this$ = 112
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Alloc_proxy, COMDAT

; 577  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > & __ptr64>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rax], rcx

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv80[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Get_data
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	QWORD PTR [rax], rcx

; 583  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 558  : 		{	// destroy proxy

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 559  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Free_proxy
	npad	1

; 560  : 		}

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::~_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >, COMDAT

; 544  : 		{	// default construct allocator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,std::_Vector_val<std::_Simple_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >,1><>
	npad	1

; 545  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Alloc_proxy
	npad	1

; 546  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >::_Vector_alloc<std::_Vec_base_types<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 1007 : 		{	// get maximum size

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size

; 1009 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 935  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >

; 937  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::_Wrap_alloc<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z
_TEXT	SEGMENT
_Al$ = 48
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size, COMDAT

; 868  : 		{	// get maximum size

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 869  : 		return (_Al.max_size());

	mov	rcx, QWORD PTR _Al$[rsp]
	call	?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size

; 870  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$allocator_traits@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size, COMDAT

; 748  : 		{	// estimate maximum array size

	mov	QWORD PTR [rsp+8], rcx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	rax, 461168601842738790			; 0666666666666666H

; 750  : 		}

	ret	0
?max_size@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEBA_KXZ ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 40					; 00000028H
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAAXPEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >, COMDAT

; 699  : 	allocator() _THROW0()

	mov	QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z
_TEXT	SEGMENT
lastPos$ = 32
pos$ = 40
tv94 = 48
tv93 = 56
$T1 = 64
$T2 = 72
str$ = 128
tokens$ = 136
delimiters$ = 144
?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z PROC ; tokenize, COMDAT

; 513  : static void tokenize(const std::wstring& str, std::vector<std::wstring>& tokens, const std::wstring& delimiters) {

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T1[rsp], -2

; 514  : 	std::wstring::size_type lastPos = str.find_first_not_of(delimiters, 0);

	xor	r8d, r8d
	mov	rdx, QWORD PTR delimiters$[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
	mov	QWORD PTR lastPos$[rsp], rax

; 515  : 	std::wstring::size_type pos = str.find_first_of(delimiters, lastPos);

	mov	r8, QWORD PTR lastPos$[rsp]
	mov	rdx, QWORD PTR delimiters$[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
	mov	QWORD PTR pos$[rsp], rax
$LN2@tokenize:

; 516  : 	
; 517  : 	while (std::wstring::npos != pos || std::wstring::npos != lastPos) {

	mov	rax, QWORD PTR pos$[rsp]
	cmp	QWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB, rax ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	jne	SHORT $LN4@tokenize
	mov	rax, QWORD PTR lastPos$[rsp]
	cmp	QWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB, rax ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	je	$LN3@tokenize
$LN4@tokenize:

; 518  : 		tokens.push_back(str.substr(lastPos, pos - lastPos));

	mov	rax, QWORD PTR lastPos$[rsp]
	mov	rcx, QWORD PTR pos$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r9, rax
	mov	r8, QWORD PTR lastPos$[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
	mov	QWORD PTR tv94[rsp], rax
	mov	rax, QWORD PTR tv94[rsp]
	mov	QWORD PTR tv93[rsp], rax
	mov	rdx, QWORD PTR tv93[rsp]
	mov	rcx, QWORD PTR tokens$[rsp]
	call	?push_back@?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@std@@QEAAX$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@2@@Z ; std::vector<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >,std::allocator<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > > >::push_back
	npad	1
	lea	rcx, QWORD PTR $T2[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >

; 519  : 		lastPos = str.find_first_not_of(delimiters, pos);

	mov	r8, QWORD PTR pos$[rsp]
	mov	rdx, QWORD PTR delimiters$[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
	mov	QWORD PTR lastPos$[rsp], rax

; 520  : 		pos = str.find_first_of(delimiters, lastPos);

	mov	r8, QWORD PTR lastPos$[rsp]
	mov	rdx, QWORD PTR delimiters$[rsp]
	mov	rcx, QWORD PTR str$[rsp]
	call	?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
	mov	QWORD PTR pos$[rsp], rax

; 521  : 	}

	jmp	$LN2@tokenize
$LN3@tokenize:

; 522  : }

	add	rsp, 120				; 00000078H
	ret	0
?tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z ENDP ; tokenize
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
lastPos$ = 32
pos$ = 40
tv94 = 48
tv93 = 56
$T1 = 64
$T2 = 72
str$ = 128
tokens$ = 136
delimiters$ = 144
?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA PROC ; `tokenize'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T2[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA ENDP ; `tokenize'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
lastPos$ = 32
pos$ = 40
tv94 = 48
tv93 = 56
$T1 = 64
$T2 = 72
str$ = 128
tokens$ = 136
delimiters$ = 144
?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA PROC ; `tokenize'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR $T2[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??tokenize@@YAXAEBV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAV?$vector@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@V?$allocator@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@2@@2@0@Z@4HA ENDP ; `tokenize'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z
_TEXT	SEGMENT
cur$ = 32
n$1 = 36
num$ = 40
tileHeight$ = 44
y$ = 48
eBot$ = 52
sumY$ = 56
eTop$ = 60
yi$ = 64
h$ = 68
bTileHeight$2 = 72
tTileHeight$3 = 76
neBot$4 = 80
neTop$5 = 84
tv73 = 88
tv150 = 92
tv158 = 96
tv180 = 100
tv202 = 104
low$ = 128
high$ = 136
id$ = 144
pos$ = 152
total$ = 160
arr$ = 168
size$ = 176
var$ = 184
rand$ = 192
?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z PROC ; rowcol, COMDAT

; 325  : static int rowcol(float& low, float& high, int& id, float pos, float total, std::vector<float>& arr, float size, float var, float rand) {

	movss	DWORD PTR [rsp+32], xmm3
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H

; 326  : 	int num = arr.size();

	mov	rcx, QWORD PTR arr$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	mov	DWORD PTR num$[rsp], eax

; 327  : 	float h = total * size;

	movss	xmm0, DWORD PTR total$[rsp]
	mulss	xmm0, DWORD PTR size$[rsp]
	movss	DWORD PTR h$[rsp], xmm0

; 328  : 	float y = pos / h;

	movss	xmm0, DWORD PTR pos$[rsp]
	divss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR y$[rsp], xmm0

; 329  : 	float yi = (float)FASTFLOOR(y); // group ID

	movss	xmm0, DWORD PTR y$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN14@rowcol
	cvttss2si eax, DWORD PTR y$[rsp]
	dec	eax
	mov	DWORD PTR tv73[rsp], eax
	jmp	SHORT $LN15@rowcol
$LN14@rowcol:
	cvttss2si eax, DWORD PTR y$[rsp]
	mov	DWORD PTR tv73[rsp], eax
$LN15@rowcol:
	cvtsi2ss xmm0, DWORD PTR tv73[rsp]
	movss	DWORD PTR yi$[rsp], xmm0

; 330  : 	y = pos - yi * h; // pos within group

	movss	xmm0, DWORD PTR yi$[rsp]
	mulss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR pos$[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR y$[rsp], xmm0

; 331  : 
; 332  : 	float sumY = 0.f;

	xorps	xmm0, xmm0
	movss	DWORD PTR sumY$[rsp], xmm0

; 333  : 	float tileHeight = 0.f;

	xorps	xmm0, xmm0
	movss	DWORD PTR tileHeight$[rsp], xmm0

; 334  : 	int cur = 0;	

	mov	DWORD PTR cur$[rsp], 0
$LN2@rowcol:

; 335  : 	while (cur < num) {		

	mov	eax, DWORD PTR num$[rsp]
	cmp	DWORD PTR cur$[rsp], eax
	jge	SHORT $LN3@rowcol

; 336  : 		tileHeight = arr[cur] * size;

	movsxd	rax, DWORD PTR cur$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR arr$[rsp]
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR size$[rsp]
	movss	DWORD PTR tileHeight$[rsp], xmm0

; 337  : 		if (y < sumY + tileHeight)

	movss	xmm0, DWORD PTR sumY$[rsp]
	addss	xmm0, DWORD PTR tileHeight$[rsp]
	movss	xmm1, DWORD PTR y$[rsp]
	comiss	xmm1, xmm0
	jae	SHORT $LN4@rowcol

; 338  : 			break;		

	jmp	SHORT $LN3@rowcol
$LN4@rowcol:

; 339  : 		sumY += tileHeight;

	movss	xmm0, DWORD PTR sumY$[rsp]
	addss	xmm0, DWORD PTR tileHeight$[rsp]
	movss	DWORD PTR sumY$[rsp], xmm0

; 340  : 		cur++;

	mov	eax, DWORD PTR cur$[rsp]
	inc	eax
	mov	DWORD PTR cur$[rsp], eax

; 341  : 	}

	jmp	SHORT $LN2@rowcol
$LN3@rowcol:

; 342  : 	if (cur < 0 || cur >= num) // Necessary due floating point error

	cmp	DWORD PTR cur$[rsp], 0
	jl	SHORT $LN6@rowcol
	mov	eax, DWORD PTR num$[rsp]
	cmp	DWORD PTR cur$[rsp], eax
	jl	SHORT $LN5@rowcol
$LN6@rowcol:

; 343  : 		return -1;

	mov	eax, -1
	jmp	$LN1@rowcol
$LN5@rowcol:

; 344  : 
; 345  : 	id = yi * num + cur;

	cvtsi2ss xmm0, DWORD PTR num$[rsp]
	movss	xmm1, DWORD PTR yi$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsi2ss xmm1, DWORD PTR cur$[rsp]
	addss	xmm0, xmm1
	cvttss2si eax, xmm0
	mov	rcx, QWORD PTR id$[rsp]
	mov	DWORD PTR [rcx], eax

; 346  : 
; 347  : 	// Variance
; 348  : 	// ----------- To determine max var
; 349  : 	// ----------- If we rose
; 350  : 	// ----------- eTop -> neTop
; 351  : 	//    x
; 352  : 	// ----------- eBot -> neBot
; 353  : 	// ----------- If we droped
; 354  : 	// ----------- To determine max var
; 355  : 
; 356  : 	float eBot = yi * h + sumY;	

	movss	xmm0, DWORD PTR yi$[rsp]
	mulss	xmm0, DWORD PTR h$[rsp]
	addss	xmm0, DWORD PTR sumY$[rsp]
	movss	DWORD PTR eBot$[rsp], xmm0

; 357  : 	float eTop = eBot + tileHeight;

	movss	xmm0, DWORD PTR eBot$[rsp]
	addss	xmm0, DWORD PTR tileHeight$[rsp]
	movss	DWORD PTR eTop$[rsp], xmm0

; 358  : 
; 359  : 	if (var > 0.0001f) {

	movss	xmm0, DWORD PTR var$[rsp]
	comiss	xmm0, DWORD PTR __real@38d1b717
	jbe	$LN7@rowcol

; 360  : 		float n;
; 361  : 		
; 362  : 		float bTileHeight = arr[STEPDOWN(cur, num)]*size;

	mov	edx, DWORD PTR num$[rsp]
	mov	ecx, DWORD PTR cur$[rsp]
	call	?STEPDOWN@@YAHHH@Z			; STEPDOWN
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR arr$[rsp]
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR size$[rsp]
	movss	DWORD PTR bTileHeight$2[rsp], xmm0

; 363  : 		float tTileHeight = arr[STEPUP(cur, num)]*size;

	mov	edx, DWORD PTR num$[rsp]
	mov	ecx, DWORD PTR cur$[rsp]
	call	?STEPUP@@YAHHH@Z			; STEPUP
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR arr$[rsp]
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR size$[rsp]
	movss	DWORD PTR tTileHeight$3[rsp], xmm0

; 364  : 
; 365  : 		n = noise(eBot, rand);

	movss	xmm1, DWORD PTR rand$[rsp]
	movss	xmm0, DWORD PTR eBot$[rsp]
	call	?noise@@YAMMM@Z				; noise
	movss	DWORD PTR n$1[rsp], xmm0

; 366  : 		float neBot = eBot + (n>0 ? tileHeight : bTileHeight) * n * var;		

	movss	xmm0, DWORD PTR n$1[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN16@rowcol
	movss	xmm0, DWORD PTR tileHeight$[rsp]
	movss	DWORD PTR tv150[rsp], xmm0
	jmp	SHORT $LN17@rowcol
$LN16@rowcol:
	movss	xmm0, DWORD PTR bTileHeight$2[rsp]
	movss	DWORD PTR tv150[rsp], xmm0
$LN17@rowcol:
	movss	xmm0, DWORD PTR tv150[rsp]
	mulss	xmm0, DWORD PTR n$1[rsp]
	mulss	xmm0, DWORD PTR var$[rsp]
	movss	xmm1, DWORD PTR eBot$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR neBot$4[rsp], xmm0

; 367  : 		n = noise(eTop, rand);

	movss	xmm1, DWORD PTR rand$[rsp]
	movss	xmm0, DWORD PTR eTop$[rsp]
	call	?noise@@YAMMM@Z				; noise
	movss	DWORD PTR n$1[rsp], xmm0

; 368  : 		float neTop = eTop + (n<0 ? tileHeight : tTileHeight) * n * var;

	movss	xmm0, DWORD PTR n$1[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN18@rowcol
	movss	xmm0, DWORD PTR tileHeight$[rsp]
	movss	DWORD PTR tv158[rsp], xmm0
	jmp	SHORT $LN19@rowcol
$LN18@rowcol:
	movss	xmm0, DWORD PTR tTileHeight$3[rsp]
	movss	DWORD PTR tv158[rsp], xmm0
$LN19@rowcol:
	movss	xmm0, DWORD PTR tv158[rsp]
	mulss	xmm0, DWORD PTR n$1[rsp]
	mulss	xmm0, DWORD PTR var$[rsp]
	movss	xmm1, DWORD PTR eTop$[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR neTop$5[rsp], xmm0

; 369  : 
; 370  : 		if (pos < neBot) { // We droped one cur down

	movss	xmm0, DWORD PTR pos$[rsp]
	comiss	xmm0, DWORD PTR neBot$4[rsp]
	jae	$LN9@rowcol

; 371  : 			id--;

	mov	rax, QWORD PTR id$[rsp]
	mov	eax, DWORD PTR [rax]
	dec	eax
	mov	rcx, QWORD PTR id$[rsp]
	mov	DWORD PTR [rcx], eax

; 372  : 			cur = STEPDOWN(cur, num);

	mov	edx, DWORD PTR num$[rsp]
	mov	ecx, DWORD PTR cur$[rsp]
	call	?STEPDOWN@@YAHHH@Z			; STEPDOWN
	mov	DWORD PTR cur$[rsp], eax

; 373  : 			low = eBot-bTileHeight;

	movss	xmm0, DWORD PTR eBot$[rsp]
	subss	xmm0, DWORD PTR bTileHeight$2[rsp]
	mov	rax, QWORD PTR low$[rsp]
	movss	DWORD PTR [rax], xmm0

; 374  : 			n = noise(low, rand);

	movss	xmm1, DWORD PTR rand$[rsp]
	mov	rax, QWORD PTR low$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	?noise@@YAMMM@Z				; noise
	movss	DWORD PTR n$1[rsp], xmm0

; 375  : 			low += (n>0 ? bTileHeight : arr[STEPDOWN(cur, num)]*size) * n * var;

	movss	xmm0, DWORD PTR n$1[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN20@rowcol
	movss	xmm0, DWORD PTR bTileHeight$2[rsp]
	movss	DWORD PTR tv180[rsp], xmm0
	jmp	SHORT $LN21@rowcol
$LN20@rowcol:
	mov	edx, DWORD PTR num$[rsp]
	mov	ecx, DWORD PTR cur$[rsp]
	call	?STEPDOWN@@YAHHH@Z			; STEPDOWN
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR arr$[rsp]
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR size$[rsp]
	movss	DWORD PTR tv180[rsp], xmm0
$LN21@rowcol:
	movss	xmm0, DWORD PTR tv180[rsp]
	mulss	xmm0, DWORD PTR n$1[rsp]
	mulss	xmm0, DWORD PTR var$[rsp]
	mov	rax, QWORD PTR low$[rsp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR low$[rsp]
	movss	DWORD PTR [rax], xmm0

; 376  : 			high = neBot;				

	mov	rax, QWORD PTR high$[rsp]
	movss	xmm0, DWORD PTR neBot$4[rsp]
	movss	DWORD PTR [rax], xmm0
	jmp	$LN10@rowcol
$LN9@rowcol:

; 377  : 
; 378  : 		} else if (pos > neTop) { // We rose one cur up

	movss	xmm0, DWORD PTR pos$[rsp]
	comiss	xmm0, DWORD PTR neTop$5[rsp]
	jbe	$LN11@rowcol

; 379  : 			id++;

	mov	rax, QWORD PTR id$[rsp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR id$[rsp]
	mov	DWORD PTR [rcx], eax

; 380  : 			cur = STEPUP(cur, num);

	mov	edx, DWORD PTR num$[rsp]
	mov	ecx, DWORD PTR cur$[rsp]
	call	?STEPUP@@YAHHH@Z			; STEPUP
	mov	DWORD PTR cur$[rsp], eax

; 381  : 			high = eTop+tTileHeight;

	movss	xmm0, DWORD PTR eTop$[rsp]
	addss	xmm0, DWORD PTR tTileHeight$3[rsp]
	mov	rax, QWORD PTR high$[rsp]
	movss	DWORD PTR [rax], xmm0

; 382  : 			n = noise(high, rand);

	movss	xmm1, DWORD PTR rand$[rsp]
	mov	rax, QWORD PTR high$[rsp]
	movss	xmm0, DWORD PTR [rax]
	call	?noise@@YAMMM@Z				; noise
	movss	DWORD PTR n$1[rsp], xmm0

; 383  : 			high += (n<0 ? tTileHeight : arr[STEPUP(cur, num)]*size) * n * var;

	movss	xmm0, DWORD PTR n$1[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN22@rowcol
	movss	xmm0, DWORD PTR tTileHeight$3[rsp]
	movss	DWORD PTR tv202[rsp], xmm0
	jmp	SHORT $LN23@rowcol
$LN22@rowcol:
	mov	edx, DWORD PTR num$[rsp]
	mov	ecx, DWORD PTR cur$[rsp]
	call	?STEPUP@@YAHHH@Z			; STEPUP
	cdqe
	mov	rdx, rax
	mov	rcx, QWORD PTR arr$[rsp]
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR size$[rsp]
	movss	DWORD PTR tv202[rsp], xmm0
$LN23@rowcol:
	movss	xmm0, DWORD PTR tv202[rsp]
	mulss	xmm0, DWORD PTR n$1[rsp]
	mulss	xmm0, DWORD PTR var$[rsp]
	mov	rax, QWORD PTR high$[rsp]
	movss	xmm1, DWORD PTR [rax]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR high$[rsp]
	movss	DWORD PTR [rax], xmm0

; 384  : 			low = neTop;		

	mov	rax, QWORD PTR low$[rsp]
	movss	xmm0, DWORD PTR neTop$5[rsp]
	movss	DWORD PTR [rax], xmm0

; 385  : 
; 386  : 		} else { // Still in the same cur

	jmp	SHORT $LN12@rowcol
$LN11@rowcol:

; 387  : 			low = neBot;

	mov	rax, QWORD PTR low$[rsp]
	movss	xmm0, DWORD PTR neBot$4[rsp]
	movss	DWORD PTR [rax], xmm0

; 388  : 			high = neTop;				

	mov	rax, QWORD PTR high$[rsp]
	movss	xmm0, DWORD PTR neTop$5[rsp]
	movss	DWORD PTR [rax], xmm0
$LN12@rowcol:
$LN10@rowcol:

; 389  : 		}
; 390  : 	} else {

	jmp	SHORT $LN8@rowcol
$LN7@rowcol:

; 391  : 		low = eBot;

	mov	rax, QWORD PTR low$[rsp]
	movss	xmm0, DWORD PTR eBot$[rsp]
	movss	DWORD PTR [rax], xmm0

; 392  : 		high = eTop;

	mov	rax, QWORD PTR high$[rsp]
	movss	xmm0, DWORD PTR eTop$[rsp]
	movss	DWORD PTR [rax], xmm0
$LN8@rowcol:

; 393  : 	}
; 394  : 
; 395  : 	return cur;

	mov	eax, DWORD PTR cur$[rsp]
$LN1@rowcol:

; 396  : }

	add	rsp, 120				; 00000078H
	ret	0
?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z ENDP ; rowcol
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?offsetEdges@@YAXQEAMMM@Z
_TEXT	SEGMENT
edges$ = 8
x$ = 16
y$ = 24
?offsetEdges@@YAXQEAMMM@Z PROC				; offsetEdges, COMDAT

; 260  : static void offsetEdges(float edges[4], float x, float y) {

	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx

; 261  : 	edges[0] += x;

	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR x$[rsp]
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 262  : 	edges[2] += x;

	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR x$[rsp]
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 263  : 	edges[3] += y;

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR y$[rsp]
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 264  : 	edges[1] += y;

	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR y$[rsp]
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 265  : }

	ret	0
?offsetEdges@@YAXQEAMMM@Z ENDP				; offsetEdges
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?getAngle@@YAMHM@Z
_TEXT	SEGMENT
tv70 = 32
tv64 = 36
type$ = 64
amount$ = 72
?getAngle@@YAMHM@Z PROC					; getAngle, COMDAT

; 121  : inline static float getAngle(int type, float amount) {

	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx
	sub	rsp, 56					; 00000038H

; 122  : 	switch (type) {

	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 0
	je	SHORT $LN6@getAngle
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN7@getAngle
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN9@getAngle
	jmp	$LN14@getAngle
$LN6@getAngle:

; 123  : 		case 0:
; 124  : 			return 0.f;

	xorps	xmm0, xmm0
	jmp	$LN1@getAngle
$LN7@getAngle:

; 125  : 		case 1: // 180
; 126  : 			if (rand() % 2)

	call	QWORD PTR __imp_rand
	cdq
	and	eax, 1
	xor	eax, edx
	sub	eax, edx
	test	eax, eax
	je	SHORT $LN8@getAngle

; 127  : 				return (float)pi;

	movss	xmm0, DWORD PTR __real@40490fdb
	jmp	$LN1@getAngle
$LN8@getAngle:

; 128  : 			return 0.f;

	xorps	xmm0, xmm0
	jmp	$LN1@getAngle
$LN9@getAngle:

; 129  : 		case 2: // 90
; 130  : 			switch (rand() % 4) {

	call	QWORD PTR __imp_rand
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	mov	DWORD PTR tv70[rsp], eax
	cmp	DWORD PTR tv70[rsp], 0
	je	SHORT $LN10@getAngle
	cmp	DWORD PTR tv70[rsp], 1
	je	SHORT $LN11@getAngle
	cmp	DWORD PTR tv70[rsp], 2
	je	SHORT $LN12@getAngle
	cmp	DWORD PTR tv70[rsp], 3
	je	SHORT $LN13@getAngle
	jmp	SHORT $LN4@getAngle
$LN10@getAngle:

; 131  : 				case 0:
; 132  : 					return 0.f;

	xorps	xmm0, xmm0
	jmp	SHORT $LN1@getAngle
$LN11@getAngle:

; 133  : 				case 1: 
; 134  : 					return (float)pi*.5f;

	movss	xmm0, DWORD PTR __real@40490fdb
	mulss	xmm0, DWORD PTR __real@3f000000
	jmp	SHORT $LN1@getAngle
$LN12@getAngle:

; 135  : 				case 2:
; 136  : 					return (float)pi;

	movss	xmm0, DWORD PTR __real@40490fdb
	jmp	SHORT $LN1@getAngle
$LN13@getAngle:

; 137  : 				case 3:
; 138  : 					return (float)pi*1.5f;

	movss	xmm0, DWORD PTR __real@40490fdb
	mulss	xmm0, DWORD PTR __real@3fc00000
	jmp	SHORT $LN1@getAngle
$LN4@getAngle:
$LN14@getAngle:

; 139  : 			}			
; 140  : 		default: // Amount	
; 141  : 			return UFRAND() * amount;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvtss2sd xmm1, DWORD PTR amount$[rsp]
	mulsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	jmp	SHORT $LN1@getAngle

; 142  : 	}
; 143  : 	return 0.f;

	xorps	xmm0, xmm0
$LN1@getAngle:

; 144  : }

	add	rsp, 56					; 00000038H
	ret	0
?getAngle@@YAMHM@Z ENDP					; getAngle
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?STEPDOWN@@YAHHH@Z
_TEXT	SEGMENT
n$ = 8
m$ = 16
?STEPDOWN@@YAHHH@Z PROC					; STEPDOWN, COMDAT

; 32   : inline static int STEPDOWN(int n, int m) {	

	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx

; 33   : 	if (n-1 < 0) return m-1;

	mov	eax, DWORD PTR n$[rsp]
	dec	eax
	test	eax, eax
	jge	SHORT $LN2@STEPDOWN
	mov	eax, DWORD PTR m$[rsp]
	dec	eax
	jmp	SHORT $LN1@STEPDOWN
$LN2@STEPDOWN:

; 34   : 	return n-1;

	mov	eax, DWORD PTR n$[rsp]
	dec	eax
$LN1@STEPDOWN:

; 35   : }

	ret	0
?STEPDOWN@@YAHHH@Z ENDP					; STEPDOWN
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?rotate270@@YAXAEAM0@Z
_TEXT	SEGMENT
temp$ = 0
x$ = 32
y$ = 40
?rotate270@@YAXAEAM0@Z PROC				; rotate270, COMDAT

; 30   : inline static void rotate270(float& x, float& y) { float temp = x; x = y; y = -temp; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR x$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR temp$[rsp], xmm0
	mov	rax, QWORD PTR x$[rsp]
	mov	rcx, QWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	movss	xmm0, DWORD PTR temp$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	rax, QWORD PTR y$[rsp]
	movss	DWORD PTR [rax], xmm0
	add	rsp, 24
	ret	0
?rotate270@@YAXAEAM0@Z ENDP				; rotate270
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?rotate90@@YAXAEAM0@Z
_TEXT	SEGMENT
temp$ = 0
x$ = 32
y$ = 40
?rotate90@@YAXAEAM0@Z PROC				; rotate90, COMDAT

; 29   : inline static void rotate90(float& x, float& y)  { float temp = y; y = x; x = -temp; }

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
	mov	rax, QWORD PTR y$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR temp$[rsp], xmm0
	mov	rax, QWORD PTR y$[rsp]
	mov	rcx, QWORD PTR x$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	movss	xmm0, DWORD PTR temp$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mov	rax, QWORD PTR x$[rsp]
	movss	DWORD PTR [rax], xmm0
	add	rsp, 24
	ret	0
?rotate90@@YAXAEAM0@Z ENDP				; rotate90
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?STEPUP@@YAHHH@Z
_TEXT	SEGMENT
n$ = 8
m$ = 16
?STEPUP@@YAHHH@Z PROC					; STEPUP, COMDAT

; 25   : inline static int STEPUP(int n, int m) {

	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx

; 26   : 	return (n + 1) % m;

	mov	eax, DWORD PTR n$[rsp]
	inc	eax
	cdq
	idiv	DWORD PTR m$[rsp]
	mov	eax, edx

; 27   : }

	ret	0
?STEPUP@@YAHHH@Z ENDP					; STEPUP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?noise@@YAMMM@Z
_TEXT	SEGMENT
x$ = 48
rand$ = 56
?noise@@YAMMM@Z PROC					; noise, COMDAT

; 23   : inline static float noise(float x, float rand) { return Perlin::snoise(x * 31.4 + rand); }

	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 40					; 00000028H
	cvtss2sd xmm0, DWORD PTR x$[rsp]
	mulsd	xmm0, QWORD PTR __real@403f666666666666
	cvtss2sd xmm1, DWORD PTR rand$[rsp]
	addsd	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	call	?snoise@Perlin@@SAMM@Z			; Perlin::snoise
	add	rsp, 40					; 00000028H
	ret	0
?noise@@YAMMM@Z ENDP					; noise
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?generateID@@YAHHH@Z
_TEXT	SEGMENT
x$ = 8
y$ = 16
?generateID@@YAHHH@Z PROC				; generateID, COMDAT

; 21   : inline static int generateID(int x, int y) { return (y-101) * 1000 + x; }

	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	mov	eax, DWORD PTR y$[rsp]
	sub	eax, 101				; 00000065H
	imul	eax, eax, 1000				; 000003e8H
	add	eax, DWORD PTR x$[rsp]
	ret	0
?generateID@@YAHHH@Z ENDP				; generateID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
$T4 = 64
__$ReturnUdt$ = 96
p$ = 104
t$ = 112
?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z PROC ; Tile::draw, COMDAT

; 507  : TilePoint Tile::draw(Point3 p, TileParam& t) {	

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 508  : 	if (t.tilingType == 1)

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax], 1
	jne	SHORT $LN2@draw

; 509  : 		return pat_herring(p, t);

	lea	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::pat_herring
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@draw
$LN2@draw:

; 510  : 	return pat_xBond(p, t);

	lea	rax, QWORD PTR $T4[rsp]
	mov	QWORD PTR $T2[rsp], rax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	r8, QWORD PTR t$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ; Tile::pat_xBond
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@draw:

; 511  : }

	add	rsp, 88					; 00000058H
	ret	0
?draw@Tile@@SA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ENDP ; Tile::draw
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z
_TEXT	SEGMENT
id$ = 48
h$ = 52
x$ = 56
y$ = 60
s$ = 64
tv76 = 68
tv81 = 72
tv202 = 76
yi$ = 80
tv215 = 84
xi$ = 88
x_id$ = 92
y_id$ = 96
tv222 = 100
tid$ = 104
$T1 = 112
$T2 = 120
edges$ = 136
__$ArrayPad$ = 152
__$ReturnUdt$ = 176
p$ = 184
t$ = 192
?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z PROC ; Tile::pat_herring, COMDAT

; 457  : TilePoint Tile::pat_herring(Point3 p, TileParam& t) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 458  : 	float s = t.tileWidth * 2.f;	

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR __real@40000000
	movss	DWORD PTR s$[rsp], xmm0

; 459  : 	float h = t.tileWidth * .5f;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR h$[rsp], xmm0

; 460  : 	float x = p.x / s;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	divss	xmm0, DWORD PTR s$[rsp]
	movss	DWORD PTR x$[rsp], xmm0

; 461  : 	float y = p.y / s;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	divss	xmm0, DWORD PTR s$[rsp]
	movss	DWORD PTR y$[rsp], xmm0

; 462  : 	int xi = FASTFLOOR(x);

	movss	xmm0, DWORD PTR x$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN5@pat_herrin
	cvttss2si eax, DWORD PTR x$[rsp]
	dec	eax
	mov	DWORD PTR tv76[rsp], eax
	jmp	SHORT $LN6@pat_herrin
$LN5@pat_herrin:
	cvttss2si eax, DWORD PTR x$[rsp]
	mov	DWORD PTR tv76[rsp], eax
$LN6@pat_herrin:
	mov	eax, DWORD PTR tv76[rsp]
	mov	DWORD PTR xi$[rsp], eax

; 463  : 	int yi = FASTFLOOR(y);

	movss	xmm0, DWORD PTR y$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN7@pat_herrin
	cvttss2si eax, DWORD PTR y$[rsp]
	dec	eax
	mov	DWORD PTR tv81[rsp], eax
	jmp	SHORT $LN8@pat_herrin
$LN7@pat_herrin:
	cvttss2si eax, DWORD PTR y$[rsp]
	mov	DWORD PTR tv81[rsp], eax
$LN8@pat_herrin:
	mov	eax, DWORD PTR tv81[rsp]
	mov	DWORD PTR yi$[rsp], eax

; 464  : 	x = xi * s;

	cvtsi2ss xmm0, DWORD PTR xi$[rsp]
	mulss	xmm0, DWORD PTR s$[rsp]
	movss	DWORD PTR x$[rsp], xmm0

; 465  : 	y = yi * s;

	cvtsi2ss xmm0, DWORD PTR yi$[rsp]
	mulss	xmm0, DWORD PTR s$[rsp]
	movss	DWORD PTR y$[rsp], xmm0

; 466  : 	int x_id = (int)((p.x - x) / h) % 4;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax]
	subss	xmm0, DWORD PTR x$[rsp]
	divss	xmm0, DWORD PTR h$[rsp]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	mov	DWORD PTR x_id$[rsp], eax

; 467  : 	int y_id = (int)((p.y - y) / h) % 4;	

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+4]
	subss	xmm0, DWORD PTR y$[rsp]
	divss	xmm0, DWORD PTR h$[rsp]
	cvttss2si eax, xmm0
	cdq
	and	edx, 3
	add	eax, edx
	and	eax, 3
	sub	eax, edx
	mov	DWORD PTR y_id$[rsp], eax

; 468  : 	int id = x_id + 4 * y_id;

	mov	eax, DWORD PTR x_id$[rsp]
	mov	ecx, DWORD PTR y_id$[rsp]
	lea	eax, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR id$[rsp], eax

; 469  : 
; 470  : 	//Point3 center = Point3(pat_herring_x[id]*h+x, pat_herring_y[id]*h+y, p.z);
; 471  : 
; 472  : 	float edges[4];
; 473  : 
; 474  : 	if (!pat_herring_dir[id]) {

	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_dir@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	jne	$LN2@pat_herrin

; 475  : 		edges[0] = (pat_herring_x[id]-1.f) * h + x;

	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_x@@3PAMA
	movss	xmm0, DWORD PTR [rcx+rax*4]
	subss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR h$[rsp]
	addss	xmm0, DWORD PTR x$[rsp]
	mov	eax, 4
	imul	rax, rax, 0
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 476  : 		edges[2] = edges[0] + t.tileWidth;

	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	addss	xmm0, DWORD PTR [rcx+8]
	mov	eax, 4
	imul	rax, rax, 2
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 477  : 		edges[3] = (pat_herring_y[id]-.5f) * h + y;

	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_y@@3PAMA
	movss	xmm0, DWORD PTR [rcx+rax*4]
	subss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR h$[rsp]
	addss	xmm0, DWORD PTR y$[rsp]
	mov	eax, 4
	imul	rax, rax, 3
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 478  : 		edges[1] = edges[3] + h;

	mov	eax, 4
	imul	rax, rax, 3
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	addss	xmm0, DWORD PTR h$[rsp]
	mov	eax, 4
	imul	rax, rax, 1
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 479  : 	} else {

	jmp	$LN3@pat_herrin
$LN2@pat_herrin:

; 480  : 		edges[0] = (pat_herring_x[id]-.5f) * h + x;

	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_x@@3PAMA
	movss	xmm0, DWORD PTR [rcx+rax*4]
	subss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR h$[rsp]
	addss	xmm0, DWORD PTR x$[rsp]
	mov	eax, 4
	imul	rax, rax, 0
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 481  : 		edges[2] = edges[0] + h;

	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	addss	xmm0, DWORD PTR h$[rsp]
	mov	eax, 4
	imul	rax, rax, 2
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 482  : 		edges[3] = (pat_herring_y[id]-1.f) * h + y;

	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_y@@3PAMA
	movss	xmm0, DWORD PTR [rcx+rax*4]
	subss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR h$[rsp]
	addss	xmm0, DWORD PTR y$[rsp]
	mov	eax, 4
	imul	rax, rax, 3
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 483  : 		edges[1] = edges[3] + t.tileWidth;	

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	addss	xmm0, DWORD PTR [rcx+8]
	mov	eax, 4
	imul	rax, rax, 1
	movss	DWORD PTR edges$[rsp+rax], xmm0
$LN3@pat_herrin:

; 484  : 	}
; 485  : 
; 486  : 	int tid = generateID(xi*4 + (pat_herring_dir[id] ? 0 : pat_herring_id[id]),

	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_dir@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN9@pat_herrin
	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_id@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv202[rsp], eax
	jmp	SHORT $LN10@pat_herrin
$LN9@pat_herrin:
	mov	DWORD PTR tv202[rsp], 0
$LN10@pat_herrin:
	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_dir@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN11@pat_herrin
	mov	DWORD PTR tv215[rsp], 0
	jmp	SHORT $LN12@pat_herrin
$LN11@pat_herrin:
	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_id@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv215[rsp], eax
$LN12@pat_herrin:
	mov	eax, DWORD PTR tv202[rsp]
	mov	ecx, DWORD PTR yi$[rsp]
	lea	eax, DWORD PTR [rax+rcx*4]
	mov	ecx, DWORD PTR tv215[rsp]
	mov	edx, DWORD PTR xi$[rsp]
	lea	ecx, DWORD PTR [rcx+rdx*4]
	mov	edx, eax
	call	?generateID@@YAHHH@Z			; generateID
	mov	DWORD PTR tid$[rsp], eax

; 487  : 						 yi*4 + (pat_herring_dir[id] ? pat_herring_id[id] : 0));			
; 488  : 	
; 489  : 	return drawTile(p, edges, t, tid, pat_herring_dir[id]);

	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	movsxd	rax, DWORD PTR id$[rsp]
	lea	rcx, OFFSET FLAT:?pat_herring_dir@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv222[rsp], eax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	ecx, DWORD PTR tv222[rsp]
	mov	DWORD PTR [rsp+40], ecx
	mov	ecx, DWORD PTR tid$[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9, QWORD PTR t$[rsp]
	lea	r8, QWORD PTR edges$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z ; Tile::drawTile
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 490  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 168				; 000000a8H
	ret	0
?pat_herring@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ENDP ; Tile::pat_herring
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z
_TEXT	SEGMENT
row$ = 80
offset$ = 84
rand$ = 88
pat$ = 96
tv84 = 104
tv149 = 112
tv147 = 120
tv164 = 128
$T1 = 136
$T2 = 144
id$ = 160
id2$ = 164
edges$ = 168
__$ArrayPad$ = 184
__$ReturnUdt$ = 208
p$ = 216
t$ = 224
?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z PROC ; Tile::pat_xBond, COMDAT

; 398  : TilePoint Tile::pat_xBond(Point3 p, TileParam& t) {

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 200				; 000000c8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 399  : 	TilePattern* pat = t.pattern;

	mov	rax, QWORD PTR t$[rsp]
	mov	rax, QWORD PTR [rax+112]
	mov	QWORD PTR pat$[rsp], rax

; 400  : 
; 401  : 	if (!pat) return TilePoint();

	cmp	QWORD PTR pat$[rsp], 0
	jne	SHORT $LN2@pat_xBond
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@pat_xBond
$LN2@pat_xBond:

; 402  : 
; 403  : 	float edges[4];
; 404  : 	int id = 0;

	mov	DWORD PTR id$[rsp], 0

; 405  : 	int id2 = 0;

	mov	DWORD PTR id2$[rsp], 0

; 406  : 	
; 407  : 	// Tile top and bottom
; 408  : 	float rand = 3.14f;

	movss	xmm0, DWORD PTR __real@4048f5c3
	movss	DWORD PTR rand$[rsp], xmm0

; 409  : 	int row = rowcol(edges[3], edges[1], id, p.y, pat->totalHeight, pat->heights, t.tileHeight, t.tileHeightVar, rand);

	mov	rax, QWORD PTR pat$[rsp]
	add	rax, 8
	mov	ecx, 4
	imul	rcx, rcx, 1
	lea	rcx, QWORD PTR edges$[rsp+rcx]
	mov	edx, 4
	imul	rdx, rdx, 3
	lea	rdx, QWORD PTR edges$[rsp+rdx]
	mov	QWORD PTR tv84[rsp], rdx
	movss	xmm0, DWORD PTR rand$[rsp]
	movss	DWORD PTR [rsp+64], xmm0
	mov	r8, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [r8+20]
	movss	DWORD PTR [rsp+56], xmm0
	mov	r8, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [r8+4]
	movss	DWORD PTR [rsp+48], xmm0
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR pat$[rsp]
	movss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR [rsp+32], xmm0
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm3, DWORD PTR [rax+4]
	lea	r8, QWORD PTR id$[rsp]
	mov	rdx, rcx
	mov	rax, QWORD PTR tv84[rsp]
	mov	rcx, rax
	call	?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z ; rowcol
	mov	DWORD PTR row$[rsp], eax

; 410  : 	if (row == -1) return TilePoint();

	cmp	DWORD PTR row$[rsp], -1
	jne	SHORT $LN3@pat_xBond
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@pat_xBond
$LN3@pat_xBond:

; 411  : 
; 412  : 	// Tile sides
; 413  : 	rand = edges[3] * 1.325f + 31.41213f;

	mov	eax, 4
	imul	rax, rax, 3
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	mulss	xmm0, DWORD PTR __real@3fa9999a
	addss	xmm0, DWORD PTR __real@41fb4c0b
	movss	DWORD PTR rand$[rsp], xmm0

; 414  : 	float offset = pat->rows[row].offset * t.tileWidth;

	movsxd	rax, DWORD PTR row$[rsp]
	mov	rcx, QWORD PTR pat$[rsp]
	add	rcx, 40					; 00000028H
	mov	rdx, rax
	call	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
	mov	rcx, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax]
	mulss	xmm0, DWORD PTR [rcx+8]
	movss	DWORD PTR offset$[rsp], xmm0

; 415  : 	if (offset < 0) offset *= -id;

	movss	xmm0, DWORD PTR offset$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN4@pat_xBond
	mov	eax, DWORD PTR id$[rsp]
	neg	eax
	cvtsi2ss xmm0, eax
	movss	xmm1, DWORD PTR offset$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR offset$[rsp], xmm0
$LN4@pat_xBond:

; 416  : 
; 417  : 	row = rowcol(edges[0], edges[2], id2, p.x + offset, pat->rows[row].totalWidth, pat->rows[row].tiles, t.tileWidth, t.tileWidthVar, rand);		

	movsxd	rax, DWORD PTR row$[rsp]
	mov	rcx, QWORD PTR pat$[rsp]
	add	rcx, 40					; 00000028H
	mov	rdx, rax
	call	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
	add	rax, 8
	mov	QWORD PTR tv147[rsp], rax
	movsxd	rcx, DWORD PTR row$[rsp]
	mov	rdx, QWORD PTR pat$[rsp]
	add	rdx, 40					; 00000028H
	mov	QWORD PTR tv149[rsp], rdx
	mov	rdx, rcx
	mov	rcx, QWORD PTR tv149[rsp]
	call	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
	mov	rcx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	addss	xmm0, DWORD PTR offset$[rsp]
	mov	ecx, 4
	imul	rcx, rcx, 2
	lea	rcx, QWORD PTR edges$[rsp+rcx]
	mov	edx, 4
	imul	rdx, rdx, 0
	lea	rdx, QWORD PTR edges$[rsp+rdx]
	mov	QWORD PTR tv164[rsp], rdx
	movss	xmm1, DWORD PTR rand$[rsp]
	movss	DWORD PTR [rsp+64], xmm1
	mov	r8, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [r8+24]
	movss	DWORD PTR [rsp+56], xmm1
	mov	r8, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [r8+8]
	movss	DWORD PTR [rsp+48], xmm1
	mov	r8, QWORD PTR tv147[rsp]
	mov	QWORD PTR [rsp+40], r8
	movss	xmm1, DWORD PTR [rax+4]
	movss	DWORD PTR [rsp+32], xmm1
	movaps	xmm3, xmm0
	lea	r8, QWORD PTR id2$[rsp]
	mov	rdx, rcx
	mov	rax, QWORD PTR tv164[rsp]
	mov	rcx, rax
	call	?rowcol@@YAHAEAM0AEAHMMAEAV?$vector@MV?$allocator@M@std@@@std@@MMM@Z ; rowcol
	mov	DWORD PTR row$[rsp], eax

; 418  : 	if (row == -1) return TilePoint();

	cmp	DWORD PTR row$[rsp], -1
	jne	SHORT $LN5@pat_xBond
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@pat_xBond
$LN5@pat_xBond:

; 419  : 
; 420  : 	edges[0] -= offset;

	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	subss	xmm0, DWORD PTR offset$[rsp]
	mov	eax, 4
	imul	rax, rax, 0
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 421  : 	edges[2] -= offset;

	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR edges$[rsp+rax]
	subss	xmm0, DWORD PTR offset$[rsp]
	mov	eax, 4
	imul	rax, rax, 2
	movss	DWORD PTR edges$[rsp+rax], xmm0

; 422  : 
; 423  : 	id = generateID(id2, id);

	mov	edx, DWORD PTR id$[rsp]
	mov	ecx, DWORD PTR id2$[rsp]
	call	?generateID@@YAHHH@Z			; generateID
	mov	DWORD PTR id$[rsp], eax

; 424  : 
; 425  : 	// Draw it
; 426  : 	return drawTile(p, edges, t, id);	

	lea	rax, QWORD PTR $T2[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	DWORD PTR [rsp+40], 0
	mov	ecx, DWORD PTR id$[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9, QWORD PTR t$[rsp]
	lea	r8, QWORD PTR edges$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z ; Tile::drawTile
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@pat_xBond:

; 427  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 200				; 000000c8H
	ret	0
?pat_xBond@Tile@@CA?AVTilePoint@@VPoint3@@AEAVTileParam@@@Z ENDP ; Tile::pat_xBond
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z
_TEXT	SEGMENT
hEdgeW$ = 48
randomSeed$ = 52
hEdgeH$ = 56
tv86 = 60
tv136 = 64
tv154 = 68
tv172 = 72
tv190 = 76
tv208 = 80
tv226 = 84
tv244 = 88
height$ = 92
width$ = 96
$T1 = 104
$T2 = 112
$T3 = 128
tp$ = 144
__$ArrayPad$ = 176
__$ReturnUdt$ = 224
p$ = 232
edges$ = 240
t$ = 248
id$ = 256
dir$ = 264
?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z PROC ; Tile::drawTile, COMDAT

; 267  : TilePoint Tile::drawTile(Point3 p, float edges[4], TileParam& t, int id, int dir) {

$LN33:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 268  : 	float hEdgeW = t.edgeWidth * .5f;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+16]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR hEdgeW$[rsp], xmm0

; 269  : 	float hEdgeH = t.edgeHeight * .5f;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+12]
	mulss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR hEdgeH$[rsp], xmm0

; 270  : 			
; 271  : 	float randomSeed = (float)id * 1.23f + 0.1234f;

	cvtsi2ss xmm0, DWORD PTR id$[rsp]
	mulss	xmm0, DWORD PTR __real@3f9d70a4
	addss	xmm0, DWORD PTR __real@3dfcb924
	movss	DWORD PTR randomSeed$[rsp], xmm0

; 272  : 	if (dir) {

	cmp	DWORD PTR dir$[rsp], 0
	je	$LN2@drawTile

; 273  : 		edges[0] += t.eH_var ? hEdgeH * (1.f + noise(edges[0], randomSeed) * t.edgeHeightVar) : hEdgeH;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+37]
	test	eax, eax
	je	SHORT $LN17@drawTile
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+28]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeH$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv86[rsp], xmm0
	jmp	SHORT $LN18@drawTile
$LN17@drawTile:
	movss	xmm0, DWORD PTR hEdgeH$[rsp]
	movss	DWORD PTR tv86[rsp], xmm0
$LN18@drawTile:
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR tv86[rsp]
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 274  : 		edges[2] -= t.eH_var ? hEdgeH * (1.f + noise(edges[2], randomSeed) * t.edgeHeightVar) : hEdgeH;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+37]
	test	eax, eax
	je	SHORT $LN19@drawTile
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+28]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeH$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv136[rsp], xmm0
	jmp	SHORT $LN20@drawTile
$LN19@drawTile:
	movss	xmm0, DWORD PTR hEdgeH$[rsp]
	movss	DWORD PTR tv136[rsp], xmm0
$LN20@drawTile:
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	subss	xmm0, DWORD PTR tv136[rsp]
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 275  : 		edges[3] += t.eW_var ? hEdgeW * (1.f + noise(edges[3], randomSeed) * t.edgeWidthVar) : hEdgeW;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	SHORT $LN21@drawTile
	mov	eax, 4
	imul	rax, rax, 3
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+32]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeW$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv154[rsp], xmm0
	jmp	SHORT $LN22@drawTile
$LN21@drawTile:
	movss	xmm0, DWORD PTR hEdgeW$[rsp]
	movss	DWORD PTR tv154[rsp], xmm0
$LN22@drawTile:
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR tv154[rsp]
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 276  : 		edges[1] -= t.eW_var ? hEdgeW * (1.f + noise(edges[1], randomSeed) * t.edgeWidthVar) : hEdgeW;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	SHORT $LN23@drawTile
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+32]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeW$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv172[rsp], xmm0
	jmp	SHORT $LN24@drawTile
$LN23@drawTile:
	movss	xmm0, DWORD PTR hEdgeW$[rsp]
	movss	DWORD PTR tv172[rsp], xmm0
$LN24@drawTile:
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	subss	xmm0, DWORD PTR tv172[rsp]
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 277  : 	} else {

	jmp	$LN3@drawTile
$LN2@drawTile:

; 278  : 		edges[0] += t.eW_var ? hEdgeW * (1.f + noise(edges[0], randomSeed) * t.edgeWidthVar) : hEdgeW;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	SHORT $LN25@drawTile
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+32]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeW$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv190[rsp], xmm0
	jmp	SHORT $LN26@drawTile
$LN25@drawTile:
	movss	xmm0, DWORD PTR hEdgeW$[rsp]
	movss	DWORD PTR tv190[rsp], xmm0
$LN26@drawTile:
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR tv190[rsp]
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 279  : 		edges[2] -= t.eW_var ? hEdgeW * (1.f + noise(edges[2], randomSeed) * t.edgeWidthVar) : hEdgeW;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+36]
	test	eax, eax
	je	SHORT $LN27@drawTile
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+32]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeW$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv208[rsp], xmm0
	jmp	SHORT $LN28@drawTile
$LN27@drawTile:
	movss	xmm0, DWORD PTR hEdgeW$[rsp]
	movss	DWORD PTR tv208[rsp], xmm0
$LN28@drawTile:
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	subss	xmm0, DWORD PTR tv208[rsp]
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 280  : 		edges[3] += t.eH_var ? hEdgeH * (1.f + noise(edges[3], randomSeed) * t.edgeHeightVar) : hEdgeH;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+37]
	test	eax, eax
	je	SHORT $LN29@drawTile
	mov	eax, 4
	imul	rax, rax, 3
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+28]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeH$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv226[rsp], xmm0
	jmp	SHORT $LN30@drawTile
$LN29@drawTile:
	movss	xmm0, DWORD PTR hEdgeH$[rsp]
	movss	DWORD PTR tv226[rsp], xmm0
$LN30@drawTile:
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	addss	xmm0, DWORD PTR tv226[rsp]
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0

; 281  : 		edges[1] -= t.eH_var ? hEdgeH * (1.f + noise(edges[1], randomSeed) * t.edgeHeightVar) : hEdgeH;

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+37]
	test	eax, eax
	je	SHORT $LN31@drawTile
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm1, DWORD PTR randomSeed$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	call	?noise@@YAMMM@Z				; noise
	mov	rax, QWORD PTR t$[rsp]
	mulss	xmm0, DWORD PTR [rax+28]
	movss	xmm1, DWORD PTR __real@3f800000
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	xmm1, DWORD PTR hEdgeH$[rsp]
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR tv244[rsp], xmm0
	jmp	SHORT $LN32@drawTile
$LN31@drawTile:
	movss	xmm0, DWORD PTR hEdgeH$[rsp]
	movss	DWORD PTR tv244[rsp], xmm0
$LN32@drawTile:
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	subss	xmm0, DWORD PTR tv244[rsp]
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	movss	DWORD PTR [rcx+rax], xmm0
$LN3@drawTile:

; 282  : 	}
; 283  : 
; 284  : 	if (p.x < edges[0]) return TilePoint();

	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR edges$[rsp]
	mov	rdx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	comiss	xmm0, DWORD PTR [rdx]
	jbe	SHORT $LN4@drawTile
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@drawTile
$LN4@drawTile:

; 285  : 	if (p.x > edges[2]) return TilePoint();

	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR edges$[rsp]
	mov	rdx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	comiss	xmm0, DWORD PTR [rdx]
	jae	SHORT $LN5@drawTile
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@drawTile
$LN5@drawTile:

; 286  : 	if (p.y < edges[3]) return TilePoint();

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	mov	rdx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	comiss	xmm0, DWORD PTR [rdx+4]
	jbe	SHORT $LN6@drawTile
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@drawTile
$LN6@drawTile:

; 287  : 	if (p.y > edges[1]) return TilePoint();

	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	mov	rdx, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rcx+rax]
	comiss	xmm0, DWORD PTR [rdx+4]
	jae	SHORT $LN7@drawTile
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@drawTile
$LN7@drawTile:

; 288  : 
; 289  : 	float width = edges[2] - edges[0];

	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR edges$[rsp]
	mov	r8, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax]
	subss	xmm0, DWORD PTR [r8+rcx]
	movss	DWORD PTR width$[rsp], xmm0

; 290  : 	float height = edges[1] - edges[3];

	mov	eax, 4
	imul	rax, rax, 1
	mov	ecx, 4
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR edges$[rsp]
	mov	r8, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax]
	subss	xmm0, DWORD PTR [r8+rcx]
	movss	DWORD PTR height$[rsp], xmm0

; 291  : 	if (width < 0 || height < 0) return TilePoint();

	movss	xmm0, DWORD PTR width$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN9@drawTile
	movss	xmm0, DWORD PTR height$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN8@drawTile
$LN9@drawTile:
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@drawTile
$LN8@drawTile:

; 292  : 
; 293  : 	TilePoint tp = corner(p.x - edges[0], p.y - edges[3], width, height, t);	

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	subss	xmm0, DWORD PTR [rdx+rax]
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR edges$[rsp]
	movss	xmm1, DWORD PTR [rcx]
	subss	xmm1, DWORD PTR [rdx+rax]
	mov	rax, QWORD PTR t$[rsp]
	mov	QWORD PTR [rsp+40], rax
	movss	xmm2, DWORD PTR height$[rsp]
	movss	DWORD PTR [rsp+32], xmm2
	movss	xmm3, DWORD PTR width$[rsp]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR tp$[rsp]
	call	?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z ; Tile::corner

; 294  : 	if (tp.d < 0) return tp; // On edge

	movss	xmm0, DWORD PTR tp$[rsp+24]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN10@drawTile
	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@$$QEAV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@drawTile
$LN10@drawTile:

; 295  : 
; 296  : 	//if (t.tileID || t.mapUV)
; 297  : 		tp.id = id;

	mov	eax, DWORD PTR id$[rsp]
	mov	DWORD PTR tp$[rsp+28], eax

; 298  : 
; 299  : 	if (t.center || (t.mapUV && dir))

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+104], 0
	jne	SHORT $LN12@drawTile
	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+60], 0
	je	$LN11@drawTile
	cmp	DWORD PTR dir$[rsp], 0
	je	$LN11@drawTile
$LN12@drawTile:

; 300  : 		tp.center = Point3(edges[0] + (edges[2] - edges[0]) * .5f,

	mov	eax, 4
	imul	rax, rax, 3
	mov	ecx, 4
	imul	rcx, rcx, 1
	mov	edx, 4
	imul	rdx, rdx, 3
	mov	r8, QWORD PTR edges$[rsp]
	mov	r9, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [r8+rcx]
	subss	xmm0, DWORD PTR [r9+rdx]
	mulss	xmm0, DWORD PTR __real@3f000000
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm1, DWORD PTR [rcx+rax]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	eax, 4
	imul	rax, rax, 0
	mov	ecx, 4
	imul	rcx, rcx, 2
	mov	edx, 4
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR edges$[rsp]
	mov	r9, QWORD PTR edges$[rsp]
	movss	xmm1, DWORD PTR [r8+rcx]
	subss	xmm1, DWORD PTR [r9+rdx]
	mulss	xmm1, DWORD PTR __real@3f000000
	mov	rcx, QWORD PTR edges$[rsp]
	movss	xmm2, DWORD PTR [rcx+rax]
	addss	xmm2, xmm1
	movaps	xmm1, xmm2
	mov	rax, QWORD PTR p$[rsp]
	movss	xmm3, DWORD PTR [rax+8]
	movaps	xmm2, xmm0
	lea	rcx, QWORD PTR $T2[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	lea	rcx, QWORD PTR tp$[rsp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
$LN11@drawTile:

; 301  : 		                   edges[3] + (edges[1] - edges[3]) * .5f, p.z);
; 302  : 
; 303  : 	if (dir) {

	cmp	DWORD PTR dir$[rsp], 0
	je	$LN13@drawTile

; 304  : 		offsetEdges(edges, -tp.center.x, -tp.center.y);

	movss	xmm0, DWORD PTR tp$[rsp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR tp$[rsp]
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR edges$[rsp]
	call	?offsetEdges@@YAXQEAMMM@Z		; offsetEdges

; 305  : 		rotate90(edges[0], edges[3]);

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR edges$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdx, rax
	call	?rotate90@@YAXAEAM0@Z			; rotate90

; 306  : 		rotate90(edges[2], edges[1]);

	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 4
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR edges$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdx, rax
	call	?rotate90@@YAXAEAM0@Z			; rotate90

; 307  : 		offsetEdges(edges, tp.center.x, tp.center.y);

	movss	xmm2, DWORD PTR tp$[rsp+4]
	movss	xmm1, DWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	call	?offsetEdges@@YAXQEAMMM@Z		; offsetEdges

; 308  : 		p -= tp.center; rotate90(p.x, p.y); p += tp.center;

	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??ZPoint3@@QEAAAEAV0@AEBV0@@Z
	mov	rax, QWORD PTR p$[rsp]
	add	rax, 4
	mov	rcx, QWORD PTR p$[rsp]
	mov	rdx, rax
	call	?rotate90@@YAXAEAM0@Z			; rotate90
	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z
$LN13@drawTile:

; 309  : 	}
; 310  : 	
; 311  : 	if (t.mapUV)

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+60], 0
	je	SHORT $LN14@drawTile

; 312  : 		uvMapping(tp, p, edges, t, dir);

	lea	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR p$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	ecx, DWORD PTR dir$[rsp]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9, QWORD PTR t$[rsp]
	mov	r8, QWORD PTR edges$[rsp]
	mov	rdx, rax
	lea	rcx, QWORD PTR tp$[rsp]
	call	?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z ; Tile::uvMapping
$LN14@drawTile:

; 313  : 
; 314  : 	if (dir) {

	cmp	DWORD PTR dir$[rsp], 0
	je	$LN15@drawTile

; 315  : 		offsetEdges(edges, -tp.center.x, -tp.center.y);

	movss	xmm0, DWORD PTR tp$[rsp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	xmm1, DWORD PTR tp$[rsp]
	xorps	xmm1, DWORD PTR __xmm@80000000800000008000000080000000
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR edges$[rsp]
	call	?offsetEdges@@YAXQEAMMM@Z		; offsetEdges

; 316  : 		rotate270(edges[0], edges[3]);

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR edges$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR edges$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdx, rax
	call	?rotate270@@YAXAEAM0@Z			; rotate270

; 317  : 		rotate270(edges[2], edges[1]);

	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR edges$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, 4
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR edges$[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	rdx, rax
	call	?rotate270@@YAXAEAM0@Z			; rotate270

; 318  : 		offsetEdges(edges, tp.center.x, tp.center.y);

	movss	xmm2, DWORD PTR tp$[rsp+4]
	movss	xmm1, DWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR edges$[rsp]
	call	?offsetEdges@@YAXQEAMMM@Z		; offsetEdges

; 319  : 		p -= tp.center; rotate270(p.x, p.y); p += tp.center;

	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??ZPoint3@@QEAAAEAV0@AEBV0@@Z
	mov	rax, QWORD PTR p$[rsp]
	add	rax, 4
	mov	rcx, QWORD PTR p$[rsp]
	mov	rdx, rax
	call	?rotate270@@YAXAEAM0@Z			; rotate270
	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR p$[rsp]
	call	QWORD PTR __imp_??YPoint3@@QEAAAEAV0@AEBV0@@Z
$LN15@drawTile:

; 320  : 	}
; 321  : 
; 322  : 	return tp;	

	lea	rdx, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@$$QEAV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@drawTile:

; 323  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 200				; 000000c8H
	pop	rdi
	pop	rsi
	ret	0
?drawTile@Tile@@CA?AVTilePoint@@VPoint3@@QEAMAEAVTileParam@@HH@Z ENDP ; Tile::drawTile
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z
_TEXT	SEGMENT
scaleX$ = 32
scaleY$ = 36
tv134 = 40
w$ = 44
h$ = 48
angle$ = 52
tv136 = 56
s$1 = 60
tv144 = 64
s$2 = 68
tv161 = 72
scale$3 = 76
s$4 = 80
uvw$ = 88
__$ArrayPad$ = 104
tp$ = 144
p$ = 152
edges$ = 160
t$ = 168
dir$ = 176
?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z PROC ; Tile::uvMapping, COMDAT

; 162  : void Tile::uvMapping(TilePoint& tp, Point3 p, float edges[4], TileParam& t, int dir) {

$LN31:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 120				; 00000078H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 163  : 	float w = edges[2] - edges[0];

	mov	eax, 4
	imul	rax, rax, 2
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR edges$[rsp]
	mov	r8, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax]
	subss	xmm0, DWORD PTR [r8+rcx]
	movss	DWORD PTR w$[rsp], xmm0

; 164  : 	float h = edges[1] - edges[3];

	mov	eax, 4
	imul	rax, rax, 1
	mov	ecx, 4
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR edges$[rsp]
	mov	r8, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rdx+rax]
	subss	xmm0, DWORD PTR [r8+rcx]
	movss	DWORD PTR h$[rsp], xmm0

; 165  : 		
; 166  : 	// Center uvw
; 167  : 	Point3 uvw;

	lea	rcx, QWORD PTR uvw$[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ

; 168  : 	uvw.x = p.x - edges[0] - w * .5f;

	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	subss	xmm0, DWORD PTR [rdx+rax]
	movss	xmm1, DWORD PTR w$[rsp]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm0, xmm1
	movss	DWORD PTR uvw$[rsp], xmm0

; 169  : 	uvw.y = p.y - edges[3] - h * .5f;

	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR p$[rsp]
	mov	rdx, QWORD PTR edges$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	subss	xmm0, DWORD PTR [rdx+rax]
	movss	xmm1, DWORD PTR h$[rsp]
	mulss	xmm1, DWORD PTR __real@3f000000
	subss	xmm0, xmm1
	movss	DWORD PTR uvw$[rsp+4], xmm0

; 170  : 	uvw.z = p.z;

	mov	rax, QWORD PTR p$[rsp]
	movss	xmm0, DWORD PTR [rax+8]
	movss	DWORD PTR uvw$[rsp+8], xmm0

; 171  : 
; 172  : 	// Prime randomness
; 173  : 	srand(tp.id*(tp.id*tp.id*15731 + 789221));

	mov	rax, QWORD PTR tp$[rsp]
	mov	rcx, QWORD PTR tp$[rsp]
	mov	eax, DWORD PTR [rax+28]
	imul	eax, DWORD PTR [rcx+28]
	imul	eax, eax, 15731				; 00003d73H
	add	eax, 789221				; 000c0ae5H
	mov	rcx, QWORD PTR tp$[rsp]
	mov	ecx, DWORD PTR [rcx+28]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, eax
	call	QWORD PTR __imp_srand

; 174  : 
; 175  : 	// Angle
; 176  : 	float angle = getAngle(t.rotUV, t.randRot);

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [rax+88]
	mov	rax, QWORD PTR t$[rsp]
	mov	ecx, DWORD PTR [rax+84]
	call	?getAngle@@YAMHM@Z			; getAngle
	movss	DWORD PTR angle$[rsp], xmm0

; 177  : 
; 178  : 	// Random scale
; 179  : 	float scaleX = 0, scaleY = 0;	

	xorps	xmm0, xmm0
	movss	DWORD PTR scaleX$[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR scaleY$[rsp], xmm0

; 180  : 	switch (t.autoScale) {

	mov	rax, QWORD PTR t$[rsp]
	mov	eax, DWORD PTR [rax+56]
	mov	DWORD PTR tv134[rsp], eax
	cmp	DWORD PTR tv134[rsp], 1
	je	SHORT $LN4@uvMapping
	cmp	DWORD PTR tv134[rsp], 2
	je	SHORT $LN5@uvMapping
	cmp	DWORD PTR tv134[rsp], 3
	je	SHORT $LN6@uvMapping
	cmp	DWORD PTR tv134[rsp], 4
	je	$LN7@uvMapping
	cmp	DWORD PTR tv134[rsp], 5
	je	$LN8@uvMapping
	jmp	$LN2@uvMapping
$LN4@uvMapping:

; 181  : 		case 1: { // UV
; 182  : 			scaleX = w; scaleY = h;

	movss	xmm0, DWORD PTR w$[rsp]
	movss	DWORD PTR scaleX$[rsp], xmm0
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR scaleY$[rsp], xmm0

; 183  : 			break; }		

	jmp	$LN2@uvMapping
$LN5@uvMapping:

; 184  : 		case 2: { // UV Fit
; 185  : 			scaleX = w; scaleY = h; // Same as UV, but with additiona scaling below

	movss	xmm0, DWORD PTR w$[rsp]
	movss	DWORD PTR scaleX$[rsp], xmm0
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR scaleY$[rsp], xmm0

; 186  : 			break; }

	jmp	$LN2@uvMapping
$LN6@uvMapping:

; 187  : 		case 3: { // UV Fit Keep aspect
; 188  : 			float s = MAX(w, h);		

	movss	xmm0, DWORD PTR w$[rsp]
	comiss	xmm0, DWORD PTR h$[rsp]
	jbe	SHORT $LN25@uvMapping
	movss	xmm0, DWORD PTR w$[rsp]
	movss	DWORD PTR tv136[rsp], xmm0
	jmp	SHORT $LN26@uvMapping
$LN25@uvMapping:
	movss	xmm0, DWORD PTR h$[rsp]
	movss	DWORD PTR tv136[rsp], xmm0
$LN26@uvMapping:
	movss	xmm0, DWORD PTR tv136[rsp]
	movss	DWORD PTR s$1[rsp], xmm0

; 189  : 			scaleX = s; scaleY = s;

	movss	xmm0, DWORD PTR s$1[rsp]
	movss	DWORD PTR scaleX$[rsp], xmm0
	movss	xmm0, DWORD PTR s$1[rsp]
	movss	DWORD PTR scaleY$[rsp], xmm0

; 190  : 			break; }

	jmp	$LN2@uvMapping
$LN7@uvMapping:

; 191  : 		case 4: { // UV Norm.
; 192  : 			scaleX = t.tileMaxWidth;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+124]
	movss	DWORD PTR scaleX$[rsp], xmm0

; 193  : 			scaleY = t.tileMaxHeight;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+120]
	movss	DWORD PTR scaleY$[rsp], xmm0

; 194  : 			break; }

	jmp	SHORT $LN2@uvMapping
$LN8@uvMapping:

; 195  : 		case 5: { // UV Norm. Keep aspect
; 196  : 			float s = MAX(t.tileMaxWidth, t.tileMaxHeight);		

	mov	rax, QWORD PTR t$[rsp]
	mov	rcx, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+120]
	comiss	xmm0, DWORD PTR [rcx+124]
	jae	SHORT $LN27@uvMapping
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+124]
	movss	DWORD PTR tv144[rsp], xmm0
	jmp	SHORT $LN28@uvMapping
$LN27@uvMapping:
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+120]
	movss	DWORD PTR tv144[rsp], xmm0
$LN28@uvMapping:
	movss	xmm0, DWORD PTR tv144[rsp]
	movss	DWORD PTR s$2[rsp], xmm0

; 197  : 			scaleX = s;

	movss	xmm0, DWORD PTR s$2[rsp]
	movss	DWORD PTR scaleX$[rsp], xmm0

; 198  : 			scaleY = s;

	movss	xmm0, DWORD PTR s$2[rsp]
	movss	DWORD PTR scaleY$[rsp], xmm0
$LN2@uvMapping:

; 199  : 			break; }		
; 200  : 	}
; 201  : 
; 202  : 	// Calculate scaling required to fit UVs tightly around the tile
; 203  : 	if ((t.autoScale == 2 || t.autoScale == 3) && t.rotUV) { // Scale based on rotation so whole tile stays inside 0..1 space

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+56], 2
	je	SHORT $LN10@uvMapping
	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+56], 3
	jne	$LN9@uvMapping
$LN10@uvMapping:
	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+84], 0
	je	$LN9@uvMapping

; 204  : 		float scale = 2.f * SQRTHALF * cos(fmod(angle > 0 ? -angle : angle, HALFPI) + QUATPI);

	movss	xmm0, DWORD PTR angle$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN29@uvMapping
	movss	xmm0, DWORD PTR angle$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR tv161[rsp], xmm0
	jmp	SHORT $LN30@uvMapping
$LN29@uvMapping:
	movss	xmm0, DWORD PTR angle$[rsp]
	movss	DWORD PTR tv161[rsp], xmm0
$LN30@uvMapping:
	movss	xmm1, DWORD PTR __real@3fc90fdb
	movss	xmm0, DWORD PTR tv161[rsp]
	call	?fmod@@YAMMM@Z				; fmod
	addss	xmm0, DWORD PTR __real@3f490fdb
	call	?cos@@YAMM@Z				; cos
	movss	xmm1, DWORD PTR __real@3fb504f3
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR scale$3[rsp], xmm0

; 205  : 		scaleX *= scale;

	movss	xmm0, DWORD PTR scaleX$[rsp]
	mulss	xmm0, DWORD PTR scale$3[rsp]
	movss	DWORD PTR scaleX$[rsp], xmm0

; 206  : 		scaleY *= scale;

	movss	xmm0, DWORD PTR scaleY$[rsp]
	mulss	xmm0, DWORD PTR scale$3[rsp]
	movss	DWORD PTR scaleY$[rsp], xmm0
$LN9@uvMapping:

; 207  : 	}	
; 208  : 
; 209  : 	// Apply auto scale
; 210  : 	if (t.autoScale) {

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+56], 0
	je	SHORT $LN11@uvMapping

; 211  : 		uvw.x /= scaleX;

	movss	xmm0, DWORD PTR uvw$[rsp]
	divss	xmm0, DWORD PTR scaleX$[rsp]
	movss	DWORD PTR uvw$[rsp], xmm0

; 212  : 		uvw.y /= scaleY;

	movss	xmm0, DWORD PTR uvw$[rsp+4]
	divss	xmm0, DWORD PTR scaleY$[rsp]
	movss	DWORD PTR uvw$[rsp+4], xmm0
$LN11@uvMapping:

; 213  : 	}
; 214  : 
; 215  : 	// Flip
; 216  : 	if (t.flipX) if (rand() % 2) uvw.x = -uvw.x;

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+92], 0
	je	SHORT $LN12@uvMapping
	call	QWORD PTR __imp_rand
	cdq
	and	eax, 1
	xor	eax, edx
	sub	eax, edx
	test	eax, eax
	je	SHORT $LN13@uvMapping
	movss	xmm0, DWORD PTR uvw$[rsp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR uvw$[rsp], xmm0
$LN13@uvMapping:
$LN12@uvMapping:

; 217  : 	if (t.flipY) if (rand() % 2) uvw.y = -uvw.y;

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+96], 0
	je	SHORT $LN14@uvMapping
	call	QWORD PTR __imp_rand
	cdq
	and	eax, 1
	xor	eax, edx
	sub	eax, edx
	test	eax, eax
	je	SHORT $LN15@uvMapping
	movss	xmm0, DWORD PTR uvw$[rsp+4]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	movss	DWORD PTR uvw$[rsp+4], xmm0
$LN15@uvMapping:
$LN14@uvMapping:

; 218  : 	
; 219  : 	// Random scale
; 220  : 	if (t.randScale) {

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+128]
	test	eax, eax
	je	$LN16@uvMapping

; 221  : 		if (t.lock) {

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+80], 0
	je	SHORT $LN17@uvMapping

; 222  : 			float s = 1.f + SFRAND() * t.randSX;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	mov	rax, QWORD PTR t$[rsp]
	cvtss2sd xmm1, DWORD PTR [rax+72]
	mulsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR s$4[rsp], xmm0

; 223  : 			scaleX = s;

	movss	xmm0, DWORD PTR s$4[rsp]
	movss	DWORD PTR scaleX$[rsp], xmm0

; 224  : 			scaleY = s;

	movss	xmm0, DWORD PTR s$4[rsp]
	movss	DWORD PTR scaleY$[rsp], xmm0

; 225  : 		} else {

	jmp	SHORT $LN18@uvMapping
$LN17@uvMapping:

; 226  : 			scaleX = 1.f + SFRAND() * t.randSX;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	mov	rax, QWORD PTR t$[rsp]
	cvtss2sd xmm1, DWORD PTR [rax+72]
	mulsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR scaleX$[rsp], xmm0

; 227  : 			scaleY = 1.f + SFRAND() * t.randSY;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	mov	rax, QWORD PTR t$[rsp]
	cvtss2sd xmm1, DWORD PTR [rax+76]
	mulsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR scaleY$[rsp], xmm0
$LN18@uvMapping:

; 228  : 		}
; 229  : 
; 230  : 		if (scaleX < 0) scaleX = 0.f;

	movss	xmm0, DWORD PTR scaleX$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN19@uvMapping
	xorps	xmm0, xmm0
	movss	DWORD PTR scaleX$[rsp], xmm0
$LN19@uvMapping:

; 231  : 		if (scaleY < 0) scaleY = 0.f;

	movss	xmm0, DWORD PTR scaleY$[rsp]
	comiss	xmm0, DWORD PTR __real@00000000
	jae	SHORT $LN20@uvMapping
	xorps	xmm0, xmm0
	movss	DWORD PTR scaleY$[rsp], xmm0
$LN20@uvMapping:

; 232  : 
; 233  : 		uvw.x /= scaleX;	 

	movss	xmm0, DWORD PTR uvw$[rsp]
	divss	xmm0, DWORD PTR scaleX$[rsp]
	movss	DWORD PTR uvw$[rsp], xmm0

; 234  : 		uvw.y /= scaleY;

	movss	xmm0, DWORD PTR uvw$[rsp+4]
	divss	xmm0, DWORD PTR scaleY$[rsp]
	movss	DWORD PTR uvw$[rsp+4], xmm0
$LN16@uvMapping:

; 235  : 	}
; 236  : 
; 237  : 	// Offset
; 238  : 	if (t.randOffset) {

	mov	rax, QWORD PTR t$[rsp]
	movzx	eax, BYTE PTR [rax+129]
	test	eax, eax
	je	$LN21@uvMapping

; 239  : 		uvw.x += UFRAND() * t.randX;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rax, QWORD PTR t$[rsp]
	cvtss2sd xmm1, DWORD PTR [rax+64]
	mulsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR uvw$[rsp]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR uvw$[rsp], xmm0

; 240  : 		uvw.y += UFRAND() * t.randY;

	call	QWORD PTR __imp_rand
	cvtsi2sd xmm0, eax
	divsd	xmm0, QWORD PTR __real@40dfffc000000000
	mulsd	xmm0, QWORD PTR __real@4000000000000000
	subsd	xmm0, QWORD PTR __real@3ff0000000000000
	mov	rax, QWORD PTR t$[rsp]
	cvtss2sd xmm1, DWORD PTR [rax+68]
	mulsd	xmm0, xmm1
	cvtss2sd xmm1, DWORD PTR uvw$[rsp+4]
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR uvw$[rsp+4], xmm0
$LN21@uvMapping:

; 241  : 	}
; 242  : 
; 243  : 	// Rotate
; 244  : 	if (t.rotUV)

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+84], 0
	je	SHORT $LN22@uvMapping

; 245  : 		rotatePoint2(uvw, angle);

	movss	xmm1, DWORD PTR angle$[rsp]
	lea	rcx, QWORD PTR uvw$[rsp]
	call	?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z	; Tile::rotatePoint2
$LN22@uvMapping:

; 246  : 
; 247  : 	// Offset to 0..1
; 248  : 	if (t.autoScale) {

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+56], 0
	je	SHORT $LN23@uvMapping

; 249  : 		uvw.x += .5f;

	movss	xmm0, DWORD PTR uvw$[rsp]
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR uvw$[rsp], xmm0

; 250  : 		uvw.y += .5f;

	movss	xmm0, DWORD PTR uvw$[rsp+4]
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR uvw$[rsp+4], xmm0
$LN23@uvMapping:

; 251  : 	}
; 252  : 
; 253  : 	// Return
; 254  : 	tp.uvw = uvw;

	mov	rax, QWORD PTR tp$[rsp]
	lea	rcx, QWORD PTR uvw$[rsp]
	lea	rdi, QWORD PTR [rax+12]
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb

; 255  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 120				; 00000078H
	pop	rdi
	pop	rsi
	ret	0
?uvMapping@Tile@@CAXAEAVTilePoint@@VPoint3@@QEAMAEAVTileParam@@H@Z ENDP ; Tile::uvMapping
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?rotateUV@Tile@@CAXHMAEAVPoint3@@@Z
_TEXT	SEGMENT
rotUV$ = 8
var$ = 16
d$ = 24
?rotateUV@Tile@@CAXHMAEAVPoint3@@@Z PROC		; Tile::rotateUV, COMDAT

; 110  : void Tile::rotateUV(int rotUV, float var, Point3& d) {

	mov	QWORD PTR [rsp+24], r8
	movss	DWORD PTR [rsp+16], xmm1
	mov	DWORD PTR [rsp+8], ecx

; 111  : 
; 112  : }

	ret	0
?rotateUV@Tile@@CAXHMAEAVPoint3@@@Z ENDP		; Tile::rotateUV
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z
_TEXT	SEGMENT
tv67 = 32
tv76 = 36
rotX$ = 40
rotY$ = 44
d$ = 64
angle$ = 72
?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z PROC		; Tile::rotatePoint2, COMDAT

; 114  : void Tile::rotatePoint2(Point3& d, float angle) {

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 115  : 	float rotX = (cos(angle)*d.x - sin(angle)*d.y);

	movss	xmm0, DWORD PTR angle$[rsp]
	call	?cos@@YAMM@Z				; cos
	mov	rax, QWORD PTR d$[rsp]
	mulss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv67[rsp], xmm0
	movss	xmm0, DWORD PTR angle$[rsp]
	call	?sin@@YAMM@Z				; sin
	mov	rax, QWORD PTR d$[rsp]
	mulss	xmm0, DWORD PTR [rax+4]
	movss	xmm1, DWORD PTR tv67[rsp]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR rotX$[rsp], xmm0

; 116  : 	float rotY = (sin(angle)*d.x + cos(angle)*d.y);

	movss	xmm0, DWORD PTR angle$[rsp]
	call	?sin@@YAMM@Z				; sin
	mov	rax, QWORD PTR d$[rsp]
	mulss	xmm0, DWORD PTR [rax]
	movss	DWORD PTR tv76[rsp], xmm0
	movss	xmm0, DWORD PTR angle$[rsp]
	call	?cos@@YAMM@Z				; cos
	mov	rax, QWORD PTR d$[rsp]
	mulss	xmm0, DWORD PTR [rax+4]
	movss	xmm1, DWORD PTR tv76[rsp]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR rotY$[rsp], xmm0

; 117  : 	d.x = rotX;

	mov	rax, QWORD PTR d$[rsp]
	movss	xmm0, DWORD PTR rotX$[rsp]
	movss	DWORD PTR [rax], xmm0

; 118  : 	d.y = rotY;

	mov	rax, QWORD PTR d$[rsp]
	movss	xmm0, DWORD PTR rotY$[rsp]
	movss	DWORD PTR [rax+4], xmm0

; 119  : }

	add	rsp, 56					; 00000038H
	ret	0
?rotatePoint2@Tile@@CAXAEAVPoint3@@M@Z ENDP		; Tile::rotatePoint2
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z
_TEXT	SEGMENT
inCorner$1 = 32
inCorner$2 = 33
cY$3 = 36
cX$4 = 40
d$5 = 44
dX$6 = 48
dY$7 = 52
tv171 = 56
tv153 = 60
tv209 = 64
tv191 = 68
tv229 = 72
tv198 = 76
tv231 = 80
$T8 = 88
$T9 = 96
$T10 = 104
$T11 = 112
$T12 = 120
$T13 = 128
$T14 = 144
$T15 = 160
$T16 = 176
$T17 = 192
$T18 = 224
__$ReturnUdt$ = 272
rX$ = 280
rY$ = 288
w$ = 296
h$ = 304
t$ = 312
?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z PROC ; Tile::corner, COMDAT

; 49   : TilePoint Tile::corner(float rX, float rY, float w, float h, TileParam& t) {	

$LN26:
	movss	DWORD PTR [rsp+32], xmm3
	movss	DWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 264				; 00000108H

; 50   : 	// Evaluate	maps
; 51   : 	if (t.tileRound) {

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+40], 0
	je	$LN2@corner

; 52   : 		bool inCorner = false;

	mov	BYTE PTR inCorner$1[rsp], 0

; 53   : 		float cX=0.0f, cY=0.0f;

	xorps	xmm0, xmm0
	movss	DWORD PTR cX$4[rsp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR cY$3[rsp], xmm0

; 54   : 		// Detect corner
; 55   : 		if (rX < t.tileCrnrRad) { 

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR rX$[rsp]
	comiss	xmm0, DWORD PTR [rax+52]
	jae	$LN3@corner

; 56   : 			if (rY < t.tileCrnrRad) { // Bottom left

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR rY$[rsp]
	comiss	xmm0, DWORD PTR [rax+52]
	jae	SHORT $LN5@corner

; 57   : 				cX = t.tileCrnrRad - rX;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+52]
	subss	xmm0, DWORD PTR rX$[rsp]
	movss	DWORD PTR cX$4[rsp], xmm0

; 58   : 				cY = t.tileCrnrRad - rY; 				

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+52]
	subss	xmm0, DWORD PTR rY$[rsp]
	movss	DWORD PTR cY$3[rsp], xmm0

; 59   : 				inCorner = true;

	mov	BYTE PTR inCorner$1[rsp], 1
	jmp	SHORT $LN6@corner
$LN5@corner:

; 60   : 			} else if (rY > h - t.tileCrnrRad) { // Top left

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	xmm1, DWORD PTR rY$[rsp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN7@corner

; 61   : 				cX = t.tileCrnrRad - rX;

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+52]
	subss	xmm0, DWORD PTR rX$[rsp]
	movss	DWORD PTR cX$4[rsp], xmm0

; 62   : 				cY = h - rY - t.tileCrnrRad; 				

	movss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR rY$[rsp]
	mov	rax, QWORD PTR t$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	DWORD PTR cY$3[rsp], xmm0

; 63   : 				inCorner = true;

	mov	BYTE PTR inCorner$1[rsp], 1
$LN7@corner:
$LN6@corner:

; 64   : 			}

	jmp	$LN4@corner
$LN3@corner:

; 65   : 		} else if (rX > w - t.tileCrnrRad) {

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR w$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	xmm1, DWORD PTR rX$[rsp]
	comiss	xmm1, xmm0
	jbe	$LN8@corner

; 66   : 			if (rY < t.tileCrnrRad) { // Bottom right

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR rY$[rsp]
	comiss	xmm0, DWORD PTR [rax+52]
	jae	SHORT $LN9@corner

; 67   : 				cX = w - rX - t.tileCrnrRad;

	movss	xmm0, DWORD PTR w$[rsp]
	subss	xmm0, DWORD PTR rX$[rsp]
	mov	rax, QWORD PTR t$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	DWORD PTR cX$4[rsp], xmm0

; 68   : 				cY = t.tileCrnrRad - rY; 				

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+52]
	subss	xmm0, DWORD PTR rY$[rsp]
	movss	DWORD PTR cY$3[rsp], xmm0

; 69   : 				inCorner = true;

	mov	BYTE PTR inCorner$1[rsp], 1
	jmp	SHORT $LN10@corner
$LN9@corner:

; 70   : 			} else if (rY > h - t.tileCrnrRad) { // Top right

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	xmm1, DWORD PTR rY$[rsp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN11@corner

; 71   : 				cX = w - rX - t.tileCrnrRad;

	movss	xmm0, DWORD PTR w$[rsp]
	subss	xmm0, DWORD PTR rX$[rsp]
	mov	rax, QWORD PTR t$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	DWORD PTR cX$4[rsp], xmm0

; 72   : 				cY = h - rY - t.tileCrnrRad;

	movss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR rY$[rsp]
	mov	rax, QWORD PTR t$[rsp]
	subss	xmm0, DWORD PTR [rax+52]
	movss	DWORD PTR cY$3[rsp], xmm0

; 73   : 				inCorner = true;

	mov	BYTE PTR inCorner$1[rsp], 1
$LN11@corner:
$LN10@corner:
$LN8@corner:
$LN4@corner:

; 74   : 			}
; 75   : 		}
; 76   : 		float d = cY*cY + cX*cX;

	movss	xmm0, DWORD PTR cY$3[rsp]
	mulss	xmm0, DWORD PTR cY$3[rsp]
	movss	xmm1, DWORD PTR cX$4[rsp]
	mulss	xmm1, DWORD PTR cX$4[rsp]
	addss	xmm0, xmm1
	movss	DWORD PTR d$5[rsp], xmm0

; 77   : 		if (inCorner) {

	movzx	eax, BYTE PTR inCorner$1[rsp]
	test	eax, eax
	je	$LN12@corner

; 78   : 			if (d > t.tileCrnrRad*t.tileCrnrRad)

	mov	rax, QWORD PTR t$[rsp]
	mov	rcx, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR [rax+52]
	mulss	xmm0, DWORD PTR [rcx+52]
	movss	xmm1, DWORD PTR d$5[rsp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN13@corner

; 79   : 				return TilePoint();

	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@XZ			; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@corner
$LN13@corner:

; 80   : 			// Calculate corner blur
; 81   : 			d = t.tileCrnrRad - sqrt(d);

	movss	xmm0, DWORD PTR d$5[rsp]
	call	?sqrt@@YAMM@Z				; sqrt
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [rax+52]
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR d$5[rsp], xmm0

; 82   : 			if (t.tileBlur > 0 && d <t. tileBlurRad)

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+44], 0
	jle	$LN14@corner
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR d$5[rsp]
	comiss	xmm0, DWORD PTR [rax+48]
	jae	$LN14@corner

; 83   : 				return TilePoint(Point3(rX/w, rY/h, 0.f), edgeBlur(d, t.tileBlurRad, t.tileBlur));

	lea	rax, QWORD PTR $T13[rsp]
	mov	QWORD PTR $T8[rsp], rax
	mov	rax, QWORD PTR t$[rsp]
	mov	r8d, DWORD PTR [rax+44]
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [rax+48]
	movss	xmm0, DWORD PTR d$5[rsp]
	call	?edgeBlur@Tile@@CAMMMH@Z		; Tile::edgeBlur
	movss	DWORD PTR tv153[rsp], xmm0
	movss	xmm1, DWORD PTR rY$[rsp]
	divss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR rX$[rsp]
	divss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv171[rsp], xmm2
	xorps	xmm3, xmm3
	movaps	xmm2, xmm1
	movss	xmm1, DWORD PTR tv171[rsp]
	mov	rcx, QWORD PTR $T8[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	movss	xmm0, DWORD PTR tv153[rsp]
	movaps	xmm2, xmm0
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@VPoint3@@M@Z		; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	$LN1@corner
$LN14@corner:
$LN12@corner:
$LN2@corner:

; 84   : 		}
; 85   : 	} 
; 86   : 	if (t.tileBlur) {		

	mov	rax, QWORD PTR t$[rsp]
	cmp	DWORD PTR [rax+44], 0
	je	$LN15@corner

; 87   : 		bool inCorner = false;

	mov	BYTE PTR inCorner$2[rsp], 0

; 88   : 		float dX = rX;

	movss	xmm0, DWORD PTR rX$[rsp]
	movss	DWORD PTR dX$6[rsp], xmm0

; 89   : 		float dY = rY;

	movss	xmm0, DWORD PTR rY$[rsp]
	movss	DWORD PTR dY$7[rsp], xmm0

; 90   : 		// Distance to vertical walls
; 91   : 		if (rX < t.tileBlurRad) {

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR rX$[rsp]
	comiss	xmm0, DWORD PTR [rax+48]
	jae	SHORT $LN16@corner

; 92   : 			inCorner = true;

	mov	BYTE PTR inCorner$2[rsp], 1
	jmp	SHORT $LN17@corner
$LN16@corner:

; 93   : 		} else if (rX > w - t.tileBlurRad) {

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR w$[rsp]
	subss	xmm0, DWORD PTR [rax+48]
	movss	xmm1, DWORD PTR rX$[rsp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN18@corner

; 94   : 			dX = w - rX;

	movss	xmm0, DWORD PTR w$[rsp]
	subss	xmm0, DWORD PTR rX$[rsp]
	movss	DWORD PTR dX$6[rsp], xmm0

; 95   : 			inCorner = true;

	mov	BYTE PTR inCorner$2[rsp], 1
$LN18@corner:
$LN17@corner:

; 96   : 		}
; 97   : 		// Distance to horizontal walls
; 98   : 		if (rY < t.tileBlurRad) {

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR rY$[rsp]
	comiss	xmm0, DWORD PTR [rax+48]
	jae	SHORT $LN19@corner

; 99   : 			inCorner = true;

	mov	BYTE PTR inCorner$2[rsp], 1
	jmp	SHORT $LN20@corner
$LN19@corner:

; 100  : 		} else if (rY > h - t.tileBlurRad) {

	mov	rax, QWORD PTR t$[rsp]
	movss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR [rax+48]
	movss	xmm1, DWORD PTR rY$[rsp]
	comiss	xmm1, xmm0
	jbe	SHORT $LN21@corner

; 101  : 			dY = h - rY;

	movss	xmm0, DWORD PTR h$[rsp]
	subss	xmm0, DWORD PTR rY$[rsp]
	movss	DWORD PTR dY$7[rsp], xmm0

; 102  : 			inCorner = true;

	mov	BYTE PTR inCorner$2[rsp], 1
$LN21@corner:
$LN20@corner:

; 103  : 		}
; 104  : 		if (inCorner)

	movzx	eax, BYTE PTR inCorner$2[rsp]
	test	eax, eax
	je	$LN22@corner

; 105  : 			return dX<dY?TilePoint(Point3(rX/w, rY/h, 0.f), edgeBlur(dX, t.tileBlurRad, t.tileBlur)):TilePoint(Point3(rX/w, rY/h, 0.f), edgeBlur(dY, t.tileBlurRad, t.tileBlur));

	movss	xmm0, DWORD PTR dX$6[rsp]
	comiss	xmm0, DWORD PTR dY$7[rsp]
	jae	$LN24@corner
	lea	rax, QWORD PTR $T14[rsp]
	mov	QWORD PTR $T9[rsp], rax
	mov	rax, QWORD PTR t$[rsp]
	mov	r8d, DWORD PTR [rax+44]
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [rax+48]
	movss	xmm0, DWORD PTR dX$6[rsp]
	call	?edgeBlur@Tile@@CAMMMH@Z		; Tile::edgeBlur
	movss	DWORD PTR tv191[rsp], xmm0
	movss	xmm1, DWORD PTR rY$[rsp]
	divss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR rX$[rsp]
	divss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv209[rsp], xmm2
	xorps	xmm3, xmm3
	movaps	xmm2, xmm1
	movss	xmm1, DWORD PTR tv209[rsp]
	mov	rcx, QWORD PTR $T9[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	movss	xmm0, DWORD PTR tv191[rsp]
	movaps	xmm2, xmm0
	mov	rdx, rax
	lea	rcx, QWORD PTR $T17[rsp]
	call	??0TilePoint@@QEAA@VPoint3@@M@Z		; TilePoint::TilePoint
	mov	QWORD PTR tv231[rsp], rax
	jmp	$LN25@corner
$LN24@corner:
	lea	rax, QWORD PTR $T15[rsp]
	mov	QWORD PTR $T10[rsp], rax
	mov	rax, QWORD PTR t$[rsp]
	mov	r8d, DWORD PTR [rax+44]
	mov	rax, QWORD PTR t$[rsp]
	movss	xmm1, DWORD PTR [rax+48]
	movss	xmm0, DWORD PTR dY$7[rsp]
	call	?edgeBlur@Tile@@CAMMMH@Z		; Tile::edgeBlur
	movss	DWORD PTR tv198[rsp], xmm0
	movss	xmm1, DWORD PTR rY$[rsp]
	divss	xmm1, DWORD PTR h$[rsp]
	movss	xmm2, DWORD PTR rX$[rsp]
	divss	xmm2, DWORD PTR w$[rsp]
	movss	DWORD PTR tv229[rsp], xmm2
	xorps	xmm3, xmm3
	movaps	xmm2, xmm1
	movss	xmm1, DWORD PTR tv229[rsp]
	mov	rcx, QWORD PTR $T10[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	movss	xmm0, DWORD PTR tv198[rsp]
	movaps	xmm2, xmm0
	mov	rdx, rax
	lea	rcx, QWORD PTR $T18[rsp]
	call	??0TilePoint@@QEAA@VPoint3@@M@Z		; TilePoint::TilePoint
	mov	QWORD PTR tv231[rsp], rax
$LN25@corner:
	mov	rax, QWORD PTR tv231[rsp]
	mov	QWORD PTR $T11[rsp], rax
	mov	rdx, QWORD PTR $T11[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@$$QEAV0@@Z
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
	jmp	SHORT $LN1@corner
$LN22@corner:
$LN15@corner:

; 106  : 	}
; 107  : 	return TilePoint(Point3(rX/w, rY/h, 0.f), 1.f);

	lea	rax, QWORD PTR $T16[rsp]
	mov	QWORD PTR $T12[rsp], rax
	movss	xmm0, DWORD PTR rY$[rsp]
	divss	xmm0, DWORD PTR h$[rsp]
	movss	xmm1, DWORD PTR rX$[rsp]
	divss	xmm1, DWORD PTR w$[rsp]
	xorps	xmm3, xmm3
	movaps	xmm2, xmm0
	mov	rcx, QWORD PTR $T12[rsp]
	call	QWORD PTR __imp_??0Point3@@QEAA@MMM@Z
	movss	xmm2, DWORD PTR __real@3f800000
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0TilePoint@@QEAA@VPoint3@@M@Z		; TilePoint::TilePoint
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@corner:

; 108  : }

	add	rsp, 264				; 00000108H
	ret	0
?corner@Tile@@CA?AVTilePoint@@MMMMAEAVTileParam@@@Z ENDP ; Tile::corner
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?edgeBlur@Tile@@CAMMMH@Z
_TEXT	SEGMENT
tv64 = 32
d$ = 64
r$ = 72
type$ = 80
?edgeBlur@Tile@@CAMMMH@Z PROC				; Tile::edgeBlur, COMDAT

; 38   : float Tile::edgeBlur(float d, float r, int type) {

$LN9:
	mov	DWORD PTR [rsp+24], r8d
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H

; 39   : 	switch (type) {		

	mov	eax, DWORD PTR type$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 1
	je	SHORT $LN4@edgeBlur
	cmp	DWORD PTR tv64[rsp], 2
	je	SHORT $LN5@edgeBlur
	cmp	DWORD PTR tv64[rsp], 3
	je	SHORT $LN6@edgeBlur
	jmp	SHORT $LN7@edgeBlur
$LN4@edgeBlur:

; 40   : 		case 1: return d/r; // Linear

	movss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR r$[rsp]
	jmp	SHORT $LN1@edgeBlur
$LN5@edgeBlur:

; 41   : 		case 2: // Cubic
; 42   : 			d = 1.f - (d/r);

	movss	xmm0, DWORD PTR d$[rsp]
	divss	xmm0, DWORD PTR r$[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR d$[rsp], xmm0

; 43   : 			return sqrt(1-d*d);

	movss	xmm0, DWORD PTR d$[rsp]
	mulss	xmm0, DWORD PTR d$[rsp]
	movss	xmm1, DWORD PTR __real@3f800000
	subss	xmm1, xmm0
	movaps	xmm0, xmm1
	call	?sqrt@@YAMM@Z				; sqrt
	jmp	SHORT $LN1@edgeBlur
$LN6@edgeBlur:

; 44   : 		case 3: return smooth(d, 0.f, r); // Smooth					

	movss	xmm2, DWORD PTR r$[rsp]
	xorps	xmm1, xmm1
	movss	xmm0, DWORD PTR d$[rsp]
	call	?smooth@@YAMMMM@Z			; smooth
	jmp	SHORT $LN1@edgeBlur
$LN7@edgeBlur:

; 45   : 		default: return 1.f;

	movss	xmm0, DWORD PTR __real@3f800000
$LN1@edgeBlur:

; 46   : 	}	
; 47   : }

	add	rsp, 56					; 00000038H
	ret	0
?edgeBlur@Tile@@CAMMMH@Z ENDP				; Tile::edgeBlur
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0TilePoint@@QEAA@$$QEAV0@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0TilePoint@@QEAA@$$QEAV0@@Z PROC			; TilePoint::TilePoint, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR __that$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rdx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR __that$[rsp]
	add	rax, 12
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 12
	mov	rdx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@AEBV0@@Z
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx+24]
	movss	DWORD PTR [rax+24], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	mov	ecx, DWORD PTR [rcx+28]
	mov	DWORD PTR [rax+28], ecx
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0TilePoint@@QEAA@$$QEAV0@@Z ENDP			; TilePoint::TilePoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ??0TilePoint@@QEAA@VPoint3@@M@Z
_TEXT	SEGMENT
this$ = 64
x$ = 72
y$ = 80
??0TilePoint@@QEAA@VPoint3@@M@Z PROC			; TilePoint::TilePoint, COMDAT

; 167  : 	TilePoint(Point3 x, float y) {uvw = x; d = y;}

$LN3:
	movss	DWORD PTR [rsp+24], xmm2
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 12
	mov	rcx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	lea	rdi, QWORD PTR [rax+12]
	mov	rsi, QWORD PTR x$[rsp]
	mov	ecx, 12
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR y$[rsp]
	movss	DWORD PTR [rax+24], xmm0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rsi
	ret	0
??0TilePoint@@QEAA@VPoint3@@M@Z ENDP			; TilePoint::TilePoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ??0TilePoint@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0TilePoint@@QEAA@XZ PROC				; TilePoint::TilePoint, COMDAT

; 164  : 	TilePoint() {d = -1.f;}	

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 12
	mov	rcx, rax
	call	QWORD PTR __imp_??0Point3@@QEAA@XZ
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR [rax+24], xmm0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0TilePoint@@QEAA@XZ ENDP				; TilePoint::TilePoint
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?setPreset@TilePattern@@QEAAXH@Z
_TEXT	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?setPreset@TilePattern@@QEAAXH@Z PROC			; TilePattern::setPreset, COMDAT

; 492  : void TilePattern::setPreset(int preset) {

$LN26:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 696				; 000002b8H
	mov	QWORD PTR $T11[rsp], -2

; 493  : 	switch (preset) {

	mov	eax, DWORD PTR preset$[rsp]
	mov	DWORD PTR tv64[rsp], eax
	cmp	DWORD PTR tv64[rsp], 9
	ja	$LN2@setPreset
	movsxd	rax, DWORD PTR tv64[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN25@setPreset[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN4@setPreset:

; 494  : 		case 0: setPattern(L"0, 1, 1"); break; // Stack

	lea	rax, QWORD PTR $T12[rsp]
	mov	QWORD PTR $T1[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186884
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv228[rsp], rax
	mov	rax, QWORD PTR tv228[rsp]
	mov	QWORD PTR tv201[rsp], rax
	mov	rdx, QWORD PTR tv201[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN5@setPreset:

; 495  : 		case 1: setPattern(L"0, 1, 1 / 0.5, 1, 1"); break; // Stretcher

	lea	rax, QWORD PTR $T13[rsp]
	mov	QWORD PTR $T2[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186886
	mov	rcx, QWORD PTR $T2[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv229[rsp], rax
	mov	rax, QWORD PTR tv229[rsp]
	mov	QWORD PTR tv211[rsp], rax
	mov	rdx, QWORD PTR tv211[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN6@setPreset:

; 496  : 		case 2: setPattern(L".25, 1, 1, .5 / -.5, 1, 1 / -.5, 1, 1 / -.5, 1, 1 / -.5, 1, 1"); break; // Flemish Strecher

	lea	rax, QWORD PTR $T14[rsp]
	mov	QWORD PTR $T3[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186888
	mov	rcx, QWORD PTR $T3[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv230[rsp], rax
	mov	rax, QWORD PTR tv230[rsp]
	mov	QWORD PTR tv213[rsp], rax
	mov	rdx, QWORD PTR tv213[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN7@setPreset:

; 497  : 		case 3: setPattern(L".25, 1, .5 / -.5, 1, 1 / -.5, 1, 1 / -.5, 1, 1 / -.5, 1, 1"); break; // Common

	lea	rax, QWORD PTR $T15[rsp]
	mov	QWORD PTR $T4[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186890
	mov	rcx, QWORD PTR $T4[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv231[rsp], rax
	mov	rax, QWORD PTR tv231[rsp]
	mov	QWORD PTR tv215[rsp], rax
	mov	rdx, QWORD PTR tv215[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN8@setPreset:

; 498  : 		case 4: setPattern(L"0, 1, 1, .5 / .75, 1, 1, .5"); break; // Flemish

	lea	rax, QWORD PTR $T16[rsp]
	mov	QWORD PTR $T5[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186892
	mov	rcx, QWORD PTR $T5[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv232[rsp], rax
	mov	rax, QWORD PTR tv232[rsp]
	mov	QWORD PTR tv217[rsp], rax
	mov	rdx, QWORD PTR tv217[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN9@setPreset:

; 499  : 		case 5: setPattern(L"0, 1, 1, 1, .5 / 1.25, 1, 1, 1, .5"); break; // Monk Bond

	lea	rax, QWORD PTR $T17[rsp]
	mov	QWORD PTR $T6[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186894
	mov	rcx, QWORD PTR $T6[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv233[rsp], rax
	mov	rax, QWORD PTR tv233[rsp]
	mov	QWORD PTR tv219[rsp], rax
	mov	rdx, QWORD PTR tv219[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN10@setPreset:

; 500  : 		case 6: setPattern(L"0, 1, 1, 1, 1, .5 / 1.75, 1, 1, 1, 1, .5"); break; // Flemish Garden Wall

	lea	rax, QWORD PTR $T18[rsp]
	mov	QWORD PTR $T7[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186896
	mov	rcx, QWORD PTR $T7[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv234[rsp], rax
	mov	rax, QWORD PTR tv234[rsp]
	mov	QWORD PTR tv221[rsp], rax
	mov	rdx, QWORD PTR tv221[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN11@setPreset:

; 501  : 		case 7: setPattern(L".25, 1, .5 / 0, 1, 1"); break; // English

	lea	rax, QWORD PTR $T19[rsp]
	mov	QWORD PTR $T8[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186898
	mov	rcx, QWORD PTR $T8[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv235[rsp], rax
	mov	rax, QWORD PTR tv235[rsp]
	mov	QWORD PTR tv223[rsp], rax
	mov	rdx, QWORD PTR tv223[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	$LN2@setPreset
$LN12@setPreset:

; 502  : 		case 8: setPattern(L"0,1,1 / -.25,1,.5 / -.25,1,1 / -.25,1,.5"); break; // English Cross

	lea	rax, QWORD PTR $T20[rsp]
	mov	QWORD PTR $T9[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186900
	mov	rcx, QWORD PTR $T9[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv236[rsp], rax
	mov	rax, QWORD PTR tv236[rsp]
	mov	QWORD PTR tv225[rsp], rax
	mov	rdx, QWORD PTR tv225[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
	jmp	SHORT $LN2@setPreset
$LN13@setPreset:

; 503  : 		case 9: setPattern(L"0,1,.5 / -.25,1,.5 / -.25,1,1 / -.25,1,1"); break; // Double English Cross

	lea	rax, QWORD PTR $T21[rsp]
	mov	QWORD PTR $T10[rsp], rax
	lea	rdx, OFFSET FLAT:$SG186902
	mov	rcx, QWORD PTR $T10[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv237[rsp], rax
	mov	rax, QWORD PTR tv237[rsp]
	mov	QWORD PTR tv227[rsp], rax
	mov	rdx, QWORD PTR tv227[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ; TilePattern::setPattern
$LN2@setPreset:

; 504  : 	}
; 505  : }

	add	rsp, 696				; 000002b8H
	ret	0
$LN25@setPreset:
	DD	$LN4@setPreset
	DD	$LN5@setPreset
	DD	$LN6@setPreset
	DD	$LN7@setPreset
	DD	$LN8@setPreset
	DD	$LN9@setPreset
	DD	$LN10@setPreset
	DD	$LN11@setPreset
	DD	$LN12@setPreset
	DD	$LN13@setPreset
?setPreset@TilePattern@@QEAAXH@Z ENDP			; TilePattern::setPreset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$0
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$1
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$2
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$3
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T5[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$4
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T6[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$5
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$6
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$7
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$7
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$8
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$9
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T2[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$3
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T4[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$3@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$4
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T5[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$4@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$5
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T6[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$5@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$6
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T7[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$6@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$7
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T8[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$7@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$8
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T9[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$8@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
tv64 = 32
$T1 = 40
tv228 = 48
tv201 = 56
$T2 = 64
tv229 = 72
tv211 = 80
$T3 = 88
tv230 = 96
tv213 = 104
$T4 = 112
tv231 = 120
tv215 = 128
$T5 = 136
tv232 = 144
tv217 = 152
$T6 = 160
tv233 = 168
tv219 = 176
$T7 = 184
tv234 = 192
tv221 = 200
$T8 = 208
tv235 = 216
tv223 = 224
$T9 = 232
tv236 = 240
tv225 = 248
$T10 = 256
tv237 = 264
tv227 = 272
$T11 = 280
$T12 = 288
$T13 = 328
$T14 = 368
$T15 = 408
$T16 = 448
$T17 = 488
$T18 = 528
$T19 = 568
$T20 = 608
$T21 = 648
this$ = 704
preset$ = 712
?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA PROC	; `TilePattern::setPreset'::`1'::dtor$9
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T10[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$9@?0??setPreset@TilePattern@@QEAAXH@Z@4HA ENDP	; `TilePattern::setPreset'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ?update@TilePattern@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
tv66 = 40
this$ = 64
?update@TilePattern@@QEAAXXZ PROC			; TilePattern::update, COMDAT

; 81   : 	void update() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 82   : 		totalHeight = 0.f;

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax], xmm0

; 83   : 		for (int i=0; i<rows.size(); i++) {

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@update
$LN2@update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@update:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 40					; 00000028H
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	mov	rcx, QWORD PTR tv66[rsp]
	cmp	rcx, rax
	jae	SHORT $LN3@update

; 84   : 			rows[i].update();

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 40					; 00000028H
	mov	rdx, rax
	call	??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
	mov	rcx, rax
	call	?update@TileRow@@QEAAXXZ		; TileRow::update

; 85   : 			totalHeight += heights[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	addss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax], xmm0

; 86   : 		}

	jmp	SHORT $LN2@update
$LN3@update:

; 87   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?update@TilePattern@@QEAAXXZ ENDP			; TilePattern::update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z
_TEXT	SEGMENT
$T1 = 32
tv81 = 40
tv71 = 48
$T2 = 56
$T3 = 64
this$ = 128
s$ = 136
?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z PROC ; TilePattern::setPattern, COMDAT

; 560  : void TilePattern::setPattern(std::wstring s) {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T2[rsp], -2

; 561  : 	parsePattern(s, this);

	lea	rax, QWORD PTR $T3[rsp]
	mov	QWORD PTR $T1[rsp], rax
	mov	rdx, QWORD PTR s$[rsp]
	mov	rcx, QWORD PTR $T1[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	QWORD PTR tv81[rsp], rax
	mov	rax, QWORD PTR tv81[rsp]
	mov	QWORD PTR tv71[rsp], rax
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR tv71[rsp]
	call	?parsePattern@@YAHV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@PEAVTilePattern@@@Z ; parsePattern

; 562  : 	update();

	mov	rcx, QWORD PTR this$[rsp]
	call	?update@TilePattern@@QEAAXXZ		; TilePattern::update
	npad	1

; 563  : }

	mov	rcx, QWORD PTR s$[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 120				; 00000078H
	ret	0
?setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z ENDP ; TilePattern::setPattern
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv81 = 40
tv71 = 48
$T2 = 56
$T3 = 64
this$ = 128
s$ = 136
?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA PROC ; `TilePattern::setPattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR s$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA ENDP ; `TilePattern::setPattern'::`1'::dtor$0
$T1 = 32
tv81 = 40
tv71 = 48
$T2 = 56
$T3 = 64
this$ = 128
s$ = 136
?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA PROC ; `TilePattern::setPattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA ENDP ; `TilePattern::setPattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv81 = 40
tv71 = 48
$T2 = 56
$T3 = 64
this$ = 128
s$ = 136
?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA PROC ; `TilePattern::setPattern'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR s$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA ENDP ; `TilePattern::setPattern'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv81 = 40
tv71 = 48
$T2 = 56
$T3 = 64
this$ = 128
s$ = 136
?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA PROC ; `TilePattern::setPattern'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T1[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??setPattern@TilePattern@@QEAAXV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@Z@4HA ENDP ; `TilePattern::setPattern'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z
_TEXT	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range, COMDAT

; 1775 : 		{	// orphan iterators within specified (inclusive) range

$LN10:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getpfirst
	mov	QWORD PTR _Pnext$[rsp], rax

; 1778 : 		if (_Pnext != 0)

	cmp	QWORD PTR _Pnext$[rsp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _First$[rsp]
	cmp	QWORD PTR [rax+16], rcx
	jb	SHORT $LN7@Orphan_ran
	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	QWORD PTR _Pnext$[rsp], rax

; 1783 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Clrcont@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	rcx, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN6@Orphan_ran:

; 1787 : 					}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Xlen, COMDAT

; 1764 : 		{	// report a length_error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1765 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
$LN2@Xlen:

; 1766 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
tv68 = 32
this$ = 64
_Count$ = 72
?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Reserve, COMDAT

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1627 : 		if (_Unused_capacity() < _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::_Unused_capacity
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN2@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::max_size
	mov	QWORD PTR tv68[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	mov	rcx, QWORD PTR tv68[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN3@Reserve

; 1630 : 				_Xlen();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xlen@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXXZ ; std::vector<TileRow,std::allocator<TileRow> >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	add	rax, QWORD PTR _Count$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Grow_to
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Reallocate
$LN2@Reserve:
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Reallocate, COMDAT

; 1601 : 		{	// move to array of exactly _Count elements

$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T1[rsp], -2

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::allocate
	mov	QWORD PTR _Ptr$[rsp], rax

; 1603 : 
; 1604 : 		_TRY_BEGIN
; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv84[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	r9, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Umove@PEAVTileRow@@@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAPEAVTileRow@@PEAV2@00@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Umove<TileRow * __ptr64>
	npad	1
	jmp	SHORT $LN7@Reallocate
$LN8@Reallocate:
$LN7@Reallocate:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END
; 1610 : 
; 1611 : 		size_type _Size = size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	mov	QWORD PTR _Size$[rsp], rax

; 1612 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rcx, QWORD PTR tv150[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	QWORD PTR tv171[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv171[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR tv179[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	QWORD PTR tv186[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	rcx, QWORD PTR tv179[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv186[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

	imul	rax, QWORD PTR _Count$[rsp], 40		; 00000028H
	mov	rcx, QWORD PTR _Ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv200[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	rcx, QWORD PTR tv200[rsp]
	mov	QWORD PTR [rax], rcx

; 1621 : 		this->_Mylast() = _Ptr + _Size;

	imul	rax, QWORD PTR _Size$[rsp], 40		; 00000028H
	mov	rcx, QWORD PTR _Ptr$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv208[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rcx, QWORD PTR tv208[rsp]
	mov	QWORD PTR [rax], rcx

; 1622 : 		this->_Myfirst() = _Ptr;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR [rax], rcx

; 1623 : 		}

	add	rsp, 120				; 00000078H
	ret	0
$LN9@Reallocate:
?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Reallocate
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::_Reallocate'::`1'::catch$0

; 1606 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<TileRow,std::allocator<TileRow> >::_Reallocate'::`1'::catch$0

; 1606 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z$0:

; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate

; 1608 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1609 : 		_CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Reallocate@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<TileRow,std::allocator<TileRow> >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z
_TEXT	SEGMENT
tv82 = 32
this$ = 64
_Ptr$ = 72
?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Inside, COMDAT

; 1596 : 		{	// test if _Ptr points inside vector

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	cmp	QWORD PTR _Ptr$[rsp], rax
	jae	SHORT $LN3@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	cmp	rax, QWORD PTR _Ptr$[rsp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv82[rsp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv82[rsp], 0
$LN4@Inside:
	movzx	eax, BYTE PTR tv82[rsp]

; 1598 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
_Capacity$ = 32
tv73 = 40
tv67 = 48
this$ = 80
_Count$ = 88
?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Grow_to, COMDAT

; 1585 : 		{	// grow by 50% or at least to _Count

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1586 : 		size_type _Capacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::capacity
	mov	QWORD PTR _Capacity$[rsp], rax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::max_size
	mov	QWORD PTR tv67[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Capacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv67[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Capacity$[rsp]
	jae	SHORT $LN4@Grow_to
	mov	QWORD PTR tv73[rsp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	xor	edx, edx
	mov	rax, QWORD PTR _Capacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Capacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv73[rsp], rax
$LN5@Grow_to:
	mov	rax, QWORD PTR tv73[rsp]
	mov	QWORD PTR _Capacity$[rsp], rax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

	mov	rax, QWORD PTR _Count$[rsp]
	cmp	QWORD PTR _Capacity$[rsp], rax
	jae	SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

	mov	rax, QWORD PTR _Count$[rsp]
	mov	QWORD PTR _Capacity$[rsp], rax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

	mov	rax, QWORD PTR _Capacity$[rsp]

; 1593 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Grow_to@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_K_K@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy, COMDAT

; 1580 : 		{	// destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@VTileRow@@@std@@PEAVTileRow@@@std@@YAXPEAVTileRow@@0AEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<TileRow>,TileRow * __ptr64>

; 1582 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv75 = 32
tv95 = 40
$T1 = 48
this$ = 80
?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::clear, COMDAT

; 1539 : 		{	// erase all

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 1540 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all
	npad	1

; 1541 : 		_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	npad	1
	mov	QWORD PTR tv75[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	npad	1
	mov	rcx, QWORD PTR tv75[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Destroy
	npad	1

; 1542 : 		this->_Mylast() = this->_Myfirst();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	npad	1
	mov	QWORD PTR tv95[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	npad	1
	mov	rcx, QWORD PTR tv95[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1543 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?clear@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z
_TEXT	SEGMENT
tv176 = 32
tv231 = 40
tv71 = 48
tv88 = 56
tv136 = 64
_Idx$1 = 72
tv159 = 80
tv161 = 88
tv183 = 96
tv199 = 104
tv216 = 112
this$ = 144
_Val$ = 152
?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::push_back, COMDAT

; 1276 : 		{	// insert element at end

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H

; 1277 : 		if (_Inside(_STD addressof(_Val)))

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@$$CBVTileRow@@@std@@YAPEBVTileRow@@AEBV1@@Z ; std::addressof<TileRow const >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Inside@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBA_NPEBVTileRow@@@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Inside
	movzx	eax, al
	test	eax, eax
	je	$LN2@push_back

; 1278 : 			{	// push back an element
; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@$$CBVTileRow@@@std@@YAPEBVTileRow@@AEBV1@@Z ; std::addressof<TileRow const >
	mov	QWORD PTR tv71[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	mov	rcx, QWORD PTR tv71[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx
	mov	QWORD PTR _Idx$1[rsp], rax

; 1280 : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv88[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN4@push_back

; 1281 : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Reserve
$LN4@push_back:

; 1282 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv136[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rcx, QWORD PTR tv136[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range

; 1283 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	imul	rcx, QWORD PTR _Idx$1[rsp], 40		; 00000028H
	add	rcx, QWORD PTR [rax]
	mov	rax, rcx
	mov	QWORD PTR tv159[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	mov	QWORD PTR tv161[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	rcx, QWORD PTR tv159[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv161[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@VTileRow@@AEAV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEAV2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow & __ptr64>

; 1284 : 				this->_Myfirst()[_Idx]);
; 1285 : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv176[rsp], rax
	mov	rax, QWORD PTR tv176[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 40					; 00000028H
	mov	rcx, QWORD PTR tv176[rsp]
	mov	QWORD PTR [rcx], rax

; 1286 : 			}
; 1287 : 		else

	jmp	$LN3@push_back
$LN2@push_back:

; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv183[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv183[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN5@push_back

; 1290 : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEAAX_K@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Reserve
$LN5@push_back:

; 1291 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv199[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rcx, QWORD PTR tv199[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@IEBAXPEAVTileRow@@0@Z ; std::vector<TileRow,std::allocator<TileRow> >::_Orphan_range

; 1292 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@VTileRow@@@std@@YAPEAVTileRow@@PEAV1@@Z ; std::_Unfancy<TileRow>
	mov	QWORD PTR tv216[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	mov	r8, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR tv216[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@VTileRow@@AEBV1@@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@AEBV2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::construct<TileRow,TileRow const & __ptr64>

; 1293 : 				_Val);
; 1294 : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv231[rsp], rax
	mov	rax, QWORD PTR tv231[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 40					; 00000028H
	mov	rcx, QWORD PTR tv231[rsp]
	mov	QWORD PTR [rcx], rax
$LN3@push_back:

; 1295 : 			}
; 1296 : 		}

	add	rsp, 136				; 00000088H
	ret	0
?push_back@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAXAEBVTileRow@@@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 64
_Pos$ = 72
??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z PROC ; std::vector<TileRow,std::allocator<TileRow> >::operator[], COMDAT

; 1230 : 		{	// subscript mutable sequence

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1231 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1232 : 		if (size() <= _Pos)

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ; std::vector<TileRow,std::allocator<TileRow> >::size
	cmp	rax, QWORD PTR _Pos$[rsp]
	ja	$LN2@operator

; 1233 : 			{	// report error
; 1234 : 			_DEBUG_ERROR("vector subscript out of range");

	mov	r8d, 1234				; 000004d2H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z

; 1235 : 			_SCL_SECURE_OUT_OF_RANGE;

	lea	rax, OFFSET FLAT:??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	rax, rax
	je	SHORT $LN4@operator
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN5@operator
$LN4@operator:
	lea	rax, OFFSET FLAT:??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1235				; 000004d3H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
	xor	eax, eax
$LN5@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1235				; 000004d3H
	lea	r8, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1JK@CCDJIDIF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAT?$AAi?$AAl?$AAe?$AAR?$AAo?$AAw?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5@
	lea	rcx, OFFSET FLAT:??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@operator:

; 1236 : 			}
; 1237 : 
; 1238 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1239 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1240 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1241 : 
; 1242 : 		return (*(this->_Myfirst() + _Pos));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	imul	rcx, QWORD PTR _Pos$[rsp], 40		; 00000028H
	add	rcx, QWORD PTR [rax]
	mov	rax, rcx

; 1243 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEAAAEAVTileRow@@_K@Z ENDP ; std::vector<TileRow,std::allocator<TileRow> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::max_size, COMDAT

; 1184 : 		{	// return maximum possible length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1185 : 		return (this->_Getal().max_size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<TileRow> >::max_size

; 1186 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?max_size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::size, COMDAT

; 1179 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1181 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?size@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::_Unused_capacity, COMDAT

; 1047 : 		{	// micro-optimization for capacity() - size()

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1048 : 		return (this->_Myend() - this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1049 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Unused_capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<TileRow,std::allocator<TileRow> >::capacity, COMDAT

; 1042 : 		{	// return current length of allocated storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	cdq
	mov	ecx, 40					; 00000028H
	idiv	rcx

; 1044 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?capacity@?$vector@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<TileRow,std::allocator<TileRow> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first, COMDAT

; 299  : 		{	// return const reference to first

	mov	QWORD PTR [rsp+8], rcx

; 300  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 301  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend, COMDAT

; 667  : 		{	// return const reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 668  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 24

; 669  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend, COMDAT

; 662  : 		{	// return reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 663  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 24

; 664  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast, COMDAT

; 657  : 		{	// return const reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 658  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 16

; 659  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast, COMDAT

; 652  : 		{	// return reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 653  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 16

; 654  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst, COMDAT

; 647  : 		{	// return const reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 648  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 8

; 649  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBQEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst, COMDAT

; 642  : 		{	// return reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 643  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	add	rax, 8

; 644  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAPEAVTileRow@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data, COMDAT

; 637  : 		{	// return const reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 638  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second

; 639  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data, COMDAT

; 632  : 		{	// return reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 633  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_second

; 634  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal, COMDAT

; 627  : 		{	// return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 628  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first

; 629  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal, COMDAT

; 622  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 623  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<TileRow> >,std::_Vector_val<std::_Simple_types<TileRow> >,1>::_Get_first

; 624  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all, COMDAT

; 612  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 613  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getpfirst, COMDAT

; 596  : 		{	// get address of iterator chain

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 597  : 		return (_Get_data()._Getpfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@VTileRow@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Get_data
	mov	rcx, rax
	call	?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@VTileRow@@V?$allocator@VTileRow@@@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<TileRow,std::allocator<TileRow> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::max_size, COMDAT

; 1007 : 		{	// get maximum size

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z ; std::allocator_traits<std::allocator<TileRow> >::max_size

; 1009 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z ; std::allocator<TileRow>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAXPEAVTileRow@@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z PROC ; std::_Wrap_alloc<std::allocator<TileRow> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z ; std::allocator<TileRow>::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@VTileRow@@@std@@@std@@QEAAPEAVTileRow@@_K@Z ENDP ; std::_Wrap_alloc<std::allocator<TileRow> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z
_TEXT	SEGMENT
_Al$ = 48
?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z PROC ; std::allocator_traits<std::allocator<TileRow> >::max_size, COMDAT

; 868  : 		{	// get maximum size

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 869  : 		return (_Al.max_size());

	mov	rcx, QWORD PTR _Al$[rsp]
	call	?max_size@?$allocator@VTileRow@@@std@@QEBA_KXZ ; std::allocator<TileRow>::max_size

; 870  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$allocator_traits@V?$allocator@VTileRow@@@std@@@std@@SA_KAEBV?$allocator@VTileRow@@@2@@Z ENDP ; std::allocator_traits<std::allocator<TileRow> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@VTileRow@@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@VTileRow@@@std@@QEBA_KXZ PROC	; std::allocator<TileRow>::max_size, COMDAT

; 748  : 		{	// estimate maximum array size

	mov	QWORD PTR [rsp+8], rcx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	rax, 461168601842738790			; 0666666666666666H

; 750  : 		}

	ret	0
?max_size@?$allocator@VTileRow@@@std@@QEBA_KXZ ENDP	; std::allocator<TileRow>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z PROC ; std::allocator<TileRow>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@VTileRow@@@std@@QEAAPEAVTileRow@@_K@Z ENDP ; std::allocator<TileRow>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z PROC ; std::allocator<TileRow>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 40					; 00000028H
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@VTileRow@@@std@@QEAAXPEAVTileRow@@_K@Z ENDP ; std::allocator<TileRow>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_GTileRow@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GTileRow@@QEAAPEAXI@Z PROC				; TileRow::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1TileRow@@QEAA@XZ
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_GTileRow@@QEAAPEAXI@Z ENDP				; TileRow::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?__autoclassinit2@TileRow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 16
classSize$ = 24
?__autoclassinit2@TileRow@@QEAAX_K@Z PROC		; TileRow::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rdi
	mov	rdi, QWORD PTR this$[rsp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rsp]
	rep stosb
	pop	rdi
	ret	0
?__autoclassinit2@TileRow@@QEAAX_K@Z ENDP		; TileRow::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0TileRow@@QEAA@$$QEAV0@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0TileRow@@QEAA@$$QEAV0@@Z PROC			; TileRow::TileRow, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR __that$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TileRow@@QEAA@$$QEAV0@@Z ENDP			; TileRow::TileRow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA PROC		; `TileRow::TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA ENDP		; `TileRow::TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA PROC		; `TileRow::TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TileRow@@QEAA@$$QEAV0@@Z@4HA ENDP		; `TileRow::TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0TileRow@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
??0TileRow@@QEAA@AEBV0@@Z PROC				; TileRow::TileRow, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __that$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	movss	DWORD PTR [rax+4], xmm0
	mov	rax, QWORD PTR __that$[rsp]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TileRow@@QEAA@AEBV0@@Z ENDP				; TileRow::TileRow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA PROC		; `TileRow::TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA ENDP		; `TileRow::TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__that$ = 72
?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA PROC		; `TileRow::TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TileRow@@QEAA@AEBV0@@Z@4HA ENDP		; `TileRow::TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1TileRow@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1TileRow@@QEAA@XZ PROC				; TileRow::~TileRow, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1TileRow@@QEAA@XZ ENDP				; TileRow::~TileRow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA PROC			; `TileRow::~TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA ENDP			; `TileRow::~TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA PROC			; `TileRow::~TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1TileRow@@QEAA@XZ@4HA ENDP			; `TileRow::~TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ?update@TileRow@@QEAAXXZ
_TEXT	SEGMENT
i$1 = 32
tv66 = 40
this$ = 64
?update@TileRow@@QEAAXXZ PROC				; TileRow::update, COMDAT

; 63   : 	void update() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 64   : 		totalWidth = 0.f;

	mov	rax, QWORD PTR this$[rsp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rax+4], xmm0

; 65   : 		for (int i=0; i<tiles.size(); i++)

	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@update
$LN2@update:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@update:
	movsxd	rax, DWORD PTR i$1[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	mov	rcx, QWORD PTR tv66[rsp]
	cmp	rcx, rax
	jae	SHORT $LN3@update

; 66   : 			totalWidth += tiles[i];

	movsxd	rax, DWORD PTR i$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	add	rcx, 8
	mov	rdx, rax
	call	??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ; std::vector<float,std::allocator<float> >::operator[]
	mov	rcx, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR [rcx+4]
	addss	xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR this$[rsp]
	movss	DWORD PTR [rax+4], xmm0
	jmp	SHORT $LN2@update
$LN3@update:

; 67   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?update@TileRow@@QEAAXXZ ENDP				; TileRow::update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z
_TEXT	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Orphan_range, COMDAT

; 1775 : 		{	// orphan iterators within specified (inclusive) range

$LN10:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1776 : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1777 : 		const_iterator **_Pnext = (const_iterator **)this->_Getpfirst();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getpfirst
	mov	QWORD PTR _Pnext$[rsp], rax

; 1778 : 		if (_Pnext != 0)

	cmp	QWORD PTR _Pnext$[rsp], 0
	je	SHORT $LN4@Orphan_ran
$LN2@Orphan_ran:

; 1779 : 			{	// test an iterator
; 1780 : 			while (*_Pnext != 0)

	mov	rax, QWORD PTR _Pnext$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN4@Orphan_ran

; 1781 : 				if ((*_Pnext)->_Ptr < _First || _Last < (*_Pnext)->_Ptr)

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _First$[rsp]
	cmp	QWORD PTR [rax+16], rcx
	jb	SHORT $LN7@Orphan_ran
	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	cmp	QWORD PTR _Last$[rsp], rax
	jae	SHORT $LN5@Orphan_ran
$LN7@Orphan_ran:

; 1782 : 					_Pnext = (const_iterator **)(*_Pnext)->_Getpnext();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	QWORD PTR _Pnext$[rsp], rax

; 1783 : 				else

	jmp	SHORT $LN6@Orphan_ran
$LN5@Orphan_ran:

; 1784 : 					{	// orphan the iterator
; 1785 : 					(*_Pnext)->_Clrcont();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Clrcont@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Clrcont

; 1786 : 					*_Pnext = *(const_iterator **)(*_Pnext)->_Getpnext();

	mov	rax, QWORD PTR _Pnext$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ; std::_Iterator_base12::_Getpnext
	mov	rcx, QWORD PTR _Pnext$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN6@Orphan_ran:

; 1787 : 					}

	jmp	SHORT $LN2@Orphan_ran
$LN4@Orphan_ran:

; 1788 : 			}
; 1789 : 		}

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Orphan_range'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Pnext$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_First$ = 88
_Last$ = 96
?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Orphan_range'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ PROC	; std::vector<float,std::allocator<float> >::_Xlen, COMDAT

; 1764 : 		{	// report a length_error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1765 : 		_Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
$LN2@Xlen:

; 1766 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ ENDP	; std::vector<float,std::allocator<float> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv82 = 32
tv135 = 40
tv143 = 48
tv150 = 56
this$ = 80
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ PROC	; std::vector<float,std::allocator<float> >::_Tidy, COMDAT

; 1636 : 		{	// free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1637 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1638 : 			{	// something to free, destroy and deallocate it
; 1639 : 			this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all

; 1640 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR tv82[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy

; 1641 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR tv135[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv135[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	QWORD PTR tv143[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rcx, QWORD PTR tv143[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv150[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate

; 1642 : 				this->_Myend() - this->_Myfirst());
; 1643 : 			this->_Myfirst() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 1644 : 			this->_Mylast() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR [rax], 0

; 1645 : 			this->_Myend() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1646 : 			}
; 1647 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ENDP	; std::vector<float,std::allocator<float> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
tv68 = 32
this$ = 64
_Count$ = 72
?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::_Reserve, COMDAT

; 1626 : 		{	// ensure room for _Count new elements, grow exponentially

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1627 : 		if (_Unused_capacity() < _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::_Unused_capacity
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN2@Reserve

; 1628 : 			{	// need more room, try to get it
; 1629 : 			if (max_size() - size() < _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
	mov	QWORD PTR tv68[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	mov	rcx, QWORD PTR tv68[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN3@Reserve

; 1630 : 				_Xlen();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ ; std::vector<float,std::allocator<float> >::_Xlen
$LN3@Reserve:

; 1631 : 			_Reallocate(_Grow_to(size() + _Count));

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	add	rax, QWORD PTR _Count$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z ; std::vector<float,std::allocator<float> >::_Grow_to
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reallocate
$LN2@Reserve:
$LN4@Reserve:

; 1632 : 			}
; 1633 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Reserve
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z PROC ; std::vector<float,std::allocator<float> >::_Reallocate, COMDAT

; 1601 : 		{	// move to array of exactly _Count elements

$LN11:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
	mov	QWORD PTR $T1[rsp], -2

; 1602 : 		pointer _Ptr = this->_Getal().allocate(_Count);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::allocate
	mov	QWORD PTR _Ptr$[rsp], rax

; 1603 : 
; 1604 : 		_TRY_BEGIN
; 1605 : 		_Umove(this->_Myfirst(), this->_Mylast(), _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv84[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	r9, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR tv84[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Umove@PEAM@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMPEAM00@Z ; std::vector<float,std::allocator<float> >::_Umove<float * __ptr64>
	npad	1
	jmp	SHORT $LN7@Reallocate
$LN8@Reallocate:
$LN7@Reallocate:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END
; 1610 : 
; 1611 : 		size_type _Size = size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	mov	QWORD PTR _Size$[rsp], rax

; 1612 : 		if (this->_Myfirst() != pointer())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	cmp	QWORD PTR [rax], 0
	je	$LN3@Reallocate

; 1613 : 			{	// destroy and deallocate old array
; 1614 : 			_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv150[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR tv150[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy

; 1615 : 			this->_Getal().deallocate(this->_Myfirst(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR tv171[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv171[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	QWORD PTR tv179[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR tv186[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rcx, QWORD PTR tv179[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv186[rsp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate
$LN3@Reallocate:

; 1616 : 				this->_Myend() - this->_Myfirst());
; 1617 : 			}
; 1618 : 
; 1619 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all

; 1620 : 		this->_Myend() = _Ptr + _Count;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Count$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR tv200[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rcx, QWORD PTR tv200[rsp]
	mov	QWORD PTR [rax], rcx

; 1621 : 		this->_Mylast() = _Ptr + _Size;

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR _Size$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR tv208[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv208[rsp]
	mov	QWORD PTR [rax], rcx

; 1622 : 		this->_Myfirst() = _Ptr;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR [rax], rcx

; 1623 : 		}

	add	rsp, 120				; 00000078H
	ret	0
$LN9@Reallocate:
?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Reallocate
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Reallocate'::`1'::catch$0

; 1606 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z$0:

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1606 : 		_CATCH_ALL
; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);
; 1608 : 		_RERAISE;
; 1609 : 		_CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 32
tv84 = 40
tv150 = 48
tv171 = 56
tv179 = 64
tv186 = 72
tv200 = 80
_Size$ = 88
tv208 = 96
$T1 = 104
this$ = 128
_Count$ = 136
?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::_Reallocate'::`1'::catch$0

; 1606 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z$0:

; 1607 : 		this->_Getal().deallocate(_Ptr, _Count);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::deallocate

; 1608 : 		_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 1609 : 		_CATCH_END

	lea	rax, $LN8@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Reallocate@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::_Reallocate'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z
_TEXT	SEGMENT
tv82 = 32
this$ = 64
_Ptr$ = 72
?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z PROC ; std::vector<float,std::allocator<float> >::_Inside, COMDAT

; 1596 : 		{	// test if _Ptr points inside vector

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1597 : 		return (_Ptr < _Unfancy(this->_Mylast()) && _Unfancy(this->_Myfirst()) <= _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	cmp	QWORD PTR _Ptr$[rsp], rax
	jae	SHORT $LN3@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	cmp	rax, QWORD PTR _Ptr$[rsp]
	ja	SHORT $LN3@Inside
	mov	DWORD PTR tv82[rsp], 1
	jmp	SHORT $LN4@Inside
$LN3@Inside:
	mov	DWORD PTR tv82[rsp], 0
$LN4@Inside:
	movzx	eax, BYTE PTR tv82[rsp]

; 1598 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z ENDP ; std::vector<float,std::allocator<float> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z
_TEXT	SEGMENT
_Capacity$ = 32
tv73 = 40
tv67 = 48
this$ = 80
_Count$ = 88
?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z PROC ; std::vector<float,std::allocator<float> >::_Grow_to, COMDAT

; 1585 : 		{	// grow by 50% or at least to _Count

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1586 : 		size_type _Capacity = capacity();

	mov	rcx, QWORD PTR this$[rsp]
	call	?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::capacity
	mov	QWORD PTR _Capacity$[rsp], rax

; 1587 : 
; 1588 : 		_Capacity = max_size() - _Capacity / 2 < _Capacity

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
	mov	QWORD PTR tv67[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Capacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv67[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, QWORD PTR _Capacity$[rsp]
	jae	SHORT $LN4@Grow_to
	mov	QWORD PTR tv73[rsp], 0
	jmp	SHORT $LN5@Grow_to
$LN4@Grow_to:
	xor	edx, edx
	mov	rax, QWORD PTR _Capacity$[rsp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Capacity$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv73[rsp], rax
$LN5@Grow_to:
	mov	rax, QWORD PTR tv73[rsp]
	mov	QWORD PTR _Capacity$[rsp], rax

; 1589 : 			? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%
; 1590 : 		if (_Capacity < _Count)

	mov	rax, QWORD PTR _Count$[rsp]
	cmp	QWORD PTR _Capacity$[rsp], rax
	jae	SHORT $LN2@Grow_to

; 1591 : 			_Capacity = _Count;

	mov	rax, QWORD PTR _Count$[rsp]
	mov	QWORD PTR _Capacity$[rsp], rax
$LN2@Grow_to:

; 1592 : 		return (_Capacity);

	mov	rax, QWORD PTR _Capacity$[rsp]

; 1593 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Grow_to@?$vector@MV?$allocator@M@std@@@std@@IEBA_K_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Grow_to
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z PROC ; std::vector<float,std::allocator<float> >::_Destroy, COMDAT

; 1580 : 		{	// destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1581 : 		_Destroy_range(_First, _Last, this->_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rsp]
	mov	rcx, QWORD PTR _First$[rsp]
	call	??$_Destroy_range@V?$allocator@M@std@@PEAM@std@@YAXPEAM0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@@Z ; std::_Destroy_range<std::allocator<float>,float * __ptr64>

; 1582 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ENDP ; std::vector<float,std::allocator<float> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z
_TEXT	SEGMENT
tv93 = 32
tv148 = 40
tv162 = 48
this$ = 80
_Capacity$ = 88
?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z PROC ; std::vector<float,std::allocator<float> >::_Buy, COMDAT

; 1561 : 		{	// allocate array with _Capacity elements

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1562 : 		this->_Myfirst() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 1563 : 		this->_Mylast() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR [rax], 0

; 1564 : 		this->_Myend() = pointer();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR [rax], 0

; 1565 : 
; 1566 : 		if (_Capacity == 0)

	cmp	QWORD PTR _Capacity$[rsp], 0
	jne	SHORT $LN2@Buy

; 1567 : 			return (false);

	xor	al, al
	jmp	$LN1@Buy
	jmp	$LN3@Buy
$LN2@Buy:

; 1568 : 		else if (max_size() < _Capacity)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::max_size
	cmp	rax, QWORD PTR _Capacity$[rsp]
	jae	SHORT $LN4@Buy

; 1569 : 			_Xlen();	// result too long

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xlen@?$vector@MV?$allocator@M@std@@@std@@IEBAXXZ ; std::vector<float,std::allocator<float> >::_Xlen

; 1570 : 		else

	jmp	SHORT $LN5@Buy
$LN4@Buy:

; 1571 : 			{	// nonempty array, allocate storage
; 1572 : 			this->_Myfirst() = this->_Getal().allocate(_Capacity);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rdx, QWORD PTR _Capacity$[rsp]
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z ; std::_Wrap_alloc<std::allocator<float> >::allocate
	mov	QWORD PTR tv93[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR tv93[rsp]
	mov	QWORD PTR [rax], rcx

; 1573 : 			this->_Mylast() = this->_Myfirst();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR tv148[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv148[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1574 : 			this->_Myend() = this->_Myfirst() + _Capacity;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Capacity$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR tv162[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rcx, QWORD PTR tv162[rsp]
	mov	QWORD PTR [rax], rcx
$LN5@Buy:
$LN3@Buy:

; 1575 : 			}
; 1576 : 		return (true);

	mov	al, 1
$LN1@Buy:
$LN6@Buy:

; 1577 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z ENDP ; std::vector<float,std::allocator<float> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv75 = 32
tv95 = 40
$T1 = 48
this$ = 80
?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ PROC	; std::vector<float,std::allocator<float> >::clear, COMDAT

; 1539 : 		{	// erase all

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2

; 1540 : 		this->_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all
	npad	1

; 1541 : 		_Destroy(this->_Myfirst(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	npad	1
	mov	QWORD PTR tv75[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	npad	1
	mov	rcx, QWORD PTR tv75[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Destroy@?$vector@MV?$allocator@M@std@@@std@@IEAAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Destroy
	npad	1

; 1542 : 		this->_Mylast() = this->_Myfirst();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	npad	1
	mov	QWORD PTR tv95[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	npad	1
	mov	rcx, QWORD PTR tv95[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1543 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?clear@?$vector@MV?$allocator@M@std@@@std@@QEAAXXZ ENDP	; std::vector<float,std::allocator<float> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z
_TEXT	SEGMENT
tv176 = 32
tv231 = 40
tv71 = 48
tv88 = 56
tv136 = 64
_Idx$1 = 72
tv159 = 80
tv161 = 88
tv183 = 96
tv199 = 104
tv216 = 112
this$ = 144
_Val$ = 152
?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z PROC ; std::vector<float,std::allocator<float> >::push_back, COMDAT

; 1276 : 		{	// insert element at end

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H

; 1277 : 		if (_Inside(_STD addressof(_Val)))

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@$$CBM@std@@YAPEBMAEBM@Z	; std::addressof<float const >
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z ; std::vector<float,std::allocator<float> >::_Inside
	movzx	eax, al
	test	eax, eax
	je	$LN2@push_back

; 1278 : 			{	// push back an element
; 1279 : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@$$CBM@std@@YAPEBMAEBM@Z	; std::addressof<float const >
	mov	QWORD PTR tv71[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	rcx, QWORD PTR tv71[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Idx$1[rsp], rax

; 1280 : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv88[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN4@push_back

; 1281 : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reserve
$LN4@push_back:

; 1282 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv136[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv136[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range

; 1283 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Idx$1[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR tv159[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	QWORD PTR tv161[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rcx, QWORD PTR tv159[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv161[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@MAEAM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEAM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float & __ptr64>

; 1284 : 				this->_Myfirst()[_Idx]);
; 1285 : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv176[rsp], rax
	mov	rax, QWORD PTR tv176[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 4
	mov	rcx, QWORD PTR tv176[rsp]
	mov	QWORD PTR [rcx], rax

; 1286 : 			}
; 1287 : 		else

	jmp	$LN3@push_back
$LN2@push_back:

; 1288 : 			{	// push back a non-element
; 1289 : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv183[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv183[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN5@push_back

; 1290 : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reserve
$LN5@push_back:

; 1291 : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv199[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv199[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range

; 1292 : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	QWORD PTR tv216[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	r8, QWORD PTR _Val$[rsp]
	mov	rcx, QWORD PTR tv216[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@MAEBM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAMAEBM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float const & __ptr64>

; 1293 : 				_Val);
; 1294 : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv231[rsp], rax
	mov	rax, QWORD PTR tv231[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 4
	mov	rcx, QWORD PTR tv231[rsp]
	mov	QWORD PTR [rcx], rax
$LN3@push_back:

; 1295 : 			}
; 1296 : 		}

	add	rsp, 136				; 00000088H
	ret	0
?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAXAEBM@Z ENDP ; std::vector<float,std::allocator<float> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z
_TEXT	SEGMENT
this$ = 64
_Pos$ = 72
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z PROC ; std::vector<float,std::allocator<float> >::operator[], COMDAT

; 1230 : 		{	// subscript mutable sequence

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1231 :  #if _ITERATOR_DEBUG_LEVEL == 2
; 1232 : 		if (size() <= _Pos)

	mov	rcx, QWORD PTR this$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	cmp	rax, QWORD PTR _Pos$[rsp]
	ja	$LN2@operator

; 1233 : 			{	// report error
; 1234 : 			_DEBUG_ERROR("vector subscript out of range");

	mov	r8d, 1234				; 000004d2H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DM@LHGCHCBA@?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z

; 1235 : 			_SCL_SECURE_OUT_OF_RANGE;

	lea	rax, OFFSET FLAT:??_C@_0CE@OFMIGAMM@Standard?5C?$CL?$CL?5Libraries?5Out?5of?5Ra@
	test	rax, rax
	je	SHORT $LN4@operator
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN5@operator
$LN4@operator:
	lea	rax, OFFSET FLAT:??_C@_1FG@IBPIFFN@?$AA?$CC?$AAS?$AAt?$AAa?$AAn?$AAd?$AAa?$AAr?$AAd?$AA?5?$AAC?$AA?$CL?$AA?$CL?$AA?5?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAi?$AAe?$AAs?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAR@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1235				; 000004d3H
	lea	rdx, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN5@operator
	int	3
	xor	eax, eax
$LN5@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1235				; 000004d3H
	lea	r8, OFFSET FLAT:??_C@_1IM@NCODKBJH@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1HK@EJDBECKJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAf?$AAl?$AAo?$AAa?$AAt?$AA?0?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAa?$AAl?$AAl@
	lea	rcx, OFFSET FLAT:??_C@_1BO@MEPPHOO@?$AA?$CC?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAr?$AAa?$AAn?$AAg?$AAe?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@operator:

; 1236 : 			}
; 1237 : 
; 1238 :  #elif _ITERATOR_DEBUG_LEVEL == 1
; 1239 : 		_SCL_SECURE_VALIDATE_RANGE(_Pos < size());
; 1240 :  #endif /* _ITERATOR_DEBUG_LEVEL */
; 1241 : 
; 1242 : 		return (*(this->_Myfirst() + _Pos));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pos$[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]

; 1243 : 		}

	add	rsp, 56					; 00000038H
	ret	0
??A?$vector@MV?$allocator@M@std@@@std@@QEAAAEAM_K@Z ENDP ; std::vector<float,std::allocator<float> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC ; std::vector<float,std::allocator<float> >::max_size, COMDAT

; 1184 : 		{	// return maximum possible length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1185 : 		return (this->_Getal().max_size());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<float> >::max_size

; 1186 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?max_size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP ; std::vector<float,std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC	; std::vector<float,std::allocator<float> >::size, COMDAT

; 1179 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1180 : 		return (this->_Mylast() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2

; 1181 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP	; std::vector<float,std::allocator<float> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 32
tv74 = 40
$T2 = 48
this$ = 80
__$ReturnUdt$ = 88
?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ PROC ; std::vector<float,std::allocator<float> >::end, COMDAT

; 1072 : 		{	// return iterator for end of nonmutable sequence

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 1073 : 		return (const_iterator(this->_Mylast(), &this->_Get_data()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	npad	1
	mov	QWORD PTR tv74[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	npad	1
	mov	rcx, QWORD PTR tv74[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1074 : 		}

	add	rsp, 72					; 00000048H
	ret	0
	int	3
?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ENDP ; std::vector<float,std::allocator<float> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv74 = 40
$T2 = 48
this$ = 80
__$ReturnUdt$ = 88
?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::end'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv74 = 40
$T2 = 48
this$ = 80
__$ReturnUdt$ = 88
?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::end'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = 32
tv74 = 40
$T2 = 48
this$ = 80
__$ReturnUdt$ = 88
?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ PROC ; std::vector<float,std::allocator<float> >::begin, COMDAT

; 1062 : 		{	// return iterator for beginning of nonmutable sequence

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2
	mov	DWORD PTR $T1[rsp], 0

; 1063 : 		return (const_iterator(this->_Myfirst(), &this->_Get_data()));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	npad	1
	mov	QWORD PTR tv74[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	npad	1
	mov	rcx, QWORD PTR tv74[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@PEAMPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > >
	npad	1
	mov	eax, DWORD PTR $T1[rsp]
	or	eax, 1
	mov	DWORD PTR $T1[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 1064 : 		}

	add	rsp, 72					; 00000048H
	ret	0
	int	3
?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ENDP ; std::vector<float,std::allocator<float> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv74 = 40
$T2 = 48
this$ = 80
__$ReturnUdt$ = 88
?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::begin'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv74 = 40
$T2 = 48
this$ = 80
__$ReturnUdt$ = 88
?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::begin'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T1[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC ; std::vector<float,std::allocator<float> >::_Unused_capacity, COMDAT

; 1047 : 		{	// micro-optimization for capacity() - size()

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1048 : 		return (this->_Myend() - this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2

; 1049 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Unused_capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP ; std::vector<float,std::allocator<float> >::_Unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
tv69 = 32
this$ = 64
?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ PROC ; std::vector<float,std::allocator<float> >::capacity, COMDAT

; 1042 : 		{	// return current length of allocated storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1043 : 		return (this->_Myend() - this->_Myfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR tv69[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv69[rsp]
	mov	rcx, QWORD PTR [rcx]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2

; 1044 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?capacity@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ENDP ; std::vector<float,std::allocator<float> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >, COMDAT

; 975  : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 976  : 		_Tidy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy
	npad	1

; 977  : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z
_TEXT	SEGMENT
tv178 = 32
tv235 = 40
tv71 = 48
tv88 = 56
tv136 = 64
_Idx$1 = 72
tv152 = 80
tv163 = 88
tv185 = 96
tv201 = 104
tv217 = 112
tv220 = 120
this$ = 144
_Val$ = 152
?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z PROC ; std::vector<float,std::allocator<float> >::push_back, COMDAT

; 896  : 		{	// insert by moving into element at end

$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H

; 897  : 		if (_Inside(_STD addressof(_Val)))

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@M@std@@YAPEAMAEAM@Z	; std::addressof<float>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Inside@?$vector@MV?$allocator@M@std@@@std@@IEBA_NPEBM@Z ; std::vector<float,std::allocator<float> >::_Inside
	movzx	eax, al
	test	eax, eax
	je	$LN2@push_back

; 898  : 			{	// push back an element
; 899  : 			size_type _Idx = _STD addressof(_Val) - _Unfancy(this->_Myfirst());

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$addressof@M@std@@YAPEAMAEAM@Z	; std::addressof<float>
	mov	QWORD PTR tv71[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	rcx, QWORD PTR tv71[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 2
	mov	QWORD PTR _Idx$1[rsp], rax

; 900  : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv88[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv88[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN4@push_back

; 901  : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reserve
$LN4@push_back:

; 902  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv136[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv136[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range

; 903  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Idx$1[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	rcx, rax
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	QWORD PTR tv152[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	QWORD PTR tv163[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rcx, QWORD PTR tv152[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv163[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float>

; 904  : 				_STD forward<value_type>(this->_Myfirst()[_Idx]));
; 905  : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv178[rsp], rax
	mov	rax, QWORD PTR tv178[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 4
	mov	rcx, QWORD PTR tv178[rsp]
	mov	QWORD PTR [rcx], rax

; 906  : 			}
; 907  : 		else

	jmp	$LN3@push_back
$LN2@push_back:

; 908  : 			{	// push back a non-element
; 909  : 			if (this->_Mylast() == this->_Myend())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv185[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv185[rsp]
	cmp	QWORD PTR [rcx], rax
	jne	SHORT $LN5@push_back

; 910  : 				_Reserve(1);

	mov	edx, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Reserve@?$vector@MV?$allocator@M@std@@@std@@IEAAX_K@Z ; std::vector<float,std::allocator<float> >::_Reserve
$LN5@push_back:

; 911  : 			_Orphan_range(this->_Mylast(), this->_Mylast());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv201[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv201[rsp]
	mov	r8, QWORD PTR [rcx]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_range@?$vector@MV?$allocator@M@std@@@std@@IEBAXPEAM0@Z ; std::vector<float,std::allocator<float> >::_Orphan_range

; 912  : 			this->_Getal().construct(_Unfancy(this->_Mylast()),

	mov	rcx, QWORD PTR _Val$[rsp]
	call	??$forward@M@std@@YA$$QEAMAEAM@Z	; std::forward<float>
	mov	QWORD PTR tv217[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@M@std@@YAPEAMPEAM@Z		; std::_Unfancy<float>
	mov	QWORD PTR tv220[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rcx, QWORD PTR tv217[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv220[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@MM@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM$$QEAM@Z ; std::_Wrap_alloc<std::allocator<float> >::construct<float,float>

; 913  : 				_STD forward<value_type>(_Val));
; 914  : 			++this->_Mylast();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv235[rsp], rax
	mov	rax, QWORD PTR tv235[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 4
	mov	rcx, QWORD PTR tv235[rsp]
	mov	QWORD PTR [rcx], rax
$LN3@push_back:

; 915  : 			}
; 916  : 		}

	add	rsp, 136				; 00000088H
	ret	0
?push_back@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAM@Z ENDP ; std::vector<float,std::allocator<float> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
tv85 = 32
tv129 = 40
tv141 = 48
this$ = 80
_Right$ = 88
__formal$ = 96
?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<float,std::allocator<float> >::_Assign_rv, COMDAT

; 868  : 		{	// move from _Right, stealing its contents

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 869  : 		this->_Swap_all((_Myt&)_Right);

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Swap_all

; 870  : 		this->_Myfirst() = _Right._Myfirst();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR tv85[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	rcx, QWORD PTR tv85[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 871  : 		this->_Mylast() = _Right._Mylast();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR tv129[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv129[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 872  : 		this->_Myend() = _Right._Myend();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR tv141[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	rcx, QWORD PTR tv141[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 873  : 
; 874  : 		_Right._Myfirst() = pointer();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR [rax], 0

; 875  : 		_Right._Mylast() = pointer();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	QWORD PTR [rax], 0

; 876  : 		_Right._Myend() = pointer();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
	mov	QWORD PTR [rax], 0

; 877  : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<float,std::allocator<float> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Right$ = 72
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT

; 841  : 		{	// construct by moving _Right

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 840  : 		: _Mybase(_STD move(_Right._Getal()))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	npad	1
	mov	rcx, rax
	call	??$move@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
	npad	1
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>
	npad	1

; 842  : 		_Assign_rv(_STD forward<_Myt>(_Right), true_type());

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@V?$vector@MV?$allocator@M@std@@@std@@@std@@YA$$QEAV?$vector@MV?$allocator@M@std@@@0@AEAV10@@Z ; std::forward<std::vector<float,std::allocator<float> > >
	npad	1
	movzx	r8d, BYTE PTR $T1[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Assign_rv@?$vector@MV?$allocator@M@std@@@std@@QEAAX$$QEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<float,std::allocator<float> >::_Assign_rv
	npad	1

; 843  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT

; 748  : 		{	// construct by copying _Right

$LN14:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 168				; 000000a8H
	mov	QWORD PTR $T5[rsp], -2

; 745  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	movzx	r8d, BYTE PTR $T1[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<float> >::select_on_container_copy_construction
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@M@std@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > ><std::_Wrap_alloc<std::allocator<float> >,void>
	npad	1

; 749  : 		if (_Buy(_Right.size()))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?size@?$vector@MV?$allocator@M@std@@@std@@QEBA_KXZ ; std::vector<float,std::allocator<float> >::size
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Buy@?$vector@MV?$allocator@M@std@@@std@@IEAA_N_K@Z ; std::vector<float,std::allocator<float> >::_Buy
	movzx	eax, al
	test	eax, eax
	je	$LN2@vector

; 750  : 			_TRY_BEGIN
; 751  : 			this->_Mylast() = _Ucopy(_Right.begin(), _Right.end(),

	lea	rax, QWORD PTR $T6[rsp]
	mov	QWORD PTR $T3[rsp], rax
	lea	rax, QWORD PTR $T7[rsp]
	mov	QWORD PTR $T4[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
	mov	QWORD PTR tv138[rsp], rax
	mov	rdx, QWORD PTR $T3[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?end@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ; std::vector<float,std::allocator<float> >::end
	mov	QWORD PTR tv69[rsp], rax
	mov	rax, QWORD PTR tv69[rsp]
	mov	QWORD PTR tv164[rsp], rax
	mov	rdx, QWORD PTR $T4[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?begin@?$vector@MV?$allocator@M@std@@@std@@QEBA?AV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@2@XZ ; std::vector<float,std::allocator<float> >::begin
	mov	QWORD PTR tv168[rsp], rax
	mov	rax, QWORD PTR tv168[rsp]
	mov	QWORD PTR tv166[rsp], rax
	mov	rax, QWORD PTR tv138[rsp]
	mov	r9, QWORD PTR [rax]
	mov	r8, QWORD PTR tv164[rsp]
	mov	rdx, QWORD PTR tv166[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$_Ucopy@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@@?$vector@MV?$allocator@M@std@@@std@@IEAAPEAMV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@1@0PEAM@Z ; std::vector<float,std::allocator<float> >::_Ucopy<std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<float> > > >
	mov	QWORD PTR tv132[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
	mov	rcx, QWORD PTR tv132[rsp]
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN2@vector
$LN11@vector:
$LN2@vector:

; 752  : 				this->_Myfirst());
; 753  : 			_CATCH_ALL
; 754  : 			_Tidy();
; 755  : 			_RERAISE;
; 756  : 			_CATCH_END
; 757  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 168				; 000000a8H
	ret	0
$LN12@vector:
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$1
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T4[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$2
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::catch$3

; 752  : 				this->_Myfirst());
; 753  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z$0:

; 752  : 				this->_Myfirst());
; 753  : 			_CATCH_ALL
; 754  : 			_Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy

; 752  : 				this->_Myfirst());
; 753  : 			_CATCH_ALL
; 754  : 			_Tidy();
; 755  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 752  : 				this->_Myfirst());
; 753  : 			_CATCH_ALL
; 754  : 			_Tidy();
; 755  : 			_RERAISE;
; 756  : 			_CATCH_END

	lea	rax, $LN11@catch$3
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T3[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$2
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR $T4[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@M@std@@@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$2@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
tv69 = 48
$T4 = 56
tv168 = 64
tv138 = 72
tv164 = 80
tv166 = 88
tv132 = 96
$T5 = 104
$T6 = 112
$T7 = 136
this$ = 176
_Right$ = 184
?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::catch$3

; 753  : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$??0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z$0:

; 754  : 			_Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@MV?$allocator@M@std@@@std@@IEAAXXZ ; std::vector<float,std::allocator<float> >::_Tidy

; 755  : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 756  : 			_CATCH_END

	lea	rax, $LN11@catch$3
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$3@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::catch$3
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >, COMDAT

; 707  : 		{	// construct empty vector

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 706  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	npad	1

; 708  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 299  : 		{	// return const reference to first

	mov	QWORD PTR [rsp+8], rcx

; 300  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 301  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::~_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >, COMDAT

; 488  : 		{	// initialize values

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	npad	1

; 485  : 		: _Myfirst(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 486  : 		_Mylast(),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+16], 0

; 487  : 		_Myend()

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 489  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_val@U?$_Simple_types@M@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_val<std::_Simple_types<float> >::_Vector_val<std::_Simple_types<float> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend, COMDAT

; 667  : 		{	// return const reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 668  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 24

; 669  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend, COMDAT

; 662  : 		{	// return reference to _Myend

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 663  : 		return (_Get_data()._Myend);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 24

; 664  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast, COMDAT

; 657  : 		{	// return const reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 658  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 16

; 659  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast, COMDAT

; 652  : 		{	// return reference to _Mylast

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 653  : 		return (_Get_data()._Mylast);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 16

; 654  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst, COMDAT

; 647  : 		{	// return const reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 648  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 8

; 649  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBQEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ
_TEXT	SEGMENT
this$ = 48
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst, COMDAT

; 642  : 		{	// return reference to _Myfirst

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 643  : 		return (_Get_data()._Myfirst);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	add	rax, 8

; 644  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAMXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data, COMDAT

; 637  : 		{	// return const reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 638  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second

; 639  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data, COMDAT

; 632  : 		{	// return reference to _Vector_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 633  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_second

; 634  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal, COMDAT

; 627  : 		{	// return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 628  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first

; 629  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal, COMDAT

; 622  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 623  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Get_first

; 624  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
tv75 = 32
this$ = 64
_Right$ = 72
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Swap_all, COMDAT

; 617  : 		{	// swap all iterators

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 618  : 		_Get_data()._Swap_all(_Right._Get_data());

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	QWORD PTR tv75[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	rcx, QWORD PTR tv75[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_all

; 619  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all, COMDAT

; 612  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 613  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 614  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy, COMDAT

; 601  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 602  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data

; 603  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getpfirst, COMDAT

; 596  : 		{	// get address of iterator chain

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 597  : 		return (_Get_data()._Getpfirst());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAAEBV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	rcx, rax
	call	?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ; std::_Container_base12::_Getpfirst

; 598  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getpfirst@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy, COMDAT

; 586  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 587  : 		typename _Alty::template rebind<_Container_proxy>::other
; 588  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>

; 589  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Orphan_all

; 590  : 		_Alproxy.destroy(_Myproxy());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 591  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	mov	r8d, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 592  : 		_Myproxy() = 0;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 593  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv70 = 32
tv80 = 40
tv92 = 48
$T1 = 56
_Alproxy$ = 72
__$ArrayPad$ = 80
this$ = 112
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy, COMDAT

; 577  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 578  : 		typename _Alty::template rebind<_Container_proxy>::other
; 579  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<float> > & __ptr64>

; 580  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rax], rcx

; 581  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv80[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 582  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAV?$_Vector_val@U?$_Simple_types@M@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Get_data
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	QWORD PTR [rax], rcx

; 583  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >, COMDAT

; 558  : 		{	// destroy proxy

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 559  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Free_proxy
	npad	1

; 560  : 		}

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::~_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >, COMDAT

; 544  : 		{	// default construct allocator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 543  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<float> >,std::_Vector_val<std::_Simple_types<float> >,1><>
	npad	1

; 545  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAAXXZ ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Alloc_proxy
	npad	1

; 546  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@M@std@@@std@@V?$_Vector_val@U?$_Simple_types@M@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_Vector_alloc@U?$_Vec_base_types@MV?$allocator@M@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >::_Vector_alloc<std::_Vec_base_types<float,std::allocator<float> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::max_size, COMDAT

; 1007 : 		{	// get maximum size

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ; std::allocator_traits<std::allocator<float> >::max_size

; 1009 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z ; std::allocator<float>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAXPEAM_K@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@M@std@@QEAAPEAM_K@Z ; std::allocator<float>::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAAPEAM_K@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >, COMDAT

; 946  : 		{	// construct by moving

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 945  : 		: _Mybase(_STD move(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$move@AEAU?$_Wrap_alloc@V?$allocator@M@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@M@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<float> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@M@std@@QEAA@AEBV01@@Z	; std::allocator<float>::allocator<float>

; 947  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ PROC	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 935  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@M@std@@QEAA@XZ		; std::allocator<float>::allocator<float>

; 937  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@XZ ENDP	; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
__formal$ = 80
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<float> >::select_on_container_copy_construction, COMDAT

; 912  : 		{	// get allocator to use

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z ; std::allocator_traits<std::allocator<float> >::select_on_container_copy_construction
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?0V?$allocator@M@std@@@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEAA@$$QEAV?$allocator@M@1@@Z ; std::_Wrap_alloc<std::allocator<float> >::_Wrap_alloc<std::allocator<float> ><std::allocator<float> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 914  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@M@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<float> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Al$ = 56
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<float> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 875  : 		return (_Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$allocator@M@std@@QEAA@AEBV01@@Z	; std::allocator<float>::allocator<float>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 876  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@M@std@@@std@@SA?AV?$allocator@M@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<float> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z
_TEXT	SEGMENT
_Al$ = 48
?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z PROC ; std::allocator_traits<std::allocator<float> >::max_size, COMDAT

; 868  : 		{	// get maximum size

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 869  : 		return (_Al.max_size());

	mov	rcx, QWORD PTR _Al$[rsp]
	call	?max_size@?$allocator@M@std@@QEBA_KXZ	; std::allocator<float>::max_size

; 870  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$allocator_traits@V?$allocator@M@std@@@std@@SA_KAEBV?$allocator@M@2@@Z ENDP ; std::allocator_traits<std::allocator<float> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@M@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@M@std@@QEBA_KXZ PROC		; std::allocator<float>::max_size, COMDAT

; 748  : 		{	// estimate maximum array size

	mov	QWORD PTR [rsp+8], rcx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	rax, 4611686018427387903		; 3fffffffffffffffH

; 750  : 		}

	ret	0
?max_size@?$allocator@M@std@@QEBA_KXZ ENDP		; std::allocator<float>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@M@std@@QEAAPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@M@std@@QEAAPEAM_K@Z PROC		; std::allocator<float>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 4
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@M@std@@QEAAPEAM_K@Z ENDP		; std::allocator<float>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z PROC	; std::allocator<float>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 4
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@M@std@@QEAAXPEAM_K@Z ENDP	; std::allocator<float>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@M@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@M@std@@QEAA@AEBV01@@Z PROC		; std::allocator<float>::allocator<float>, COMDAT

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@M@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@M@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@M@std@@QEAA@XZ PROC			; std::allocator<float>::allocator<float>, COMDAT

; 699  : 	allocator() _THROW0()

	mov	QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@M@std@@QEAA@XZ ENDP			; std::allocator<float>::allocator<float>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.h
;	COMDAT ??0TileRow@@QEAA@M@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
offset$ = 72
??0TileRow@@QEAA@M@Z PROC				; TileRow::TileRow, COMDAT

; 57   : 	TileRow(float offset) {this->offset = offset;}

$LN4:
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::vector<float,std::allocator<float> >
	npad	1
	mov	rax, QWORD PTR this$[rsp]
	movss	xmm0, DWORD PTR offset$[rsp]
	movss	DWORD PTR [rax], xmm0
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0TileRow@@QEAA@M@Z ENDP				; TileRow::TileRow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
offset$ = 72
?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA PROC		; `TileRow::TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA ENDP		; `TileRow::TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
offset$ = 72
?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA PROC		; `TileRow::TileRow'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$vector@MV?$allocator@M@std@@@std@@QEAA@XZ ; std::vector<float,std::allocator<float> >::~vector<float,std::allocator<float> >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0TileRow@@QEAA@M@Z@4HA ENDP		; `TileRow::TileRow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	mov	eax, DWORD PTR __flags$[rsp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rsp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??_G?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran, COMDAT

; 2282 : 		{	// report an out_of_range error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2283 : 		_Xout_of_range("invalid string position");

	lea	rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position?$AA@
	call	QWORD PTR __imp_?_Xout_of_range@std@@YAXPEBD@Z
$LN2@Xran:

; 2284 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset, COMDAT

; 2270 : 		{	// checks whether _Off is in the bounds of [0, this->size()]

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2271 : 		if (this->_Mysize() < _Off)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Off$[rsp]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN2@Check_offs

; 2272 : 			_Xran();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xran@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2273 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ
_TEXT	SEGMENT
this$ = 48
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen, COMDAT

; 2265 : 		{	// report a length_error

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 2266 : 		_Xlength_error("string too long");

	lea	rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
	call	QWORD PTR __imp_?_Xlength_error@std@@YAXPEBD@Z
$LN2@Xlen:

; 2267 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z
_TEXT	SEGMENT
_Ptr$1 = 32
tv87 = 40
tv132 = 48
tv155 = 56
this$ = 80
_Built$ = 88
_Newsize$ = 96
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy, COMDAT

; 2248 : 		{	// initialize buffer, deallocating any storage

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 2249 : 		if (!_Built)

	movzx	eax, BYTE PTR _Built$[rsp]
	test	eax, eax
	jne	SHORT $LN2@Tidy
	jmp	$LN3@Tidy
$LN2@Tidy:

; 2250 : 			;
; 2251 : 		else if (this->_BUF_SIZE <= this->_Myres())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	cmp	QWORD PTR [rax], 8
	jb	$LN4@Tidy

; 2252 : 			{	// copy any leftovers to small buffer and deallocate
; 2253 : 			pointer _Ptr = this->_Bx()._Ptr;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 2254 : 			this->_Getal().destroy(_STD addressof(this->_Bx()._Ptr));

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rcx, rax
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t * __ptr64>
	mov	QWORD PTR tv87[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv87[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$destroy@PEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::destroy<wchar_t * __ptr64>

; 2255 : 			if (0 < _Newsize)

	cmp	QWORD PTR _Newsize$[rsp], 0
	jbe	SHORT $LN5@Tidy

; 2256 : 				_Traits::copy(this->_Bx()._Buf,

	mov	rcx, QWORD PTR _Ptr$1[rsp]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR tv132[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	r8, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR tv132[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
$LN5@Tidy:

; 2257 : 					_Unfancy(_Ptr), _Newsize);
; 2258 : 			this->_Getal().deallocate(_Ptr, this->_Myres() + 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	QWORD PTR tv155[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv155[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR _Ptr$1[rsp]
	mov	rcx, rax
	call	?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
$LN4@Tidy:
$LN3@Tidy:

; 2259 : 			}
; 2260 : 		this->_Myres() = this->_BUF_SIZE - 1;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR [rax], 7

; 2261 : 		_Eos(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos

; 2262 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z
_TEXT	SEGMENT
tv77 = 32
this$ = 64
_Ptr$ = 72
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside, COMDAT

; 2238 : 		{	// test if _Ptr points inside string

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2239 : 		if (_Ptr == nullptr_t{} || _Ptr < this->_Myptr()
; 2240 : 			|| this->_Myptr() + this->_Mysize() <= _Ptr)

	cmp	QWORD PTR _Ptr$[rsp], 0
	je	SHORT $LN4@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	cmp	QWORD PTR _Ptr$[rsp], rax
	jb	SHORT $LN4@Inside
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	QWORD PTR tv77[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv77[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	cmp	rax, QWORD PTR _Ptr$[rsp]
	ja	SHORT $LN2@Inside
$LN4@Inside:

; 2241 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN1@Inside

; 2242 : 		else

	jmp	SHORT $LN3@Inside
$LN2@Inside:

; 2243 : 			return (true);

	mov	al, 1
$LN3@Inside:
$LN1@Inside:

; 2244 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z
_TEXT	SEGMENT
tv140 = 32
tv133 = 40
this$ = 64
_Newsize$ = 72
_Trim$ = 80
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow, COMDAT

; 2224 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

$LN13:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2225 : 		if (max_size() < _Newsize)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	rax, QWORD PTR _Newsize$[rsp]
	jae	SHORT $LN2@Grow

; 2226 : 			_Xlen();	// result too long

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Xlen@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAXXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Xlen
$LN2@Grow:

; 2227 : 		if (this->_Myres() < _Newsize)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rcx, QWORD PTR _Newsize$[rsp]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@Grow

; 2228 : 			_Copy(_Newsize, this->_Mysize());	// reallocate to grow

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Newsize$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2229 : 		else if (_Trim && _Newsize < this->_BUF_SIZE)

	movzx	eax, BYTE PTR _Trim$[rsp]
	test	eax, eax
	je	SHORT $LN5@Grow
	cmp	QWORD PTR _Newsize$[rsp], 8
	jae	SHORT $LN5@Grow

; 2230 : 			_Tidy(true,	// copy and deallocate if trimming to small string

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Newsize$[rsp], rax
	jae	SHORT $LN9@Grow
	mov	rax, QWORD PTR _Newsize$[rsp]
	mov	QWORD PTR tv133[rsp], rax
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv133[rsp], rax
$LN10@Grow:
	mov	r8, QWORD PTR tv133[rsp]
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	jmp	SHORT $LN6@Grow
$LN5@Grow:

; 2231 : 				_Newsize < this->_Mysize() ? _Newsize : this->_Mysize());
; 2232 : 		else if (_Newsize == 0)

	cmp	QWORD PTR _Newsize$[rsp], 0
	jne	SHORT $LN7@Grow

; 2233 : 			_Eos(0);	// new size is zero, just null terminate

	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN7@Grow:
$LN6@Grow:
$LN4@Grow:

; 2234 : 		return (0 < _Newsize);	// return true only if more work to do

	cmp	QWORD PTR _Newsize$[rsp], 0
	jbe	SHORT $LN11@Grow
	mov	DWORD PTR tv140[rsp], 1
	jmp	SHORT $LN12@Grow
$LN11@Grow:
	mov	DWORD PTR tv140[rsp], 0
$LN12@Grow:
	movzx	eax, BYTE PTR tv140[rsp]
$LN8@Grow:

; 2235 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
_Dx$ = 40
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos, COMDAT

; 2217 : 		{	// set new length and null terminator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2218 : 		auto& _Dx = this->_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	QWORD PTR _Dx$[rsp], rax

; 2219 : 		_Traits::assign(_Dx._Myptr()[_Dx._Mysize = _Newsize], _Elem());

	xor	eax, eax
	mov	WORD PTR $T1[rsp], ax
	mov	rax, QWORD PTR _Dx$[rsp]
	mov	rcx, QWORD PTR _Newsize$[rsp]
	mov	QWORD PTR [rax+24], rcx
	mov	rcx, QWORD PTR _Dx$[rsp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
	mov	rcx, QWORD PTR _Newsize$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, rax
	call	?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z ; std::char_traits<wchar_t>::assign

; 2220 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z
_TEXT	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy, COMDAT

; 2182 : 		{	// copy _Oldlen elements to newly allocated buffer

$LN23:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 136				; 00000088H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 2183 : 		size_type _Newres = _Newsize | this->_ALLOC_MASK;

	mov	rax, QWORD PTR _Newsize$[rsp]
	or	rax, 7
	mov	QWORD PTR _Newres$[rsp], rax

; 2184 : 		if (max_size() < _Newres)

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	cmp	rax, QWORD PTR _Newres$[rsp]
	jae	SHORT $LN2@Copy

; 2185 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	rax, QWORD PTR _Newsize$[rsp]
	mov	QWORD PTR _Newres$[rsp], rax
	jmp	$LN3@Copy
$LN2@Copy:

; 2186 : 		else if (this->_Myres() / 2 <= _Newres / 3)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	xor	edx, edx
	mov	rax, QWORD PTR [rax]
	mov	ecx, 2
	div	rcx
	mov	QWORD PTR tv74[rsp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Newres$[rsp]
	mov	ecx, 3
	div	rcx
	mov	rcx, QWORD PTR tv74[rsp]
	cmp	rcx, rax
	ja	SHORT $LN4@Copy
	jmp	$LN3@Copy
$LN4@Copy:

; 2187 : 			;
; 2188 : 		else if (this->_Myres() <= max_size() - this->_Myres() / 2)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	QWORD PTR tv84[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	xor	edx, edx
	mov	rax, QWORD PTR [rax]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv84[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR tv82[rsp]
	cmp	QWORD PTR [rcx], rax
	ja	SHORT $LN6@Copy

; 2189 : 			_Newres = this->_Myres()

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR tv131[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	xor	edx, edx
	mov	rax, QWORD PTR [rax]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv131[rsp]
	add	rax, QWORD PTR [rcx]
	mov	QWORD PTR _Newres$[rsp], rax

; 2190 : 				+ this->_Myres() / 2;	// grow exponentially if possible
; 2191 : 		else

	jmp	SHORT $LN3@Copy
$LN6@Copy:

; 2192 : 			_Newres = max_size();	// settle for max_size()

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
	mov	QWORD PTR _Newres$[rsp], rax
$LN3@Copy:

; 2193 : 
; 2194 : 		pointer _Ptr;
; 2195 : 		_TRY_BEGIN
; 2196 : 			_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	rax, QWORD PTR _Newres$[rsp]
	inc	rax
	mov	QWORD PTR tv152[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv152[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	QWORD PTR _Ptr$[rsp], rax
	jmp	SHORT $LN18@Copy
$LN19@Copy:
$LN18@Copy:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END
; 2206 : 
; 2207 : 		if (0 < _Oldlen)

	cmp	QWORD PTR _Oldlen$[rsp], 0
	jbe	SHORT $LN10@Copy

; 2208 : 			_Traits::copy(_Unfancy(_Ptr), this->_Myptr(),

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	QWORD PTR tv181[rsp], rax
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	r8, QWORD PTR _Oldlen$[rsp]
	mov	rcx, QWORD PTR tv181[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy
$LN10@Copy:

; 2209 : 				_Oldlen);	// copy existing elements
; 2210 : 		_Tidy(true);

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 2211 : 		this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Ptr);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rcx, rax
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t * __ptr64>
	mov	QWORD PTR tv196[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	lea	r8, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR tv196[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 2212 : 		this->_Myres() = _Newres;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rcx, QWORD PTR _Newres$[rsp]
	mov	QWORD PTR [rax], rcx

; 2213 : 		_Eos(_Oldlen);

	mov	rdx, QWORD PTR _Oldlen$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos

; 2214 : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 136				; 00000088H
	ret	0
$LN20@Copy:
?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1

; 2197 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$0:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	rax, QWORD PTR _Newsize$[rbp]
	mov	QWORD PTR _Newres$[rbp], rax

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	rax, QWORD PTR _Newres$[rbp]
	inc	rax
	mov	QWORD PTR tv165[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv165[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	QWORD PTR _Ptr$[rbp], rax
	jmp	SHORT $LN16@catch$1
$LN17@catch$1:
$LN16@catch$1:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

	lea	rax, $LN19@catch$1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$1:

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 2197 : 		_CATCH_ALL
; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry
; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);
; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END

	lea	rax, $LN17@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1

; 2197 : 		_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$0:

; 2198 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	rax, QWORD PTR _Newsize$[rbp]
	mov	QWORD PTR _Newres$[rbp], rax

; 2199 : 			_TRY_BEGIN
; 2200 : 				_Ptr = this->_Getal().allocate(_Newres + 1);

	mov	rax, QWORD PTR _Newres$[rbp]
	inc	rax
	mov	QWORD PTR tv165[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv165[rbp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
	mov	QWORD PTR _Ptr$[rbp], rax
	jmp	SHORT $LN16@catch$1
$LN17@catch$1:
$LN16@catch$1:

; 2201 : 			_CATCH_ALL
; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise
; 2203 : 			_RERAISE;
; 2204 : 			_CATCH_END
; 2205 : 		_CATCH_END

	lea	rax, $LN19@catch$1
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$1@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Newres$ = 32
tv74 = 40
tv84 = 48
tv82 = 56
tv131 = 64
tv152 = 72
tv165 = 80
tv181 = 88
tv196 = 96
$T1 = 104
_Ptr$ = 112
__$ArrayPad$ = 120
this$ = 144
_Newsize$ = 152
_Oldlen$ = 160
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0

; 2201 : 			_CATCH_ALL

	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
__catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z$1:

; 2202 : 			_Tidy(true);	// failed again, discard storage and reraise

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 2203 : 			_RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 2204 : 			_CATCH_END

	lea	rax, $LN17@catch$0
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
	int	3
?catch$0@?0??_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Copy'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ
_TEXT	SEGMENT
_Ret$ = 32
__$ArrayPad$ = 40
this$ = 64
__$ReturnUdt$ = 72
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator, COMDAT

; 2168 : 		{	// return allocator object for values

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 2169 : 		allocator_type _Ret(this->_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Ret$[rsp]
	call	??0?$allocator@_W@std@@QEAA@AEBV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>

; 2170 : 		return (_Ret);

	lea	rdx, QWORD PTR _Ret$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$allocator@_W@std@@QEAA@AEBV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 2171 : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
_Max_effective_size$ = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size, COMDAT

; 2111 : 		{	// trims _Size to the longest it can be assuming a string starting at _Off

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 2112 : 		const size_type _Max_effective_size = this->_Mysize() - _Off;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Off$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Max_effective_size$[rsp], rax

; 2113 : 		if (_Size <= _Max_effective_size)

	mov	rax, QWORD PTR _Max_effective_size$[rsp]
	cmp	QWORD PTR _Size$[rsp], rax
	ja	SHORT $LN2@Clamp_suff

; 2114 : 			return (_Size);

	mov	rax, QWORD PTR _Size$[rsp]
	jmp	SHORT $LN1@Clamp_suff

; 2115 : 		else

	jmp	SHORT $LN3@Clamp_suff
$LN2@Clamp_suff:

; 2116 : 			return (_Max_effective_size);

	mov	rax, QWORD PTR _Max_effective_size$[rsp]
$LN3@Clamp_suff:
$LN1@Clamp_suff:

; 2117 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 52
$T3 = 56
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr, COMDAT

; 2088 : 		{	// return [_Off, _Off + _Count) as new string

$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T3[rsp], -2
	mov	DWORD PTR $T2[rsp], 0

; 2089 : 		return (_Myt(*this, _Off, _Count, get_allocator()));

	lea	rdx, QWORD PTR $T1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?get_allocator@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV?$allocator@_W@2@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::get_allocator
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR _Count$[rsp]
	mov	r8, QWORD PTR _Off$[rsp]
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
	npad	1
	mov	eax, DWORD PTR $T2[rsp]
	or	eax, 1
	mov	DWORD PTR $T2[rsp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 2090 : 		}

	add	rsp, 72					; 00000048H
	ret	0
	int	3
?substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
$T3 = 56
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T2[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T2[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
$T3 = 56
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	eax, DWORD PTR $T2[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN4@dtor$0
	and	DWORD PTR $T2[rbp], -2
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
$LN4@dtor$0:
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??substr@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z
_TEXT	SEGMENT
tv68 = 32
_Uptr$1 = 40
tv82 = 48
_Vptr$2 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
_Count$ = 104
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of, COMDAT

; 2025 : 		{	// look for none of [_Ptr, _Ptr + _Count) at or after _Off

$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 2026 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN8@find_first
	mov	BYTE PTR tv68[rsp], 1
	jmp	SHORT $LN9@find_first
$LN8@find_first:
	mov	BYTE PTR tv68[rsp], 0
$LN9@find_first:
	mov	r9d, 2026				; 000007eaH
	lea	r8, OFFSET FLAT:??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	rdx, QWORD PTR _Ptr$[rsp]
	movzx	ecx, BYTE PTR tv68[rsp]
	call	??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z ; std::_Debug_pointer_if<wchar_t const >

; 2027 : 		if (_Off < this->_Mysize())

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Off$[rsp], rax
	jae	$LN5@find_first

; 2028 : 			{	// room for match, look for it
; 2029 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	QWORD PTR tv82[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv82[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR _Vptr$2[rsp], rax

; 2030 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Off$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _Uptr$1[rsp], rax
	jmp	SHORT $LN4@find_first
$LN2@find_first:

; 2031 : 				_Uptr < _Vptr; ++_Uptr)

	mov	rax, QWORD PTR _Uptr$1[rsp]
	add	rax, 2
	mov	QWORD PTR _Uptr$1[rsp], rax
$LN4@find_first:
	mov	rax, QWORD PTR _Vptr$2[rsp]
	cmp	QWORD PTR _Uptr$1[rsp], rax
	jae	SHORT $LN3@find_first

; 2032 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) == 0)

	mov	r8, QWORD PTR _Uptr$1[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::char_traits<wchar_t>::find
	test	rax, rax
	jne	SHORT $LN6@find_first

; 2033 : 					return (_Uptr - this->_Myptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Uptr$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	jmp	SHORT $LN1@find_first
$LN6@find_first:

; 2034 : 			}

	jmp	SHORT $LN2@find_first
$LN3@find_first:
$LN5@find_first:

; 2035 : 		return (npos);

	mov	rax, QWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
$LN1@find_first:

; 2036 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
_TEXT	SEGMENT
tv67 = 32
$T1 = 40
this$ = 64
_Right$ = 72
_Off$ = 80
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of, COMDAT

; 2018 : 		{	// look for none of _Right at or after _Off

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 2019 : 		return (find_first_not_of(_Right._Myptr(), _Off,

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	npad	1
	mov	QWORD PTR tv67[rsp], rax
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	npad	1
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r9, rcx
	mov	r8, QWORD PTR _Off$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
	npad	1

; 2020 : 			_Right.size()));
; 2021 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?find_first_not_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_not_of
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z
_TEXT	SEGMENT
tv68 = 32
_Uptr$1 = 40
tv83 = 48
_Vptr$2 = 56
this$ = 80
_Ptr$ = 88
_Off$ = 96
_Count$ = 104
?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of, COMDAT

; 1952 : 		{	// look for one of [_Ptr, _Ptr + _Count) at or after _Off

$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1953 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN8@find_first
	mov	BYTE PTR tv68[rsp], 1
	jmp	SHORT $LN9@find_first
$LN8@find_first:
	mov	BYTE PTR tv68[rsp], 0
$LN9@find_first:
	mov	r9d, 1953				; 000007a1H
	lea	r8, OFFSET FLAT:??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	rdx, QWORD PTR _Ptr$[rsp]
	movzx	ecx, BYTE PTR tv68[rsp]
	call	??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z ; std::_Debug_pointer_if<wchar_t const >

; 1954 : 		if (0 < _Count && _Off < this->_Mysize())

	cmp	QWORD PTR _Count$[rsp], 0
	jbe	$LN5@find_first
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Off$[rsp], rax
	jae	$LN5@find_first

; 1955 : 			{	// room for match, look for it
; 1956 : 			const _Elem *const _Vptr = this->_Myptr() + this->_Mysize();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	QWORD PTR tv83[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv83[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR _Vptr$2[rsp], rax

; 1957 : 			for (const _Elem *_Uptr = this->_Myptr() + _Off;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Off$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _Uptr$1[rsp], rax
	jmp	SHORT $LN4@find_first
$LN2@find_first:

; 1958 : 				_Uptr < _Vptr; ++_Uptr)

	mov	rax, QWORD PTR _Uptr$1[rsp]
	add	rax, 2
	mov	QWORD PTR _Uptr$1[rsp], rax
$LN4@find_first:
	mov	rax, QWORD PTR _Vptr$2[rsp]
	cmp	QWORD PTR _Uptr$1[rsp], rax
	jae	SHORT $LN3@find_first

; 1959 : 				if (_Traits::find(_Ptr, _Count, *_Uptr) != 0)

	mov	r8, QWORD PTR _Uptr$1[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ; std::char_traits<wchar_t>::find
	test	rax, rax
	je	SHORT $LN6@find_first

; 1960 : 					return (_Uptr - this->_Myptr());	// found a match

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Uptr$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	jmp	SHORT $LN1@find_first
$LN6@find_first:

; 1961 : 			}

	jmp	SHORT $LN2@find_first
$LN3@find_first:
$LN5@find_first:

; 1962 : 
; 1963 : 		return (npos);	// no match

	mov	rax, QWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
$LN1@find_first:

; 1964 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z
_TEXT	SEGMENT
tv67 = 32
$T1 = 40
this$ = 64
_Right$ = 72
_Off$ = 80
?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of, COMDAT

; 1946 : 		{	// look for one of _Right at or after _Off

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 1947 : 		return (find_first_of(_Right._Myptr(), _Off, _Right.size()));

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
	npad	1
	mov	QWORD PTR tv67[rsp], rax
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	npad	1
	mov	rcx, QWORD PTR tv67[rsp]
	mov	r9, rcx
	mov	r8, QWORD PTR _Off$[rsp]
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KPEB_W_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
	npad	1

; 1948 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?find_first_of@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KAEBV12@_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::find_first_of
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
_Num$ = 40
tv75 = 48
this$ = 80
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size, COMDAT

; 1769 : 		{	// return maximum possible length of sequence

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 1770 : 		const size_type _Num = this->_Getal().max_size();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
	mov	QWORD PTR _Num$[rsp], rax

; 1771 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	QWORD PTR _Num$[rsp], 1
	ja	SHORT $LN3@max_size
	mov	QWORD PTR tv75[rsp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	rax, QWORD PTR _Num$[rsp]
	dec	rax
	mov	QWORD PTR tv75[rsp], rax
$LN4@max_size:
	mov	rax, QWORD PTR tv75[rsp]

; 1772 : 		}

	add	rsp, 72					; 00000048H
	ret	0
?max_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 48
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size, COMDAT

; 1764 : 		{	// return length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1765 : 		return (this->_Mysize());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]

; 1766 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_KXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str, COMDAT

; 1742 : 		{	// return pointer to null-terminated nonmutable array

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 1743 : 		return (this->_Myptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	npad	1

; 1744 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?c_str@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAPEB_WXZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z
_TEXT	SEGMENT
_Ptr$1 = 32
_Newsize$2 = 40
this$ = 64
_Off$ = 72
_Count$ = 80
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT

; 1347 : 		{	// erase elements [_Off, _Off + _Count)

$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1348 : 		_Check_offset(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset

; 1349 : 		if (this->_Mysize() - _Off <= _Count)

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Off$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	cmp	rax, QWORD PTR _Count$[rsp]
	ja	SHORT $LN2@erase

; 1350 : 			_Eos(_Off);	// erase elements [_Off, ...)

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
	jmp	SHORT $LN3@erase
$LN2@erase:

; 1351 : 		else if (0 < _Count)

	cmp	QWORD PTR _Count$[rsp], 0
	jbe	SHORT $LN4@erase

; 1352 : 			{	// move elements down
; 1353 : 			value_type *_Ptr = this->_Myptr() + _Off;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Off$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR _Ptr$1[rsp], rax

; 1354 : 			size_type _Newsize = this->_Mysize() - _Count;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Newsize$2[rsp], rax

; 1355 : 			_Traits::move(_Ptr, _Ptr + _Count, _Newsize - _Off);

	mov	rax, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR _Newsize$2[rsp]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Ptr$1[rsp]
	mov	rdx, QWORD PTR _Count$[rsp]
	lea	rcx, QWORD PTR [rcx+rdx*2]
	mov	r8, rax
	mov	rdx, rcx
	mov	rcx, QWORD PTR _Ptr$1[rsp]
	call	?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::move

; 1356 : 			_Eos(_Newsize);

	mov	rdx, QWORD PTR _Newsize$2[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@erase:
$LN3@erase:

; 1357 : 			}
; 1358 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 1359 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase, COMDAT

; 1340 : 		{	// erase elements [_Off, ...)

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1341 : 		_Check_offset(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset

; 1342 : 		_Eos(_Off);

	mov	rdx, QWORD PTR _Off$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos

; 1343 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 1344 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1180 : 		{	// assign [_Ptr, <null>)

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1181 : 		_DEBUG_POINTER(_Ptr);

	mov	r8d, 1181				; 0000049dH
	lea	rdx, OFFSET FLAT:??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??$_Debug_pointer@$$CB_W@std@@YAXPEB_W0I@Z ; std::_Debug_pointer<wchar_t const >

; 1182 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?length@?$char_traits@_W@std@@SA_KPEB_W@Z ; std::char_traits<wchar_t>::length
	mov	r8, rax
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign

; 1183 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z
_TEXT	SEGMENT
tv68 = 32
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1165 : 		{	// assign [_Ptr, _Ptr + _Count)

$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1166 : 		_DEBUG_POINTER_IF(_Count != 0, _Ptr);

	cmp	QWORD PTR _Count$[rsp], 0
	je	SHORT $LN5@assign
	mov	BYTE PTR tv68[rsp], 1
	jmp	SHORT $LN6@assign
$LN5@assign:
	mov	BYTE PTR tv68[rsp], 0
$LN6@assign:
	mov	r9d, 1166				; 0000048eH
	lea	r8, OFFSET FLAT:??_C@_1IO@EADHKMNI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	rdx, QWORD PTR _Ptr$[rsp]
	movzx	ecx, BYTE PTR tv68[rsp]
	call	??$_Debug_pointer_if@$$CB_W@std@@YAX_NPEB_W1I@Z ; std::_Debug_pointer_if<wchar_t const >

; 1167 : 		if (_Inside(_Ptr))

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Inside@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_NPEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Inside
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@assign

; 1168 : 			return (assign(*this,

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Ptr$[rsp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 1
	mov	r9, QWORD PTR _Count$[rsp]
	mov	r8, rax
	mov	rdx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	jmp	SHORT $LN1@assign
$LN2@assign:

; 1169 : 				_Ptr - this->_Myptr(), _Count));	// substring
; 1170 : 
; 1171 : 		if (_Grow(_Count))

	xor	r8d, r8d
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@assign

; 1172 : 			{	// make room and assign new stuff
; 1173 : 			_Traits::copy(this->_Myptr(), _Ptr, _Count);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy

; 1174 : 			_Eos(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN3@assign:

; 1175 : 			}
; 1176 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]
$LN1@assign:

; 1177 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W_K@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z
_TEXT	SEGMENT
tv92 = 32
this$ = 64
_Right$ = 72
_Roff$ = 80
_Count$ = 88
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign, COMDAT

; 1149 : 		{	// assign _Right [_Roff, _Roff + _Count)

$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 1150 : 		_Right._Check_offset(_Roff);

	mov	rdx, QWORD PTR _Roff$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Check_offset@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Check_offset

; 1151 : 		_Count = _Right._Clamp_suffix_size(_Roff, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Roff$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Clamp_suffix_size@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEBA_K_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Clamp_suffix_size
	mov	QWORD PTR _Count$[rsp], rax

; 1152 : 
; 1153 : 		if (this == &_Right)

	mov	rax, QWORD PTR _Right$[rsp]
	cmp	QWORD PTR this$[rsp], rax
	jne	SHORT $LN2@assign

; 1154 : 			erase((size_type)(_Roff + _Count)), erase(0, _Roff);	// substring

	mov	rax, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Roff$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	mov	r8, QWORD PTR _Roff$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?erase@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@_K0@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::erase
	jmp	SHORT $LN3@assign
$LN2@assign:

; 1155 : 		else if (_Grow(_Count))

	xor	r8d, r8d
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Grow@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA_N_K_N@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@assign

; 1156 : 			{	// make room and assign new stuff
; 1157 : 			_Traits::copy(this->_Myptr(),

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	rcx, QWORD PTR _Roff$[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::copy

; 1158 : 				_Right._Myptr() + _Roff, _Count);
; 1159 : 			_Eos(_Count);

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Eos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Eos
$LN4@assign:
$LN3@assign:

; 1160 : 			}
; 1161 : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 1162 : 		}

	add	rsp, 56					; 00000038H
	ret	0
?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 1016 : 		{	// destroy the string

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 1017 : 		_Tidy(true);

	xor	r8d, r8d
	mov	dl, 1
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	npad	1

; 1018 : 		}

	mov	rcx, QWORD PTR this$[rsp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::~basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z
_TEXT	SEGMENT
tv78 = 32
tv86 = 40
tv140 = 48
tv142 = 56
tv170 = 64
tv182 = 72
this$ = 96
_Right$ = 104
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv, COMDAT

; 961  : 		{	// assign by moving _Right

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 962  : 		if (_Right._Myres() < this->_BUF_SIZE)

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	cmp	QWORD PTR [rax], 8
	jae	SHORT $LN2@Assign_rv

; 963  : 			_Traits::move(this->_Bx()._Buf, _Right._Bx()._Buf,

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	QWORD PTR tv78[rsp], rax
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	QWORD PTR tv86[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rcx, QWORD PTR tv78[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv86[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ; std::char_traits<wchar_t>::move

; 964  : 				_Right._Mysize() + 1);
; 965  : 		else

	jmp	SHORT $LN3@Assign_rv
$LN2@Assign_rv:

; 966  : 			{	// copy pointer
; 967  : 			this->_Getal().construct(_STD addressof(this->_Bx()._Ptr), _Right._Bx()._Ptr);

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	QWORD PTR tv140[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	rcx, rax
	call	??$addressof@PEA_W@std@@YAPEAPEA_WAEAPEA_W@Z ; std::addressof<wchar_t * __ptr64>
	mov	QWORD PTR tv142[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rcx, QWORD PTR tv140[rsp]
	mov	r8, rcx
	mov	rcx, QWORD PTR tv142[rsp]
	mov	rdx, rcx
	mov	rcx, rax
	call	??$construct@PEA_WAEAPEA_W@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEAPEA_WAEAPEA_W@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::construct<wchar_t * __ptr64,wchar_t * __ptr64 & __ptr64>

; 968  : 			_Right._Bx()._Ptr = pointer();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
	mov	QWORD PTR [rax], 0
$LN3@Assign_rv:

; 969  : 			}
; 970  : 		this->_Mysize() = _Right._Mysize();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	QWORD PTR tv170[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
	mov	rcx, QWORD PTR tv170[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 971  : 		this->_Myres() = _Right._Myres();

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	QWORD PTR tv182[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
	mov	rcx, QWORD PTR tv182[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 972  : 		_Right._Tidy();

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 973  : 		}

	add	rsp, 88					; 00000058H
	ret	0
?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 911  : 		{	// construct by moving _Right

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 910  : 		: _Mybase(_STD move(_Right._Getal()))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	npad	1
	mov	rcx, rax
	call	??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
	npad	1
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
	npad	1

; 912  : 		_Tidy();

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy
	npad	1

; 913  : 		_Assign_rv(_STD forward<_Myt>(_Right));

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$forward@V?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@@std@@YA$$QEAV?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@0@AEAV10@@Z ; std::forward<std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> > >
	npad	1
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Assign_rv@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX$$QEAV12@@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Assign_rv
	npad	1

; 914  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 836  : 		{	// construct from [_Ptr, <null>)

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 835  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	npad	1

; 837  : 		_Tidy();

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 838  : 		assign(_Ptr);

	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@PEB_W@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	npad	1

; 839  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@PEB_W@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
_Roff$ = 80
_Count$ = 88
_Al$ = 96
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 815  : 		{	// construct from _Right [_Roff, _Roff + _Count) with allocator

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 814  : 		: _Mybase(_Al)

	mov	rdx, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0AEBV?$allocator@_W@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@AEBV?$allocator@_W@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::allocator<wchar_t> const & __ptr64,void>
	npad	1

; 816  : 		_Tidy();

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 817  : 		assign(_Right, _Roff, _Count);

	mov	r9, QWORD PTR _Count$[rsp]
	mov	r8, QWORD PTR _Roff$[rsp]
	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	npad	1

; 818  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
_Roff$ = 80
_Count$ = 88
_Al$ = 96
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
_Roff$ = 80
_Count$ = 88
_Al$ = 96
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@_W@1@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
this$ = 64
_Right$ = 72
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >, COMDAT

; 780  : 		{	// construct by copying _Right

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T3[rsp], -2

; 777  : 		: _Mybase(_Right._Getal().select_on_container_copy_construction())

	mov	rcx, QWORD PTR _Right$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	movzx	r8d, BYTE PTR $T1[rsp]
	lea	rdx, QWORD PTR $T2[rsp]
	mov	rcx, rax
	call	?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??$?0U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@X@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > ><std::_Wrap_alloc<std::allocator<wchar_t> >,void>
	npad	1

; 781  : 		_Tidy();

	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAX_N_K@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::_Tidy

; 782  : 		assign(_Right, 0, npos);

	mov	r9, QWORD PTR ?npos@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@2_KB ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::npos
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV12@AEBV12@_K1@Z ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::assign
	npad	1

; 783  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 40
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >::basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>, COMDAT
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::~_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT

; 319  : 		{	// return const reference to second

	mov	QWORD PTR [rsp+8], rcx

; 320  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 321  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second, COMDAT

; 314  : 		{	// return reference to second

	mov	QWORD PTR [rsp+8], rcx

; 315  : 		return (_Myval2);

	mov	rax, QWORD PTR this$[rsp]

; 316  : 		}

	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 299  : 		{	// return const reference to first

	mov	QWORD PTR [rsp+8], rcx

; 300  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 301  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 8
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first, COMDAT

; 294  : 		{	// return reference to first

	mov	QWORD PTR [rsp+8], rcx

; 295  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 296  : 		}

	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres, COMDAT

; 733  : 		{	// return reference to _Myres

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 734  : 		return (_Get_data()._Myres);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 32					; 00000020H

; 735  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myres@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myres
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ
_TEXT	SEGMENT
this$ = 48
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT

; 728  : 		{	// return const reference to _Mysize

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 729  : 		return (_Get_data()._Mysize);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 24

; 730  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEB_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ
_TEXT	SEGMENT
this$ = 48
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize, COMDAT

; 723  : 		{	// return reference to _Mysize

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 724  : 		return (_Get_data()._Mysize);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 24

; 725  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Mysize@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEA_KXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx, COMDAT

; 713  : 		{	// return reference to _Bx

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 714  : 		return (_Get_data()._Bx);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	add	rax, 8

; 715  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Bx@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAT_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Bx
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT

; 706  : 		{	// return const reference to _String_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 707  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second

; 708  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data, COMDAT

; 701  : 		{	// return reference to _String_val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 702  : 		return (_Mypair._Get_second());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_second

; 703  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT

; 696  : 		{	// return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 697  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 698  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal, COMDAT

; 691  : 		{	// return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 692  : 		return (_Mypair._Get_first());

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Get_first

; 693  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all, COMDAT

; 681  : 		{	// orphan all iterators

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 682  : 		_Get_data()._Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	rcx, rax
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 683  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy, COMDAT

; 670  : 		{	// return reference to _Myproxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 671  : 		return (_Get_data()._Myproxy);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data

; 672  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 32
__$ArrayPad$ = 40
this$ = 64
?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy, COMDAT

; 655  : 		{	// destroy proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 656  : 		typename _Alty::template rebind<_Container_proxy>::other
; 657  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>

; 658  : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Orphan_all

; 659  : 		_Alproxy.destroy(_Myproxy());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$destroy@U_Container_proxy@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>

; 660  : 		_Alproxy.deallocate(_Alproxy.address(*_Myproxy()), 1);

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?address@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEBAPEAU_Container_proxy@2@AEAU32@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::address
	mov	r8d, 1
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?deallocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::deallocate

; 661  : 		_Myproxy() = 0;

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	QWORD PTR [rax], 0

; 662  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 56					; 00000038H
	ret	0
?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv70 = 32
tv80 = 40
tv92 = 48
$T1 = 56
_Alproxy$ = 72
__$ArrayPad$ = 80
this$ = 112
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy, COMDAT

; 646  : 		{	// construct proxy

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 104				; 00000068H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 647  : 		typename _Alty::template rebind<_Container_proxy>::other
; 648  : 			_Alproxy(_Getal());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Getal@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAU?$_Wrap_alloc@V?$allocator@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$?0AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@1@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::_Wrap_alloc<std::allocator<std::_Container_proxy> ><std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>

; 649  : 		_Myproxy() = _Unfancy(_Alproxy.allocate(1));

	mov	edx, 1
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	?allocate@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR tv70[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rcx, QWORD PTR tv70[rsp]
	mov	QWORD PTR [rax], rcx

; 650  : 		_Alproxy.construct(_Myproxy(), _Container_proxy());

	lea	rcx, QWORD PTR $T1[rsp]
	call	??0_Container_proxy@std@@QEAA@XZ	; std::_Container_proxy::_Container_proxy
	mov	QWORD PTR tv80[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rcx, QWORD PTR tv80[rsp]
	mov	r8, rcx
	mov	rdx, QWORD PTR [rax]
	lea	rcx, QWORD PTR _Alproxy$[rsp]
	call	??$construct@U_Container_proxy@std@@U12@@?$_Wrap_alloc@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAAXPEAU_Container_proxy@1@$$QEAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>

; 651  : 		_Myproxy()->_Mycont = &_Get_data();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	QWORD PTR tv92[rsp], rax
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Myproxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAPEAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myproxy
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR tv92[rsp]
	mov	QWORD PTR [rax], rcx

; 652  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 104				; 00000068H
	ret	0
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT

; 627  : 		{	// destroy the object

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 628  : 		_Free_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Free_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Free_proxy
	npad	1

; 629  : 		}

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, rax
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::~_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >, COMDAT

; 613  : 		{	// default construct allocator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T2[rsp], -2

; 612  : 		: _Mypair(_Zero_then_variadic_args_t())

	mov	rax, QWORD PTR this$[rsp]
	movzx	edx, BYTE PTR $T1[rsp]
	mov	rcx, rax
	call	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<wchar_t> >,std::_String_val<std::_Simple_types<wchar_t> >,1><>
	npad	1

; 614  : 		_Alloc_proxy();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAXXZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Alloc_proxy
	npad	1

; 615  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@_W@std@@@std@@V?$_String_val@U?$_Simple_types@_W@std@@@2@$00@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
this$ = 48
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT

; 582  : 		{	// determine current pointer to buffer for nonmutable string

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 583  : 		return (_Get_data()._Myptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAAEBV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 584  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
this$ = 48
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr, COMDAT

; 577  : 		{	// determine current pointer to buffer for mutable string

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 578  : 		return (_Get_data()._Myptr());

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Get_data@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAAEAV?$_String_val@U?$_Simple_types@_W@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Get_data
	mov	rcx, rax
	call	?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr

; 579  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?_Myptr@?$_String_alloc@U?$_String_base_types@_WV?$allocator@_W@std@@@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_alloc<std::_String_base_types<wchar_t,std::allocator<wchar_t> > >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >, COMDAT
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	npad	1
	mov	rcx, QWORD PTR this$[rsp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	npad	1
	add	rsp, 56					; 00000038H
	ret	0
??1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???1?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::~_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty, COMDAT

; 533  : 			{	// user-provided, for fancy pointers

	mov	QWORD PTR [rsp+8], rcx

; 534  : 			}

	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty, COMDAT

; 528  : 		_Bxty()

	mov	QWORD PTR [rsp+8], rcx

; 529  : 			{	// user-provided, for fancy pointers
; 530  : 			}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 520  : 		{	// determine current pointer to buffer for nonmutable string

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 521  : 		return (this->_BUF_SIZE <= _Myres

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 8
	jb	SHORT $LN3@Myptr
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR tv72[rsp], rax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR tv72[rsp], rax
$LN4@Myptr:
	mov	rax, QWORD PTR tv72[rsp]

; 522  : 			? _Unfancy(_Bx._Ptr)
; 523  : 			: _Bx._Buf);
; 524  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEBAPEB_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ
_TEXT	SEGMENT
tv72 = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr, COMDAT

; 513  : 		{	// determine current pointer to buffer for mutable string

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 514  : 		return (this->_BUF_SIZE <= _Myres

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax+32], 8
	jb	SHORT $LN3@Myptr
	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@_W@std@@YAPEA_WPEA_W@Z	; std::_Unfancy<wchar_t>
	mov	QWORD PTR tv72[rsp], rax
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	QWORD PTR tv72[rsp], rax
$LN4@Myptr:
	mov	rax, QWORD PTR tv72[rsp]

; 515  : 			? _Unfancy(_Bx._Ptr)
; 516  : 			: _Bx._Buf);
; 517  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAAPEA_WXZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >, COMDAT

; 498  : 		{	// initialize values

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2
	mov	rcx, QWORD PTR this$[rsp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	npad	1

; 495  : 		: _Bx(),

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8
	mov	rcx, rax
	call	??0_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::_Bxty
	npad	1

; 496  : 		_Mysize(0),

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+24], 0

; 497  : 		_Myres(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+32], 0

; 499  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 56					; 00000038H
	ret	0
??0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
$T1 = 32
this$ = 64
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Container_base12@std@@QEAA@XZ	; std::_Container_base12::~_Container_base12
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1_Bxty@?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<wchar_t> >::_Bxty::~_Bxty
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0???0?$_String_val@U?$_Simple_types@_W@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<wchar_t> >::_String_val<std::_Simple_types<wchar_t> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size, COMDAT

; 1007 : 		{	// get maximum size

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 1008 : 		return (_Mytraits::max_size(*this));

	mov	rcx, QWORD PTR this$[rsp]
	call	?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ; std::allocator_traits<std::allocator<wchar_t> >::max_size

; 1009 : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA_KU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate, COMDAT

; 986  : 		{	// deallocate object at _Ptr, ignore size

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 987  : 		_Mybase::deallocate(_Ptr, _Count);

	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _Ptr$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ; std::allocator<wchar_t>::deallocate

; 988  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAXPEA_W_K@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate, COMDAT

; 975  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 976  : 		return (_Mybase::allocate(_Count));

	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ; std::allocator<wchar_t>::allocate

; 977  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAAPEA_W_K@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT

; 946  : 		{	// construct by moving

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 945  : 		: _Mybase(_STD move(_Right))

	mov	rcx, QWORD PTR _Right$[rsp]
	call	??$move@AEAU?$_Wrap_alloc@V?$allocator@_W@std@@@std@@@std@@YA$$QEAU?$_Wrap_alloc@V?$allocator@_W@std@@@0@AEAU10@@Z ; std::move<std::_Wrap_alloc<std::allocator<wchar_t> > & __ptr64>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@_W@std@@QEAA@AEBV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>

; 947  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAU01@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >, COMDAT

; 936  : 		{	// construct default allocator (do nothing)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 935  : 		: _Mybase()

	mov	rcx, QWORD PTR this$[rsp]
	call	??0?$allocator@_W@std@@QEAA@XZ		; std::allocator<wchar_t>::allocator<wchar_t>

; 937  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@XZ ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
__formal$ = 80
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 912  : 		{	// get allocator to use

$LN3:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 913  : 		return (_Mytraits::select_on_container_copy_construction(*this));

	mov	rdx, QWORD PTR this$[rsp]
	lea	rcx, QWORD PTR $T1[rsp]
	call	?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
	mov	rdx, rax
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??$?0V?$allocator@_W@std@@@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEAA@$$QEAV?$allocator@_W@1@@Z ; std::_Wrap_alloc<std::allocator<wchar_t> >::_Wrap_alloc<std::allocator<wchar_t> ><std::allocator<wchar_t> >
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 914  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?select_on_container_copy_construction@?$_Wrap_alloc@V?$allocator@_W@std@@@std@@QEBA?AU12@U_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_Al$ = 56
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction, COMDAT

; 874  : 		{	// get allocator to use

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 875  : 		return (_Al);

	mov	rdx, QWORD PTR _Al$[rsp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rsp]
	call	??0?$allocator@_W@std@@QEAA@AEBV01@@Z	; std::allocator<wchar_t>::allocator<wchar_t>
	mov	rax, QWORD PTR __$ReturnUdt$[rsp]

; 876  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?select_on_container_copy_construction@?$allocator_traits@V?$allocator@_W@std@@@std@@SA?AV?$allocator@_W@2@AEBV32@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z
_TEXT	SEGMENT
_Al$ = 48
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z PROC ; std::allocator_traits<std::allocator<wchar_t> >::max_size, COMDAT

; 868  : 		{	// get maximum size

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 869  : 		return (_Al.max_size());

	mov	rcx, QWORD PTR _Al$[rsp]
	call	?max_size@?$allocator@_W@std@@QEBA_KXZ	; std::allocator<wchar_t>::max_size

; 870  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?max_size@?$allocator_traits@V?$allocator@_W@std@@@std@@SA_KAEBV?$allocator@_W@2@@Z ENDP ; std::allocator_traits<std::allocator<wchar_t> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?max_size@?$allocator@_W@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 8
?max_size@?$allocator@_W@std@@QEBA_KXZ PROC		; std::allocator<wchar_t>::max_size, COMDAT

; 748  : 		{	// estimate maximum array size

	mov	QWORD PTR [rsp+8], rcx

; 749  : 		return ((size_t)(-1) / sizeof (_Ty));

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 750  : 		}

	ret	0
?max_size@?$allocator@_W@std@@QEBA_KXZ ENDP		; std::allocator<wchar_t>::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z PROC	; std::allocator<wchar_t>::allocate, COMDAT

; 724  : 		{	// allocate array of _Count elements

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 725  : 		return (static_cast<pointer>(_Allocate(_Count, sizeof (_Ty))));

	mov	r8b, 1
	mov	edx, 2
	mov	rcx, QWORD PTR _Count$[rsp]
	call	?_Allocate@std@@YAPEAX_K0_N@Z		; std::_Allocate

; 726  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?allocate@?$allocator@_W@std@@QEAAPEA_W_K@Z ENDP	; std::allocator<wchar_t>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z PROC	; std::allocator<wchar_t>::deallocate, COMDAT

; 719  : 		{	// deallocate object at _Ptr

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 720  : 		_Deallocate(_Ptr, _Count, sizeof (_Ty));

	mov	r8d, 2
	mov	rdx, QWORD PTR _Count$[rsp]
	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	?_Deallocate@std@@YAXPEAX_K1@Z		; std::_Deallocate

; 721  : 		}

	add	rsp, 40					; 00000028H
	ret	0
?deallocate@?$allocator@_W@std@@QEAAXPEA_W_K@Z ENDP	; std::allocator<wchar_t>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 8
__formal$ = 16
??0?$allocator@_W@std@@QEAA@AEBV01@@Z PROC		; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 703  : 	allocator(const allocator<_Ty>&) _THROW0()

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 704  : 		{	// construct by copying (do nothing)
; 705  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@_W@std@@QEAA@AEBV01@@Z ENDP		; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ??0?$allocator@_W@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0?$allocator@_W@std@@QEAA@XZ PROC			; std::allocator<wchar_t>::allocator<wchar_t>, COMDAT

; 699  : 	allocator() _THROW0()

	mov	QWORD PTR [rsp+8], rcx

; 700  : 		{	// construct default allocator (do nothing)
; 701  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0?$allocator@_W@std@@QEAA@XZ ENDP			; std::allocator<wchar_t>::allocator<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\triobj.h
;	COMDAT ??__EkTriObjNormalXTCID@@YAXXZ
text$di	SEGMENT
??__EkTriObjNormalXTCID@@YAXXZ PROC			; `dynamic initializer for 'kTriObjNormalXTCID'', COMDAT

; 289  : const Class_ID kTriObjNormalXTCID = Class_ID(0x730a33d7, 0x27246c55);

	sub	rsp, 40					; 00000028H
	mov	r8d, 656698453				; 27246c55H
	mov	edx, 1930048471				; 730a33d7H
	lea	rcx, OFFSET FLAT:?kTriObjNormalXTCID@@3VClass_ID@@B
	call	??0Class_ID@@QEAA@KK@Z			; Class_ID::Class_ID
	add	rsp, 40					; 00000028H
	ret	0
??__EkTriObjNormalXTCID@@YAXXZ ENDP			; `dynamic initializer for 'kTriObjNormalXTCID''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ
text$di	SEGMENT
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ PROC	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId'', COMDAT

; 32   : 		static AssetId kInvalidId;

	sub	rsp, 40					; 00000028H
	lea	rcx, OFFSET FLAT:?kInvalidId@AssetManagement@MaxSDK@@3UAssetId@12@A
	call	??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ; MaxSDK::AssetManagement::AssetId::AssetId
	add	rsp, 40					; 00000028H
	ret	0
??__EkInvalidId@AssetManagement@MaxSDK@@YAXXZ ENDP	; MaxSDK::AssetManagement::`dynamic initializer for 'kInvalidId''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\assetmanagement\assetid.h
;	COMDAT ??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ
_TEXT	SEGMENT
this$ = 24
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ PROC		; MaxSDK::AssetManagement::AssetId::AssetId, COMDAT

; 29   : 			AssetId() { *static_cast<GUID*>(this) = CLSID_NULL; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	lea	rax, OFFSET FLAT:GUID_NULL
	mov	rdi, QWORD PTR this$[rsp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR this$[rsp]
	pop	rdi
	pop	rsi
	ret	0
??0AssetId@AssetManagement@MaxSDK@@QEAA@XZ ENDP		; MaxSDK::AssetManagement::AssetId::AssetId
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPEAX_K1@Z
_TEXT	SEGMENT
_Ptr_user$1 = 48
_Ptr_container$2 = 56
_Ptr_ptr$3 = 64
_User_size$ = 72
_Ptr$ = 96
_Count$ = 104
_Sz$ = 112
?_Deallocate@std@@YAXPEAX_K1@Z PROC			; std::_Deallocate, COMDAT

; 92   : 	{	// deallocate storage for _Count elements of size _Sz

$LN22:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 93   :  #if defined(_M_IX86) || defined(_M_X64)
; 94   : 	_SCL_SECURE_ALWAYS_VALIDATE(_Count <= (size_t)(-1) / _Sz);

	xor	edx, edx
	mov	rax, -1
	div	QWORD PTR _Sz$[rsp]
	cmp	QWORD PTR _Count$[rsp], rax
	jbe	SHORT $LN2@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0BN@HMCJOMKN@_Count?5?$DM?$DN?5?$CIsize_t?$CJ?$CI?91?$CJ?5?1?5_Sz?$AA@
	test	rax, rax
	je	SHORT $LN10@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN11@Deallocate
$LN10@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1EI@MLOBABC@?$AA?$CC?$AA_?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAs?$AAi?$AAz?$AAe?$AA_?$AAt?$AA?$CJ?$AA?$CI?$AA?9?$AA1?$AA?$CJ?$AA?5?$AA?1?$AA?5?$AA_?$AAS?$AAz?$AA?$CC?$AA?5?$AA?$CG@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 94					; 0000005eH
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN11@Deallocate
	int	3
	xor	eax, eax
$LN11@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 94					; 0000005eH
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN2@Deallocate:

; 95   : 	const size_t _User_size = _Count * _Sz;

	mov	rax, QWORD PTR _Count$[rsp]
	imul	rax, QWORD PTR _Sz$[rsp]
	mov	QWORD PTR _User_size$[rsp], rax

; 96   : 	if (_BIG_ALLOCATION_THRESHOLD <= _User_size)

	cmp	QWORD PTR _User_size$[rsp], 4096	; 00001000H
	jb	$LN3@Deallocate

; 97   : 		{	// deallocate large block
; 98   : 		const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	mov	QWORD PTR _Ptr_user$1[rsp], rax

; 99   : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	rax, QWORD PTR _Ptr_user$1[rsp]
	and	rax, 31
	test	rax, rax
	je	SHORT $LN4@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0DD@GBGGGKGG@?$CI_Ptr_user?5?$CG?5?$CI_BIG_ALLOCATION_AL@
	test	rax, rax
	je	SHORT $LN12@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Deallocate
$LN12@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1HE@CDMBFOKC@?$AA?$CC?$AA?$CI?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?$CG?$AA?5?$AA?$CI?$AA_?$AAB?$AAI?$AAG?$AA_?$AAA?$AAL?$AAL?$AAO?$AAC?$AAA?$AAT?$AAI?$AAO?$AAN?$AA_?$AAA@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 100				; 00000064H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN13@Deallocate
	int	3
	xor	eax, eax
$LN13@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 100				; 00000064H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN4@Deallocate:

; 100  : 			(_Ptr_user & (_BIG_ALLOCATION_ALIGNMENT - 1)) == 0);
; 101  : 		const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

	mov	rax, QWORD PTR _Ptr_user$1[rsp]
	sub	rax, 8
	mov	QWORD PTR _Ptr_ptr$3[rsp], rax

; 102  : 		const uintptr_t _Ptr_container =
; 103  : 			*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

	mov	rax, QWORD PTR _Ptr_ptr$3[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_container$2[rsp], rax

; 104  : 
; 105  :  #ifdef _DEBUG
; 106  : 		// If the following asserts, it likely means that we are performing
; 107  : 		// an aligned delete on memory coming from an unaligned allocation.
; 108  : 		_SCL_SECURE_ALWAYS_VALIDATE(

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_ptr$3[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	je	SHORT $LN5@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0EI@NOJHEJCJ@reinterpret_cast?$DMuintptr_t?5?$CK?$DO?$CI_P@
	test	rax, rax
	je	SHORT $LN14@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN15@Deallocate
$LN14@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1JO@EKLKIEHP@?$AA?$CC?$AAr?$AAe?$AAi?$AAn?$AAt?$AAe?$AAr?$AAp?$AAr?$AAe?$AAt?$AA_?$AAc?$AAa?$AAs?$AAt?$AA?$DM?$AAu?$AAi?$AAn?$AAt?$AAp?$AAt?$AAr?$AA_?$AAt?$AA?5?$AA?$CK?$AA?$DO?$AA?$CI?$AA_@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 110				; 0000006eH
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN15@Deallocate
	int	3
	xor	eax, eax
$LN15@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 110				; 0000006eH
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN5@Deallocate:

; 109  : 			reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] ==
; 110  : 				_BIG_ALLOCATION_SENTINEL);
; 111  :  #endif /* _DEBUG */
; 112  : 
; 113  : 		// Extra paranoia on aligned allocation/deallocation
; 114  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container < _Ptr_user);

	mov	rax, QWORD PTR _Ptr_user$1[rsp]
	cmp	QWORD PTR _Ptr_container$2[rsp], rax
	jb	SHORT $LN6@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0BL@OCKMEJON@_Ptr_container?5?$DM?5_Ptr_user?$AA@
	test	rax, rax
	je	SHORT $LN16@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN17@Deallocate
$LN16@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1EE@PDHAHDDC@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 114				; 00000072H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN17@Deallocate
	int	3
	xor	eax, eax
$LN17@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 114				; 00000072H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN6@Deallocate:

; 115  : 
; 116  :  #ifdef _DEBUG
; 117  : 		_SCL_SECURE_ALWAYS_VALIDATE(2 * sizeof(void *)

	mov	rax, QWORD PTR _Ptr_container$2[rsp]
	mov	rcx, QWORD PTR _Ptr_user$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, 16
	jae	SHORT $LN7@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0DB@GLFJLNCE@2?5?$CK?5sizeof?$CIvoid?5?$CK?$CJ?5?$DM?$DN?5_Ptr_user?5@
	test	rax, rax
	je	SHORT $LN18@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN19@Deallocate
$LN18@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1HA@NAPGMHAO@?$AA?$CC?$AA2?$AA?5?$AA?$CK?$AA?5?$AAs?$AAi?$AAz?$AAe?$AAo?$AAf?$AA?$CI?$AAv?$AAo?$AAi?$AAd?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 118				; 00000076H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN19@Deallocate
	int	3
	xor	eax, eax
$LN19@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 118				; 00000076H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN7@Deallocate:

; 118  : 			<= _Ptr_user - _Ptr_container);
; 119  : 
; 120  :  #else /* _DEBUG */
; 121  : 		_SCL_SECURE_ALWAYS_VALIDATE(sizeof(void *)
; 122  : 			<= _Ptr_user - _Ptr_container);
; 123  :  #endif /* _DEBUG */
; 124  : 
; 125  : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_user - _Ptr_container

	mov	rax, QWORD PTR _Ptr_container$2[rsp]
	mov	rcx, QWORD PTR _Ptr_user$1[rsp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	rax, 47					; 0000002fH
	jbe	SHORT $LN8@Deallocate
	lea	rax, OFFSET FLAT:??_C@_0CN@BLHJCAL@_Ptr_user?5?9?5_Ptr_container?5?$DM?$DN?5_N@
	test	rax, rax
	je	SHORT $LN20@Deallocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN21@Deallocate
$LN20@Deallocate:
	lea	rax, OFFSET FLAT:??_C@_1GI@DHJGPFNI@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAu?$AAs?$AAe?$AAr?$AA?5?$AA?9?$AA?5?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA_@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 126				; 0000007eH
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN21@Deallocate
	int	3
	xor	eax, eax
$LN21@Deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 126				; 0000007eH
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN8@Deallocate:

; 126  : 			<= _NON_USER_SIZE);
; 127  : 
; 128  : 		_Ptr = reinterpret_cast<void *>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr_container$2[rsp]
	mov	QWORD PTR _Ptr$[rsp], rax
$LN3@Deallocate:

; 129  : 		}
; 130  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 131  : 
; 132  : 	::operator delete(_Ptr);

	mov	rcx, QWORD PTR _Ptr$[rsp]
	call	??3@YAXPEAX@Z				; operator delete

; 133  : 	}

	add	rsp, 88					; 00000058H
	ret	0
?_Deallocate@std@@YAXPEAX_K1@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
;	COMDAT ?_Allocate@std@@YAPEAX_K0_N@Z
_TEXT	SEGMENT
_Ptr$ = 48
_User_size$ = 56
_Ptr_container$1 = 64
_Block_size$2 = 72
_Count$ = 96
_Sz$ = 104
_Try_aligned_allocation$ = 112
?_Allocate@std@@YAPEAX_K0_N@Z PROC			; std::_Allocate, COMDAT

; 48   : 	{	// allocate storage for _Count elements of size _Sz

$LN14:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 88					; 00000058H

; 49   : 	void *_Ptr = 0;

	mov	QWORD PTR _Ptr$[rsp], 0

; 50   : 
; 51   : 	if (_Count == 0)

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN2@Allocate

; 52   : 		return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
	jmp	$LN1@Allocate
$LN2@Allocate:

; 53   : 
; 54   : 	// check overflow of multiply
; 55   : 	if ((size_t)(-1) / _Sz < _Count)

	xor	edx, edx
	mov	rax, -1
	div	QWORD PTR _Sz$[rsp]
	cmp	rax, QWORD PTR _Count$[rsp]
	jae	SHORT $LN3@Allocate

; 56   : 		_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN3@Allocate:

; 57   : 	const size_t _User_size = _Count * _Sz;

	mov	rax, QWORD PTR _Count$[rsp]
	imul	rax, QWORD PTR _Sz$[rsp]
	mov	QWORD PTR _User_size$[rsp], rax

; 58   : 
; 59   :  #if defined(_M_IX86) || defined(_M_X64)
; 60   : 	if (_Try_aligned_allocation
; 61   : 		&& _BIG_ALLOCATION_THRESHOLD <= _User_size)

	movzx	eax, BYTE PTR _Try_aligned_allocation$[rsp]
	test	eax, eax
	je	$LN4@Allocate
	cmp	QWORD PTR _User_size$[rsp], 4096	; 00001000H
	jb	$LN4@Allocate

; 62   : 		{	// allocate large block
; 63   : 		static_assert(sizeof (void *) < _BIG_ALLOCATION_ALIGNMENT,
; 64   : 			"Big allocations should at least match vector register size");
; 65   : 		const size_t _Block_size = _NON_USER_SIZE + _User_size;

	mov	rax, QWORD PTR _User_size$[rsp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$2[rsp], rax

; 66   : 		if (_Block_size <= _User_size)

	mov	rax, QWORD PTR _User_size$[rsp]
	cmp	QWORD PTR _Block_size$2[rsp], rax
	ja	SHORT $LN6@Allocate

; 67   : 			_Xbad_alloc();	// report no memory

	call	QWORD PTR __imp_?_Xbad_alloc@std@@YAXXZ
$LN6@Allocate:

; 68   : 		const uintptr_t _Ptr_container =
; 69   : 			reinterpret_cast<uintptr_t>(::operator new(_Block_size));

	mov	rcx, QWORD PTR _Block_size$2[rsp]
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Ptr_container$1[rsp], rax

; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

	cmp	QWORD PTR _Ptr_container$1[rsp], 0
	jne	SHORT $LN7@Allocate
	lea	rax, OFFSET FLAT:??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
	test	rax, rax
	je	SHORT $LN10@Allocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN11@Allocate
$LN10@Allocate:
	lea	rax, OFFSET FLAT:??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 70					; 00000046H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN11@Allocate
	int	3
	xor	eax, eax
$LN11@Allocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 70					; 00000046H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN7@Allocate:

; 71   : 		_Ptr = reinterpret_cast<void *>((_Ptr_container + _NON_USER_SIZE)

	mov	rax, QWORD PTR _Ptr_container$1[rsp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rsp], rax

; 72   : 			& ~(_BIG_ALLOCATION_ALIGNMENT - 1));
; 73   : 		static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, QWORD PTR _Ptr_container$1[rsp]
	mov	QWORD PTR [rcx+rax], rdx

; 74   : 
; 75   :  #ifdef _DEBUG
; 76   : 		static_cast<uintptr_t *>(_Ptr)[-2] = _BIG_ALLOCATION_SENTINEL;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rsp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 77   :  #endif /* _DEBUG */
; 78   : 		}
; 79   : 	else

	jmp	$LN5@Allocate
$LN4@Allocate:

; 80   :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 81   : 
; 82   : 		{	// allocate normal block
; 83   : 		_Ptr = ::operator new(_User_size);

	mov	rcx, QWORD PTR _User_size$[rsp]
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR _Ptr$[rsp], rax

; 84   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != 0);

	cmp	QWORD PTR _Ptr$[rsp], 0
	jne	SHORT $LN8@Allocate
	lea	rax, OFFSET FLAT:??_C@_09GLJCAGLP@_Ptr?5?$CB?$DN?50?$AA@
	test	rax, rax
	je	SHORT $LN12@Allocate
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Allocate
$LN12@Allocate:
	lea	rax, OFFSET FLAT:??_C@_1CC@GKJLLHIM@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 84					; 00000054H
	lea	rdx, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReportW
	cmp	eax, 1
	jne	SHORT $LN13@Allocate
	int	3
	xor	eax, eax
$LN13@Allocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 84					; 00000054H
	lea	r8, OFFSET FLAT:??_C@_1JA@DKOIEICI@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rdx, OFFSET FLAT:??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
	call	QWORD PTR __imp__invalid_parameter
$LN8@Allocate:
$LN5@Allocate:

; 85   : 		}
; 86   : 	return (_Ptr);

	mov	rax, QWORD PTR _Ptr$[rsp]
$LN1@Allocate:
$LN9@Allocate:

; 87   : 	}

	add	rsp, 88					; 00000058H
	ret	0
?_Allocate@std@@YAPEAX_K0_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 32
this$ = 64
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 193  : 		{	// cut ties with parent

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 194  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 195  : 		if (_Myproxy != 0)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	$LN4@Orphan_me

; 196  : 			{	// adopted, remove self from list
; 197  : 			_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
$LN2@Orphan_me:

; 198  : 			while (*_Pnext != 0 && *_Pnext != this)

	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_me
	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN3@Orphan_me

; 199  : 				_Pnext = &(*_Pnext)->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN2@Orphan_me
$LN3@Orphan_me:

; 200  : 
; 201  : 			if (*_Pnext == 0)

	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_me

; 202  : 				_DEBUG_ERROR("ITERATOR LIST CORRUPTED!");

	mov	r8d, 202				; 000000caH
	lea	rdx, OFFSET FLAT:??_C@_1JA@MHADJNIL@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	lea	rcx, OFFSET FLAT:??_C@_1DC@POOIKBAO@?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5?$AAC?$AAO?$AAR?$AAR?$AAU?$AAP?$AAT?$AAE?$AAD?$AA?$CB?$AA?$AA@
	call	QWORD PTR __imp_?_Debug_message@std@@YAXPEB_W0I@Z
$LN5@Orphan_me:

; 203  : 			*_Pnext = _Mynextiter;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 204  : 			_Myproxy = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
$LN4@Orphan_me:

; 205  : 			}
; 206  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 207  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ
_TEXT	SEGMENT
this$ = 8
?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ PROC	; std::_Iterator_base12::_Getpnext, COMDAT

; 188  : 		{	// get address of remaining iterator chain

	mov	QWORD PTR [rsp+8], rcx

; 189  : 		return (&_Mynextiter);

	mov	rax, QWORD PTR this$[rsp]
	add	rax, 8

; 190  : 		}

	ret	0
?_Getpnext@_Iterator_base12@std@@QEAAPEAPEAU12@XZ ENDP	; std::_Iterator_base12::_Getpnext
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Clrcont@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 8
?_Clrcont@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Clrcont, COMDAT

; 178  : 		{	// disown owning container

	mov	QWORD PTR [rsp+8], rcx

; 179  : 		_Myproxy = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 180  : 		}

	ret	0
?_Clrcont@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Clrcont
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$1 = 32
$T2 = 40
_Lock$3 = 48
_Lock$4 = 52
__$ArrayPad$ = 56
this$ = 80
_Parent$ = 88
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 149  : 		{	// adopt this iterator by parent

$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 150  : 		if (_Parent == 0)

	cmp	QWORD PTR _Parent$[rsp], 0
	jne	SHORT $LN2@Adopt

; 151  : 			{	// no future parent, just disown current parent
; 152  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 153  : 			_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 154  : 			_Orphan_me();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 155  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 156  : 			}

	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ

; 157  : 		else

	jmp	SHORT $LN3@Adopt
$LN2@Adopt:

; 158  : 			{	// have a parent, do adoption
; 159  : 			_Container_proxy *_Parent_proxy = _Parent->_Myproxy;

	mov	rax, QWORD PTR _Parent$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Parent_proxy$1[rsp], rax

; 160  : 
; 161  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 162  : 			if (_Myproxy != _Parent_proxy)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parent_proxy$1[rsp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN3@Adopt

; 163  : 				{	// change parentage
; 164  : 				_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$4[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 165  : 				_Orphan_me();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me

; 166  : 				_Mynextiter = _Parent_proxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parent_proxy$1[rsp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax+8], rcx

; 167  : 				_Parent_proxy->_Myfirstiter = this;

	mov	rax, QWORD PTR _Parent_proxy$1[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], rcx

; 168  : 				_Myproxy = _Parent_proxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Parent_proxy$1[rsp]
	mov	QWORD PTR [rax], rcx

; 169  : 				}

	lea	rcx, QWORD PTR _Lock$4[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
$LN3@Adopt:

; 170  : 
; 171  :  #else /* _ITERATOR_DEBUG_LEVEL == 2 */
; 172  : 			_Myproxy = _Parent_proxy;
; 173  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 174  : 			}
; 175  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$1 = 32
$T2 = 40
_Lock$3 = 48
_Lock$4 = 52
__$ArrayPad$ = 56
this$ = 80
_Parent$ = 88
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$3[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
_Parent_proxy$1 = 32
$T2 = 40
_Lock$3 = 48
_Lock$4 = 52
__$ArrayPad$ = 56
this$ = 80
_Parent$ = 88
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$1 = 32
$T2 = 40
_Lock$3 = 48
_Lock$4 = 52
__$ArrayPad$ = 56
this$ = 80
_Parent$ = 88
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$3[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$1 = 32
$T2 = 40
_Lock$3 = 48
_Lock$4 = 52
__$ArrayPad$ = 56
this$ = 80
_Parent$ = 88
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
_Lock$ = 40
__$ArrayPad$ = 48
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 141  : 		{	// destroy the iterator

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 142  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 143  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 144  : 		_Orphan_me();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 145  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 146  : 		}

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	npad	1
	add	rsp, 72					; 00000048H
	ret	0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$ = 40
__$ArrayPad$ = 48
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$ = 40
__$ArrayPad$ = 48
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
$T1 = 32
_Lock$2 = 40
__$ArrayPad$ = 48
this$ = 80
_Right$ = 88
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 124  : 		{	// assign an iterator

$LN8:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 125  : 		if (_Myproxy == _Right._Myproxy)

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jne	SHORT $LN2@operator
	jmp	SHORT $LN3@operator
$LN2@operator:

; 126  : 			;
; 127  : 		else if (_Right._Myproxy != 0)

	mov	rax, QWORD PTR _Right$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN4@operator

; 128  : 			_Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 129  : 		else

	jmp	SHORT $LN3@operator
$LN4@operator:

; 130  : 			{	// becoming invalid, disown current parent
; 131  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 132  : 			_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 133  : 			_Orphan_me();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 134  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 135  : 			}

	lea	rcx, QWORD PTR _Lock$2[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
$LN3@operator:

; 136  : 
; 137  : 		return (*this);

	mov	rax, QWORD PTR this$[rsp]

; 138  : 		}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$2 = 40
__$ArrayPad$ = 48
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$2[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
_Lock$2 = 40
__$ArrayPad$ = 48
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$2[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 119  : 		{	// copy an iterator

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 118  : 		: _Myproxy(0), _Mynextiter(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 120  : 		*this = _Right;

	mov	rdx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR this$[rsp]
	call	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 121  : 		}

	mov	rax, QWORD PTR this$[rsp]
	add	rsp, 40					; 00000028H
	ret	0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 114  : 		{	// construct orphaned iterator

	mov	QWORD PTR [rsp+8], rcx

; 113  : 		: _Myproxy(0), _Mynextiter(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 115  : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Temp$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_Right$ = 88
?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z PROC	; std::_Container_base12::_Swap_all, COMDAT

; 230  : 	{	// swap all iterators

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T1[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 231  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 232  : 	_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 233  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 234  : 
; 235  : 	_Container_proxy *_Temp = _Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$[rsp], rax

; 236  : 	_Myproxy = _Right._Myproxy;

	mov	rax, QWORD PTR this$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 237  : 	_Right._Myproxy = _Temp;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rcx, QWORD PTR _Temp$[rsp]
	mov	QWORD PTR [rax], rcx

; 238  : 
; 239  : 	if (_Myproxy != 0)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Swap_all

; 240  : 		_Myproxy->_Mycont = (_Container_base12 *)this;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], rcx
$LN2@Swap_all:

; 241  : 	if (_Right._Myproxy != 0)

	mov	rax, QWORD PTR _Right$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Swap_all

; 242  : 		_Right._Myproxy->_Mycont = (_Container_base12 *)&_Right;

	mov	rax, QWORD PTR _Right$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	mov	QWORD PTR [rax], rcx
$LN3@Swap_all:

; 243  : 	}

	lea	rcx, QWORD PTR _Lock$[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z ENDP	; std::_Container_base12::_Swap_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Temp$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_all'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Temp$ = 32
$T1 = 40
_Lock$ = 48
__$ArrayPad$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_all'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Swap_all@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 32
$T2 = 40
_Lock$3 = 48
__$ArrayPad$ = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 215  : 	{	// orphan all iterators

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
	mov	QWORD PTR $T2[rsp], -2
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 216  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 217  : 	if (_Myproxy != 0)

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN5@Orphan_all

; 218  : 		{	// proxy allocated, drain it
; 219  : 		_Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 220  : 
; 221  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rsp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rsp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 223  : 			(*_Pnext)->_Myproxy = 0;

	mov	rax, QWORD PTR _Pnext$1[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 224  : 		_Myproxy->_Myfirstiter = 0;

	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 225  : 		}

	lea	rcx, QWORD PTR _Lock$3[rsp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
$LN5@Orphan_all:

; 226  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 227  : 	}

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Pnext$1 = 32
$T2 = 40
_Lock$3 = 48
__$ArrayPad$ = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$3[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
;	COMDAT text$x
text$x	SEGMENT
_Pnext$1 = 32
$T2 = 40
_Lock$3 = 48
__$ArrayPad$ = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
	push	rbp
	sub	rsp, 32					; 00000020H
	mov	rbp, rdx
	lea	rcx, QWORD PTR _Lock$3[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 32					; 00000020H
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ PROC ; std::_Container_base12::_Getpfirst, COMDAT

; 99   : 		{	// get address of iterator chain

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 100  : 		return (_Myproxy == 0 ? 0 : &_Myproxy->_Myfirstiter);

	mov	rax, QWORD PTR this$[rsp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN3@Getpfirst
	mov	QWORD PTR tv68[rsp], 0
	jmp	SHORT $LN4@Getpfirst
$LN3@Getpfirst:
	mov	rax, QWORD PTR this$[rsp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR tv68[rsp], rax
$LN4@Getpfirst:
	mov	rax, QWORD PTR tv68[rsp]

; 101  : 		}

	add	rsp, 24
	ret	0
?_Getpfirst@_Container_base12@std@@QEBAPEAPEAU_Iterator_base12@2@XZ ENDP ; std::_Container_base12::_Getpfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??1_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??1_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT

; 94   : 		{	// destroy the container

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 95   : 		_Orphan_all();

	mov	rcx, QWORD PTR this$[rsp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
	npad	1

; 96   : 		}

	add	rsp, 56					; 00000038H
	ret	0
??1_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 80   : 		{	// construct childless container

	mov	QWORD PTR [rsp+8], rcx

; 79   : 		: _Myproxy(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0

; 81   : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
;	COMDAT ??0_Container_proxy@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0_Container_proxy@std@@QEAA@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT

; 68   : 		{	// construct from pointers

	mov	QWORD PTR [rsp+8], rcx

; 67   : 		: _Mycont(0), _Myfirstiter(0)

	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rsp]
	mov	QWORD PTR [rax+8], 0

; 69   : 		}

	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0_Container_proxy@std@@QEAA@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eof@?$char_traits@_W@std@@SAGXZ
_TEXT	SEGMENT
?eof@?$char_traits@_W@std@@SAGXZ PROC			; std::char_traits<wchar_t>::eof, COMDAT

; 386  : 		return (WEOF);

	mov	eax, 65535				; 0000ffffH

; 387  : 		}

	ret	0
?eof@?$char_traits@_W@std@@SAGXZ ENDP			; std::char_traits<wchar_t>::eof
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?not_eof@?$char_traits@_W@std@@SAGAEBG@Z
_TEXT	SEGMENT
tv72 = 32
tv73 = 36
tv64 = 40
_Meta$ = 64
?not_eof@?$char_traits@_W@std@@SAGAEBG@Z PROC		; std::char_traits<wchar_t>::not_eof, COMDAT

; 380  : 		{	// return anything but EOF

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 381  : 		return (_Meta != eof() ? _Meta : !eof());

	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	DWORD PTR tv64[rsp], eax
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	movzx	eax, ax
	mov	ecx, DWORD PTR tv64[rsp]
	cmp	ecx, eax
	je	SHORT $LN5@not_eof
	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	DWORD PTR tv73[rsp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$char_traits@_W@std@@SAGXZ	; std::char_traits<wchar_t>::eof
	movzx	eax, ax
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv72[rsp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv72[rsp], 0
$LN4@not_eof:
	mov	eax, DWORD PTR tv72[rsp]
	mov	DWORD PTR tv73[rsp], eax
$LN6@not_eof:
	movzx	eax, WORD PTR tv73[rsp]

; 382  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?not_eof@?$char_traits@_W@std@@SAGAEBG@Z ENDP		; std::char_traits<wchar_t>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z PROC	; std::char_traits<wchar_t>::eq_int_type, COMDAT

; 374  : 		{	// test for metacharacter equality

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 375  : 		return (_Left == _Right);

	mov	rax, QWORD PTR _Left$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv67[rsp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv67[rsp]

; 376  : 		}

	add	rsp, 24
	ret	0
?eq_int_type@?$char_traits@_W@std@@SA_NAEBG0@Z ENDP	; std::char_traits<wchar_t>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z
_TEXT	SEGMENT
_Ch$ = 8
?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z PROC	; std::char_traits<wchar_t>::to_int_type, COMDAT

; 368  : 		{	// convert character to metacharacter

	mov	QWORD PTR [rsp+8], rcx

; 369  : 		return (_Ch);

	mov	rax, QWORD PTR _Ch$[rsp]
	movzx	eax, WORD PTR [rax]

; 370  : 		}

	ret	0
?to_int_type@?$char_traits@_W@std@@SAGAEB_W@Z ENDP	; std::char_traits<wchar_t>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z
_TEXT	SEGMENT
_Meta$ = 8
?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z PROC	; std::char_traits<wchar_t>::to_char_type, COMDAT

; 362  : 		{	// convert metacharacter to character

	mov	QWORD PTR [rsp+8], rcx

; 363  : 		return (_Meta);

	mov	rax, QWORD PTR _Meta$[rsp]
	movzx	eax, WORD PTR [rax]

; 364  : 		}

	ret	0
?to_char_type@?$char_traits@_W@std@@SA_WAEBG@Z ENDP	; std::char_traits<wchar_t>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z PROC		; std::char_traits<wchar_t>::eq, COMDAT

; 350  : 		{	// test for element equality

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 351  : 		return (_Left == _Right);

	mov	rax, QWORD PTR _Left$[rsp]
	movzx	eax, WORD PTR [rax]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	cmp	eax, ecx
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[rsp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[rsp], 0
$LN4@eq:
	movzx	eax, BYTE PTR tv67[rsp]

; 352  : 		}

	add	rsp, 24
	ret	0
?eq@?$char_traits@_W@std@@SA_NAEB_W0@Z ENDP		; std::char_traits<wchar_t>::eq
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z
_TEXT	SEGMENT
_Left$ = 8
_Right$ = 16
?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z PROC	; std::char_traits<wchar_t>::assign, COMDAT

; 344  : 		{	// assign an element

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 345  : 		_Left = _Right;

	mov	rax, QWORD PTR _Left$[rsp]
	mov	rcx, QWORD PTR _Right$[rsp]
	movzx	ecx, WORD PTR [rcx]
	mov	WORD PTR [rax], cx

; 346  : 		}

	ret	0
?assign@?$char_traits@_W@std@@SAXAEA_WAEB_W@Z ENDP	; std::char_traits<wchar_t>::assign
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
_TEXT	SEGMENT
tv69 = 32
_First1$ = 64
_First2$ = 72
_Count$ = 80
?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z PROC	; std::char_traits<wchar_t>::move, COMDAT

; 332  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 333  : 		return (_Count == 0 ? _First1

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN3@move
	mov	rax, QWORD PTR _First1$[rsp]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@move
$LN3@move:
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	wmemmove
	mov	QWORD PTR tv69[rsp], rax
$LN4@move:
	mov	rax, QWORD PTR tv69[rsp]

; 334  : 			: (_Elem *)_CSTD wmemmove(_First1, _First2, _Count));
; 335  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?move@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ENDP	; std::char_traits<wchar_t>::move
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z
_TEXT	SEGMENT
tv69 = 32
_First$ = 64
_Count$ = 72
_Ch$ = 80
?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z PROC	; std::char_traits<wchar_t>::find, COMDAT

; 325  : 		{	// look for _Ch in [_First, _First + _Count)

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 326  : 		return (_Count == 0 ? (const _Elem *)0

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN3@find
	mov	QWORD PTR tv69[rsp], 0
	jmp	SHORT $LN4@find
$LN3@find:
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rax, QWORD PTR _Ch$[rsp]
	movzx	edx, WORD PTR [rax]
	mov	rcx, QWORD PTR _First$[rsp]
	call	wmemchr
	mov	QWORD PTR tv69[rsp], rax
$LN4@find:
	mov	rax, QWORD PTR tv69[rsp]

; 327  : 			: (const _Elem *)_CSTD wmemchr(_First, _Ch, _Count));
; 328  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?find@?$char_traits@_W@std@@SAPEB_WPEB_W_KAEB_W@Z ENDP	; std::char_traits<wchar_t>::find
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z
_TEXT	SEGMENT
tv69 = 32
_First1$ = 64
_First2$ = 72
_Count$ = 80
?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z PROC	; std::char_traits<wchar_t>::copy, COMDAT

; 309  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 310  : 		return (_Count == 0 ? _First1

	cmp	QWORD PTR _Count$[rsp], 0
	jne	SHORT $LN3@copy
	mov	rax, QWORD PTR _First1$[rsp]
	mov	QWORD PTR tv69[rsp], rax
	jmp	SHORT $LN4@copy
$LN3@copy:
	mov	r8, QWORD PTR _Count$[rsp]
	mov	rdx, QWORD PTR _First2$[rsp]
	mov	rcx, QWORD PTR _First1$[rsp]
	call	wmemcpy
	mov	QWORD PTR tv69[rsp], rax
$LN4@copy:
	mov	rax, QWORD PTR tv69[rsp]

; 311  : 			: (_Elem *)_CSTD wmemcpy(_First1, _First2, _Count));
; 312  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?copy@?$char_traits@_W@std@@SAPEA_WPEA_WPEB_W_K@Z ENDP	; std::char_traits<wchar_t>::copy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@_W@std@@SA_KPEB_W@Z
_TEXT	SEGMENT
tv68 = 32
_First$ = 64
?length@?$char_traits@_W@std@@SA_KPEB_W@Z PROC		; std::char_traits<wchar_t>::length, COMDAT

; 302  : 		{	// find length of null-terminated sequence

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 303  : 		return (*_First == 0 ? 0

	mov	rax, QWORD PTR _First$[rsp]
	movzx	eax, WORD PTR [rax]
	test	eax, eax
	jne	SHORT $LN3@length
	mov	QWORD PTR tv68[rsp], 0
	jmp	SHORT $LN4@length
$LN3@length:
	mov	rcx, QWORD PTR _First$[rsp]
	call	QWORD PTR __imp_wcslen
	mov	QWORD PTR tv68[rsp], rax
$LN4@length:
	mov	rax, QWORD PTR tv68[rsp]

; 304  : 			: _CSTD wcslen(_First));
; 305  : 		}

	add	rsp, 56					; 00000038H
	ret	0
?length@?$char_traits@_W@std@@SA_KPEB_W@Z ENDP		; std::char_traits<wchar_t>::length
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT

; 304  : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 305  : 	return (_CSTD sqrtf(_Xx));

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_sqrtf
	npad	1

; 306  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
?sin@@YAMM@Z PROC					; sin, COMDAT

; 294  : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 295  : 	return (_CSTD sinf(_Xx));

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_sinf
	npad	1

; 296  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?fmod@@YAMMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
_Yx$ = 72
?fmod@@YAMMM@Z PROC					; fmod, COMDAT

; 153  : 	{

$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 154  : 	return (_CSTD fmodf(_Xx, _Yx));

	movss	xmm1, DWORD PTR _Yx$[rsp]
	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_fmodf
	npad	1

; 155  : 	}

	add	rsp, 56					; 00000038H
	ret	0
?fmod@@YAMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\cmath
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
$T1 = 32
_Xx$ = 64
?cos@@YAMM@Z PROC					; cos, COMDAT

; 87   : 	{

$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 56					; 00000038H
	mov	QWORD PTR $T1[rsp], -2

; 88   : 	return (_CSTD cosf(_Xx));

	movss	xmm0, DWORD PTR _Xx$[rsp]
	call	QWORD PTR __imp_cosf
	npad	1

; 89   : 	}

	add	rsp, 56					; 00000038H
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files\autodesk\3ds max 2018 sdk\maxsdk\include\maxtypes.h
;	COMDAT ??0Class_ID@@QEAA@KK@Z
_TEXT	SEGMENT
this$ = 8
aa$ = 16
bb$ = 24
??0Class_ID@@QEAA@KK@Z PROC				; Class_ID::Class_ID, COMDAT

; 160  : 	Class_ID(ulong aa, ulong bb) { a = aa; b = bb; }

	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR aa$[rsp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rsp]
	mov	ecx, DWORD PTR bb$[rsp]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rsp]
	ret	0
??0Class_ID@@QEAA@KK@Z ENDP				; Class_ID::Class_ID
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??3@YAXPEAX0@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
??3@YAXPEAX0@Z PROC					; operator delete, COMDAT

; 93   :     {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 94   :         return;
; 95   :     }

	ret	0
??3@YAXPEAX0@Z ENDP					; operator delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 8
_Where$ = 16
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 87   :     {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx

; 88   :         (void)_Size;
; 89   :         return _Where;

	mov	rax, QWORD PTR _Where$[rsp]

; 90   :     }

	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemmove
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemmove PROC						; COMDAT

; 244  :     {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 245  :         #pragma warning(push)
; 246  :         #pragma warning(disable : 4996 6386)
; 247  :         return (wchar_t*)memmove(_S1, _S2, _N*sizeof(wchar_t));

	mov	rax, QWORD PTR _N$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _S2$[rsp]
	mov	rcx, QWORD PTR _S1$[rsp]
	call	QWORD PTR __imp_memmove

; 248  :         #pragma warning(pop)
; 249  :     }

	add	rsp, 40					; 00000028H
	ret	0
wmemmove ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 48
_S2$ = 56
_N$ = 64
wmemcpy	PROC						; COMDAT

; 231  :     {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 232  :         #pragma warning(push)
; 233  :         #pragma warning(disable : 4995 4996 6386)
; 234  :         return (wchar_t*)memcpy(_S1, _S2, _N*sizeof(wchar_t));

	mov	rax, QWORD PTR _N$[rsp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _S2$[rsp]
	mov	rcx, QWORD PTR _S1$[rsp]
	call	memcpy

; 235  :         #pragma warning(pop)
; 236  :     }

	add	rsp, 40					; 00000028H
	ret	0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.10586.0\ucrt\wchar.h
;	COMDAT wmemchr
_TEXT	SEGMENT
_S$ = 8
_C$ = 16
_N$ = 24
wmemchr	PROC						; COMDAT

; 202  :     {

	mov	QWORD PTR [rsp+24], r8
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx

; 203  :         for (; 0 < _N; ++_S, --_N)

	jmp	SHORT $LN4@wmemchr
$LN2@wmemchr:
	mov	rax, QWORD PTR _S$[rsp]
	add	rax, 2
	mov	QWORD PTR _S$[rsp], rax
	mov	rax, QWORD PTR _N$[rsp]
	dec	rax
	mov	QWORD PTR _N$[rsp], rax
$LN4@wmemchr:
	cmp	QWORD PTR _N$[rsp], 0
	jbe	SHORT $LN3@wmemchr

; 204  :             if (*_S == _C)

	mov	rax, QWORD PTR _S$[rsp]
	movzx	eax, WORD PTR [rax]
	movzx	ecx, WORD PTR _C$[rsp]
	cmp	eax, ecx
	jne	SHORT $LN5@wmemchr

; 205  :                 return (wchar_t _CONST_RETURN*)_S;

	mov	rax, QWORD PTR _S$[rsp]
	jmp	SHORT $LN1@wmemchr
$LN5@wmemchr:

; 206  : 
; 207  :         return 0;

	jmp	SHORT $LN2@wmemchr
$LN3@wmemchr:
	xor	eax, eax
$LN1@wmemchr:

; 208  :     }

	ret	0
wmemchr	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 8
__formal$ = 16
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\users\james\source\repos\berconmaps\src\tile.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 8
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

	mov	QWORD PTR [rsp+8], rcx
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??_H@YAXPEAX_K1P6APEAX0@Z@Z
_TEXT	SEGMENT
tv66 = 32
__t$ = 64
__s$ = 72
__n$ = 80
__f$ = 88
??_H@YAXPEAX_K1P6APEAX0@Z@Z PROC			; `vector constructor iterator', COMDAT
$LN5:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
$LN2@vector:
	mov	rax, QWORD PTR __n$[rsp]
	mov	QWORD PTR tv66[rsp], rax
	mov	rax, QWORD PTR __n$[rsp]
	dec	rax
	mov	QWORD PTR __n$[rsp], rax
	cmp	QWORD PTR tv66[rsp], 0
	jbe	SHORT $LN3@vector
	mov	rcx, QWORD PTR __t$[rsp]
	call	QWORD PTR __f$[rsp]
	mov	rax, QWORD PTR __s$[rsp]
	mov	rcx, QWORD PTR __t$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR __t$[rsp], rax
	jmp	SHORT $LN2@vector
$LN3@vector:
	add	rsp, 56					; 00000038H
	ret	0
??_H@YAXPEAX_K1P6APEAX0@Z@Z ENDP			; `vector constructor iterator'
_TEXT	ENDS
END
